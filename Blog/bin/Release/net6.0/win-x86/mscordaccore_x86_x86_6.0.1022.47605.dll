i uveden parametr ref, nesm√≠ b√Ωt uveden ≈æ√°dn√Ω z atribut≈Ø <complexType>, <simpleType>, <key>, <keyref>, <unique>, nillable, default, fixed, form, block a type.PElement {0} nem≈Ø≈æe nahradit m√≠stn√≠ element {1} oƒçek√°van√Ω na t√©to pozici.áNen√≠ povoleno volat p≈ôet√≠≈æen√≠ ValidateEndElement, p≈ôi kter√©m je zpracov√°n objekt typedValue pro elementy se slo≈æit√Ωm obsahem.~Pro elementy se slo≈æit√Ωm obsahem nen√≠ povoleno volat p≈ôet√≠≈æen√≠ ValidateEndElement, kter√© p≈ôij√≠m√° objekt typedValue.QVol√°n√≠ metody {0} neodpov√≠d√° p≈ô√≠slu≈°n√©mu vol√°n√≠ metody ValidateElement.∑Metodu EndValidation nelze volat, pokud nebyly ovƒõ≈ôeny v≈°echny elementy. Je mo≈æn√©, ≈æe chyb√≠ vol√°n√≠ metody ValidateEndElement odpov√≠daj√≠c√≠ vol√°n√≠m metody ValidateElement.XNelze nominovat jako atribut {substitution group affiliation} jak√©koli jin√© deklarace.4Omezuj√≠c√≠ vlastnost mus√≠ obsahovat atribut value.dOmezuj√≠c√≠ vlastnost mus√≠ b√Ωt uvedena p≈ôed atributy attribute, attributeGroup nebo anyAttribute.;Hodnota substitution je pro atribut finalDefault neplatn√°."Neplatn√° hodnota atributu id: {0}(Atribut schemaLocation nelze p≈ôelo≈æit.'{0} je neplatn√Ω identifik√°tor jazyka.$Neplatn√° hodnota atributu name: {0}(Neplatn√° hodnota atributu name {0}: {1}4Obor n√°zv≈Ø {0} je neplatn√Ωm identifik√°torem URI.EAtribut oboru n√°zv≈Ø nem≈Ø≈æe m√≠t jako hodnotu pr√°zdn√Ω ≈ôetƒõzec.[Element nesm√≠ obsahovat koment√°≈ô nebo pokyny ke zpracov√°n√≠. Model obsahu je pr√°zdn√Ω.cƒå√°steƒçn√© ovƒõ≈ôov√°n√≠ mus√≠ b√Ωt typu XmlSchemaElement, XmlSchemaAttribute nebo XmlSchemaType.,Neplatn√© odvozen√≠ ƒç√°stice podle omezen√≠4Neplatn√© odvozen√≠ ƒç√°stice podle omezen√≠ ‚Äì {0}6Ve≈ôejn√Ω atribut {0} je neplatn√Ω identifik√°tor URI.<Atribut SchemaLocation {0} m√° neplatn√Ω identifik√°tor URI.RHodnoty substitution a extension jsou neplatn√© pro atribut final typu simpleType.+Omezen√≠ typu anySimpleType nen√≠ povoleno.áNen√≠ povoleno volat metodu {0} v aktu√°ln√≠m stavu ovƒõ≈ôovatele. P≈ôed pokraƒçov√°n√≠m v ovƒõ≈ôov√°n√≠ mus√≠ b√Ωt vol√°na metoda {1}.3P≈ôechod od metody {0} k metodƒõ {1} nen√≠ povolen.={0} nem≈Ø≈æe b√Ωt ƒçlenem skupiny nahrazen√≠ s elementem {1}.;Syst√©mov√Ω atribut {0} je neplatn√Ωm identifik√°torem URI.GAtribut targetNamespace nem≈Ø≈æe m√≠t jako hodnotu pr√°zdn√Ω ≈ôetƒõzec."Element {0} nesm√≠ obsahovat text.QElement {0} nesm√≠ obsahovat text. Seznam mo≈æn√Ωch oƒçek√°van√Ωch element≈Ø: {1}9Element nesm√≠ obsahovat text. Model obsahu je pr√°zdn√Ω.FJe-li typ p≈ôedefinov√°n, mus√≠ z√°kladn√≠ typ odkazovat s√°m na sebe.;Hodnota {0} je vzhledem ke sv√©mu datov√©mu typu neplatn√°.FHodnota {0} je vzhledem ke sv√©mu typu sch√©matu {1} neplatn√° ‚Äì {2}MAtribut {0} m√° podle sv√©ho typu sch√©matu {2} neplatnou hodnotu {1} ‚Äì {3} Pr√°zdn√Ω znak {0} je neplatn√Ω.DElement nesm√≠ obsahovat pr√°zdn√© znaky. Model obsahu je pr√°zdn√Ω.)Hodnota atributu {0} je neplatn√° ‚Äì {1})Hodnota {1} je pro atribut {0} neplatn√°.iPokud m√° atribut nillable ve sch√©matu hodnotu false, nesm√≠ b√Ωt v instanci p≈ô√≠tomen atribut xsi:nil.[Pokud jsou souƒçasnƒõ uvedeny atributy length a minLength ƒçi maxLength, jedn√° se o chybu.-Skuteƒçn√° d√©lka nen√≠ rovna zadan√© d√©lce.1Omezuj√≠c√≠ vlastnost Length je neplatn√° ‚Äì {0}3Omezuj√≠c√≠ vlastnost length je pro {0} zak√°z√°na.ªPokud atribut length pat≈ô√≠ mezi ƒçleny {facets} typu {base type definition} a hodnota {value} je vƒõt≈°√≠ ne≈æ hodnota {value} atributu length nad≈ôazen√©ho elementu, jedn√° se o chybu.HDatov√Ω typ list mus√≠ b√Ωt odvozen od datov√©ho typu atomic nebo union.FJe-li order nastaveno na many, mus√≠ m√≠t atribut maxOccurs hodnotu *.)Omezen√≠ MaxExclusive nebylo √∫spƒõ≈°n√©.7Omezuj√≠c√≠ vlastnost MaxExclusive je neplatn√° ‚Äì {0}9Omezuj√≠c√≠ vlastnost MaxExclusive je pro {0} zak√°z√°na.òPokud je odvozen√° hodnota omezuj√≠c√≠ vlastnosti maxExclusive vƒõt≈°√≠ ne≈æ hodnota nad≈ôazen√© omezuj√≠c√≠ vlastnosti maxExclusive, jedn√° se o chybu.üPokud je odvozen√° hodnota omezuj√≠c√≠ vlastnosti maxExclusive vƒõt≈°√≠ nebo rovna hodnotƒõ nad≈ôazen√© omezuj√≠c√≠ vlastnosti maxInclusive, jedn√° se o chybu.üPokud je odvozen√° hodnota omezuj√≠c√≠ vlastnosti maxInclusive vƒõt≈°√≠ nebo rovna hodnotƒõ nad≈ôazen√© omezuj√≠c√≠ vlastnosti maxExclusive, jedn√° se o chybu.)Omezen√≠ MaxInclusive nebylo √∫spƒõ≈°n√©.TOmezen√≠ maxInclusive a maxExclusive nelze zadat souƒçasnƒõ pro stejn√Ω datov√Ω typ.7Omezuj√≠c√≠ vlastnost MaxInclusive je neplatn√° ‚Äì {0}9Omezuj√≠c√≠ vlastnost MaxInclusive je pro {0} zak√°z√°na.òPokud je odvozen√° hodnota omezuj√≠c√≠ vlastnosti maxInclusive vƒõt≈°√≠ ne≈æ hodnota nad≈ôazen√© omezuj√≠c√≠ vlastnosti maxInclusive, jedn√° se o chybu.5Skuteƒçn√° d√©lka je vƒõt≈°√≠ ne≈æ hodnota MaxLength.4Omezuj√≠c√≠ vlastnost MaxLength je neplatn√° ‚Äì {0}6Omezuj√≠c√≠ vlastnost MaxLength je pro {0} zak√°z√°na.∫Pokud vlastnost maxLength pat≈ô√≠ mezi ƒçleny {facets} typu {base type definition} a hodnota {value} je vƒõt≈°√≠ ne≈æ hodnota {value} nad≈ôazen√© vlastnosti maxLength, jedn√° se o chybu.‡Pokud je jak atribut length, tak atribut minLength nebo maxLength ƒçlenem {facets}, jedn√° se o chybu. O chybu by se nejednalo v p≈ô√≠padƒõ, ≈æe by byly zad√°ny v r≈Øzn√Ωch kroc√≠ch odvozen√≠. V takov√©m p≈ô√≠padƒõ mus√≠ platit n√°sleduj√≠c√≠: hodnota {value} atributu minLength <= hodnota {value} atributu length <= hodnota {value} atributu maxLength..Atribut maxOccurs mus√≠ m√≠t hodnotu 1 nebo *.LHodnota atributu maxOccurs mus√≠ b√Ωt xsd:nonNegativeInteger nebo unbounded.)Omezen√≠ MinExclusive nebylo √∫spƒõ≈°n√©.7Omezuj√≠c√≠ vlastnost MinExclusive je neplatn√° ‚Äì {0}9Omezuj√≠c√≠ vlastnost MinExclusive je pro {0} zak√°z√°na.ÜHodnota zadan√° pro omezen√≠ minExclusive nesm√≠ b√Ωt vƒõt≈°√≠ ne≈æ hodnota zadan√° pro omezen√≠ maxExclusive pro stejn√Ω datov√Ω typ.ÜHodnota zadan√° pro omezen√≠ minExclusive nesm√≠ b√Ωt vƒõt≈°√≠ ne≈æ hodnota zadan√° pro omezen√≠ maxInclusive pro stejn√Ω datov√Ω typ.óPokud je odvozen√° hodnota omezuj√≠c√≠ vlastnosti minExclusive men≈°√≠ ne≈æ hodnota nad≈ôazen√© omezuj√≠c√≠ vlastnosti minExclusive, jedn√° se o chybu.ûPokud je odvozen√° hodnota omezuj√≠c√≠ vlastnosti minExclusive men≈°√≠ nebo rovna hodnotƒõ nad≈ôazen√© omezuj√≠c√≠ vlastnosti minInclusive, jedn√° se o chybu.üPokud je odvozen√° hodnota omezuj√≠c√≠ vlastnosti minExclusive vƒõt≈°√≠ nebo rovna hodnotƒõ nad≈ôazen√© omezuj√≠c√≠ vlastnosti maxExclusive, jedn√° se o chybu.@Hodnota minOccurs nem≈Ø≈æe b√Ωt vƒõt≈°√≠ ne≈æ hodnota maxOccurs.ûPokud je odvozen√° hodnota omezuj√≠c√≠ vlastnosti minInclusive men≈°√≠ nebo rovna hodnotƒõ nad≈ôazen√© omezuj√≠c√≠ vlastnosti minExclusive, jedn√° se o chybu.üPokud je odvozen√° hodnota omezuj√≠c√≠ vlastnosti minInclusive vƒõt≈°√≠ nebo rovna hodnotƒõ nad≈ôazen√© omezuj√≠c√≠ vlastnosti maxExclusive, jedn√° se o chybu.)Omezen√≠ MinInclusive nebylo √∫spƒõ≈°n√©.TOmezen√≠ minInclusive a minExclusive nelze zadat souƒçasnƒõ pro stejn√Ω datov√Ω typ.7Omezuj√≠c√≠ vlastnost MinInclusive je neplatn√° ‚Äì {0}9Omezuj√≠c√≠ vlastnost MinInclusive je pro {0} zak√°z√°na.àHodnota zadan√° pro omezen√≠ minInclusive nem≈Ø≈æe b√Ωt vƒõt≈°√≠ ne≈æ hodnota zadan√° pro omezen√≠ maxExclusive pro stejn√Ω datov√Ω typ.àHodnota zadan√° pro omezen√≠ minInclusive nem≈Ø≈æe b√Ωt vƒõt≈°√≠ ne≈æ hodnota zadan√° pro omezen√≠ maxInclusive pro stejn√Ω datov√Ω typ.óPokud je odvozen√° hodnota omezuj√≠c√≠ vlastnosti minInclusive men≈°√≠ ne≈æ hodnota nad≈ôazen√© omezuj√≠c√≠ vlastnosti minInclusive, jedn√° se o chybu.4Skuteƒçn√° d√©lka je men≈°√≠ ne≈æ hodnota MinLength.4Omezuj√≠c√≠ vlastnost MinLength je neplatn√° ‚Äì {0}6Omezuj√≠c√≠ vlastnost MinLength je pro {0} zak√°z√°na.πPokud vlastnost minLength pat≈ô√≠ mezi ƒçleny {facets} typu {base type definition} a hodnota {value} je men≈°√≠ ne≈æ hodnota {value} nad≈ôazen√© vlastnosti minLength, jedn√° se o chybu.5Hodnota MinLength je vƒõt≈°√≠ ne≈æ hodnota MaxLength.wP≈ôi p≈ôedefinov√°n√≠ skupiny mus√≠ skuteƒçn√° hodnota atribut≈Ø minOccurs a maxOccurs b√Ωt rovna 1 nebo zcela chybƒõt..Atribut minOccurs mus√≠ m√≠t hodnotu 0 nebo 1.BHodnota atributu minOccurs mus√≠ b√Ωt typu xsd:nonNegativeInteger.`Obor n√°zv≈Ø targetNamespace atributu neodpov√≠d√° urƒçen√©mu identifik√°toru URI oboru n√°zv≈Ø.dParametr targetNamespace {0} mus√≠ m√≠t stejnou hodnotu jako parametr targetNamespace {1} sch√©matu.~Atribut oboru n√°zv≈Ø {0} importu by mƒõl m√≠t stejnou hodnotu jako obor n√°zv≈Ø targetNamespace {1} importovan√©ho sch√©matu.©Obor n√°zv≈Ø targetNamespace {0} zahrnut√©ho ƒçi p≈ôedefinovan√©ho sch√©matu by mƒõl b√Ωt stejn√Ω jako obor n√°zv≈Ø targetNamespace {1} sch√©matu, ve kter√©m je zahrnut.,Atribut {0} je neplatn√Ω nebo nebyl nalezen.)Hodnota DataType nem≈Ø≈æe b√Ωt pr√°zdn√°. Atribut dt:values nebyl nalezen.'Po≈æadovan√Ω atribut {0} nebyl nalezen.|Ovƒõ≈ôen√≠ omezen√≠ identity {0} se nezda≈ôilo. Buƒè nebyl nalezen kl√≠ƒç, nebo st√°vaj√≠c√≠ kl√≠ƒç obsahuje pr√°zdn√Ω uzel.8Pro NOTATION mus√≠ existovat atribut Public nebo System.'Nelze smƒõ≈°ovat r≈Øzn√© typy sch√©mat.;Je-li obsah sm√≠≈°en√Ω, mus√≠ b√Ωt order nastaveno na many.èPokud v√≠ce ne≈æ jeden atribut s typem xs:ID nebo odvozen√Ω od typu xs:ID odpov√≠d√° z√°stupn√©mu znaku atributu v elementu, jedn√° se o chybu.NBylo p≈ôedefinov√°no nƒõkolik odkaz≈Ø na sebe sama v r√°mci skupiny atribut≈Ø.DBylo p≈ôedefinov√°no nƒõkolik odkaz≈Ø na sebe sama v r√°mci skupiny.<V√≠ce p≈ôedefinov√°n√≠ stejn√©ho sch√©matu bude ignorov√°no.ùPokud typ obsahu z√°kladn√≠ho typu nen√≠ definic√≠ jednoduch√©ho typu, mus√≠ omezen√≠ jednoduch√©ho obsahu obsahovat pod≈ô√≠zen√Ω element jednoduch√©ho typu.6Informace o sch√©matu pro atribut {0} nebyly nalezeny.ÉZ√°kladn√≠ atribut {0}, jeho≈æ use = required, nem√° bƒõhem zmƒõny definice skupiny atributu {1} odpov√≠daj√≠c√≠ odvozen√Ω atribut.6Informace o sch√©matu pro element {0} nebyly nalezeny.8Odkaz na nedeklarovan√© p≈ôidru≈æen√≠ skupiny nahrazen√≠>Je po≈æadov√°n pod≈ô√≠zen√Ω element sequence, choice nebo all.ãPro vlastnost complexType s atributem simpleContent nebo complexContent mus√≠ b√Ωt pou≈æit pod≈ô√≠zen√Ω element restriction nebo extension.≠Pro vlastnost complexType {0} v oboru n√°zv≈Ø {1} mus√≠ b√Ωt pou≈æit pod≈ô√≠zen√Ω element restriction nebo extension, proto≈æe m√° atribut simpleContent nebo complexContent.Obsah SimpleType nebyl nalezen.ÛV√≠ce definic elementu {0} zp≈Øsobuje nejednoznaƒçnost obsahov√©ho modelu. Obsahov√Ω model mus√≠ b√Ωt vytvo≈ôen tak, ≈æe bƒõhem ovƒõ≈ôov√°n√≠ sekvence polo≈æek informac√≠ elementu je mo≈æn√© ƒç√°stici (obsa≈æenou p≈ô√≠mo, nep≈ô√≠mo nebo implicitnƒõ), podle kter√© se m√° prov√©st pokus o postupn√© ovƒõ≈ôen√≠ jednotliv√Ωch polo≈æek v sekvenci, urƒçit jednoznaƒçnƒõ bez prozkoum√°v√°n√≠ obsahu nebo atribut≈Ø dan√© polo≈æky a bez jak√Ωchkoli informac√≠ o polo≈æk√°ch ve zb√Ωvaj√≠c√≠ ƒç√°sti sekvence.õModel obsahu mus√≠ b√Ωt deterministick√Ω. Deklarace z√°stupn√Ωch znak≈Ø spolu s m√≠stn√≠ deklarac√≠ elementu zp≈Øsob√≠, ≈æe model obsahu bude dvojznaƒçn√Ω.ñZ√°stupn√© znaky {0} a {1} nemaj√≠ pr√°zdn√Ω pr≈Ønik. To zp≈Øsobuje, ≈æe obsahov√Ω model nen√≠ jednoznaƒçn√Ω. Obsahov√Ω model mus√≠ b√Ωt vytvo≈ôen tak, ≈æe bƒõhem ovƒõ≈ôov√°n√≠ sekvence polo≈æek informac√≠ elementu je mo≈æn√© ƒç√°stici (obsa≈æenou p≈ô√≠mo, nep≈ô√≠mo nebo implicitnƒõ), podle kter√© se m√° prov√©st pokus o postupn√© ovƒõ≈ôen√≠ jednotliv√Ωch polo≈æek v sekvenci, urƒçit jednoznaƒçnƒõ bez prozkoum√°v√°n√≠ obsahu nebo atribut≈Ø dan√© polo≈æky a bez jak√Ωchkoli informac√≠ o polo≈æk√°ch ve zb√Ωvaj√≠c√≠ ƒç√°sti sekvence.äZ√°stupn√Ω znak {0} povoluje element {1}. To zp≈Øsobuje, ≈æe obsahov√Ω model nen√≠ jednoznaƒçn√Ω. Obsahov√Ω model mus√≠ b√Ωt vytvo≈ôen tak, ≈æe bƒõhem ovƒõ≈ôov√°n√≠ sekvence polo≈æek informac√≠ elementu je mo≈æn√© ƒç√°stici (obsa≈æenou p≈ô√≠mo, nep≈ô√≠mo nebo implicitnƒõ), podle kter√© se m√° prov√©st pokus o postupn√© ovƒõ≈ôen√≠ jednotliv√Ωch polo≈æek v sekvenci, urƒçit jednoznaƒçnƒõ bez prozkoum√°v√°n√≠ obsahu nebo atribut≈Ø dan√© polo≈æky a bez jak√Ωchkoli informac√≠ o polo≈æk√°ch ve zb√Ωvaj√≠c√≠ ƒç√°sti sekvence.XAtribut all nen√≠ jedinou ƒç√°stic√≠ ve skupinƒõ nebo je pou≈æ√≠v√°n jako roz≈°√≠≈ôen√≠.FTyp obsahu z√°kladn√≠ho typu nesm√≠ b√Ωt definic√≠ jednoduch√©ho typu.[V typu xs:normalizedString nelze pou≈æ√≠vat znaky CR (#xD), LF (#xA) ani tabul√°tory (#x9).éTyp obsahu z√°kladn√≠ho typu mus√≠ b√Ωt definic√≠ jednoduch√©ho typu nebo sm√≠≈°en√Ω. Z√°rove≈à mus√≠ b√Ωt uveden pod≈ô√≠zen√Ω typ simpleType.íV typu xs:token nejsou povoleny znaky LF (#xA), tabul√°tory (#x9), mezery na zaƒç√°tku nebo na konci ≈ôetƒõzce, ale ani posloupnosti mezer (#x20).UAtribut {0} neodpov√≠d√° jednomu ze ƒçty≈ô povolen√Ωch atribut≈Ø v oboru n√°zv≈Ø xsi.RAtribut typu NOTATION nesm√≠ b√Ωt deklarov√°n pro element deklarovan√Ω jako EMPTY.åTyp NOTATION nelze ve sch√©matu pou≈æ√≠t p≈ô√≠mo. Ve sch√©matu lze pou≈æ√≠t pouze datov√© typy odvozen√© od typu NOTATION urƒçen√≠m hodnoty v√Ωƒçtu. V≈°echny hodnoty omezuj√≠c√≠ch vlastnost√≠ v√Ωƒçtu mus√≠ odpov√≠dat n√°zvu notace deklarovan√© v aktu√°ln√≠m sch√©matu.$Hodnota {0} nen√≠ v seznamu notac√≠.Hodnota nem≈Ø≈æe b√Ωt null.UJe-li uveden atribut default, mus√≠ b√Ωt atribut use voliteln√Ω (nebo zcela chybƒõt).YN√°hradn√≠ text parametru entity mus√≠ b√Ωt spr√°vnƒõ vno≈ôen uvnit≈ô deklarac√≠ znaƒçek.Omezen√≠ Pattern se nezda≈ôilo.2Omezuj√≠c√≠ vlastnost Pattern je neplatn√° ‚Äì {0}4Omezuj√≠c√≠ vlastnost Pattern je pro {0} zak√°z√°na.Atribut {0} nen√≠ povolen.<Element redefine nem≈Ø≈æe b√Ωt pou≈æit na tomto um√≠stƒõn√≠.ûPokud element <redefine> obsahuje jak√Ωkoli pod≈ô√≠zen√Ω element jin√Ω ne≈æ element <annotation>, vlastnost SchemaLocation mus√≠ b√Ωt √∫spƒõ≈°nƒõ rozpozn√°na.Odkaz na neplatn√Ω atribut {0}PElement Keyref {0} m√° jinou mohutnost ne≈æ odkazovan√Ω element key nebo unique.Odkaz na neplatn√Ω element {0}(Odkaz na neplatn√© omezen√≠ identity {0}VElement Keyref {0} nem≈Ø≈æe v r√°mci oboru naj√≠t odkazovan√Ω element key nebo unique.EElement Keyref {0} m≈Ø≈æe odkazovat pouze na element key nebo unique.JJe-li p≈ô√≠tomen atribut values, mus√≠ se jednat o v√Ωƒçtov√Ω datov√Ω typ.=N√°zev ko≈ôenov√©ho elementu mus√≠ odpov√≠dat n√°zvu DocType.{Atribut s n√°zvem {0} neodpov√≠d√° n√°zvu {1} t≈ô√≠dy XmlSchemaAttribute nastaven√© jako typ ƒç√°steƒçn√©ho ovƒõ≈ôov√°n√≠. Sch√©ma v sadƒõ neexistuje.yElement s n√°zvem {0} neodpov√≠d√° n√°zvu {1} t≈ô√≠dy XmlSchemaElement nastaven√© jako typ ƒç√°steƒçn√©ho ovƒõ≈ôov√°n√≠. TP≈ôed kompilac√≠ mus√≠ b√Ωt √∫spƒõ≈°nƒõ p≈ôedzpracov√°na v≈°echna sch√©mata v sadƒõ.}Sch√©ma nebylo mo≈æn√© odebrat, proto≈æe ostatn√≠ sch√©mata v sadƒõ maj√≠ z√°vislosti na tomto sch√©matu nebo jeho importech.ÈByl oƒçek√°v√°n ko≈ôen sch√©matu. P≈ôesvƒõdƒçte se, zda je ko≈ôenov√Ωm elementem <schema> a zda je oborem n√°zv≈Ø obor http://www.w3.org/2001/XMLSchema (pro sch√©ma XSD) nebo obor urn:schemas-microsoft-com:xml-data (pro sch√©ma XDR).oV√Ωraz {0} je neplatnou cestou XPath pro selektor. Selektor nem≈Ø≈æe obsahovat v√Ωbƒõr XPath bez uzlu atributu.&P≈ôed selektorem nelze definovat pole.ûOdvozen√° ƒç√°stice sequence na pozici ({0}, {1}) nen√≠ platn√© omezen√≠ z√°kladn√≠ ƒç√°stice all na pozici ({2}, {3}) podle Sequence:All -- RecurseUnordered.ùOdvozen√° ƒç√°stice sequence na pozici ({0}, {1}) nen√≠ platn√© omezen√≠ z√°kladn√≠ ƒç√°stice choice na pozici ({2}, {3}) podle Sequence:Choice -- MapAndSum.7Jednoduch√Ω typ nelze p≈ôedefinovat jako slo≈æit√Ω typ.,Jednoduch√Ω typ byl p≈ôedefinov√°n dvakr√°t.vSeznam SimpleType by mƒõl m√≠t buƒè atribut itemType, nebo pod≈ô√≠zen√Ω atribut simpleType, ale nikoli oba souƒçasnƒõ.ÉSeznam SimpleType by mƒõl m√≠t buƒè atribut itemType, nebo pod≈ô√≠zen√Ω atribut simpleType k oznaƒçen√≠ atributu itemType seznamu. 1Nebyl nalezen jednoduch√Ω typ k p≈ôedefinov√°n√≠.{Omezen√≠ SimpleType by mƒõlo m√≠t buƒè z√°kladn√≠ atribut, nebo pod≈ô√≠zen√Ω atribut simpleType, ale nikoli oba souƒçasnƒõ.çOmezen√≠ SimpleType by mƒõlo m√≠t buƒè z√°kladn√≠ atribut, nebo pod≈ô√≠zen√Ω atribut simpleType k oznaƒçen√≠ z√°kladn√≠ho typu pro odvozen√≠.IAtribut simpleType by mƒõl b√Ωt prvn√≠m pod≈ô√≠zen√Ωm atributem omezen√≠.rBuƒè mus√≠ b√Ωt atribut memberTypes nepr√°zdn√Ω, nebo mus√≠ existovat nejm√©nƒõ jeden pod≈ô√≠zen√Ω typ simpleType.6Samostatn√° deklarace dokumentu mus√≠ m√≠t hodnotu no.áVlastnost StandAlone m√° hodnotu yes a hodnota atributu {0} obsahuje definici v extern√≠m dokumentu, kter√Ω se p≈ôi normalizaci mƒõn√≠.£Typ ƒçlensk√©ho elementu {0} nem≈Ø≈æe b√Ωt odvozen omezen√≠m nebo roz≈°√≠≈ôen√≠m typu elementu head {1}, proto≈æe pro nƒõj plat√≠ block=restriction nebo extension.*Cyklick√© p≈ôidru≈æen√≠ skupiny nahrazen√≠[Elementem {0} nelze nahradit element head {1}, proto≈æe pro nƒõj plat√≠ block=substitution.äC√≠lov√Ω obor n√°zv≈Ø deklarace atributu (m√≠stn√≠ho nebo glob√°ln√≠ho) nesm√≠ odpov√≠dat oboru http://www.w3.org/2001/XMLSchema-instance.7N√°sleduj√≠c√≠ text nen√≠ v tomto kontextu povolen: {0}(Omezen√≠ TotalDigits nebylo √∫spƒõ≈°n√©.6Omezuj√≠c√≠ vlastnost TotalDigits je neplatn√° ‚Äì {0}8Omezuj√≠c√≠ vlastnost TotalDigits je pro {0} zak√°z√°na.ñPokud je odvozen√° hodnota omezuj√≠c√≠ vlastnosti totalDigits vƒõt≈°√≠ ne≈æ hodnota nad≈ôazen√© omezuj√≠c√≠ vlastnosti totalDigits, jedn√° se o chybu.rDva odli≈°n√© ƒçleny pou≈æit√≠ atributu nemohou m√≠t definice typu, kter√© jsou obƒõ xs:ID nebo odvozeny od xs:ID.]Element simpleType nebo complexType nem≈Ø≈æe n√°sledovat za elementem unique, key ani keyref.Cyklick√Ω odkaz na typIAtribut typu nem≈Ø≈æe b√Ωt souƒçasnƒõ typu simpleType a typu complexType.RNezadan√Ω v√Ωchoz√≠ atribut {0} je uveden ve znaƒçk√°ch external a standalone=yes.Atribut {0} nen√≠ deklarov√°n.Element {0} nen√≠ deklarov√°n."Odkaz na nedeklarovanou entitu {0}CSkupina nahrazen√≠ odkazuje na {0}, co≈æ je nedeklarovan√Ω element..Odkaz na nedeklarovan√Ω identifik√°tor je {0}.)Omezen√≠ identity {0} nen√≠ deklarov√°no.Notace {0} nen√≠ deklarovan√°.=Typ {0} nen√≠ deklarov√°n nebo se nejedn√° o jednoduch√Ω typ.Typ {0} nen√≠ deklarov√°n.-Odkaz na nedeklarovanou skupinu atribut≈Ø {0}]Nedefinovan√Ω typ complexType {0} je pou≈æit jako z√°klad pro roz≈°√≠≈ôen√≠ slo≈æit√©ho typu.XNedefinovan√Ω typ complexType {0} je pou≈æit jako z√°klad pro omezen√≠ slo≈æit√©ho typu.+Odkaz na nedeklarovanou skupinu model≈Ø {0}&Atribut anyAttribute nelze vyj√°d≈ôit.%Sjednocen√≠ tuto hodnotu nepodporuje.XHodnota {0} nen√≠ na z√°kladƒõ libovoln√©ho atributu memberTypes elementu union platn√°.ŸPokud typ union m√° ƒçlen s typem variety union a tento ƒçlen nelze nahradit vlastn√≠mi ƒçleny, jedn√° se o chybu. D≈Øvodem m≈Ø≈æe b√Ωt to, ≈æe ƒçlen union p≈ôedstavuje omezen√≠ typu union s omezuj√≠c√≠mi vlastnostmi.[Atribut content mus√≠ m√≠t hodnotu textOnly, eltOnly, mixed nebo empty, nikoli hodnotu {0}."Odkaz na nezn√°m√Ω datov√Ω typ {0}(Toto je nezn√°m√° omezuj√≠c√≠ vlastnost.FAtribut model mus√≠ m√≠t hodnotu open nebo closed, nikoli hodnotu {0}.HAtribut order mus√≠ m√≠t hodnotu seq, one nebo many, nikoli hodnotu {0}.0Atribut required mus√≠ m√≠t hodnotu yes nebo no. Odkaz na neparsovanou entitu {0}6Na obor n√°zv≈Ø {0} nelze odkazovat v tomto sch√©matu.ISekvence kl√≠ƒçe {0} v elementu Keyref {1} neodkazuje na ≈æ√°dn√Ω kl√≠ƒç.0Nelze p≈ôelo≈æit p≈ôedponu {0} ve v√Ωrazu XPath./Atribut {0} nen√≠ v tomto kontextu podporov√°n./Element {0} nen√≠ v tomto kontextu podporov√°n.sPokud je ƒç√°steƒçn√© ovƒõ≈ôov√°n√≠ typu XmlSchemaElement nebo XmlSchemaType, nelze volat metodu ValidateAttribute.`Pokud je ƒç√°steƒçn√© ovƒõ≈ôov√°n√≠ typu XmlSchemaAttribute, nelze volat metodu ValidateElement.7Omezuj√≠c√≠ vlastnost WhiteSpace je pro {0} zak√°z√°na.—Pokud vlastnost whiteSpace pat≈ô√≠ mezi ƒçleny {facets} typu {base type definition}, hodnota {value} je replace nebo preserve a hodnota {value} nad≈ôazen√© vlastnosti whiteSpace je collapse, jedn√° se o chybu.√Pokud vlastnost whiteSpace pat≈ô√≠ mezi ƒçleny {facets} typu {base type definition}, hodnota {value} je preserve a hodnota {value} nad≈ôazen√© vlastnosti whiteSpace je replace, jedn√° se o chybu.>Do t≈ô√≠dy XmlSchemaSet lze naƒç√≠tat pouze sch√©mata W3C XML.ÑKo≈ôenov√Ωm elementem sch√©matu W3C XML by mƒõlo b√Ωt <schema> a jeho oborem n√°zv≈Ø by mƒõlo b√Ωt http://www.w3.org/2001/XMLSchema.<Hodnotu xmlns nelze pou≈æ√≠t jako n√°zev deklarace atributu.Neplatn√° syntaxe xml:spaceNelze porovnat {0} s {1}.TNem≈Ø≈æe b√Ωt uvedena pevn√° hodnota, pokud je atributem xsi:nil a m√° hodnotu true.RNem≈Ø≈æe b√Ωt uvedena hodnota typu, pokud je atributem xsi:nil a m√° hodnotu true./Atribut xsi:type {0} nem≈Ø≈æe b√Ωt abstraktn√≠.1Odvozen√≠ xsi:type je pro element {0} blokov√°no.µHodnota atributu xsi:type {0} nen√≠ platn√° pro element {1}, proto≈æe se nejedn√° o typ platnƒõ odvozen√Ω od typu ve sch√©matu, nebo je blokov√°no odvozov√°n√≠ od atributu xsi:type.#Toto je neplatn√Ω typ xsi:type {0}.Aritmetick√© p≈ôeteƒçen√≠,ƒå√≠seln√° aritmetika zp≈Øsobila zkr√°cen√≠.Do≈°lo k chybƒõ dƒõlen√≠ nulou.APro ovƒõ≈ôen√≠ dokumentu mus√≠ b√Ωt zad√°na t≈ô√≠da XmlSchemaSet.MElement by p≈ôed vol√°n√≠m t√©to metody mƒõl obsahovat informace o sch√©matu.AT≈ô√≠da XmlSchemaSet je povolena pouze jako parametr v uzlu Root.NMetody Validate a CheckValidity jsou povoleny pouze u uzl≈Ø Root nebo Element.CReferenƒçn√≠ uzel mus√≠ b√Ωt pod≈ô√≠zen√Ωm uzlem aktu√°ln√≠ho uzlu.<Kolekce Attributes m≈Ø≈æe obsahovat pouze objekty Attribute.JUzel Attribute nelze vlo≈æit, proto≈æe ji≈æ je atributem jin√©ho elementu.1M√≠stn√≠ n√°zev atributu nem≈Ø≈æe b√Ωt pr√°zdn√Ω.PAtribut deklarace oboru n√°zv≈Ø m√° nespr√°vn√Ω identifik√°tor namespaceURI: {0}IVlastnost InnerText uzlu Document je jen pro ƒçten√≠ a nelze ji nastavit.,Tento dokument ji≈æ m√° uzel XmlDeclaration.-Tento dokument ji≈æ m√° uzel DocumentElement.*Tento dokument ji≈æ m√° uzel DocumentType.SM√≠stn√≠ n√°zev element≈Ø ani atribut≈Ø nem≈Ø≈æe b√Ωt null ani pr√°zdn√Ω ≈ôetƒõzec.8Uzly EntityReference nepodporuj√≠ nastavov√°n√≠ hodnoty.GVlastnost InnerText uzlu Entity je jen pro ƒçten√≠ a nelze ji nastavit.ASeznam element≈Ø se zmƒõnil. Operace v√Ωƒçtu nemohla pokraƒçovat.Uzly typu {0} nelze importovat.Uzel null nelze importovat."P≈ôed√°van√Ω index je mimo rozsah.GNelze vytvo≈ôit uzel EntityReference, jeho≈æ n√°zev zaƒç√≠n√° znakem #.,{0} nereprezentuje ≈æ√°dn√Ω typ XmlNodeType.1Dokument, kter√Ω m√° b√Ωt naƒçten, nebyl nalezen.UNen√≠ k dispozici ≈æ√°dn√© ƒçtec√≠ za≈ô√≠zen√≠, ze kter√©ho se m√° naƒç√≠st dokument.9Pojmenovan√Ω uzel poch√°z√≠ z jin√©ho kontextu dokumentu."Dokument nem√° ko≈ôenov√Ω element.&Uzly Entity a Notation nelze klonovat.`Uzel ani ≈æ√°dn√©ho p≈ôedch≈Ødce tohoto uzlu nelze vlo≈æit jako uzel pod≈ô√≠zen√Ω sobƒõ sam√©mu.0Aktu√°ln√≠ uzel nem≈Ø≈æe obsahovat dal≈°√≠ uzly.FUzel, kter√Ω m√° b√Ωt vlo≈æen, poch√°z√≠ z jin√©ho kontextu dokumentu.*Na zadan√© um√≠stƒõn√≠ nelze uzel vlo≈æit.8Referenƒçn√≠ uzel nen√≠ pod≈ô√≠zen√Ωm uzlem tohoto uzlu.fZadan√Ω uzel nelze vlo≈æit jako platn√Ω pod≈ô√≠zen√Ω uzel tohoto uzlu, proto≈æe je nespr√°vn√©ho typu.1Tento uzel je jen pro ƒçten√≠. Nelze jej zmƒõnit..Nelze vytvo≈ôit uzel bez dokumentu vlastn√≠ka.FUzel, kter√Ω m√° b√Ωt odebr√°n, nen√≠ pod≈ô√≠zen√Ωm uzlem tohoto uzlu.ÄAktu√°ln√≠ uzel nem≈Ø≈æe obsahovat ≈æ√°dn√© uzly, a proto uzel, kter√Ω m√° b√Ωt odebr√°n, nen√≠ pod≈ô√≠zen√Ωm uzlem tohoto uzlu.%Nelze nastavit hodnotu typu uzlu {0}.}Pro aktu√°ln√≠ uzel nelze nastavit atribut InnerXml, proto≈æe je urƒçen jen pro ƒçten√≠ nebo nem≈Ø≈æe m√≠t pod≈ô√≠zen√© uzly.[Uzel Text nen√≠ p≈ôipojen k ≈æiv√©mu stromu DOM. Nelze prov√©st ≈æ√°dnou operaci SplitText.fChybn√© informace o verzi jazyka XML. Jazyk XML se mus√≠ shodovat s verz√≠ VersionNum ::= '1.' [0-9]+.8≈òetƒõzec pro pr√°zdn√© znaky obsahuje nespr√°vn√Ω znak.8Chybn√° hodnota samostatn√©ho atributu deklarace XML {0}DZadan√Ω typ je abstraktn√≠: n√°zev={0}, obor n√°zv≈Ø={1}, pozice {2}íNeplatn√© odvozen√≠ typu: Typ {0} je odvozen z anonymn√≠ho typu {1}. Zmƒõ≈àte pros√≠m {1} na pojmenovan√Ω typ nastaven√≠m {2}={3} v definici typu.!Nelze zahrnout anonymn√≠ typ {0}.dElementu {0} byl p≈ôi≈ôazen duplicitn√≠ atribut XmlAnyElementAttribute(Name="{1}", Namespace="{2}").áPro ƒçlen {0} byly zad√°ny dvojznaƒçn√© typy. Polo≈æky {1} a {2} jsou stejn√©ho typu. Zva≈æte pros√≠m mo≈ænost pou≈æ√≠t typy {3} a {4}.$Tento atribut nem√° ≈æ√°dn√Ω n√°zev.#Polo≈æka {0}.{1} ji≈æ m√° atributy.UElement {0} z oboru n√°zv≈Ø {1} nen√≠ slo≈æit√Ωm typem a nelze jej pou≈æ√≠t jako {2}.QTyp {0} z oboru n√°zv≈Ø {1} nen√≠ slo≈æit√Ωm typem a nelze jej pou≈æ√≠t jako {2}.'Uzel typu {0} nem≈Ø≈æe m√≠t n√°zev {1}.GP≈ôi exportu {0} do≈°lo k chybƒõ: Prost√© ƒçleny nemohou b√Ωt atributy.MP≈ôi exportu {0} do≈°lo k chybƒõ: Prost√© ƒçleny nemohou m√≠t textov√Ω obsah.!Neplatn√Ω identifik√°tor QName IDChyb√≠ koncov√Ω token CDATA.?Atribut {0} m√° obor n√°zv≈Ø {1}, ale nem√° ≈æ√°dnou p≈ôedponu.-Token {0} nepodporuje p≈ôevod na typ Clr {1}.#Neplatn√° verze protokolu BinaryXmlNeplatn√Ω podpis BinaryXml%Data nelze parsovat jako SQL_DECIMAL.%Neplatn√Ω samostatn√Ω token BinaryXml5Seznamy token≈Ø hodnot BinaryXml nejsou podporov√°ny.FParser BinaryXml nepodporuje inicializaci s t≈ô√≠dou XmlParserContext.`P≈ôedpona {0} je ji≈æ p≈ôi≈ôazena oboru n√°zv≈Ø {1} a nelze ji p≈ôi≈ôadit k {2} u t√©to znaƒçky.Neoƒçek√°van√Ω token BinaryXml*Nepodporovan√° znakov√° str√°nka BinaryXmlZHodnota je na typ Int32 p≈ô√≠li≈° velk√°. V√Ωsledkem aritmetick√© operace je p≈ôeteƒçen√≠.tTyp {0} nesm√≠ b√Ωt exportov√°n do sch√©matu, proto≈æe vlastnost IncludeInSchema atributu XmlType m√° hodnotu false.∆Element XML nejvy≈°≈°√≠ √∫rovnƒõ {0} z oboru n√°zv≈Ø {1} pou≈æ√≠v√° odkazy na r≈Øzn√© typy {2} a {3}. K urƒçen√≠ dal≈°√≠ho n√°zvu XML nebo oboru n√°zv≈Ø pro element nebo typy pou≈æijte atributy XML.©Glob√°ln√≠ polo≈æka XML {0} z oboru n√°zv≈Ø {1} m√° neodpov√≠daj√≠c√≠ atributy v√Ωchoz√≠ hodnoty {2} a {3} a nelze ji namapovat na stejnou polo≈æku sch√©matu. Pomoc√≠ atribut≈Ø XML zadejte jin√Ω n√°zev XML nebo obor n√°zv≈Ø pro jednu z polo≈æek nebo zajistƒõte, aby se v√Ωchoz√≠ hodnoty shodovaly.≥Glob√°ln√≠ atribut XML {0} z oboru n√°zv≈Ø {1} pou≈æ√≠v√° odkazy na r≈Øzn√© typy {2} a {3}. Pomoc√≠ atribut≈Ø XML zadejte jin√Ω n√°zev XML nebo obor n√°zv≈Ø pro atribut nebo typy.]V√Ωƒçtov√© hodnoty XmlChoiceIdentifier {0} mus√≠ b√Ωt jedineƒçn√©. Hodnota {1} ji≈æ existuje.KDvojznaƒçn√Ω identifik√°tor volby. Existuje nƒõkolik ƒçlen≈Ø s n√°zvem {0}.4Chyb√≠ ƒçlen {0} pot≈ôebn√Ω k serializaci volby {1}.3Ke ƒçlenu {1} je nutn√© p≈ôidat identifik√°tor {0}.^Typ identifik√°toru volby {0} je nekonzistentn√≠ s typem {1}. Pou≈æijte pros√≠m pole typu {2}.THodnota {0} identifik√°toru volby {1} neodpov√≠d√° elementu {2} z oboru n√°zv≈Ø {3}.TTyp identifik√°toru volby {0} je nekonzistentn√≠ s typem {1}. Pou≈æijte pros√≠m {2}.6Identifik√°tor volby {0} mus√≠ b√Ωt v√Ωƒçtov√©ho typu.HHodnota {0} neodpov√≠d√° typu {1}. Je nutn√© ji nastavit na hodnotu {2}.YV typu {0} chyb√≠ hodnota v√Ωƒçtu ##any: odpov√≠daj√≠c√≠ atributu XmlAnyElementAttribute.KTyp {0} neobsahuje hodnotu v√Ωƒçtu {1} pro element {2} z oboru n√°zv≈Ø {3}.?Cyklick√Ω odkaz v odvozen√≠ typu rozhran√≠ IXmlSerializable {0}bSkupina {0} z oboru n√°zv≈Ø targetNamespace={1} m√° neplatnou definici: cyklick√Ω odkaz na skupinu@P≈ôi serializaci objektu typu {0} byl zji≈°tƒõn cyklick√Ω odkaz.âByl zji≈°tƒõn cyklick√Ω odkaz na typ v anonymn√≠m typu {0}. Zmƒõ≈àte pros√≠m {0} na pojmenovan√Ω typ nastaven√≠m {1}={2} v definici typu.ZTyp {0} z oboru n√°zv≈Ø targetNamespace={1} m√° neplatnou definici: Cyklick√Ω odkaz na typCODEGEN ‚Äì upozornƒõn√≠: {0}3Nelze vytvo≈ôit doƒçasnou t≈ô√≠du (v√Ωsledek: {0}).dDuplicitn√≠ n√°zev roz≈°√≠≈ôen√≠. T≈ô√≠da schemaImporterExtension s n√°zvem {0} ji≈æ byla p≈ôid√°na.ÿTyp {0} nelze serializovat, proto≈æe jeho konstruktor bez parametr≈Ø je dekorov√°n deklarativn√≠mi atributy opr√°vnƒõn√≠ zabezpeƒçen√≠. Zva≈æte mo≈ænost pou≈æ√≠t v konstruktoru nepodm√≠nƒõn√© v√Ωrazy nebo po≈æadavky.FTyp {0} nelze serializovat, proto≈æe nem√° konstruktor bez parametr≈Ø.1≈òetƒõzec {0} nep≈ôedstavuje platnou hodnotu {1}.;≈òetƒõzec nebyl rozpozn√°n jako platn√Ω identifik√°tor URI.0≈òetƒõzec mus√≠ m√≠t d√©lku p≈ôesnƒõ jeden znak.GHodnota {0} je pro typ {1} buƒè p≈ô√≠li≈° velk√°, nebo p≈ô√≠li≈° mal√°.$Typ Xml {0} nepodporuje typ Clr {1}.>Typ Xml {0} nepodporuje p≈ôevod z typu Clr {1} na typ Clr {2}.bTyp Xml {0} nelze p≈ôev√©st na typ Clr {1}, pokud zdrojov√° hodnota je String nebo XmlAtomicValue.,Typ Xml List of {0} nepodporuje typ Clr {1}.FTyp Xml List of {0} nepodporuje p≈ôevod z typu Clr {1} na typ Clr {2}.bString {0} nejde reprezentovat jako XmlQualifiedName. Obor n√°zv≈Ø pro p≈ôedponu {1} nejde naj√≠t.bN√°zev QName {0} nelze reprezentovat jako typ String. P≈ôedponu pro obor n√°zv≈Ø {1} nelze naj√≠t.cTyp Xml {0} nelze p≈ôev√©st z typu Clr {1}, pokud c√≠lov√Ωm typem nen√≠ String nebo XmlAtomicValue.KHodnota {0} je pro vlastnost {1} neplatn√°. {0} nelze p≈ôev√©st na typ {2}."Z√°porn√© hodnoty jsou zak√°z√°ny.‚Nelze naj√≠t informace sch√©matu pro uzel p≈ôedan√Ω metodƒõ Validate. Je mo≈æn√©, ≈æe uzel na aktu√°ln√≠ pozici nen√≠ platn√Ω. P≈ôejdƒõte k p≈ôedch≈Ødci, kter√Ω m√° informace sch√©matu, a potom metodu Validate zavolejte znovu.úT≈ô√≠da XmlSchemaSet u dokumentu je buƒè null, nebo neobsahuje ≈æ√°dn√° sch√©mata. P≈ôed vol√°n√≠m metody Validate je nutn√© poskytnout informace sch√©matu.CNelze ovƒõ≈ôit {0}. Dokument vlastn√≠ka nen√≠ aktu√°ln√≠ dokument. hMetodu Validate je mo≈æn√© volat pouze pro uzly typu Document, DocumentFragment, Element nebo Attribute.óAtribut {0} nen√≠ v t√©to verzi rozhran√≠ .NET Framework u element≈Ø v podobƒõ pole podporov√°n. Atribut {0}={1} bude u elementu name='{2}' ignorov√°n.zAtribut {0} u polo≈æek typu {1} nen√≠ v t√©to verzi rozhran√≠ .NET Framework podporov√°n. Atribut {0}={2} bude ignorov√°n.aAtribut DefaultValue u ƒçlen≈Ø typu {0} nen√≠ v t√©to verzi rozhran√≠ .NET Framework podporov√°n.XAtribut {0} je podporov√°n pouze u primitivn√≠ch typ≈Ø. Atribut {0}={1} bude ignorov√°n.öAtribut XML {0} z oboru n√°zv≈Ø {1} ji≈æ v aktu√°ln√≠m oboru existuje. Pomoc√≠ atribut≈Ø XML zadejte pro atribut jin√Ω n√°zev XML nebo jin√Ω obor n√°zv≈Ø.PElement XML s n√°zvem {0} z oboru n√°zv≈Ø {1} ji≈æ v aktu√°ln√≠m oboru existuje.°Element XML s n√°zvem {0} z oboru n√°zv≈Ø {1} ji≈æ v aktu√°ln√≠m oboru existuje. Elementy se stejn√Ωm n√°zvem v r√°mci stejn√©ho oboru mus√≠ b√Ωt stejn√©ho typu.öElement XML {0} z oboru n√°zv≈Ø {1} ji≈æ v aktu√°ln√≠m oboru existuje. Pomoc√≠ atribut≈Ø XML zadejte pro element jin√Ω n√°zev XML nebo jin√Ω obor n√°zv≈Ø. Obor n√°zv≈Ø {0} je duplicitn√≠.pNeplatn√° deklarace oboru n√°zv≈Ø xmlns:{0}={1}. Alias oboru n√°zv≈Ø {0} je ji≈æ definov√°n v aktu√°ln√≠m oboru.9Typ s n√°zvem {0} ji≈æ byl p≈ôid√°n do oboru n√°zv≈Ø {1}.WTento element nem√° n√°zev. Zkontrolujte pros√≠m typ sch√©matu {0} z oboru n√°zv≈Ø {1}.XElement {0} z oboru n√°zv≈Ø {1} byl importov√°n ve dvou r≈Øzn√Ωch kontextech: ({2}, {3})WZkontrolujte pros√≠m deklaraci typu {0} z oboru n√°zv≈Ø {1}: element {2} neurƒçuje typ.sPro tento element byl pou≈æit n√°zev {0} z oboru n√°zv≈Ø {1}, ale mƒõl b√Ωt pou≈æit n√°zev {2} z oboru n√°zv≈Ø {3}.*Typ SOAP-ENC:arrayType je pr√°zdn√Ω v {0}.WTato definice typu byla vygenerov√°na roz≈°√≠≈ôen√≠m programu pro import sch√©matu {0}.[Roz≈°√≠≈ôen√≠ programu pro import sch√©matu {0} vygenerovalo duplicitn√≠ definice typu: {1}&P≈ôi reflexi pole {0} do≈°lo k chybƒõ.0P≈ôi generov√°n√≠ dokumentu XML do≈°lo k chybƒõ.,{0}.{1}() mus√≠ vr√°tit platn√Ω n√°zev typu.´Metoda {1}.{2}() vr√°tila v√≠ce sch√©mat s oborem n√°zv≈Ø targetNamespace={0}. Pou≈æ√≠vejte pouze hlavn√≠ (nad≈ôazen√©) sch√©ma a ostatn√≠ p≈ôidejte do sch√©matu Includes.>Je nutn√© implementovat metodu public static {0}({1}) pro {2}.'{0} je neplatn√Ω identifik√°tor jazyka.nMetoda {0}.{1}(), kterou urƒçuje {2}, m√° neplatnou signaturu: N√°vratov√Ω typ mus√≠ b√Ωt kompatibiln√≠ s {3}.mMetoda {0}.{1}() mus√≠ vr√°tit platn√Ω n√°zev typu. Typ {2} nelze v oboru n√°zv≈Ø targetNamespace={3} naj√≠t.ßƒålen {0}.{1} typu {2} skr√Ωv√° ƒçlena z√°kladn√≠ t≈ô√≠dy {3}.{4} typu {5}. K urƒçen√≠ nov√©ho n√°zvu pou≈æijte atribut XmlElementAttribute nebo XmlAttributeAttribute.’P≈ô√≠stup k doƒçasn√©mu adres√°≈ôi je zam√≠tnut√Ω. Identita {0}, pod kterou bƒõ≈æ√≠ objekt XmlSerializer, nem√° dostateƒçn√° opr√°vnƒõn√≠ pro p≈ô√≠stup k doƒçasn√©mu adres√°≈ôi. Objekt CodeDom bude pou≈æ√≠vat u≈æivatelsk√Ω √∫ƒçet, kter√Ω proces pou≈æ√≠v√°, ke kompilaci. Pokud tedy u≈æivatel nem√° p≈ô√≠stup k doƒçasn√©mu adres√°≈ôi syst√©mu, nebude mo≈æn√© prov√©st kompilaci. Um√≠stƒõn√≠ doƒçasn√©ho adres√°≈ôe najdete pomoc√≠ rozhran√≠ API metody Path.GetTempPath().íNelze serializovat ƒçlen typu {0}: Atribut XmlAnyElement lze pou≈æ√≠t pouze pro t≈ô√≠dy typu XmlNode nebo typu, kter√Ω je od typu XmlNode odvozen.âAtributy XmlArray a XmlArrayItem nelze pou≈æ√≠t souƒçasnƒõ s atributy XmlAttribute, XmlAnyAttribute, XmlElement, XmlText a XmlAnyElement.ˇPro element deklarovan√Ω na nejvy≈°≈°√≠ √∫rovni sch√©matu nem≈Ø≈æe platit maxOccurs > 1. Poskytnƒõte element ob√°lky pro {0}, a to pou≈æit√≠m atributu XmlArray nebo XmlArrayItem m√≠sto atributu XmlElementAttribute, nebo pou≈æit√≠m stylu parametru Wrapped.•ƒålen {0} nem≈Ø≈æe b√Ωt k√≥dov√°n pomoc√≠ atributu XmlText. Atribut XmlText lze pou≈æ√≠t ke k√≥dov√°n√≠ primitiv, v√Ωƒçt≈Ø, pol√≠ ≈ôetƒõzc≈Ø nebo pol√≠ typu XmlNode.wƒålen {0} typu {1} nelze serializovat. Atributy XmlAttribute a XmlText nelze pou≈æ√≠t ke k√≥dov√°n√≠ slo≈æit√Ωch typ≈Ø.åƒålen {0} typu {1} nelze serializovat. Atributy XmlAttribute a XmlText nelze pou≈æ√≠t ke k√≥dov√°n√≠ typ≈Ø implementuj√≠c√≠ch rozhran√≠ {2}.uPro jin√© typy ne≈æ pole m≈Ø≈æete pou≈æ√≠t n√°sleduj√≠c√≠ atributy: XmlAttribute, XmlText, XmlElement a XmlAnyElementqAtribut XmlAttribute nelze pou≈æ√≠t ke k√≥dov√°n√≠ pole typu {1}, proto≈æe je oznaƒçeno atributem FlagsAttribute.âAtributy XmlAttribute a XmlAnyAttribute nelze pou≈æ√≠t souƒçasnƒõ s atributy XmlElement, XmlText, XmlAnyElement, XmlArray a XmlArrayItem.]V√Ωchoz√≠ hodnotu atributu XmlAttribute nebo XmlElement lze zadat pouze pro primitivn√≠ typy.âAtributy XmlElement, XmlText a XmlAnyElement nelze pou≈æ√≠t souƒçasnƒõ s atributy XmlAttribute, XmlAnyAttribute, XmlArray a XmlArrayItem.wP≈ôi exportu {0} do≈°lo k chybƒõ: Elementy deklarovan√© na nejvy≈°≈°√≠ √∫rovni sch√©matu nemohou b√Ωt nekvalifikovan√©.√Objekt typu {0} nelze serializovat, proto≈æe m√° nƒõkolik atribut≈Ø XmlText. P≈ôi serializaci sm√≠≈°en√©ho slo≈æit√©ho typu zva≈æte mo≈ænost pou≈æ√≠t pole ≈ôetƒõzc≈Ø s atributem XmlTextAttribute.QAtribut XmlText nesm√≠ b√Ωt pou≈æit pro v√≠ce parametr≈Ø nebo vr√°cen√Ωch hodnot.∂Chyba: Typ {0} nelze importovat, proto≈æe mƒõn√≠ definici zdƒõdƒõn√©ho ƒçlena {1} na jin√Ω typ. Typ {1} je v {0} deklarov√°n jako typ {3}, ale v z√°kladn√≠ t≈ô√≠dƒõ {4} jako typ {2}.€Objekt typu {0} nelze serializovat. Z√°kladn√≠ typ {1} obsahuje simpleContent a lze jej roz≈°√≠≈ôit pouze p≈ôid√°n√≠m element≈Ø XmlAttribute. Zva≈æte mo≈ænost zmƒõnit ƒçlen XmlText z√°kladn√≠ t≈ô√≠dy na pole ≈ôetƒõzc≈Ø.mƒålen {0} typu {1} nelze serializovat. Atribut SoapAttribute nelze pou≈æ√≠t ke k√≥dov√°n√≠ slo≈æit√Ωch typ≈Ø.4Typ pro {0} nesm√≠ b√Ωt zad√°n pro primitivn√≠ typy. {0} nelze pou≈æ√≠t jako xml {1}.wObjekt typu {0} nelze serializovat. Zva≈æte zmƒõnu typu ƒçlena XmlText {0}.{1} z {2} na ≈ôetƒõzec nebo pole ≈ôetƒõzc≈Ø.AZ√°stupn√© znaky nelze pou≈æ√≠t na nejvy≈°≈°√≠ √∫rovni sch√©matu.qRoz≈°√≠≈ôen√≠ programu pro import sch√©matu {0} vr√°tilo neplatn√© informace typu: {1} nen√≠ platn√Ω n√°zev typu.üRoz≈°√≠≈ôen√≠ programu pro import sch√©matu {0} vr√°tilo neplatn√© informace typu pro typ xsd {1} z oboru n√°zv≈Ø namespace={2}: {3} nen√≠ platn√Ω n√°zev typu.Vnit≈ôn√≠ chybaVnit≈ôn√≠ chyba: {0}5Vnit≈ôn√≠ chyba: Chyb√≠ vygenerovan√° metoda pro {0}.MVnit≈ôn√≠ chyba: V deserializaci nelze s p≈ô√≠slu≈°n√Ωm streamem pokraƒçovat.èAtribut Any nesm√≠ b√Ωt zad√°n. U k√≥dovan√©ho protokolu SOAP nejsou atributy podporov√°ny. Zkontrolujte typ sch√©matu {0} z oboru n√°zv≈Ø {1}.ñV {0} byl nalezen typ SOAP-ENC:arrayType s v√≠cerozmƒõrn√Ωm polem. Podporov√°na jsou pouze jednorozmƒõrn√° pole. Zva≈æte mo≈ænost pou≈æ√≠t pole pol√≠.=Typ SOAP-ENC:arrayType nemohl zpracovat {1} jako d√©lku pole.oNeplatn√© ID odkazu: {0}. Objekt typu {1} nem≈Ø≈æe b√Ωt ulo≈æen v poli tohoto typu. Podrobnosti: index pole={2}.Typ SOAP-ENC:arrayType mus√≠ konƒçit znakem ].`Typ odkaz≈Ø SOAP-ENC:arrayType je pojmenov√°n jako {0}. V {2} byl oƒçek√°v√°n typ s n√°zvem {1}.eTyp odkaz≈Ø SOAP-ENC:arrayType poch√°z√≠ z oboru n√°zv≈Ø {0}. V {2} byl oƒçek√°v√°n obor n√°zv≈Ø {1}.$Neplatn√° syntaxe wsd:arrayType: {0}RTyp {0} nelze pou≈æ√≠t pro parametry ani n√°vratov√© hodnoty, nejsou-li v ob√°lce.-Atributy XML nesm√≠ b√Ωt zad√°ny pro typ {0}.CTyp {0} nelze odvodit od {1}, proto≈æe ji≈æ m√° z√°kladn√≠ typ {2}.2Objekt typu {0} nelze p≈ôi≈ôadit objektu typu {1}.`Nelze p≈ôi≈ôadit objekt typu {0} k objektu typu {1}. P≈ôi ƒçten√≠ uzlu s id={2} do≈°lo k chybƒõ.HNeplatn√° nebo chybƒõj√≠c√≠ hodnota identifik√°toru volby {1} typu {0}[]<Pro v√Ωƒçtov√© konstanty lze pou≈æ√≠t pouze atribut XmlEnum.Neplatn√Ω obsah {0}[Hodnota {0} je pro vlastnost {1} neplatn√°. Vlastnost lze zadat pouze pro primitivn√≠ typy.#V√Ωƒçet {0} nelze p≈ôev√©st na {1}.#Hodnotu {0} nelze p≈ôev√©st na {1}.UPro ƒçleny lze pou≈æ√≠t pouze atributy SoapElementAttribute a SoapAttributeAttribute.BOdkazovan√Ω typ {0} je platn√Ω pouze pro k√≥dovan√Ω protokol SOAP.ãStyl k√≥dov√°n√≠ {0} nen√≠ pro toto vol√°n√≠ platn√Ω. Platn√Ωmi hodnotami jsou {1} pro k√≥dov√°n√≠ SOAP 1.1 a {2} pro k√≥dov√°n√≠ SOAP 1.2.ËStyl k√≥dov√°n√≠ {0} nen√≠ pro toto vol√°n√≠ platn√Ω, proto≈æe tato instance objektu XmlSerializer nepodporuje k√≥dov√°n√≠. K inicializaci objektu XmlSerializer, kter√Ω podporuje k√≥dov√°n√≠, pou≈æijte funkci SoapReflectionImporter.CNa konstanty v√Ωƒçtu m≈Ø≈æe b√Ωt pou≈æita pouze vlastnost SoapEnum.3Neplatn√Ω obsah {0} pro v√Ωƒçtov√Ω datov√Ω typ {1}.dPokud je p≈ô√≠tomna explicitn√≠ vlastnost Namespace, vlastnost Form nesm√≠ m√≠t hodnotu Unqualified.EOdkazovan√Ω element s identifik√°torem {0} nebyl v dokumentu nalezen.0Identifik√°tor {0} neodpov√≠d√° specifikaci CLS.îVlastnost IsNullable nesm√≠ b√Ωt pro typ hodnoty {0} nastavena na hodnotu true. Zva≈æte pros√≠m mo≈ænost pou≈æ√≠t m√≠sto toho hodnotu Nullable<{0}>.¶Vlastnost IsNullable nesm√≠ b√Ωt pro typ Nullable<{0}> nastavena na hodnotu false. Zva≈æte mo≈ænost pou≈æ√≠t typ {0} nebo odebrat vlastnost IsNullable z atributu {1}./Objektu typu {1} nelze p≈ôi≈ôadit hodnotu null.-Vr√°cen√° hodnota mus√≠ b√Ωt prvn√≠m ƒçlenem.‰Typy mus√≠ b√Ωt deklarov√°ny na nejvy≈°≈°√≠ √∫rovni sch√©matu. Zkontrolujte typ sch√©matu {0} z oboru n√°zv≈Ø {1}: element {2} pou≈æ√≠v√° anonymn√≠ typ deklarace. U k√≥dovan√©ho protokolu SOAP nejsou anonymn√≠ typy podporov√°ny..{0} nen√≠ platn√° hodnota SchemaExtensionType.˘Typ {0} nesm√≠ b√Ωt pou≈æit v tomto kontextu. Chcete-li typ {0} pou≈æ√≠t jako parametr, typ vr√°cen√© hodnoty nebo ƒçlen t≈ô√≠dy ƒçi struktury, mus√≠ b√Ωt p≈ô√≠slu≈°n√Ω parametr, typ vr√°cen√© hodnoty nebo ƒçlen deklarov√°n jako typ {0} (nem≈Ø≈æe se jednat o objekt). Objekty typu {0} nesm√≠ b√Ωt pou≈æity v kolekc√≠ch bez urƒçen√≠ typu, jako je nap≈ô√≠klad kolekce ArrayLists.?Pole typu {0} nem≈Ø≈æe b√Ωt pou≈æito s typem XmlArrayType.Soap.Ÿƒålen {0} typu {1} nelze serializovat. ƒåleny, jejich≈æ n√°zvy konƒç√≠ p≈ô√≠ponou Specified, maj√≠ u objektu XmlSerializer zvl√°≈°tn√≠ v√Ωznam: ≈ô√≠d√≠ serializaci voliteln√Ωch ƒçlen≈Ø ValueType a mus√≠ b√Ωt typu {2}.{Skupina nahrazen√≠ nesm√≠ b√Ωt pou≈æita s k√≥dovan√Ωm protokolem SOAP. Zkontrolujte deklaraci typu {0} z oboru n√°zv≈Ø {1}.;Atributy XmlRoot a XmlType nesm√≠ b√Ωt zad√°ny pro typ {0}.-Typ {0} nesm√≠ b√Ωt pou≈æit v tomto kontextu.(Typ Void nen√≠ v tomto kontextu platn√Ω.Tƒålen {0}.{1} skr√Ωv√° zdƒõdƒõn√©ho ƒçlena {2}.{3}, ale m√° jin√© vlastn√≠ atributy.-Neplatn√Ω atribut oboru n√°zv≈Ø: xmlns:{0}=""EHodnotu {0} nelze pou≈æ√≠t pro vlastnost {1}. Chyb√≠ datov√Ω typ {2}.IExportovan√° mapov√°n√≠ mus√≠ poch√°zet ze stejn√©ho programu pro import._Toto mapov√°n√≠ nevytvo≈ôil program pro import reflexe a v tomto kontextu jej nelze pou≈æ√≠vat.!Tyto ƒçleny nesm√≠ b√Ωt odvozeny.…Element XML {0} z oboru n√°zv≈Ø {1} odkazuje na metodu a typ. Pomoc√≠ atributu WebMethodAttribute zmƒõ≈àte n√°zev zpr√°vy metody nebo pomoc√≠ atributu XmlRootAttribute zmƒõ≈àte ko≈ôenov√Ω element typu.qUpozornƒõn√≠: Nelze sd√≠let {0} s n√°zvem {1} z oboru n√°zv≈Ø {2}. Bylo nalezeno nƒõkolik neshodn√Ωch deklarac√≠.7V typu SOAP-ENC:arrayType nesouhlas√≠ lomen√© z√°vorky.-Typ SOAP-ENC:arrayType chyb√≠ v atributu {0}.Chyb√≠ atribut {0}.Chyb√≠ skupina atribut≈Ø {0}.Chyb√≠ datov√Ω typ {0}.Chyb√≠ element {0}.Chyb√≠ skupina {0}.fOdkazovan√Ω element s identifik√°torem {0} je um√≠stƒõn mimo aktu√°ln√≠ dokument a nelze jej naƒç√≠st.!Metoda {0} nebyla v {1} nalezena.Chyb√≠ metoda pro v√Ωƒçet {0}.2Chyb√≠ obor n√°zv≈Ø targetNamespace={0} sch√©matu.fNeplatn√© sestaven√≠ serializace: Ve vygenerovan√©m sestaven√≠ {1} nebyl nalezen po≈æadovan√Ω typ {0}.{0}. {1} ji≈æ m√° atributy.]Objekt typu {0} nelze serializovat, proto≈æe m√° nƒõkolik atribut≈Ø XmlNamespaceDeclarations.bAtribut XmlNamespaceDeclarations nesm√≠ b√Ωt pou≈æit pro v√≠ce parametr≈Ø nebo vr√°cen√Ωch hodnot.>Uzel mus√≠ b√Ωt buƒè typu XmlAttribute, nebo odvozen√©ho typu.œAby bylo mo≈æn√© prov√°dƒõt serializaci v jazyce XML, mus√≠ m√≠t typy, kter√© dƒõd√≠ z {2}, implementaci metody Add({1}) na v≈°ech √∫rovn√≠ch sv√© hierarchie dƒõdiƒçnosti. {0} neimplementuje metodu Add({1}).±Uzel typu XmlAttribute nelze zapsat jako hodnotu elementu. Chcete-li uzel zapsat jako atribut, pou≈æijte atribut XmlAnyAttributeAttribute s polem typu XmlNode nebo XmlAttribute.nV objektu {0} je nutn√© implementovat v√Ωchoz√≠ p≈ô√≠stupov√Ω objekt, proto≈æe dƒõd√≠ z rozhran√≠ ICollection.#Uzel typu {0} nem≈Ø≈æe m√≠t n√°zev.wJedno nebo v√≠ce sestaven√≠, na nƒõ≈æ odkazuje objekt XmlSerializer, nelze volat z ƒç√°steƒçnƒõ d≈Øvƒõryhodn√©ho k√≥du.JObjekt typu {0} nelze serializovat. Objekt nem√° serializovateln√© ƒçleny.Roz≈°√≠≈ôen√≠ programu pro import sch√©matu {0} se nepoda≈ôilo parsovat atribut {1}={2} typu {3} z oboru n√°zv≈Ø namespace={4}.Typ {0} nelze serializovat.˝Nelze p≈ôedbƒõ≈ænƒõ vygenerovat sestaven√≠ serializace. Pro dynamick√° sestaven√≠ nen√≠ p≈ôedbƒõ≈æn√© generov√°n√≠ sestaven√≠ serializace podporov√°no. Ulo≈æte sestaven√≠ a naƒçtƒõte jej z disku, aby jej bylo mo≈æn√© pou≈æ√≠t ve funkci XmlSerialization.pNelze naƒç√≠st soubor nebo sestaven√≠ {0} ƒçi jednu z jeho z√°vislost√≠. Syst√©m nem≈Ø≈æe naj√≠t zadan√Ω soubor.gNeplatn√© pou≈æit√≠ t≈ô√≠dy XmlSerializerAssemblyAttribute. Pou≈æijte vlastnost {0} nebo vlastnost {1}.WNelze naj√≠t adres√°≈ô k ulo≈æen√≠ sestaven√≠ generovan√©ho objektem XmlSerializer: {0}dNelze naj√≠t doƒçasn√Ω adres√°≈ô (TEMP) k ulo≈æen√≠ sestaven√≠ generovan√©ho objektem XmlSerializer.hNelze p≈ôedbƒõ≈ænƒõ vygenerovat serializ√°tor pro v√≠ce sestaven√≠. Typ {0} nepat≈ô√≠ do sestaven√≠ {1}.ÉNelze p≈ôedbƒõ≈ænƒõ vygenerovat sestaven√≠ serializace pro typ {0}. Pro dynamick√© typy nen√≠ p≈ôedbƒõ≈æn√© generov√°n√≠ sestaven√≠ serializace podporov√°no. Ulo≈æte sestaven√≠ a naƒçtƒõte jej z disku, aby jej bylo mo≈æn√© pou≈æ√≠t ve funkci XmlSerialization.QTyp {0} z oboru n√°zv≈Ø {1} nen√≠ slo≈æit√Ωm typem a nelze jej pou≈æ√≠t jako {2}.,P≈ôi reflexi vlastnosti {0} do≈°lo k chybƒõ.d{0} nelze deserializovat. Pro kolekce a ƒç√≠taƒçe v√Ωƒçtu je po≈æadov√°n konstruktor bez parametr≈Ø.dTyp {0} nelze deserializovat, proto≈æe obsahuje vlastnost {1}, kter√° nem√° ve≈ôejnou metodu setter.!P≈ôi reflexi {0} do≈°lo k chybƒõ.
<remarks/>K{0} nelze serializovat. K√≥dovan√Ω protokol SOAP nepodporuje pole struktur.ﬁVstupn√≠ nebo v√Ωstupn√≠ hodnoty metody rpc\literal nemohou m√≠t hodnotu atributu maxOccurs > 1. Poskytnƒõte element ob√°lky pro {0}, a to pou≈æit√≠m atributu XmlArray nebo XmlArrayItem m√≠sto atributu XmlElementAttribute.πAtributy XmlAttribute a XmlAnyAttribute nelze pou≈æ√≠vat s protokolem SOAP rpc\literal. M≈Ø≈æete pou≈æ√≠vat n√°sleduj√≠c√≠ atributy: XmlArray, XmlArrayItem nebo jeden atribut XmlElement Atributy XmlText, XmlAnyElement nebo XmlChoiceIdentifier nelze pou≈æ√≠vat s protokolem SOAP rpc\literal. M≈Ø≈æete pou≈æ√≠vat n√°sleduj√≠c√≠ atributy: XmlArray, XmlArrayItem nebo jeden atribut XmlElementl{0}={1} nen√≠ u protokolu SOAP rpc\literal podporov√°no. Element ob√°lky mus√≠ m√≠t nekvalifikovan√Ω n√°zev.t{0}={1} nen√≠ u protokolu SOAP rpc\literal podporov√°no. Pro element ob√°lky nesm√≠ b√Ωt mo≈æn√© zadat hodnotu null.±V√≠ce p≈ô√≠stupov√Ωch objekt≈Ø nen√≠ u protokolu SOAP rpc\literal podporov√°no. M≈Ø≈æete pou≈æ√≠vat n√°sleduj√≠c√≠ atributy: XmlArray, XmlArrayItem nebo jeden atribut XmlElementnVstupn√≠ nebo v√Ωstupn√≠ hodnoty metody rpc\literal nemohou m√≠t atribut XmlNamespaceDeclarations (ƒçlen {0}).Q{0} nelze serializovat. K√≥dovan√Ω protokol SOAP nepodporuje vno≈ôen√© struktury.T{0} nelze serializovat. K√≥dovan√Ω protokol SOAP nepodporuje odkazy ve struktur√°ch.GSch√©ma s oborem n√°zv≈Ø targetNamespace={0} m√° neplatnou syntaxi. {1}OVe sch√©matu typu {1} z oboru n√°zv≈Ø {2} byl deklarov√°n odkaz na atribut {0}.:Sch√©ma nelze p≈ôidat do kolekce zkompilovan√Ωch sch√©mat.HZkontrolujte definici obsahu sch√©matu typu {0} z oboru n√°zv≈Ø {1}. {2}GExistuje v√≠ce ne≈æ jedno sch√©ma s oborem n√°zv≈Ø targetNamespace={0}.OVe sch√©matu typu {1} z oboru n√°zv≈Ø {2} byl deklarov√°n odkaz na element {0}.rAtribut sch√©matu schemaLocation={1} nen√≠ podporov√°n u objekt≈Ø typu {0}. Nastavte pros√≠m vlastnost {0}.Schema./Polo≈æka sch√©matu {1} z oboru n√°zv≈Ø {0}. {2}=Polo≈æka sch√©matu {1} s n√°zvem {2} z oboru n√°zv≈Ø {0}. {3}CSch√©ma s oborem n√°zv≈Ø targetNamespace={0} m√° neplatnou syntaxi._Sch√©ma s oborem n√°zv≈Ø targetNamespace={0} m√° neplatnou syntaxi. {1} ≈ô√°dek {2}, pozice {3}¨P≈ôi zpracov√°n√≠ typu {0} do≈°lo k chybƒõ. ƒålenu typu {1} deklarovan√©mu v r√°mci {2} chyb√≠ po≈æadovan√° vlastnost {3}. Pokud jedna t≈ô√≠da v hierarchii t≈ô√≠d pou≈æ√≠v√° funkci explicitn√≠ho ≈ôazen√≠ ({3}), bude stejn√° akce provedena tak√© u jej√≠ z√°kladn√≠ t≈ô√≠dy a v≈°ech odvozen√Ωch t≈ô√≠d.âNekonzistentn√≠ ≈ôazen√≠: Pokud je vlastnost {0} pou≈æita u jednoho ƒçlena t≈ô√≠dy, bude vy≈æadov√°na u v≈°ech ƒçlen≈Ø podobn√Ωch ƒç√°stic√≠m. Nastavte pros√≠m explicitnƒõ {0} pomoc√≠ vlastn√≠ho atributu XmlElement, XmlAnyElement nebo XmlArray u ƒçlena t≈ô√≠dy {1}.‚Pokud je u jednoho ƒçlena zad√°no v√≠ce vlastn√≠ch atribut≈Ø, pouze jeden z nich mus√≠ m√≠t explicitn√≠ vlastnost {0}. Jestli≈æe v≈°ak m√° explicitn√≠ vlastnost {0} v√≠ce ne≈æ jeden atribut, mus√≠ se v≈°echny hodnoty shodovat.ÇExplicitn√≠ ≈ôazen√≠ nelze pou≈æ√≠vat u parametr≈Ø nebo vr√°cen√Ωch hodnot. Odeberte pros√≠m vlastnost {0} z vlastn√≠ch atribut≈Ø.ÜHodnoty {1} mus√≠ b√Ωt jedineƒçn√© v r√°mci stejn√©ho oboru. Hodnota {0} se pou≈æ√≠v√°. Zmƒõ≈àte pros√≠m vlastnost {1} na hodnotu {2}.fPouze atribut XmlRoot m≈Ø≈æe b√Ωt zad√°n pro typ {0}. K zad√°n√≠ typu sch√©matu pros√≠m pou≈æijte {1}.±Typ {0} z oboru n√°zv≈Ø {1} byl deklarov√°n jako odvozen√≠ z typu {2} z oboru n√°zv≈Ø {3}, ale odpov√≠daj√≠c√≠ typy CLR nejsou kompatibiln√≠. Nelze p≈ôev√©st typ {4} na typ {5}.qNelze slouƒçit sch√©mata s oborem n√°zv≈Ø targetNamespace={0}. Bylo nalezeno nƒõkolik neshodn√Ωch deklarac√≠: {1}~Typ {0} z oboru n√°zv≈Ø {1} nem√° odpov√≠daj√≠c√≠ typ rozhran√≠ IXmlSerializable. Zva≈æte pros√≠m mo≈ænost p≈ôidat {2} do {3}.lIdentifik√°tor sch√©matu nebyl nalezen. Sch√©ma vr√°cen√© funkc√≠ {0}.GetSchema() mus√≠ m√≠t identifik√°tor.ÁNelze slouƒçit sch√©ma pro {0}. Pomoc√≠ atributu [XmlRoot] zmƒõ≈àte v√Ωchoz√≠ n√°zev nebo obor n√°zv≈Ø elementu na nejvy≈°≈°√≠ √∫rovni tak, abyste zabr√°nili duplicitn√≠m deklarac√≠m element≈Ø: n√°zev elementu={1}, obor n√°zv≈Ø={2}CInformace o typu sch√©matu zadan√© v r√°mci {0} jsou neplatn√©: {1}Dokument XML obsahuje chybu.'Dokument XML obsahuje chybu ({0}, {1}).ÿP≈ô√≠stup k doƒçasn√©mu adres√°≈ôi je zam√≠tnut√Ω. Proces, v r√°mci kter√©ho objekt XmlSerializer bƒõ≈æ√≠, nem√° dostateƒçn√° opr√°vnƒõn√≠ pro p≈ô√≠stup k doƒçasn√©mu adres√°≈ôi. Objekt CodeDom bude pou≈æ√≠vat u≈æivatelsk√Ω √∫ƒçet, kter√Ω proces pou≈æ√≠v√°, ke kompilaci. Pokud tedy u≈æivatel nem√° p≈ô√≠stup k doƒçasn√©mu adres√°≈ôi syst√©mu, nebude mo≈æn√© prov√°dƒõt kompilaci. Um√≠stƒõn√≠ doƒçasn√©ho adres√°≈ôe najdete pomoc√≠ rozhran√≠ API metody Path.GetTempPath().íNelze naƒç√≠st dynamicky generovan√© sestaven√≠ serializace. V nƒõkter√Ωch hostitelsk√Ωch prost≈ôed√≠ch je funkce naƒç√≠t√°n√≠ sestaven√≠ omezena. Zva≈æte mo≈ænost pou≈æ√≠t p≈ôedem vygenerovan√Ω serializ√°tor. Dal≈°√≠ informace z√≠sk√°te v informac√≠ch o vnit≈ôn√≠ v√Ωjimce.GPlatnost p≈ôedem vygenerovan√©ho sestaven√≠ {0} CodeBase={1} vypr≈°ela.sPlatnost p≈ôedem vygenerovan√©ho serializ√°toru {0} vypr≈°ela. Je pot≈ôeba serializ√°tor vygenerovat znovu pro {1}.iƒålen {0} typu {1} nelze serializovat. Dal≈°√≠ podrobnosti z√≠sk√°te v informac√≠ch o vnit≈ôn√≠ v√Ωjimce.h{0} je nepodporovan√Ω typ. Pomoc√≠ atributu [XmlIgnore] vyluƒçte ƒçleny tohoto typu z grafu serializace.uTyp {0} nesm√≠ b√Ωt exportov√°n do sch√©matu, proto≈æe vlastnost IncludeInSchema atributu SoapType m√° hodnotu false.∞Atributy nejsou u k√≥dovan√©ho protokolu SOAP podporov√°ny. Zmƒõ≈àte definici typu sch√©matu {0} z oboru n√°zv≈Ø {1}: Pou≈æijte elementy (nikoli atributy) pro pole a parametry.≈Mo≈ænost choice nen√≠ u k√≥dovan√©ho protokolu SOAP podporov√°na. Zmƒõ≈àte definici typu sch√©matu {0} z oboru n√°zv≈Ø {1}: Pro pole a parametry pou≈æijte hodnotu all nebo sequence (nikoli choice).ÜAtribut Any nesm√≠ b√Ωt pou≈æit spolu s k√≥dovan√Ωm protokolem SOAP. Zmƒõ≈àte pros√≠m definici typu sch√©matu {0} z oboru n√°zv≈Ø {1}.çVno≈ôen√© skupiny nesm√≠ b√Ωt pou≈æity spolu s k√≥dovan√Ωm protokolem SOAP. Zmƒõ≈àte pros√≠m definici typu sch√©matu {0} z oboru n√°zv≈Ø {1}.ªSyntaxe ref pro skupiny nen√≠ u k√≥dovan√©ho protokolu SOAP podporov√°na. Zmƒõ≈àte definici typu sch√©matu {0} z oboru n√°zv≈Ø {1}: Nahraƒète odkaz na skupinu deklarac√≠ m√≠stn√≠ skupiny.¢Skupina se nesm√≠ opakovat. Skupiny bez vazeb nejsou u k√≥dovan√©ho protokolu SOAP podporov√°ny. Zmƒõ≈àte pros√≠m definici typu sch√©matu {0} z oboru n√°zv≈Ø {1}.dAtribut XmlNamespaceDeclarations nelze pou≈æ√≠t souƒçasnƒõ s ≈æ√°dn√Ωmi jin√Ωmi vlastn√≠mi atributy.YTyp {0} je vzhledem k √∫rovni ochrany nep≈ô√≠stupn√Ω. Lze zpracovat pouze ve≈ôejn√© typy.&P≈ôi reflexi typu {0} do≈°lo k chybƒõ.]{0} nelze serializovat. Statick√© typy nelze pou≈æ√≠vat jako parametry nebo n√°vratov√© typy.BTyp {0} z oboru n√°zv≈Ø {1} byl pou≈æit dvƒõma r≈Øzn√Ωmi zp≈Øsoby.ñTypy {0} a {1} pou≈æ√≠vaj√≠ n√°zev typu XML {2} z oboru n√°zv≈Ø {3}. Pomoc√≠ atribut≈Ø XML zadejte pro typ jedineƒçn√Ω n√°zev XML a/nebo obor n√°zv≈Ø.Typ {0} nen√≠ deklarov√°n..P≈ôedpona oboru n√°zv≈Ø {0} nen√≠ definov√°na.¢Element XML {0} z oboru n√°zv≈Ø {1} nebyl oƒçek√°v√°n. Obor n√°zv≈Ø a n√°zev elementu XML mus√≠ odpov√≠dat hodnot√°m poskytnut√Ωm atributy XmlAnyElementAttribute.@Chyba ovƒõ≈ôov√°n√≠ instance: Hodnota {0} nen√≠ platn√° pro {1}.Uzel {0} nebyl oƒçek√°v√°n.GZadan√Ω typ nebyl rozpozn√°n: n√°zev={0}, obor n√°zv≈Ø={1}, pozice: {2},V√Ωchoz√≠ typ hodnoty {0} nen√≠ podporov√°n.=Form√°tovac√≠ modul {0} nelze pou≈æ√≠t pro v√Ωchoz√≠ hodnoty.GTyp {0} nen√≠ podporov√°n, proto≈æe implementuje rozhran√≠ IDictionary.Sƒålen {0} typu {1} nelze serializovat, proto≈æe implementuje rozhran√≠ IDictionary._Pou≈æ√≠v√°n√≠ {0} jako z√°kladn√≠ho typu pro t≈ô√≠du nen√≠ objektem XmlSerializer podporov√°no.!Rozhran√≠ {0} nelze serializovat.Fƒålen {0} typu {1} nelze serializovat, proto≈æe se jedn√° o rozhran√≠.{Typ {0} nen√≠ podporov√°n, proto≈æe obsahuje obecn√© parametry bez vazby. Serializovat lze pouze obecn√© typy s instancemi.MObjekt typu {0} nelze serializovat. V√≠cerozmƒõrn√° pole nejsou podporov√°na.^Nelze importovat sch√©ma pro typ {0} z oboru n√°zv≈Ø {1}. P≈ôedefinov√°n√≠ nen√≠ podporov√°no.ÑTyp {0} nem≈Ø≈æe b√Ωt serializov√°n se zpr√°vami zak√≥dovan√Ωmi v protokolu SOAP. Nastavte vlastnost Use zpr√°vy na hodnotu Literal.{0} je nepodporovan√Ω typ."Typ {0} nesm√≠ b√Ωt serializov√°n.zTyp {0} nebyl oƒçek√°v√°n. K urƒçen√≠ typ≈Ø, kter√© nejsou zn√°my staticky, pou≈æijte atribut XmlInclude nebo SoapInclude.{Atribut XmlNamespaceDeclarations nelze pou≈æ√≠t pro ƒçlen {0} typu {1}. Tento atribut je platn√Ω pouze pro ƒçleny typu {2}.*Ji≈æ prob√≠h√° jin√° asynchronn√≠ operace.#{0} je duplicitn√≠ hodnota v√Ωƒçtu."{0} je duplicitn√≠ hodnota notace.BZnak {0} (≈°estn√°ctkov√° hodnota {1}) je neplatn√Ω znak atributu.Neoƒçek√°van√° deklarace DTD<Neplatn√° syntaxe pro odkaz na des√≠tkovou ƒç√≠selnou entitu@Neplatn√° syntaxe pro odkaz na ≈°estn√°ctkovou ƒç√≠selnou entitu?Znak {0} (≈°estn√°ctkov√° hodnota {1}) nelze pou≈æ√≠t v n√°zvu.rN√°zev obsahuje na pozici {2} znak {0} s ≈°estn√°ctkovou hodnotou {1}. Takov√Ω znak v≈°ak n√°zvy obsahovat nesm√≠.!Neplatn√° deklarace oboru n√°zv≈ØNZnak {0} (≈°estn√°ctkov√° hodnota {1}) nelze pou≈æ√≠t jako prvn√≠ znak n√°zvu.,Znak ]]> nen√≠ povolen ve znakov√Ωch datech.3Nelze vytvo≈ôit vazbu k vyhrazen√©mu oboru n√°zv≈Ø.%Nelze p≈ôelo≈æit odkaz na entitu {0}.ÒNelze p≈ôelo≈æit odkaz na entitu {0}, proto≈æe DTD bylo ignorov√°no. Chcete-li povolit zpracov√°n√≠ deklarace DTD, nastavte vlastnost DtdProcessing u t≈ô√≠dy XmlReaderSettings na hodnotu Parse a nastaven√≠ p≈ôedejte metodƒõ XmlReader.Create.UNelze rozpoznat extern√≠ podmno≈æinu DTD ‚Äì ve≈ôejn√© ID = {0}, syst√©mov√© ID = {1}Nejde p≈ôelo≈æit {0}.mMetodu WriteStartDocument nelze volat u zapisovaƒç≈Ø vytvo≈ôen√Ωch pomoc√≠ hodnoty ConformanceLevel.Fragment.XNelze zapsat deklaraci XML. Deklarace XML m≈Ø≈æe existovat pouze na zaƒç√°tku dokumentu.,Neplatn√° hodnota reference znakov√© entity.Objekt Writer je uzav≈ôen.1Objekt Writer je uzav≈ôen nebo v chybov√©m stavu.4Objekt XmlReader je uzav≈ôen nebo v chybov√©m stavu.H{0} je nekvalifikovan√Ω n√°zev a nem≈Ø≈æe obsahovat znak dvojteƒçky (:).©Pokud chcete zapisovat fragment XML, ujistƒõte se, ≈æe nastaven√≠ ConformanceLevel je nakonfigurov√°no na mo≈ænost ConformanceLevel.Fragment nebo ConformanceLevel.Auto. Do≈°lo k chybƒõ XML.ŒMus√≠ b√Ωt zad√°n identifik√°tor BaseUri, a to buƒè jako argument metody XmlReader.Create, nebo pro t≈ô√≠du XmlParserContext. Pokud je zad√°n u obou, mus√≠ se jednat o stejn√Ω z√°kladn√≠ identifik√°tor URI.KDeklarace DTD mus√≠ b√Ωt definov√°na p≈ôed ko≈ôenov√Ωm elementem dokumentu.!Deklarace DTD ji≈æ byla zaps√°na.2Deklarace DTD je v tomto dokumentu XML zak√°z√°na.˚Z bezpeƒçnostn√≠ch d≈Øvod≈Ø je deklarace DTD v tomto dokumentu XML zak√°z√°na. Chcete-li povolit zpracov√°n√≠ deklarace DTD, nastavte vlastnost DtdProcessing u t≈ô√≠dy XmlReaderSettings na hodnotu Parse a nastaven√≠ p≈ôedejte metodƒõ XmlReader.Create.0Deklarace DTD nen√≠ ve fragmentech XML povolena.*N√°zev {0} je duplicitn√≠ n√°zev atributu.FNelze zapsat deklaraci XML. Metoda WriteStartDocument ji ji≈æ zapsala.Element {0} nebyl nalezen.6Element {0} s n√°zvem oboru n√°zv≈Ø {1} nebyl nalezen.>Pr√°zdn√Ω ≈ôetƒõzec '' nep≈ôedstavuje platn√Ω m√≠stn√≠ n√°zev.5Pr√°zdn√Ω ≈ôetƒõzec '' nep≈ôedstavuje platn√Ω n√°zev.!Adresa URL nesm√≠ b√Ωt pr√°zdn√°.kPro atribut encoding je {0} neplatn√° hodnota. Po zavol√°n√≠ metody ResetState nejde k√≥dov√°n√≠ p≈ôepnout.]Byl oƒçek√°v√°n element EntityHandling.ExpandEntities nebo EntityHandling.ExpandCharEntities.ON√°hradn√≠ text entity mus√≠ b√Ωt spr√°vnƒõ vno≈ôen uvnit≈ô deklarac√≠ znaƒçek.&Je po≈æadov√°n v√Ωƒçtov√Ω datov√Ω typ.*Na pozici {0}, ({1}, {2}) do≈°lo k chybƒõ.ADo≈°lo k chybƒõ p≈ôi otev√≠r√°n√≠ extern√≠ deklarace DTD {0}: {1}:Do≈°lo k chybƒõ p≈ôi otev√≠r√°n√≠ extern√≠ entity {0}: {1}5P≈ôi parsov√°n√≠ atributu EntityName do≈°lo k chybƒõ.≈ò√°dek {0}, pozice {1}Byl oƒçek√°v√°n typ atributu.3Oƒçek√°van√° deklarace znaƒçek DTD nebyla nalezena.;Je oƒçek√°v√°n extern√≠ identifik√°tor nebo hodnota entity.>Je oƒçek√°v√°n extern√≠ identifik√°tor ID, znak [ nebo znak >.9Je oƒçek√°v√°n syst√©mov√Ω nebo ve≈ôejn√Ω identifik√°tor.KPodm√≠nƒõn√© odd√≠ly mus√≠ pou≈æ√≠vat kl√≠ƒçov√© slovo IGNORE nebo INCLUDE.9Pr√°zdn√© znaky nejsou povoleny p≈ôed znakem ?, * nebo +. Je oƒçek√°v√°n znak ?, * nebo +.Oƒçek√°v√° se parametr PCDATA.CJe oƒçek√°v√°na vnit≈ôn√≠ podmno≈æina nebo konec deklarace DOCTYPE.<{0} je neoƒçek√°van√Ω token. Byl oƒçek√°v√°n pr√°zdn√Ω znak.GOdkaz na extern√≠ entitu {0} nem≈Ø≈æe b√Ωt pou≈æit v hodnotƒõ atributu.cSamostatn√° deklarace dokumentu mus√≠ m√≠t hodnotu no, proto≈æe se odkazuje na extern√≠ entitu {0}.VIdentifik√°tor fragmentu {0} nem≈Ø≈æe b√Ωt ƒç√°st√≠ syst√©mov√©ho identifik√°toru {1}.±Nelze zmƒõnit kontrolu souladu na mo≈ænost {0}. Ujistƒõte se, ≈æe v√Ωƒçet ConformanceLevel ve t≈ô√≠dƒõ XmlReaderSettings je pro sc√©n√°≈ôe obalov√°n√≠ nastaven na mo≈ænost Auto.Ne√∫pln√Ω obsah DTDNe√∫pln√Ω obsah entity¿Pokud vlastnosti XmlWriterSettings.CheckCharacters a XmlWriterSettings.NewLineOnAttributes maj√≠ hodnotu true, t≈ô√≠da XmlWriterSettings.{0} m≈Ø≈æe obsahovat pouze platn√© pr√°zdn√© znaky XML.Do≈°lo k vnit≈ôn√≠ chybƒõ.{0} je neplatn√Ω typ atributu.Neplatn√Ω typ atributu+{0} nen√≠ platn√° posloupnost textu Base64.+{0} nen√≠ platn√° posloupnost textu BinHex.Y{0} nen√≠ platn√° posloupnost textu BinHex. Sekvence mus√≠ obsahovat sud√Ω poƒçet znak≈Ø.:≈òetƒõzec ]]> nem≈Ø≈æe b√Ωt uvnit≈ô bloku CDATA k√≥du XML.%Neplatn√Ω znak v zadan√©m k√≥dov√°n√≠4Znak {0} (≈°estn√°ctkov√° hodnota {1}) je neplatn√Ω.úPokud m√° vlastnost XmlWriterSettings.CheckCharacters hodnotu true, t≈ô√≠da XmlWriterSettings.{0} m≈Ø≈æe obsahovat pouze platn√© znaky obsahu textu XML. {1}_Koment√°≈ô jazyka XML nem≈Ø≈æe obsahovat znak -- a znak - nem≈Ø≈æe b√Ωt jeho posledn√≠m znakem.9Odd√≠l podm√≠nky nen√≠ ve vnit≈ôn√≠ podmno≈æinƒõ povolen.Neplatn√Ω model obsahu-Hodnota odsazen√≠ mus√≠ b√Ωt vƒõt≈°√≠ ne≈æ 0.Neplatn√Ω znak v n√°zvu {0}cN√°zev {0} obsahuje neplatn√Ω znak. Znak {1} (≈°estn√°ctkov√° hodnota {2}) nelze v n√°zvu pou≈æ√≠t.Neplatn√° hodnota NmToken {0}!{0} je neplatn√Ω typ XmlNodeType.8Operace nen√≠ platn√° kv≈Øli aktu√°ln√≠mu stavu objektu.?N√°zev {0} nen√≠ platn√Ω n√°zev pro instrukce pro zpracov√°n√≠.=Odkaz na entitu parametru nen√≠ ve vnit≈ôn√≠ znaƒçce povolen.?Instrukce pro zpracov√°n√≠ XML nem≈Ø≈æe obsahovat ≈ôetƒõzec ?>.JNa aktu√°ln√≠ pozici ƒçtec√≠ho za≈ô√≠zen√≠ nen√≠ ani element, ani atribut.zP≈ôedpony zaƒç√≠naj√≠c√≠ ≈ôetƒõzcem xml (bez ohledu na pou≈æit√≠ velk√Ωch a mal√Ωch p√≠smen) jsou vyhrazeny pro jazyk XML.SNeplatn√Ω znak uvozovky atributu XML. Platn√Ωmi znaky uvozovek atributu jsou ' a ".ÇMetoda {0} nen√≠ u uzl≈Ø typu {1} podporov√°na. Pokud chcete ƒç√≠st typov√Ω obsah elementu, pou≈æijte metodu ReadElementContentAs./Metoda {0} nen√≠ u uzl≈Ø typu {1} podporov√°na.<Metoda ReadValueAsChunk nen√≠ u uzl≈Ø typu {0} podporov√°na.IP≈ôi parsov√°n√≠ fragmentu XML nelze pou≈æ√≠t vol√°n√≠ funkce ResetState.*Data na ko≈ôenov√© √∫rovni jsou neplatn√°.öNeplatn√Ω znak z vysok√©ho rozsahu n√°hradn√≠ho p√°ru (0x{0}). Znak z vysok√©ho rozsahu n√°hradn√≠ho p√°ru mus√≠ m√≠t hodnotu v rozsahu (0xD800‚Äì0xDBFF).QN√°hradn√≠ p√°r je neplatn√Ω. Chyb√≠ znak z n√≠zk√©ho rozsahu n√°hradn√≠ho p√°ru.N√°hradn√≠ p√°r je neplatn√Ω. N√°hradn√≠ p√°r (0x{0}, 0x{1}) je neplatn√Ω. Znak z vysok√©ho rozsahu n√°hradn√≠ho p√°ru (0xD800‚Äì0xDBFF) mus√≠ b√Ωt v≈ædy sp√°rov√°n se znakem z n√≠zk√©ho rozsahu n√°hradn√≠ho p√°ru (0xDC00‚Äì0xDFFF).Neplatn√° deklarace textuƒå√≠slo verze {0} je neplatn√©.tUzel Whitespace nebo SignificantWhitespace m≈Ø≈æe obsahovat pouze pr√°zdn√© znaky XML. {0} nen√≠ pr√°zdn√Ω znak XML.'Syntaxe pro deklaraci XML je neplatn√°.Dokument XML je neplatn√Ω. {0}#{0} je neplatn√° hodnota xml:space.5Vstupn√≠ dokument p≈ôekroƒçil nastaven√Ω limit o {0}.{0} ≈ô√°dek {1}, pozice {2}lNeexistuje ≈æ√°dn√° znaƒçka pro po≈ôad√≠ bajt≈Ø k√≥dov√°n√≠ Unicode. Nelze p≈ôepnout na k√≥dov√°n√≠ Unicode.Chyb√≠ ko≈ôenov√Ω element.PMetody ReadElementContentAs() nelze volat u element≈Ø s pod≈ô√≠zen√Ωmi elementy.ïVol√°n√≠ metod ReadContentAsBase64 a ReadContentAsBinHex nelze smƒõ≈°ovat s vol√°n√≠mi metod ReadElementContentAsBase64 a ReadElementContentAsBinHex.gVol√°n√≠ metody ReadValueChunk nelze smƒõ≈°ovat s metodou ReadContentAsBase64 nebo ReadContentAsBinHex.ÄVol√°n√≠ metod ReadContentAsBase64 a ReadContentAsBinHex nelze smƒõ≈°ovat s vol√°n√≠mi metod ReadChars, ReadBase64 a ReadBinHex.!Nelze pou≈æ√≠t v√≠ce definic DTD.)Existuje nƒõkolik ko≈ôenov√Ωch element≈Ø.-Nepodporovan√° kombinace ovƒõ≈ôovac√≠ch typ≈ØdP≈ôedpona {0} nem≈Ø≈æe b√Ωt mapov√°na na n√°zev oboru n√°zv≈Ø vyhrazen√Ω pro hodnoty xml nebo xmlns.ÆXmlReaderSettings.XmlNameTable mus√≠ b√Ωt tabulka se stejn√Ωm n√°zvem jako v XmlParserContext.NameTable nebo XmlParserContext.NamespaceManager.NameTable nebo mus√≠ b√Ωt null."Nena≈°la se ≈æ√°dn√° definice DTD.0Dokument nem≈Ø≈æe m√≠t v√≠ce element≈Ø document.HPokud m√° atribut Namespaces hodnotu false, obor n√°zv≈Ø nelze nastavit.'Dokument neobsahuje ko≈ôenov√Ω element./Nebyla otev≈ôena ≈æ√°dn√° √∫vodn√≠ znaƒçka XML.$Nedo≈°lo k ≈æ√°dn√©mu ovƒõ≈ôov√°n√≠.-Mƒõly by b√Ωt pou≈æity pouze pr√°zdn√© znaky.™Vyrovn√°vac√≠ pamƒõ≈• nen√≠ dostateƒçnƒõ velk√°, aby do n√≠ bylo mo≈æn√© ulo≈æit n√°hradn√≠ p√°r. Poskytnƒõte pros√≠m vyrovn√°vac√≠ pamƒõ≈• o velikosti alespo≈à 2 znak≈Ø.NotInWriteState"Nen√≠ tabulka se stejn√Ωm n√°zvem.@Prvn√≠m vol√°n√≠m mus√≠ b√Ωt vol√°n√≠ funkce WriteStartDocument.7P≈ôeklad extern√≠ch identifik√°tor≈Ø URI byl zak√°z√°n.KTento typ NodeType nen√≠ podporov√°n pro parsov√°n√≠ ƒç√°steƒçn√©ho obsahu.HXmlNodeType {0} nen√≠ podporov√°n pro parsov√°n√≠ ƒç√°steƒçn√©ho obsahu.5U pr√°zdn√©ho oboru n√°zv≈Ø nelze pou≈æ√≠t p≈ôedponu.ïMetoda {0} nen√≠ pro tuto t≈ô√≠du XmlReader podporov√°na. Pomoc√≠ vlastnosti CanReadBinaryContent zjistƒõte, zda ji ƒçtec√≠ za≈ô√≠zen√≠ implementuje.!Obsah nelze p≈ôev√©st na typ {0}.5Vlastnost {0} je jen pro ƒçten√≠ a nelze ji nastavit.eMetodu ReadSubtree() lze volat pouze v p≈ô√≠padƒõ, ≈æe na uzlu elementu existuje ƒçtec√≠ za≈ô√≠zen√≠.õMetoda ReadValueChunk nen√≠ pro tuto t≈ô√≠du XmlReader podporov√°na. Pomoc√≠ vlastnosti CanReadValueChunk zjistƒõte, zda ji t≈ô√≠da XmlReader implementuje.hPokud chcete pou≈æ√≠vat asynchronn√≠ metody, nastavte vlastnost XmlReaderSettings.Async na hodnotu true.)Obecn√° entita {0} odkazuje sama na sebe.+Entita parametru {0} odkazuje sama na sebe.ZP≈ôedponu {0} nelze p≈ôedefinovat z {1} na {2} v r√°mci stejn√© √∫vodn√≠ znaƒçky elementu.3Relativn√≠ identifik√°tory URI nejsou podporov√°ny.P≈ôeteƒçen√≠ z√°sobn√≠kuZN√°hradn√≠ p√°r druh√©ho znaku nen√≠ urƒçen k zaps√°n√≠ do vstupn√≠ vyrovn√°vac√≠ pamƒõti.`Nelze otev≈ô√≠t {0}. Parametr Uri mus√≠ b√Ωt relativn√≠ nebo absolutn√≠ cesta syst√©mu soubor≈Ø.KPoƒç√°teƒçn√≠ znaƒçka {0} na ≈ô√°dku {1} neodpov√≠d√° koncov√© znaƒçce {2}.XPoƒç√°teƒçn√≠ znaƒçka {0} na ≈ô√°dku {1} a pozici {2} neodpov√≠d√° koncov√© znaƒçce {3}.-Byl nalezen neuzav≈ôen√Ω podm√≠nƒõn√Ω odd√≠l./Byl nalezen neuzav≈ôen√Ω ≈ôetƒõzcov√Ω liter√°l."Odkaz na nedeklarovanou entitu {0},Odkaz na nedeklarovanou entitu parametru {0}"Obor n√°zv≈Ø {0} nen√≠ definov√°n.$Je pou≈æita nedefinovan√° p≈ôedpona. ≈òetƒõzec ]]> nen√≠ oƒçek√°v√°n.@P≈ôi parsov√°n√≠ {0} byl zji≈°tƒõn neoƒçek√°van√Ω konec souboru.+Byl zji≈°tƒõn neoƒçek√°van√Ω konec souboru.YByl zji≈°tƒõn neoƒçek√°van√Ω konec souboru. N√°sleduj√≠c√≠ elementy nejsou uzav≈ôeny: {0}Neoƒçek√°van√° koncov√° znaƒçkakNeoƒçek√°van√Ω typ uzlu {0}. Metodu {1} lze volat pouze u element≈Ø s jednoduch√Ωm nebo pr√°zdn√Ωm obsahem.'Neoƒçek√°van√Ω v√Ωƒçet XmlNodeType: {0}8Toto je neoƒçek√°van√Ω token. Byl oƒçek√°v√°n token {0}.7{0} je neoƒçek√°van√Ω token. Byl oƒçek√°v√°n token {1}.@{0} je neoƒçek√°van√Ω token. Byl oƒçek√°v√°n token {1} nebo {2}.$Syst√©m nepodporuje k√≥dov√°n√≠ {0}. {0} je nedeklarovan√° p≈ôedpona.%Entita {0} nen√≠ neparsovan√° entita. Odkaz na neparsovanou entitu {0}Typ objektu nen√≠ podporov√°n.UObjekt XmlResolver lze nastavit pouze prost≈ôednictv√≠m plnƒõ d≈Øvƒõryhodn√©ho k√≥du.{0}aOƒçek√°v√°no: WhitespaceHandling.None, WhitespaceHandling.All nebo WhitespaceHandling.SignificanthPokud chcete pou≈æ√≠vat asynchronn√≠ metody, nastavte vlastnost XmlWriterSettings.Async na hodnotu true.=Token {0} ve stavu {1} by zp≈Øsobil neplatnost dokumentu XML.´Nelze otev≈ô√≠t objekt {0}. Parametr Uri mus√≠ b√Ωt relativn√≠ cesta odkazuj√≠c√≠ na obsah v bal√≠ƒçku XAP aplikace architektury Silverlight. Pokud pot≈ôebujete naƒç√≠st obsah z libovoln√©ho identifik√°toru URI, nahl√©dnƒõte do dokumentace o naƒç√≠t√°n√≠ obsahu XML pomoc√≠ WebClient/HttpWebRequest.ÖNeoƒçek√°van√° deklarace XML. Deklarace XML mus√≠ b√Ωt prvn√≠m uzlem v dokumentu. P≈ôed n√≠ nejsou povoleny ≈æ√°dn√© pr√°zdn√© znaky.âP≈ôedpona xml je vyhrazena pro pou≈æit√≠ v k√≥du XML a lze ji mapovat pouze na n√°zev oboru n√°zv≈Ø http://www.w3.org/XML/1998/namespace.TAtribut xmlns je v√°z√°n k vyhrazen√©mu oboru n√°zv≈Ø http://www.w3.org/2000/xmlns/.7P≈ôedpona xmlns je vyhrazena pro pou≈æit√≠ v k√≥du XML.0Uzel nen√≠ rozbaliteln√Ωm uzlem EntityReference.[Toto je neplatn√Ω objekt. Jako vstup lze p≈ôedat pouze objekty vr√°cen√© funkc√≠ Compile().+Funkci current() nelze pou≈æ√≠vat ve vzoru.{0} je neplatn√Ω v√Ωraz.Funkce {0}() selhala.NFunkce {0} v {1} m√° neplatn√Ω argument. Pravdƒõpodobnƒõ nebyl nalezen znak ).8Argument funkce {0} v {1} nejde p≈ôev√©st na sadu uzl≈Ø.T{0} je neplatn√Ω vzor kl√≠ƒçe. Obsahuje buƒè odkaz na promƒõnnou, nebo funkci key().({0} m√° neplatn√Ω kvalifikovan√Ω n√°zev.1Funkce {0} v {1} m√° neplatn√Ω poƒçet argument≈Ø.{0} je neplatn√Ω vzor XSLT.{0} obsahuje neplatn√Ω token.ÖJe vy≈æadov√°n obor n√°zv≈Ø Manager nebo XsltContext. Tento dotaz obsahuje p≈ôedponu, promƒõnnou nebo funkci definovanou u≈æivatelem.-V√Ωraz mus√≠ b√Ωt vyhodnocen jako sada uzl≈Ø."Dotaz XPath {0} nen√≠ podporov√°n.#Dotaz XPath je p≈ô√≠li≈° slo≈æit√Ω.Toto je neuzav≈ôen√Ω ≈ôetƒõzec.Funkce {0}() je nedefinovan√°. Promƒõnn√° {0} je nedefinovan√°.OPro tento dotaz je vzhledem k nezn√°m√© funkci vy≈æadov√°n kontext XsltContext.>Operace je vzhledem k aktu√°ln√≠ pozici navig√°toru neplatn√°.ENa aktu√°ln√≠ pozici navig√°toru chyb√≠ platn√° nad≈ôazen√° polo≈æka.?V√Ωsledkem t√©to operace nebylo generov√°n√≠ ≈æ√°dn√©ho obsahu.™Spu≈°tƒõn√≠ ≈°ablony styl≈Ø, kter√° byla zkompilov√°na pomoc√≠ novƒõj≈°√≠ verze rozhran√≠, nen√≠ podporov√°no. Verze ≈°ablony styl≈Ø: {0}. Aktu√°ln√≠ verze rozhran√≠: {1})Nebyla naƒçtena ≈æ√°dn√° ≈°ablona styl≈Ø.3Typ {0} nen√≠ kompilovan√° t≈ô√≠da ≈°ablony styl≈Ø. ) Œ Ôæ   ë   lSystem.Resources.ResourceReader, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089#System.Resources.RuntimeResourceSet   ≠      PADPADP
—CÄ@ÉÅXæIÅ§;Å¨õùÅHjÇfÄ)ÑC] Öø ∑Ö(‹”Öÿ®÷Öû^kÜ"ã¡Ü+˚/á∑iIáÆp∑áKUˆáÂ˜àPB-àDRàaÑâ⁄∏Cä]pÈä(H(ãK5Fé´ˇé±èrüèˇ-≈èıOˇè6¡ëM¥?í›§ÍíO„ˇí ﬂ≠ì~çî$ôAîéŸ¸î{:ñ88UñS¸ñ∏í'óÍJó2Q=ö’}Üöæ#»öùkAõU∫Ñõëˆ“õ— ú.0zúËñìúlÕ…ú∞=*û3ß1ûxŒXû+llû◊∫Éû$g°üùôÔüU†ì^+†Ã`ê†ˆ©°í¶°›{Ó°ëƒé£.ç‚£|ä
§)¯∑§ÙN•L◊¶*:ßëß%U®®ñY©ÈW*©´.J©ëFx™µØó™ÜÅ{¨ÆIØºÈüØ	)∫ØÓ¢ÓØòsZ∞„†≥∞'Ú∞Û^±}ÉÚ±nπ¿≥¬Â‹≥a}¥bòzµÉçÑµY?ïµ,ï™µ±HªµçÚ[∂±?È∂47K∑R£p∑’_	∏üupπ`!pºõ®“º≥Øº—^RΩs±¶Ω;—æ>ù æO(æ¨πXæÍbèæ
Ã€ømÈ¸ø2≤¿¿o¡% ˘¡y]ƒë@≈äÓ	∆èT0∆Võë∆æ˘p«^ÔX»É÷Ò»å@…é1g {◊æ NπWÃ™≤cÃS\ñÕ*ô·ÕNˇÕwÕLœı§tœ¿ßzœRß™œd∑Ùœ¿:.–;–U‡–Îî	—‘;—aQ∞—ºÉ‰—ø1“j”˜êè‘lÎ¸‘c^’÷πÏ’Uÿ÷kZ/◊Îi€ìÿH€E∆‹òµ6‹˘œ›[ö-›X‘W›í&ﬁq–	ﬂëˆp·t≥|·ø	ù‚¸=^„Gâj‰$Ø}Âj)ÂÂ”6ÊõåÊèÊxÊ@´ãÊÏÆàÁ∏≈¸ËL$ È⁄NUÈ˘QaÈ¸&ßÈe‘ÈÍÚ$ÍÍπoÍUjÎ$GÏìÌ¨J”Ì,VÌÌx]ëÓz]ëÓ‚2ÔJRÔ“f©Ô4¡áW†¥Ú•ÄﬁÚ=M©Û≥¨Ù‡ìUÙ;|‹Ù
º⁄ıç°¡ˆ/Œ˘ü∞‚˘±’q˙rÈê˙°$˚>+e˚ˇ˚˚oR¸£ÒÛ¸Õê˝F·@˝”4Z˝5°ü˝π3·˝WŸ
ˇdNiˇÔ‡ÎˇÍÑå ; ;êlä∑Œ,ŸœHjúëÌ®®Õ2†T°≥ÀÿÂπÙBˇô◊S¥õÕä9£ëé
	†òw	®8
√î_ ròaœÆbß;P	πÂK[“îñ´WçÚ¶ÿùfN\ªÙÊì˚Ωóéœ{£–©ˆ’‰≠k9úZÜ”
t%<_#NŸ~†™‰’ôiè≥•ûQ"Ωp4Â˛UãO≠ üò†!√£!‘
"ßµj#U;◊$©»¸$∆%˜b%v§_%in%Á'$≠m'o ö'«Àπ'◊I4(†Í4(#;^)l„ƒ)Ùã√*Ω›*±U‚+
¢É,;©Ê,ëÈ-u-Ä)-Ù9-¿“-CXN1 ~1‡Ø≥1’º1¡ú82ÇºÓ2ÌÃ	4˛	56%}:8ç9-9ÑÇØ9
óº9Åeƒ9∆,œ94◊9Ë›–:ˇÔ;4tÒ;L7o<2%u<Ìπ∫=ÒçÓ>‹Zö?E.T@åÍ’B=CS◊ADBPDˆe”DíÈDE∂¢Eò‰$HÆ0{Hq#çH¨™ÌHr}˘H¥ÚrI’ò∆IâéëJ0vK{Ã»Lœõ'M«/äO~/PP◊ò…P0ÔP˘ÇSQ¶SdQU‡éQzpR∏RÿÓ∂S5_¶UÒ¨ŸUÓT V‹≥WßIeX“≥¿X1Y9Œ9Y`∑ZÈµ[ã@@[¶<s[å‡±\*]]Í T^”x€^¸FÛ^Ä_¸Eí_öâb{N¿bF>—cJBd˛FdgrÇegÚéeàm2fêã3fÏ÷FfÂ—∏g«¯gÊGhCﬂ≈h≥∑»h"9ÄjYK]k'»Ók∞˙k_(˙keÈ`lƒÆl•”n”Î o~>Üo[¬≤o‘8q	_iqÒøâq>Gﬁq ‡qqŒArÚ⁄\s¨ŸŸsÆŸŸslÿt@r"v∞™gvtÅÁv lw,xêËyTËGzﬂ≠qz;rzÅ{á”E{û™É{¿ â{túÉ}≥≠ª}ÀyŸ} æ©~-Ú~åËı~-UZòbV  2  ΩC  xT  h  w&  ;   '.  Y+  °b  Ç,      _  t  Ô*  ⁄T  $+  #  sP  D  $8  ;  <  ’$  -  )Q  +  N#  ó9  ∞&  µ"  8K  Õ  ﬂB  ¥7  zX  @  hO  ˛Q  ‰[  »O  pV  (c  ÇM  ‚M  }R  Y  ¯P  c  §P  H	  ì4  ©  é[      Ú  ‡Z  ÄJ  ,'  ≥-  9B  ∂I  ;5  ◊  U8  Ò)  ‹\  ˙  Æa  /  ©  Ü    ]  I  ∂*  ∑M  \4  î)  
3  #  Z2    ´V  R0  T  ò$  Z  ñY  O!  F*  ø3  —R  Ÿ_  eD  –  à  ‹A  Ú<    Ø  iF  Ÿ+  MT  Ω   äH  0  ª  B  ˛3  O  ;  ÕH  DY  0&  +,  A  É.  ∂9  n  ÛN  c_  YS  ƒ  Ï5  ˜?  ‡Y  ˛  ?O  eE  ´T  <>  √<  `  °X  w  π  &      ê<  ©  `  ªU  U  ‹  §E  —'  ¶S  #%  ∑8  -R  …P  
G  ?=  %-  ˜\  
S  !7  X  P  Ú  "  £  K  ∏%  {a  ,9    Ú"  É	  ~G  0    NR  ‡
  ª  5  òU  L  {L  ¸V  .V  ∂  I"  2P  Ü"  V  Ò  ª   p   Ñ'  \-  e<  Ó>  \  d6    ôO  ®!  bQ  ˇ  ±\  Z@  ë  i[  ˇX  Ò7  å]  A  ≥  ù  B:  ç1  -  ,  ûF  J  %  π,  1  [    G(  ÊJ  J
  ã%  ’S  ◊  Å  yQ  M  ˙  1;  ¢  Œ  øY  '6  A  ê  –K  å3  √  A  A  D1  —  »N  Ñ  (  °0  ãW  ¥  SV  ö  —F  F%  U  ≈G  Á!  ∏_  ¥.  ÆL  ’=  ó>  x    a  ‘`  >_  €  S]     ﬂQ  ó
  k  ¸G  T.  n  Ÿ(  5  £^  Ö*  O3  {  ]  8Z  ∑5  ‰:  LL  A    ü  ˜a  Í  “X  sY  WX  _  ‹0  î  )  OH  ÿ/  "X  á7  ÿ  xb  ›  ›  .F  Ì  ÒW  ¶  ˆ  <[  T  
  ]'  ô     ¯  íD  ”D  IM  Ü8  ÈE  ‹,  ®Q  3  z5  ÜZ  :  5  p=  Ä  ``  †R  ”    πJ  6  àB  a\  ~   ß6  ‘b  )`  ,$  K  C^  :U  ç:  2D  @/  ÷^  ø@  E?  à\  \  ‰  ,E  π[  ,  h  #N  ¢+  ù  r(  √;  @C  W)  •2  û?  2b  t  UZ  4\  ≠`  m$  TN  ºW  ˝&  Y  €L  £/  ù  yU  ü  Ë  Ω  X  à  ~  v  )   “	  !  \W  ]I  „#    ∑]  r^    =  :  ùN  ?W  Ë4  R7  ß  Ï-  Ê  q  ﬁU  »1  ‰C  `  74  z;  ¸]  º  ±Z  EG  ≤#  Fa  Sb  yq  6A b s t r a c t E l e m e n t N o t S u p p o r t e d     0A b s t r a c t T y p e N o t S u p p o r t e d F   FA m b i g u o u s R e f e r e n c e d C o l l e c t i o n T y p e s 1 à   FA m b i g u o u s R e f e r e n c e d C o l l e c t i o n T y p e s 3 R  2A m b i g u o u s R e f e r e n c e d T y p e s 1 *  2A m b i g u o u s R e f e r e n c e d T y p e s 3 ˝  6A n n o t a t i o n A t t r i b u t e N o t F o u n d ﬁ  2A n o n y m o u s T y p e N o t S u p p o r t e d 5  0A n y A t t r i b u t e N o t S u p p o r t e d z  "A r r a y E x c e e d e d S i z e §  4A r r a y E x c e e d e d S i z e A t t r i b u t e X  &A r r a y I t e m F o r m M u s t B e ÷  2A r r a y T y p e C a n n o t B e I m p o r t e d   .A r r a y T y p e I s N o t S u p p o r t e d =   A s s e m b l y N o t F o u n d õ  "A t t r i b u t e N o t F o u n d º  |A t t r i b u t e d T y p e s C a n n o t I n h e r i t F r o m N o n A t t r i b u t e d S e r i a l i z a b l e T y p e s â  0B a s e T y p e N o t I S e r i a l i z a b l e é  >C L R N a m e s p a c e M a p p e d M u l t i p l e T i m e s „  ,C a l l b a c k M u s t R e t u r n V o i d n	  0C a l l b a c k P a r a m e t e r I n v a l i d ¥	  >C a l l b a c k s C a n n o t B e V i r t u a l M e t h o d s 
  8C a n O n l y S t o r e I n t o A r g O r L o c G o t 0 N
  .C a n n o t C o m p u t e U n i q u e N a m e ∑
  FC a n n o t D e r i v e F r o m S e a l e d R e f e r e n c e T y p e /  <C a n n o t D e s e r i a l i z e R e f A t T o p L e v e l ©  BC a n n o t H a v e D u p l i c a t e A t t r i b u t e N a m e s   >C a n n o t H a v e D u p l i c a t e E l e m e n t N a m e s ï  4C a n n o t I m p o r t I n v a l i d S c h e m a s h  @C a n n o t I m p o r t N u l l D a t a C o n t r a c t N a m e ∑  ,C a n n o t I m p o r t N u l l S c h e m a   (C a n n o t L o a d M e m b e r T y p e z  >C a n n o t S e r i a l i z e O b j e c t W i t h C y c l e s ö  BC a n n o t S e t M e m b e r s F o r R e f e r e n c e d T y p e   FC a n n o t S e t N a m e s p a c e F o r R e f e r e n c e d T y p e ∂  4C a n n o t U s e G e n e r i c T y p e A s B a s e i  ,C h a r I s I n v a l i d P r i m i t i v e   *C i r c u l a r T y p e R e f e r e n c e ∞  C l r T y p e N o t F o u n d Í  RC o l l e c t i o n A s s i g n e d T o I n c o m p a t i b l e I n t e r f a c e ÷  6C o l l e c t i o n M u s t H a v e A d d M e t h o d É  JC o l l e c t i o n M u s t H a v e G e t E n u m e r a t o r M e t h o d Æ  4C o l l e c t i o n M u s t H a v e I t e m T y p e „  :C o l l e c t i o n T y p e C a n n o t B e B u i l t I n    HC o l l e c t i o n T y p e C a n n o t H a v e D a t a C o n t r a c t W  DC o l l e c t i o n T y p e D o e s N o t H a v e A d d M e t h o d   HC o l l e c t i o n T y p e D o e s N o t H a v e D e f a u l t C t o r ¥  ^C o l l e c t i o n T y p e H a s M u l t i p l e D e f i n i t i o n s O f I n t e r f a c e ÷  <C o l l e c t i o n T y p e I s N o t I E n u m e r a b l e ˛  DC o m p l e x T y p e R e s t r i c t i o n N o t S u p p o r t e d )  >C o u l d N o t R e a d S e r i a l i z a t i o n S c h e m a d  2D a t a C o n t r a c t C a c h e O v e r f l o w ÷  >D a t a C o n t r a c t N a m e s p a c e A l r e a d y S e t #  >D a t a C o n t r a c t N a m e s p a c e I s N o t V a l i d Â  :D a t a C o n t r a c t N a m e s p a c e R e s e r v e d 1  *D a t a M e m b e r O n E n u m F i e l d ~  6D c T y p e N o t F o u n d O n D e s e r i a l i z e ‚  2D c T y p e N o t F o u n d O n S e r i a l i z e í  <D c T y p e N o t R e s o l v e d O n D e s e r i a l i z e ˛  8D e f a u l t O n E l e m e n t N o t S u p p o r t e d 8  6D e r i v e d T y p e N o t I S e r i a l i z a b l e n  @D e s e r i a l i z e d O b j e c t W i t h I d N o t F o u n d Ã  8D u p C o n t r a c t I n D a t a C o n t r a c t S e t   .D u p C o n t r a c t I n K n o w n T y p e s Á  $D u p E n u m M e m b e r V a l u e G  D u p K e y V a l u e N a m e    D u p M e m b e r N a m e π   @D u p T y p e C o n t r a c t I n D a t a C o n t r a c t S e t ñ!  $D u p l i c a t e A t t r i b u t e Z"  "D u p l i c a t e C a l l b a c k ù"  ,E l e m e n t M a x O c c u r s M u s t B e —"  ,E l e m e n t M i n O c c u r s M u s t B e #  HE l e m e n t R e f O n L o c a l E l e m e n t N o t S u p p o r t e d N#  8E n c o u n t e r e d W i t h N a m e N a m e s p a c e ã#  DE n u m E n u m e r a t i o n F a c e t s M u s t H a v e V a l u e ¿#  FE n u m L i s t I n A n o n y m o u s T y p e N o t S u p p o r t e d $  @E n u m L i s t M u s t C o n t a i n A n o n y m o u s T y p e v$  DE n u m O n l y E n u m e r a t i o n F a c e t s S u p p o r t e d ›$  ,E n u m R e s t r i c t i o n I n v a l i d 4%  0E n u m T y p e C a n n o t B e I m p o r t e d ∞%  :E n u m T y p e C a n n o t H a v e I s R e f e r e n c e Î%  `E n u m T y p e N o t S u p p o r t e d B y D a t a C o n t r a c t J s o n S e r i a l i z e r \&  HE n u m U n i o n I n A n o n y m o u s T y p e N o t S u p p o r t e d Ú&  $E r r o r D e s e r i a l i z i n g h'  E r r o r I n L i n e ù'  $E r r o r I s S t a r t O b j e c t ¿'   E r r o r S e r i a l i z i n g 	(  E r r o r T y p e I n f o <(  &E r r o r W r i t e E n d O b j e c t F(  *E r r o r W r i t e S t a r t O b j e c t â(  *E x c e e d e d M a x I t e m s Q u o t a —(   E x p e c t i n g E l e m e n t y)  :E x p e c t i n g E l e m e n t A t D e s e r i a l i z e ©)  E x p e c t i n g E n d €)  E x p e c t i n g S t a t e ˙)  DF a c t o r y O b j e c t C o n t a i n s S e l f R e f e r e n c e *  4F i x e d O n E l e m e n t N o t S u p p o r t e d ú+  &F o r m M u s t B e Q u a l i f i e d œ+  DG e n e r i c A n n o t a t i o n A t t r i b u t e N o t F o u n d ˝+  ^G e n e r i c A n n o t a t i o n F o r N e s t e d L e v e l M u s t B e I n c r e a s i n g 1,  RG e n e r i c A n n o t a t i o n H a s I n v a l i d A t t r i b u t e V a l u e ∞,  DG e n e r i c A n n o t a t i o n H a s I n v a l i d E l e m e n t <-  0G e n e r i c C a l l b a c k E x c e p t i o n ä-  0G e n e r i c N a m e B r a c e M i s m a t c h *.  0G e n e r i c P a r a m e t e r N o t V a l i d /  .G e n e r i c T y p e N a m e M i s m a t c h 1  0G e n e r i c T y p e N o t E x p o r t a b l e }1  DG e t O n l y C o l l e c t i o n M u s t H a v e A d d M e t h o d :2  JI S e r i a l i z a b l e C o n t a i n s M o r e T h a n O n e I t e m s L3  TI S e r i a l i z a b l e D e r i v e d C o n t a i n s O n e O r M o r e I t e m s ã3  <I S e r i a l i z a b l e D o e s N o t C o n t a i n A n y œ3  PI S e r i a l i z a b l e M u s t R e f F a c t o r y T y p e A t t r i b u t e 4  BI S e r i a l i z a b l e T y p e C a n n o t B e I m p o r t e d @4  HI S e r i a l i z a b l e W i l d c a r d M a x O c c u r s M u s t B e Å4  HI S e r i a l i z a b l e W i l d c a r d M i n O c c u r s M u s t B e «4  JI S e r i a l i z a b l e W i l d c a r d N a m e s p a c e I n v a l i d 5  VI S e r i a l i z a b l e W i l d c a r d P r o c e s s C o n t e n t s I n v a l i d C5  `I X m l S e r i a l i z a b l e C a n n o t H a v e C o l l e c t i o n D a t a C o n t r a c t è5  LI X m l S e r i a l i z a b l e C a n n o t H a v e D a t a C o n t r a c t Á5  @I X m l S e r i a l i z a b l e I l l e g a l O p e r a t i o n 56  DI X m l S e r i a l i z a b l e M i s s i n g E n d E l e m e n t s p6  TI X m l S e r i a l i z a b l e M u s t H a v e D e f a u l t C o n s t r u c t o r ˛6  @I X m l S e r i a l i z a b l e W r i t e P a s t S u b T r e e :7  .I n c o n s i s t e n t I s R e f e r e n c e ’7  BI n d e x e d P r o p e r t y C a n n o t B e S e r i a l i z e d  9  <I n v a l i d A n n o t a t i o n E x p e c t i n g T e x t q9  $I n v a l i d A s y n c R e s u l t ◊9  6I n v a l i d C h a r a c t e r E n c o u n t e r e d P:  ,I n v a l i d C l a s s D e r i v a t i o n s:  NI n v a l i d C l r N a m e G e n e r a t e d F o r I S e r i a l i z a b l e ;  XI n v a l i d C l r N a m e s p a c e G e n e r a t e d F o r I S e r i a l i z a b l e µ<  BI n v a l i d C o l l e c t i o n C o n t r a c t I t e m N a m e 7>  @I n v a l i d C o l l e c t i o n C o n t r a c t K e y N a m e ¿>  PI n v a l i d C o l l e c t i o n C o n t r a c t K e y N o D i c t i o n a r y H?  :I n v a l i d C o l l e c t i o n C o n t r a c t N a m e Ò?  DI n v a l i d C o l l e c t i o n C o n t r a c t N a m e s p a c e v@  DI n v a l i d C o l l e c t i o n C o n t r a c t V a l u e N a m e Ï@  TI n v a l i d C o l l e c t i o n C o n t r a c t V a l u e N o D i c t i o n a r y oA  :I n v a l i d C o l l e c t i o n D a t a C o n t r a c t B  *I n v a l i d C o l l e c t i o n T y p e tB  .I n v a l i d D a t a C o n t r a c t N a m e †B  8I n v a l i d D a t a C o n t r a c t N a m e s p a c e C  *I n v a l i d D a t a M e m b e r N a m e ÜC  8I n v a l i d E m i t D e f a u l t A n n o t a t i o n D  &I n v a l i d E n u m B a s e T y p e ÿD  ,I n v a l i d E n u m M e m b e r V a l u e 7E  ,I n v a l i d E n u m V a l u e O n R e a d ∏E  .I n v a l i d E n u m V a l u e O n W r i t e äF  ,I n v a l i d G e t S c h e m a M e t h o d fG  DI n v a l i d G l o b a l D a t a C o n t r a c t N a m e s p a c e ÌG  <I n v a l i d I S e r i a l i z a b l e D e r i v a t i o n MH  &I n v a l i d K e y V a l u e T y p e ‚H  8I n v a l i d K e y V a l u e T y p e N a m e s p a c e †I  *I n v a l i d L o c a l N a m e E m p t y 9J  I n v a l i d M e m b e r mJ  I n v a l i d N o d e T y p e +K  @I n v a l i d N o n N u l l R e t u r n V a l u e B y I s A n y HK  (I n v a l i d P r i m i t i v e T y p e ºK  DI n v a l i d R e t u r n T y p e O n G e t S c h e m a M e t h o d ÍK  *I n v a l i d S i z e D e f i n i t i o n CL  BI n v a l i d S t a t e I n E x t e n s i o n D a t a R e a d e r ÇL  4I n v a l i d X m l D a t a C o n t r a c t N a m e …L  HI n v a l i d X m l D e s e r i a l i z i n g E x t e n s i o n D a t a 0M  *I n v a l i d X s I d D e f i n i t i o n yM  ,I n v a l i d X s R e f D e f i n i t i o n ∆M  "I s A n y C a n n o t B e N u l l 
N  HI s A n y C a n n o t B e S e r i a l i z e d A s D e r i v e d T y p e O  ,I s A n y C a n n o t H a v e X m l R o o t 8P  @I s D i c t i o n a r y F o r m a t t e d I n c o r r e c t l y +Q  &I s N o t A s s i g n a b l e F r o m fQ  bI s R e q u i r e d D a t a M e m b e r O n I s R e f e r e n c e D a t a C o n t r a c t T y p e ⁄Q  >I s V a l u e T y p e F o r m a t t e d I n c o r r e c t l y …R  6J s o n A t t r i b u t e A l r e a d y W r i t t e n S  8J s o n A t t r i b u t e M u s t H a v e E l e m e n t @S  XJ s o n C a n n o t W r i t e S t a n d a l o n e T e x t A f t e r Q u o t e d T e x t ªS  PJ s o n C a n n o t W r i t e T e x t A f t e r N o n T e x t A t t r i b u t e UT  :J s o n C i r c u l a r R e f e r e n c e D e t e c t e d €T  ,J s o n D a t e T i m e O u t O f R a n g e eU  4J s o n D u p l i c a t e M e m b e r I n I n p u t V  0J s o n D u p l i c a t e M e m b e r N a m e s çV  0J s o n E n c o d i n g N o t S u p p o r t e d (W  DJ s o n E n c o u n t e r e d U n e x p e c t e d C h a r a c t e r £W  2J s o n E n d E l e m e n t N o O p e n N o d e s ÀW  (J s o n E x p e c t e d E n c o d i n g X   J s o n I n v a l i d B y t e s WX  RJ s o n I n v a l i d D a t a T y p e S p e c i f i e d F o r S e r v e r T y p e uX  2J s o n I n v a l i d D a t e T i m e S t r i n g #Y  J s o n I n v a l i d F F F E åY  DJ s o n I n v a l i d I t e m N a m e F o r A r r a y E l e m e n t —Y  2J s o n I n v a l i d L o c a l N a m e E m p t y zZ  RJ s o n I n v a l i d M e t h o d B e t w e e n S t a r t E n d A t t r i b u t e ∆Z  4J s o n I n v a l i d R o o t E l e m e n t N a m e ˛Z  6J s o n I n v a l i d S t a r t E l e m e n t C a l l z[  (J s o n I n v a l i d W r i t e S t a t Ù[  *J s o n I n v a l i d W r i t e S t a t e A\  ,J s o n M e t h o d N o t S u p p o r t e d é\  TJ s o n M u l t i p l e R o o t E l e m e n t s N o t A l l o w e d O n W r i t e r ’\  .J s o n M u s t S p e c i f y D a t a T y p e 1]  ^J s o n M u s t U s e W r i t e S t r i n g F o r W r i t i n g A t t r i b u t e V a l u e s ~]  0J s o n N a m e s p a c e M u s t B e E m p t y ^  8J s o n N e s t e d A r r a y s N o t S u p p o r t e d _^  8J s o n N o M a t c h i n g S t a r t A t t r i b u t e Ñ^  JJ s o n N o d e T y p e A r r a y O r O b j e c t N o t S p e c i f i e d ∞^  6J s o n O f f s e t E x c e e d s B u f f e r S i z e 6_  :J s o n O n e R e q u i r e d M e m b e r N o t F o u n d á_  $J s o n O n l y W h i t e s p a c e Á_  DJ s o n O p e n A t t r i b u t e M u s t B e C l o s e d F i r s t 4`  6J s o n P r e f i x M u s t B e N u l l O r E m p t y o`  6J s o n R e q u i r e d M e m b e r s N o t F o u n d Ÿ`  RJ s o n S e r v e r T y p e S p e c i f i e d F o r I n v a l i d D a t a T y p e @a  FJ s o n S i z e E x c e e d s R e m a i n i n g B u f f e r S p a c e Ía  `J s o n T y p e N o t S u p p o r t e d B y D a t a C o n t r a c t J s o n S e r i a l i z e r Jb  @J s o n U n e x p e c t e d A t t r i b u t e L o c a l N a m e ãb  8J s o n U n e x p e c t e d A t t r i b u t e V a l u e ‹c  .J s o n U n e x p e c t e d E n d O f F i l e ìd  :J s o n U n s u p p o r t e d F o r I s R e f e r e n c e ±d  4J s o n W r i t e A r r a y N o t S u p p o r t e d ˆe   J s o n W r i t e r C l o s e d g  2J s o n X m l I n v a l i d D e c l a r a t i o n #g  PJ s o n X m l P r o c e s s i n g I n s t r u c t i o n N o t S u p p o r t e d Yg  NK e y T y p e C a n n o t B e P a r s e d I n S i m p l e D i c t i o n a r y ùg  :K n o w n T y p e A t t r i b u t e E m p t y S t r i n g 'h  8K n o w n T y p e A t t r i b u t e M e t h o d N u l l äh  0K n o w n T y p e A t t r i b u t e N o D a t a ⁄h  6K n o w n T y p e A t t r i b u t e O n e S c h e m e i  8K n o w n T y p e A t t r i b u t e R e t u r n T y p e ñi  >K n o w n T y p e A t t r i b u t e U n k n o w n M e t h o d ¢j  DK n o w n T y p e A t t r i b u t e V a l i d M e t h o d T y p e s Åk  ,M a x A r r a y L e n g t h E x c e e d e d ◊k  ,M i s s i n g G e t S c h e m a M e t h o d 1l  0M i x e d C o n t e n t N o t S u p p o r t e d –l  (M u l t i p l e I d D e f i n i t i o n 
m  8M u s t C o n t a i n O n l y L o c a l E l e m e n t s Øm  .N a m e C a n n o t B e N u l l O r E m p t y ;n  ,N o C o n v e r s i o n P o s s i b l e T o ân  ,N o G e t M e t h o d F o r P r o p e r t y ˇn  ,N o S e t M e t h o d F o r P r o p e r t y 1o  pN o n A t t r i b u t e d S e r i a l i z a b l e T y p e s M u s t H a v e D e f a u l t C o n s t r u c t o r co  fN o n O p t i o n a l F i e l d M e m b e r O n I s R e f e r e n c e S e r i a l i z a b l e T y p e ìo  N u l l K n o w n T y p e ,q  JN u l l V a l u e R e t u r n e d F o r G e t O n l y C o l l e c t i o n ﬁq  8O b j e c t D e s e r i a l i z e r _ B a d E s c a p e µr  FO b j e c t D e s e r i a l i z e r _ I l l e g a l P r i m i t i v e Ôr  RO b j e c t D e s e r i a l i z e r _ I n v a l i d A r r a y E x t r a C o m m a ás  HO b j e c t D e s e r i a l i z e r _ I n v a l i d M e m b e r N a m e ´s  DO b j e c t D e s e r i a l i z e r _ S t r i n g N o t Q u o t e d ﬂs  DO b j e c t D e s e r i a l i z e r _ U n e x p e c t e d T o k e n 0t  JO b j e c t D e s e r i a l i z e r _ U n t e r m i n a t e d S t r i n g åt  NO b j e c t S e r i a l i z e r _ D i c t i o n a r y N o t S u p p o r t e d u  &O b j e c t T a b l e O v e r f l o w cu  .O f f s e t E x c e e d s B u f f e r S i z e ˙u  *O r d e r C a n n o t B e N e g a t i v e Kv  HO u t P a r a m e t e r s M u s t B e B y R e f T y p e R e c e i v e d úv  ,P a r a m e t e r C o u n t M i s m a t c h ﬂv  `P a r t i a l T r u s t C o l l e c t i o n C o n t r a c t A d d M e t h o d N o t P u b l i c rw  bP a r t i a l T r u s t C o l l e c t i o n C o n t r a c t N o P u b l i c C o n s t r u c t o r ˝w  VP a r t i a l T r u s t C o l l e c t i o n C o n t r a c t T y p e N o t P u b l i c òx  RP a r t i a l T r u s t D a t a C o n t r a c t F i e l d G e t N o t P u b l i c y  RP a r t i a l T r u s t D a t a C o n t r a c t F i e l d S e t N o t P u b l i c íy  TP a r t i a l T r u s t D a t a C o n t r a c t M e m b e r G e t N o t P u b l i c z  TP a r t i a l T r u s t D a t a C o n t r a c t M e m b e r S e t N o t P u b l i c º{  ^P a r t i a l T r u s t D a t a C o n t r a c t O n D e s e r i a l i z e d N o t P u b l i c g}  `P a r t i a l T r u s t D a t a C o n t r a c t O n D e s e r i a l i z i n g N o t P u b l i c ˘}  ZP a r t i a l T r u s t D a t a C o n t r a c t O n S e r i a l i z e d N o t P u b l i c å~  \P a r t i a l T r u s t D a t a C o n t r a c t O n S e r i a l i z i n g N o t P u b l i c   XP a r t i a l T r u s t D a t a C o n t r a c t P r o p e r t y G e t N o t P u b l i c ´  XP a r t i a l T r u s t D a t a C o n t r a c t P r o p e r t y S e t N o t P u b l i c >Ä  JP a r t i a l T r u s t D a t a C o n t r a c t T y p e N o t P u b l i c “Ä  RP a r t i a l T r u s t I X m l S e r i a l i z a b l e T y p e N o t P u b l i c DÅ  \P a r t i a l T r u s t I X m l S e r i a l z a b l e N o P u b l i c C o n s t r u c t o r πÅ  xP a r t i a l T r u s t N o n A t t r i b u t e d S e r i a l i z a b l e T y p e N o P u b l i c C o n s t r u c t o r OÇ  "Q u o t a C o p y R e a d O n l y ‘Ç  Q u o t a I s R e a d O n l y (É  &Q u o t a M u s t B e P o s i t i v e PÉ  .R e c u r s i v e C o l l e c t i o n T y p e wÉ  (R e d e f i n e N o t S u p p o r t e d #Ñ  <R e f e r e n c e d B a s e T y p e D o e s N o t E x i s t IÑ  TR e f e r e n c e d C o l l e c t i o n T y p e s C a n n o t C o n t a i n N u l l >Ö  4R e f e r e n c e d T y p e D o e s N o t M a t c h ¡Ö  :R e f e r e n c e d T y p e M a t c h i n g M e s s a g e éÜ  @R e f e r e n c e d T y p e N o t M a t c h i n g M e s s a g e ôÜ  @R e f e r e n c e d T y p e s C a n n o t C o n t a i n N u l l ¶Ü  6R e q u i r e d M e m b e r M u s t B e E m i t t e d á  0R e s o l v e T y p e R e t u r n e d F a l s e Æâ  .R e s o l v e T y p e R e t u r n e d N u l l  ä  4R o o t P a r t i c l e M u s t B e S e q u e n c e tå  6R o o t S e q u e n c e M a x O c c u r s M u s t B e üå  4R o o t S e q u e n c e M u s t B e R e q u i r e d ·å  BS e r i a l i z a t i o n C o d e I s M i s s i n g F o r T y p e #ç  2S i m p l e C o n t e n t N o t S u p p o r t e d ”ç  NS i m p l e T y p e R e s t r i c t i o n D o e s N o t S p e c i f y B a s e é  6S i m p l e T y p e U n i o n N o t S u p p o r t e d [é  >S i z e E x c e e d s R e m a i n i n g B u f f e r S p a c e îé  :S p e c i f i e d T y p e N o t F o u n d I n S c h e m a ˆé  LS u b s t i t u t i o n G r o u p O n E l e m e n t N o t S u p p o r t e d Sè  TS u p p o r t F o r M u l t i d i m e n s i o n a l A r r a y s N o t P r e s e n t äè  XS u r r o g a t e s W i t h G e t O n l y C o l l e c t i o n s N o t S u p p o r t e d µè  hS u r r o g a t e s W i t h G e t O n l y C o l l e c t i o n s N o t S u p p o r t e d S e r D e s e r iê  4T o o M a n y C o l l e c t i o n C o n t r a c t s ˛ê  (T o o M a n y D a t a C o n t r a c t s <ë  $T o o M a n y D a t a M e m b e r s pë  $T o o M a n y E n u m M e m b e r s ®ë  BT o o M a n y I g n o r e D a t a M e m b e r A t t r i b u t e s ‡ë  LT o p L e v e l E l e m e n t R e p r e s e n t s D i f f e r e n t T y p e í  DT r a c e C o d e X s d I m p o r t A n n o t a t i o n F a i l e d ì  .T r a c e C o d e X s d I m p o r t B e g i n Iì  *T r a c e C o d e X s d I m p o r t E n d hì  .T r a c e C o d e X s d I m p o r t E r r o r àì  (T y p e C a n n o t B e I m p o r t e d ±ì  8T y p e C a n n o t B e I m p o r t e d H o w T o F i x ‰ì  ,T y p e H a s N o t B e e n I m p o r t e d wî  4T y p e M u s t B e I X m l S e r i a l i z a b l e ï  0T y p e M u s t N o t B e O p e n G e n e r i c #ñ  &T y p e N o t S e r i a l i z a b l e ^ñ  <T y p e S h o u l d N o t C o n t a i n A t t r i b u t e s …ó  ,U n e x p e c t e d C o n t r a c t T y p e ò  DU n e x p e c t e d E l e m e n t E x p e c t i n g E l e m e n t s Yò  &U n e x p e c t e d E n d O f F i l e •ò  &U n k n o w n C o n s t a n t T y p e √ò  &U n k n o w n D a t a C o n t r a c t ‰ò  U n k n o w n X m l T y p e ô  $V a l u e M u s t B e I n R a n g e !ô  ,V a l u e M u s t B e N o n N e g a t i v e _ô  *V a l u e T y p e C a n n o t B e N u l l êô  6V a l u e T y p e C a n n o t H a v e B a s e T y p e ªô  *V a l u e T y p e C a n n o t H a v e I d 0ö  <V a l u e T y p e C a n n o t H a v e I s R e f e r e n c e ]ö  ,V a l u e T y p e C a n n o t H a v e R e f —ö   X m l A r r a y T o o S m a l l õ  *X m l A r r a y T o o S m a l l I n p u t õ  ,X m l A r r a y T o o S m a l l O u t p u t iõ  4X m l A s y n c I s R u n n i n g E x c e p t i o n ¨õ  X m l B a d B O M ÿõ  *X m l B a s e 6 4 D a t a E x p e c t e d ú  2X m l C D A T A I n v a l i d A t T o p L e v e l Mú  X m l C l o s e C D a t a âú  *X m l C o n v e r s i o n O v e r f l o w ∏ú  X m l D e c l M i s s i n g ‰ú  *X m l D e c l M i s s i n g V e r s i o n 5ù  X m l D e c l N o t F i r s t ]ù  ,X m l D e c l a r a t i o n R e q u i r e d óù  4X m l D i c t i o n a r y S t r i n g I D R a n g e ˜ù  JX m l D i c t i o n a r y S t r i n g I D U n d e f i n e d S e s s i o n Bû  HX m l D i c t i o n a r y S t r i n g I D U n d e f i n e d S t a t i c úû  *X m l D u p l i c a t e A t t r i b u t e Îû  (X m l E l e m e n t A t t r i b u t e s :ü  FX m l E m p t y N a m e s p a c e R e q u i r e s N u l l P r e f i x ^ü  &X m l E n c o d i n g M i s m a t c h ™ü  .X m l E n c o d i n g N o t S u p p o r t e d Úü  *X m l E n d E l e m e n t E x p e c t e d †  0X m l E n d E l e m e n t N o O p e n N o d e s k†  &X m l E x p e c t e d E n c o d i n g ´†  :X m l F o r O b j e c t C a n n o t H a v e C o n t e n t ˜†  X m l F o u n d C D a t a ®°  X m l F o u n d C o m m e n t ≥°  X m l F o u n d E l e m e n t √°  $X m l F o u n d E n d E l e m e n t ‰°  "X m l F o u n d E n d O f F i l e ¢   X m l F o u n d N o d e T y p e ¢  X m l F o u n d T e x t '¢  6X m l F u l l S t a r t E l e m e n t E x p e c t e d 1¢  LX m l F u l l S t a r t E l e m e n t L o c a l N a m e N s E x p e c t e d ~¢  >X m l F u l l S t a r t E l e m e n t N a m e E x p e c t e d „¢  X m l I D D e f i n e d 4£  *X m l I l l e g a l O u t s i d e R o o t L£  ,X m l I n v a l i d B a s e 6 4 L e n g t h x£  0X m l I n v a l i d B a s e 6 4 S e q u e n c e Ω£  ,X m l I n v a l i d B i n H e x L e n g t h ¯£  0X m l I n v a l i d B i n H e x S e q u e n c e =§  X m l I n v a l i d B y t e s x§  "X m l I n v a l i d C h a r R e f ñ§  ,X m l I n v a l i d C o m m e n t C h a r s ≥§  (X m l I n v a l i d C o n v e r s i o n Ù§  @X m l I n v a l i d C o n v e r s i o n W i t h o u t V a l u e •  *X m l I n v a l i d D e c l a r a t i o n D•  X m l I n v a l i d D e p t h z•  $X m l I n v a l i d E n c o d i n g ¢•  X m l I n v a l i d F F F E ≈•   X m l I n v a l i d F o r m a t 
¶  .X m l I n v a l i d H i g h S u r r o g a t e 9¶  X m l I n v a l i d I D ¢¶  ,X m l I n v a l i d L o w S u r r o g a t e √¶  &X m l I n v a l i d O p e r a t i o n ,ß  *X m l I n v a l i d P r e f i x S t a t e Oß  .X m l I n v a l i d Q u a l i f i e d N a m e âß  $X m l I n v a l i d R o o t D a t a «ß  (X m l I n v a l i d S t a n d a l o n e Ûß   X m l I n v a l i d S t r e a m +®  &X m l I n v a l i d S u r r o g a t e x®  &X m l I n v a l i d U T F 8 B y t e s ‘®  $X m l I n v a l i d U n i q u e I d ¯®  "X m l I n v a l i d V e r s i o n /©  (X m l I n v a l i d W r i t e S t a t e J©  "X m l I n v a l i d X m l B y t e ó©  $X m l I n v a l i d X m l S p a c e ƒ©  &X m l K e y A l r e a d y E x i s t s ™  X m l L i n e I n f o @™   X m l M a l f o r m e d D e c l Y™  2X m l M a x A r r a y L e n g t h E x c e e d e d |™  4X m l M a x B y t e s P e r R e a d E x c e e d e d f´  &X m l M a x D e p t h E x c e e d e d Ê¨  @X m l M a x N a m e T a b l e C h a r C o u n t E x c e e d e d Æ  BX m l M a x S t r i n g C o n t e n t L e n g t h E x c e e d e d ∞  *X m l M e t h o d N o t S u p p o r t e d ±  ,X m l M i s s i n g L o w S u r r o g a t e 8±  .X m l M u l t i p l e R o o t E l e m e n t s ã±  (X m l N a m e s p a c e N o t F o u n d ∂±  6X m l N e s t e d A r r a y s N o t S u p p o r t e d €±   X m l N o R o o t E l e m e n t  ≤  PX m l O b j e c t A s s i g n e d T o I n c o m p a t i b l e I n t e r f a c e $≤  X m l O n l y O n e R o o t ∞≤  $X m l O n l y S i n g l e V a l u e Ô≤  "X m l O n l y W h i t e s p a c e 9≥  2X m l P r e f i x B o u n d T o N a m e s p a c e a≥  HX m l P r o c e s s i n g I n s t r u c t i o n N o t S u p p o r t e d ´≥  "X m l R e s e r v e d P r e f i x ˙≥  2X m l S p a c e B e t w e e n A t t r i b u t e s b¥  6X m l S p e c i f i c B i n d i n g N a m e s p a c e Ñ¥  0X m l S p e c i f i c B i n d i n g P r e f i x ∑¥  .X m l S t a r t E l e m e n t E x p e c t e d Í¥  DX m l S t a r t E l e m e n t L o c a l N a m e N s E x p e c t e d +µ  6X m l S t a r t E l e m e n t N a m e E x p e c t e d Ñµ  X m l T a g M i s m a t c h …µ   X m l T o k e n E x p e c t e d ∂  $X m l U n d e f i n e d P r e f i x C∂  .X m l U n e x p e c t e d E n d E l e m e n t e∂  ,X m l U n e x p e c t e d E n d O f F i l e ≠∂  X m l W r i t e r C l o s e d ˙∂  0X m l W r i t e r M u s t B e I n E l e m e n t ∑  DElement nem≈Ø≈æe m√≠t vlastnost abstract nastavenou na hodnotu true.@Typ nem≈Ø≈æe m√≠t vlastnost abstract nastavenou na hodnotu true.«Seznam odkazovan√Ωch typ≈Ø kolekce obsahuje v√≠ce ne≈æ jeden typ se stejn√Ωm n√°zvem kontraktu dat. Za≈ôaƒète pouze jeden z n√°sleduj√≠c√≠ch typ≈Ø. Platn√Ωmi odkazy mohou b√Ωt pouze shodn√© typy: {0}’Seznam odkazovan√Ωch typ≈Ø kolekce obsahuje v√≠ce ne≈æ jeden typ s n√°zvem kontraktu dat {0} v oboru n√°zv≈Ø {1}. Za≈ôaƒète pouze jeden z n√°sleduj√≠c√≠ch typ≈Ø. Platn√Ωmi odkazy mohou b√Ωt pouze shodn√© typy: {2}–Seznam odkazovan√Ωch typ≈Ø obsahuje v√≠ce ne≈æ jeden typ se stejn√Ωm n√°zvem kontraktu dat. Je nutn√© vylouƒçit v≈°echny n√°sleduj√≠c√≠ typy kromƒõ jednoho. Platn√Ωmi odkazy mohou b√Ωt pouze shodn√© typy: {0}ﬁSeznam odkazovan√Ωch typ≈Ø obsahuje v√≠ce ne≈æ jeden typ s n√°zvem kontraktu dat {0} v oboru n√°zv≈Ø {1}. Je nutn√© vylouƒçit v≈°echny n√°sleduj√≠c√≠ typy kromƒõ jednoho. Platn√Ωmi odkazy mohou b√Ωt pouze shodn√© typy: {2}UNeplatn√° pozn√°mka {0} v typu {1} z oboru n√°zv≈Ø {2}. Atribut {3} nen√≠ p≈ô√≠tomen.CAnonymn√≠ typ v elementu {0} z oboru n√°zv≈Ø {1} nen√≠ podporov√°n.(Parametr anyAttribute nen√≠ podporov√°n.±D√©lka pole {0} poskytnut√° kolekc√≠ typu pouze pro z√≠sk√°n√≠ (get) {1} je krat≈°√≠ ne≈æ poƒçet element≈Ø pole nalezen√Ωch ve vstupn√≠m streamu. Zva≈æte zv√Ω≈°en√≠ d√©lky pole.|D√©lka pole {0} poskytnut√° atributem Size (Velikost) se nerovn√° nalezen√©mu poƒçtu element≈Ø pole {1} z oboru n√°zv≈Ø {2}.-Mus√≠ b√Ωt urƒçen formul√°≈ô pro element {0}.6Typ pole {0} v oboru n√°zv≈Ø {1} nelze importovat. {2}\Do≈°lo k vnit≈ôn√≠ chybƒõ. {0}[] nen√≠ p≈ôi generov√°n√≠ k√≥du pro serializaci podporov√°no.Sestaven√≠ {0} nebylo nalezeno. XML {2} {3}:{4} neobsahuje oƒçek√°van√Ω atribut {0}:{1}. Deserializ√°tor nezn√° typ, kter√Ω se m√° deserializovat. Zkontrolujte, jestli m√° serializovan√Ω typ stejn√Ω kontrakt jako deserializovan√Ω typ.ÇTyp {0} nem≈Ø≈æe dƒõdit od typu, kter√Ω nen√≠ oznaƒçen atributem DataContractAttribute nebo SerializableAttribute. Oznaƒçte z√°kladn√≠ typ {1} atributem DataContractAttribute nebo SerializableAttribute, p≈ô√≠padnƒõ odeberte tyto atributy od odvozen√©ho typu.SJeden z jeho z√°kladn√≠ch typ≈Ø, {0} z oboru n√°zv≈Ø {1}, nen√≠ typu ISerializable.àObor n√°zv≈Ø CLR {2} u≈æ je namapovan√Ω na obor n√°zv≈Ø kontraktu dat {0}. Ned√° se namapovat na dal≈°√≠ obor n√°zv≈Ø kontraktu dat {1}.DZpƒõtn√© vol√°n√≠ serializace {1} v typu {0} mus√≠ vr√°tit typ void.PZpƒõtn√© vol√°n√≠ serializace {1} v typu {0} mus√≠ m√≠t jeden parametr typu {2}.FVirtu√°ln√≠ metoda {0} typu {1} nem≈Ø≈æe b√Ωt oznaƒçena atributem {2}.gDo≈°lo k vnit≈ôn√≠ chybƒõ. Data lze ulo≈æit jen do oblasti ArgBuilder nebo LocalBuilder. Obdr≈æeno: {0}vPro {0} nen√≠ mo≈æn√© vypoƒç√≠tat jedineƒçn√Ω n√°zev, proto≈æe ji≈æ existuj√≠ typy Int32.MaxValue se stejn√Ωm n√°zvem.xTyp s n√°zvem kontraktu dat {0} v oboru n√°zv≈Ø {1} nejde importovat. Ned√° se odvodit od odkazovan√©ho sealed typu {2}.jNelze deserializovat, proto≈æe ko≈ôenov√Ω element odkazuje na nerozpoznan√Ω objekt s identifik√°torem {0}.~Tento typ obsahuje dva atributy se stejn√Ωm n√°zvem {0}. Nen√≠ podporov√°no v√≠ce atribut≈Ø se stejn√Ωm n√°zvem v jednom typu.–Typ obsahuje dva elementy se stejn√Ωm n√°zvem {0}. V√≠ce element≈Ø se stejn√Ωm n√°zvem v jednom typu nen√≠ podporov√°no, proto≈æe ƒçleny oznaƒçen√© atributem DataMemberAttribute mus√≠ m√≠t jedineƒçn√© n√°zvy.MNelze importovat neplatn√° sch√©mata. Kompilace v sadƒõ XmlSchemaSet selhala.UPro t≈ô√≠du XmlQualifiedName s hodnotou null zadanou parametrem nelze importovat typ.jNelze importovat sch√©ma XmlSchema s hodnotou null obsa≈æen√© ve t≈ô√≠dƒõ XmlSchemaSet zadan√© parametrem.Nelze naƒç√≠st typ ƒçlenu {0}.rGraf objekt≈Ø pro typ {0} obsahuje cykly a nen√≠ mo≈æn√© ho serializovat, kdy≈æ je zak√°z√°no sledov√°n√≠ odkaz≈Ø.•Na st√°vaj√≠c√≠ typ {0} zadan√Ω p≈ôes odkazovanou kolekci typ≈Ø se odkazovalo v generovan√©m k√≥du. Pro tento typ nejdou p≈ôid√°vat ƒçleny, proto≈æe se ned√° mƒõnit.∞Na st√°vaj√≠c√≠ typ {0} zadan√Ω p≈ôes odkazovanou kolekci typ≈Ø se odkazovalo v generovan√©m k√≥du. Pro tento typ nen√≠ mo≈æn√© nastavit obor n√°zv≈Ø, proto≈æe se ned√° mƒõnit.©Pro typ {0} z oboru n√°zv≈Ø {1} nelze generovat typ kolekce. Jako z√°kladn√≠ typ nelze pou≈æ√≠t typ obecn√©ho seznamu, proto≈æe jazyk nepodporuje odkazy obecn√Ωch typ≈Ø.òDo≈°lo k vnit≈ôn√≠ chybƒõ. Typ char nen√≠ platn√Ω z√°kladn√≠ prvek sch√©matu a mƒõlo by se s n√≠m v kontraktu DataContract manipulovat jako s typem int.8Obsahuje kruhov√Ω odkaz pro typ {0} z oboru n√°zv≈Ø {1}.ÈDeserializ√°tor nem≈Ø≈æe naƒç√≠st typ k p≈ôevodu, proto≈æe typ {1} nebyl nalezen v sestaven√≠ {0}. Zkontrolujte, zda m√° serializovan√Ω typ stejn√Ω kontrakt jako typ, kter√Ω je deserializov√°n, a zda se pou≈æ√≠v√° stejn√© sestaven√≠.™Parametr {0} p≈ôedstavuje typ kolekce. Tento objekt nelze serializovat v p≈ô√≠padƒõ, ≈æe je p≈ôi≈ôazen k typu rozhran√≠ bez implementovan√©ho rozhran√≠ IEnumerable ({1}).)Typ kolekce {0} nem√° platnou metodu Add.3Typ kolekce {0} nem√° platnou metodu GetEnumerator.;Typ kolekce {0} mus√≠ m√≠t typ polo≈æky, kter√Ω nen√≠ null.5{0} je p≈ôeddefinovan√Ω typ a nem≈Ø≈æe b√Ωt kolekc√≠.&{0} m√° atribut DataContractAttribute.3{0} nem√° platnou metodu Add s parametrem typu {1}. {0} nem√° v√Ωchoz√≠ konstruktor.&{0} m√° v√≠ce definic√≠ rozhran√≠ {1}.){0} neimplementuje rozhran√≠ IEnumerable.9Komplexn√≠ typy odvozen√© omezen√≠m nejsou podporov√°ny. pDo≈°lo k vnit≈ôn√≠ chybƒõ. Nelze naƒç√≠st sch√©ma serializace. Sch√©ma m≈Ø≈æete poskytnout s oborem n√°zv≈Ø {0}.KDo≈°lo k vnit≈ôn√≠ chybƒõ. P≈ôeteƒçen√≠ mezipamƒõti kontraktu DataContract.øAtribut ContractNamespaceAttribute mapuje obor n√°zv≈Ø CLR {2} na v√≠ce obor≈Ø n√°zv≈Ø kontrakt≈Ø dat {0} a {1}. Obor n√°zv≈Ø CLR je mo≈æn√© namapovat jen na jeden obor n√°zv≈Ø kontraktu dat.JObor n√°zv≈Ø kontraktu DataContract {0} nen√≠ platn√Ω identifik√°tor URI. KObor n√°zv≈Ø kontraktu DataContract {0} nelze zadat, proto≈æe je vyhrazen. bƒålen {0}.{1} m√° atribut DataMemberAttribute. Pou≈æijte m√≠sto nƒõj atribut EnumMemberAttribute. ≠Element {2}:{3} obsahuje data z typu, kter√Ω se mapuje na n√°zev {0}:{1}. Deserializ√°tor nezn√° ≈æ√°dn√Ω typ, kter√Ω by se mapoval na tento n√°zev. Pokud pou≈æ√≠v√°te DataContractSerializer, zva≈æte pou≈æit√≠ modulu DataContractResolver, nebo p≈ôidejte typ odpov√≠daj√≠c√≠ elementu {1} do seznamu zn√°m√Ωch typ≈Ø, nap≈ô. pomoc√≠ atributu KnownTypeAttribute nebo p≈ôid√°n√≠m do seznamu zn√°m√Ωch typ≈Ø p≈ôedan√Ωch serializ√°toru.ÈTyp {0} s n√°zvem kontraktu dat {1}:{2} nen√≠ oƒçek√°van√Ω typ. Pokud pou≈æ√≠v√°te DataContractSerializer, zva≈æte pou≈æit√≠ modulu DataContractResolver, nebo do seznamu zn√°m√Ωch typ≈Ø p≈ôidejte typy, kter√© nejsou zn√°m√© staticky (nap≈ô√≠klad pomoc√≠ atributu KnownTypeAttribute nebo jejich p≈ôid√°n√≠m do seznamu zn√°m√Ωch typ≈Ø p≈ôedan√Ωch serializ√°toru).∑Element {2}:{3} obsahuje data z typu, kter√Ω je mapov√°n na n√°zev {0}:{1}. Deserializ√°tor nem√° ≈æ√°dn√© informace o typu, kter√Ω je mapov√°n na tento n√°zev. Zva≈æte zmƒõnu implementace metody ResolveName va≈°eho objektu DataContractResolver tak, aby pro n√°zev {1} a obor n√°zv≈Ø {0} nevracela hodnotu null.4V√Ωchoz√≠ hodnota u elementu {0} nen√≠ podporov√°na.\Nen√≠ typem ISerializable, ale jeho z√°kladn√≠ typ {0} v oboru n√°zv≈Ø {1} je ISerializable.ODeserializovan√Ω objekt s identifik√°torem odkazu {0} nebyl ve streamu nalezen.«Kontrakt DataContract s n√°zvem {0} a oborem n√°zv≈Ø {1} nelze p≈ôidat do sady DataContractSet, proto≈æe ji≈æ existuje jin√Ω kontrakt se stejn√Ωm n√°zvem kontraktu dat a kontrakty nejsou rovnocenn√©.›Typ {0} nelze p≈ôidat do seznamu zn√°m√Ωch typ≈Ø, proto≈æe ji≈æ existuje jin√Ω typ {1} se stejn√Ωm n√°zvem kontraktu dat {2}:{3}. Pokud existuj√≠ r≈Øzn√© kolekce konkr√©tn√≠ho typu (nap≈ô√≠klad List<Test> a Test[]), nelze je obƒõ p≈ôidat jako zn√°m√© typy. Zva≈æte, zda by pro p≈ôid√°n√≠ do seznamu zn√°m√Ωch typ≈Ø nestaƒçilo urƒçit pouze jeden typ.—Typ {2} obsahuje dva ƒçleny {0} a {1} se stejn√Ωm n√°zvem {3}. V√≠ce ƒçlen≈Ø se stejn√Ωm n√°zvem v jednom typu nen√≠ podporov√°no. M≈Ø≈æete zmƒõnit jeden z n√°zv≈Ø ƒçlen≈Ø pomoc√≠ atributu EnumMemberAttribute.õTyp kontraktu dat kolekce {0} ud√°v√° stejnou hodnotu {1} pro vlastnosti KeyName a ValueName. To nen√≠ povoleno. Zmƒõ≈àte vlastnost KeyName nebo ValueName.⁄Typ {2} obsahuje dva ƒçleny {0} a {1} se stejn√Ωm n√°zvem datov√©ho ƒçlenu {3}. V√≠ce ƒçlen≈Ø se stejn√Ωm n√°zvem v jednom typu nen√≠ podporov√°no. Zmƒõ≈àte jeden z n√°zv≈Ø ƒçlen≈Ø pomoc√≠ atributu DataMemberAttribute.¡Kontrakt DataContract pro typ {0} nelze p≈ôidat do sady DataContractSet, proto≈æe ji≈æ existuje typ {1} se stejn√Ωm n√°zvem kontraktu dat {2} v oboru n√°zv≈Ø {3} a kontrakty nejsou rovnocenn√©.ANeplatn√© zpƒõtn√© vol√°n√≠. Metoda {3} v typu {2} m√° {0} i {1}.2Neplatn√Ω atribut. {0} i {1} v typu {2} maj√≠ {3}.9Hodnota vlastnosti maxOccurs u elementu {0} mus√≠ b√Ωt 1.@Hodnota vlastnosti minOccurs u elementu {0} mus√≠ b√Ωt 0 nebo 1.;Odkaz na element {0} v oboru n√°zv≈Ø {1} nen√≠ podporov√°n.3{0}. Nalezeno {1} s n√°zvem {2}, obor n√°zv≈Ø {3}. ?Omezuj√≠c√≠ vlastnosti v√Ωƒçtu bez hodnoty nejsou podporov√°ny.sAnonymn√≠ typ s elementem <list> nelze pou≈æ√≠t k vytvo≈ôen√≠ v√Ωƒçtu Flags, proto≈æe to nen√≠ platn√Ω typ v√Ωƒçtu.eSeznam jednoduch√Ωch typ≈Ø mus√≠ obsahovat anonymn√≠ typ ud√°vaj√≠c√≠ omezuj√≠c√≠ vlastnosti v√Ωƒçtu.UJin√© omezuj√≠c√≠ vlastnosti ne≈æ omezuj√≠c√≠ vlastnosti v√Ωƒçtu nejsou podporov√°ny.zAnonymn√≠ typ s elementem <restriction> nelze pou≈æ√≠t k vytvo≈ôen√≠ v√Ωƒçtu Flags, proto≈æe to nen√≠ platn√Ω typ v√Ωƒçtu.9Typ v√Ωƒçtu {0} v oboru n√°zv≈Ø {1} nelze importovat. {2}oTyp v√Ωƒçtu {0} nem≈Ø≈æe m√≠t nastaven√≠ IsReference {1}. Zmƒõ≈àte nastaven√≠ na {2}, nebo jej zcela odeberte. ìMetoda DataContractJsonSerializer nepodporuje datov√© ƒçleny typu {0}. Zva≈æte pou≈æit√≠ typu int, System.Object nebo konkr√©tn√≠ definice v√Ωƒçtu.tAnonymn√≠ typ s elementem <union> nelze pou≈æ√≠t k vytvo≈ôen√≠ v√Ωƒçtu Flags, proto≈æe to nen√≠ platn√Ω typ v√Ωƒçtu.3P≈ôi deserializaci objektu {0} do≈°lo k chybƒõ. {1}!Chyba na ≈ô√°dku {0} a pozici {1}GP≈ôi kontrole poƒç√°teƒçn√≠ho elementu objektu {0} do≈°lo k chybƒõ. {1}1P≈ôi serializaci objektu {0} do≈°lo k chybƒõ. {1}typu {0}AP≈ôi z√°pisu koncov√©ho elementu objektu {0} do≈°lo k chybƒõ. {1}FP≈ôi z√°pisu poƒç√°teƒçn√≠ho elementu objektu {0} do≈°lo k chybƒõ. {1}•Maxim√°ln√≠ poƒçet polo≈æek, kter√© lze serializovat nebo deserializovat v grafu objekt≈Ø, je {0}. Zmƒõ≈àte graf objekt≈Ø nebo zvy≈°te kv√≥tu MaxItemsInObjectGraph. .Oƒçek√°v√° se element {1} z oboru n√°zv≈Ø {0}.0Pro vol√°n√≠ ReadObject je oƒçek√°v√°n stav {0}.Oƒçek√°v√° se ukonƒçen√≠ {0}.Oƒçek√°v√° se stav {0}.ÜGraf objekt≈Ø typu {0} s identifik√°torem {2} obsahuje odkaz na sebe. Objekt byl nahrazen nov√Ωm objektem typu {1} buƒè proto, ≈æe implementuje odkaz IObjectReference, nebo proto, ≈æe je nahrazen. Serializ√°tor nepodporuje p≈ôipojen√≠ vno≈ôen√©ho odkazu k nov√©mu objektu a nem≈Ø≈æe tento objekt deserializovat. Zva≈æte mo≈ænost zmƒõnit objekt, aby se odebral zano≈ôen√Ω odkaz na sebe sama.1Pevn√° hodnota u elementu {0} nen√≠ podporov√°na.,Formul√°≈ô u elementu {0} mus√≠ b√Ωt urƒçen.2Pozn√°mka pro obecn√Ω typ {0} nemƒõla atribut {1}.}Vno≈ôen√° √∫rove≈à u element≈Ø pozn√°mky {0} z oboru n√°zv≈Ø {1} pro obecn√Ω typ {2} mus√≠ b√Ωt ve zvy≈°uj√≠c√≠m se po≈ôad√≠.âElement pozn√°mky {0} z oboru n√°zv≈Ø {1} pro obecn√Ω typ {2} m√° neplatnou hodnotu {3} pro atribut {4}. Oƒçek√°van√Ω typ hodnoty je {5}.LPozn√°mka pro obecn√Ω typ {2} m√° neplatn√Ω element {0} z oboru n√°zv≈Ø {1}.ùP≈ôi zpƒõtn√©m vol√°n√≠ u≈æivatele do≈°lo k v√Ωjimce. Podle z√°sobn√≠ku v√Ωjimky a informac√≠ o vnit≈ôn√≠ v√Ωjimce urƒçete, kter√© zpƒõtn√© vol√°n√≠ selhalo.ÊN√°zev kontraktu dat {0} pro typ {1} m√° slo≈æenou z√°vorku {{, kter√° nen√≠ uzav≈ôena. Slo≈æen√© z√°vorky maj√≠ v n√°zvech kontrakt≈Ø dat zvl√°≈°tn√≠ v√Ωznam ‚Äì pou≈æ√≠vaj√≠ se k √∫pravƒõ n√°zv≈Ø kontrakt≈Ø dat pro obecn√© typy.˜V n√°zvu kontraktu dat pro typ {1} jsou slo≈æen√© z√°vorky obsahuj√≠c√≠ hodnotu {0}, kter√° nen√≠ platn√°. Slo≈æen√© z√°vorky maj√≠ v n√°zvech kontrakt≈Ø dat zvl√°≈°tn√≠ v√Ωznam ‚Äì pou≈æ√≠vaj√≠ se k √∫pravƒõ n√°zv≈Ø kontrakt≈Ø dat pro obecn√© typy. Podle poƒçtu obecn√Ωch parametr≈Ø, kter√© tento typ m√°, mus√≠ b√Ωt obsah slo≈æen√Ωch z√°vorek buƒè ƒç√≠slo mezi 0 a {2} pro vlo≈æen√≠ n√°zvu obecn√©ho parametru na dan√©m indexu, nebo symbol # pro vlo≈æen√≠ p≈ôehledu oboru n√°zv≈Ø obecn√Ωch parametr≈Ø.nN√°zev kontraktu DataContract {0} z oboru n√°zv≈Ø {1} se neshoduje s obecn√Ωm n√°zvem {2} z oboru n√°zv≈Ø {3}.∫Typ {0} nelze exportovat jako typ sch√©matu, proto≈æe je to otev≈ôen√Ω obecn√Ω typ. Obecn√Ω typ lze exportovat jen tehdy, jsou-li v≈°echny jeho obecn√© typy parametr≈Ø skuteƒçn√Ωmi typy.èTyp rozhran√≠ kolekce {0} se pou≈æ√≠v√° jako vlastnost pouze pro z√≠sk√°n√≠ (get) a neobsahuje metodu Add. Zva≈æte p≈ôid√°n√≠ metody setter do vlastnosti nebo pou≈æit√≠ kontraktu dat kolekce, kter√Ω neobsahuje metodu Add (nap≈ô√≠klad rozhran√≠ IList nebo ICollection<T>).=Jeho ko≈ôenov√° sekvence obsahuje v√≠ce ne≈æ jednu ƒç√°stici.BOdvozen√© typy ISerializable nemohou obsahovat ≈æ√°dn√© ƒç√°stice.>Neobsahuje ko≈ôenovou sekvenci se z√°stupn√Ωm elementem <any>./Neodkazuje na atribut {0} z oboru n√°zv≈Ø {1}. ?Typ ISerializable {0} v oboru n√°zv≈Ø {1} nelze importovat. {2}DHodnota vlastnosti maxOccurs u z√°stupn√©ho elementu mus√≠ b√Ωt {0}.DHodnota vlastnosti minOccurs u z√°stupn√©ho elementu mus√≠ b√Ωt {0}.4Obor n√°zv≈Ø u z√°stupn√©ho elementu mus√≠ b√Ωt {0}.JHodnota vlastnosti ProcessContents u z√°stupn√©ho elementu mus√≠ b√Ωt {0}.VTyp {0} nem≈Ø≈æe b√Ωt IXmlSerializable a m√≠t atribut CollectionDataContractAttribute.LTyp {0} nem≈Ø≈æe b√Ωt IXmlSerializable a m√≠t atribut DataContractAttribute.9Tuto metodu nelze volat z implementac√≠ IXmlSerializable.ãMetoda IXmlSerializable.WriteXml typu {0} nezav≈ôela v≈°echny otev≈ôen√© znaƒçky. Ovƒõ≈ôte, ≈æe implementace IXmlSerializable je spr√°vn√°.:Typ IXmlSerializable {0} mus√≠ m√≠t v√Ωchoz√≠ konstruktor.òMetoda IXmlSerializable.WriteXml typu {0} se pokusila zav≈ô√≠t p≈ô√≠li≈° mnoho znaƒçek. Zkontrolujte, jestli je implementace IXmlSerializable spr√°vn√°.®Nastaven√≠ IsReference typu {0} je {1}. Toto nastaven√≠ pro nad≈ôazenou t≈ô√≠du {2} je v≈°ak {3}. Odvozen√© typy mus√≠ m√≠t stejnou hodnotu nastaven√≠ IsReference jako z√°kladn√≠ typ. Zmƒõ≈àte nastaven√≠ typu {0} na {3} (nebo nastaven√≠ typu {2} na {1}) nebo nenastavujte explicitnƒõ IsReference.oVlastnost {1} v typu {0} nelze serializovat, proto≈æe serializace indexovan√Ωch vlastnost√≠ nen√≠ podporov√°na.dPozn√°mka {0} z oboru n√°zv≈Ø {1} m√° neplatn√Ω element {2} z oboru n√°zv≈Ø {3}. Oƒçek√°v√° se text.wAsynchronn√≠ objekt v√Ωsledku pou≈æit√Ω k ukonƒçen√≠ t√©to operace nebyl objektem vr√°cen√Ωm p≈ôi inicializaci operace.!Byl zji≈°tƒõn neplatn√Ω znak {0}.°Typ {0} v oboru n√°zv≈Ø {1} nelze pou≈æ√≠t jako z√°kladn√≠ typ typu kontraktu dat, proto≈æe nem√° kontrakt dat. Oznaƒçte typ {0} atributem DataContractAttribute.õTyp ISerializable s n√°zvem kontraktu dat {0} v oboru n√°zv≈Ø {1} nelze importovat. N√°zev kontraktu dat nelze pro typ ISerializable upravit a generovan√Ω n√°zev {2} se neshoduje s oƒçek√°van√Ωm n√°zvem {0}. Zkontrolujte, zda nebyl po≈æadovan√Ω n√°zev namapov√°n na jin√Ω typ nebo zda nejde o neplatn√Ω n√°zev CLR, kter√Ω nelze generovat, p≈ô√≠padnƒõ zda typ nevy≈æaduje vnƒõj≈°√≠ typ, kter√Ω nen√≠ k dispozici.ˇTyp ISerializable s n√°zvem kontraktu dat {0} v oboru n√°zv≈Ø {1} nelze importovat. N√°zev kontraktu dat nelze pro typy ISerializable upravit a generovan√Ω obor n√°zv≈Ø {3} se neshoduje s po≈æadovan√Ωm oborem n√°zv≈Ø CLR {2}. Zkontrolujte, zda nebyl po≈æadovan√Ω obor n√°zv≈Ø namapov√°n na jin√Ω obor n√°zv≈Ø kontraktu dat, a namapujte ho explicitnƒõ pomoc√≠ kolekce obor≈Ø n√°zv≈Ø. ÜU typu {0} nem≈Ø≈æe b√Ωt n√°zev ItemName u atributu CollectionDataContractAttribute nastaven na hodnotu null nebo pr√°zdn√Ω ≈ôetƒõzec.ÖU typu {0} nem≈Ø≈æe b√Ωt n√°zev KeyName u atributu CollectionDataContractAttribute nastaven na hodnotu null nebo pr√°zdn√Ω ≈ôetƒõzec.¶Typ kontraktu dat kolekce {0} ud√°v√° pro vlastnost KeyName hodnotu {1}. To nen√≠ povoleno, proto≈æe typ nen√≠ IDictionary. Odeberte nastaven√≠ pro vlastnost KeyName.ÇU typu {0} nem≈Ø≈æe b√Ωt n√°zev Name u atributu CollectionDataContractAttribute nastaven na hodnotu null nebo pr√°zdn√Ω ≈ôetƒõzec.tU typu {0} nem≈Ø≈æe b√Ωt obor n√°zv≈Ø Namespace u atributu CollectionDataContractAttribute nastaven na hodnotu null.ÄU typu {0} nem≈Ø≈æe b√Ωt ValueName u atributu CollectionDataContractAttribute nastaven na hodnotu null nebo pr√°zdn√Ω ≈ôetƒõzec.™Typ kontraktu dat kolekce {0} ud√°v√° pro vlastnost ValueName hodnotu {1}. To nen√≠ povoleno, proto≈æe typ nen√≠ IDictionary. Odeberte nastaven√≠ pro vlastnost ValueName.VTyp {0} s atributem CollectionDataContractAttribute je neplatn√Ω typ kolekce, proto≈æe*Typ {0} je neplatn√Ω typ kolekce, proto≈æexU typu {0} nem≈Ø≈æe b√Ωt n√°zev Name u atributu DataContractAttribute nastaven na hodnotu null nebo pr√°zdn√Ω ≈ôetƒõzec.jU typu {0} nem≈Ø≈æe b√Ωt obor n√°zv≈Ø Namespace u atributu DataContractAttribute nastaven na hodnotu null.ÉU ƒçlenu {0} v typu {1} nem≈Ø≈æe b√Ωt n√°zev Name u atributu DataMemberAttribute nastaven na hodnotu null nebo pr√°zdn√Ω ≈ôetƒõzec.…Koment√°≈ô pro element {0} v typu {1} z oboru n√°zv≈Ø {2} ud√°v√° hodnotu EmitDefaultValue jako true. Kv≈Øli tomu mus√≠ b√Ωt mo≈æn√© element nastavit na null nebo typ elementu mus√≠ b√Ωt typem hodnoty.]Typ {0} v oboru n√°zv≈Ø {1} nen√≠ platn√Ω z√°kladn√≠ typ pro v√Ωƒçet {2} v oboru n√°zv≈Ø {3}.U {0} v typu {1} nem≈Ø≈æe b√Ωt hodnota Value u atributu EnumMemberAttribute nastavena na hodnotu null nebo pr√°zdn√Ω ≈ôetƒõzec.œNeplatnou hodnotu v√Ωƒçtu {0} nelze deserializovat na typ {1}. Pokud m√° typ atribut DataContractAttribute, ujistƒõte se, ≈æe nutn√© hodnoty v√Ωƒçtu jsou p≈ô√≠tomny a oznaƒçeny atributem EnumMemberAttribute.ŸHodnota v√Ωƒçtu {0} nen√≠ pro typ {1} platn√° a nelze ji deserializovat. Pokud m√° typ atribut DataContractAttribute, ujistƒõte se, ≈æe nutn√© hodnoty v√Ωƒçtu jsou p≈ô√≠tomny a oznaƒçeny atributem EnumMemberAttribute.ÑU typu {0} nem≈Ø≈æe b√Ωt n√°zev MethodName u atributu XmlSchemaProviderAttribute nastaven na hodnotu null nebo pr√°zdn√Ω ≈ôetƒõzec. ^U oboru n√°zv≈Ø CLR {0} nem≈Ø≈æe b√Ωt obor n√°zv≈Ø ContractNamespace nastaven na hodnotu null.íTyp {0} v oboru n√°zv≈Ø {1} nelze importovat jako z√°kladn√≠ typ, proto≈æe odvozen√Ω typ je ISerializable, ale z√°kladn√≠ typ nen√≠ ISerializable.ªJde o neplatn√Ω typ slovn√≠ku. Element {0} mus√≠ odkazovat na komplexn√≠ typ obsahuj√≠c√≠ sekvenci se dvƒõma po≈æadovan√Ωmi elementy. Upravte sch√©ma nebo odeberte pozn√°mku IsDictionary.ñJde o neplatn√Ω typ slovn√≠ku, proto≈æe element {0} odkazuje na typ z jin√©ho oboru n√°zv≈Ø {1}. Upravte sch√©ma nebo odeberte pozn√°mku IsDictionary.2Pr√°zdn√Ω ≈ôetƒõzec nen√≠ platn√Ω m√≠stn√≠ n√°zev.ªƒålen {0}.{1} nelze serializovat, proto≈æe to nen√≠ pole ani vlastnost, tak≈æe ho nen√≠ mo≈æn√© oznaƒçit atributem DataMemberAttribute. Odeberte atribut DataMemberAttribute ze ƒçlenu {1}.{0} nen√≠ platn√Ω typ uzlu.rMetoda {0}.{1}() vrac√≠ hodnotu jinou ne≈æ null. Vr√°cen√° hodnota mus√≠ b√Ωt null, proto≈æe vlastnost IsAny=true.,Typ {0} nen√≠ platn√Ω serializovateln√Ω typ.WMetoda {0}.{1}() vrac√≠ typ {2}. Vr√°cen√Ω typ mus√≠ b√Ωt kompatibiln√≠ s {3} nebo {4}.=Neplatn√° velikost {0}. Mus√≠ b√Ωt nez√°porn√© cel√© ƒç√≠slo.EDo≈°lo k vnit≈ôn√≠ chybƒõ. ExtensionDataReader je v neplatn√©m stavu.eN√°zev kontraktu dat XML pro typ {0} nem≈Ø≈æe b√Ωt nastaven na hodnotu null nebo pr√°zdn√Ω ≈ôetƒõzec.GData XML nalezen√° p≈ôi deserializaci dat roz≈°√≠≈ôen√≠ nejsou platn√°.KNeplatn√Ω identifik√°tor {0}. Nesm√≠ b√Ωt pr√°zdn√Ω nebo m√≠t hodnotu null.BNeplatn√Ω odkaz {0}. Nesm√≠ b√Ωt pr√°zdn√Ω nebo m√≠t hodnotu null.éHodnotu null nelze na nejvy≈°≈°√≠ √∫rovni pro ko≈ôenov√Ω typ IXmlSerializable {0} serializovat, proto≈æe jej√≠ nastaven√≠ IsAny m√° hodnotu true. Tento typ mus√≠ zapsat v≈°echen obsah vƒçetnƒõ ko≈ôenov√©ho prvku. Ovƒõ≈ôte, ≈æe implementace IXmlSerializable je spr√°vn√°.öObjekt typu {0} nelze v horn√≠ √∫rovni serializovat pro ko≈ôenov√Ω typ IXmlSerializable {1}, proto≈æe m√° pro nastaven√≠ IsAny hodnotu true. Tento typ mus√≠ zapsat ve≈°ker√Ω sv≈Øj obsah vƒçetnƒõ ko≈ôenov√©ho elementu. Zkontrolujte, jestli je implementace IXmlSerializable spr√°vn√°.Typ {0} nem≈Ø≈æe ud√°vat atribut XmlRootAttribute, proto≈æe m√° pro nastaven√≠ IsAny hodnotu true. Tento typ mus√≠ zapsat ve≈°ker√Ω sv≈Øj obsah vƒçetnƒõ ko≈ôenov√©ho elementu. Zkontrolujte, jestli je implementace IXmlSerializable spr√°vn√°.9Hodnota {0} nen√≠ platn√° pro pozn√°mku IsDictionary. {1}rDo≈°lo k vnit≈ôn√≠ chybƒõ. {0} nelze p≈ôi≈ôadit z {1} ‚Äì p≈ôi generov√°n√≠ k√≥du pro serializaci do≈°lo k chybƒõ.Ï{0}.{1} m√° nastaven√≠ IsRequired {2}. {0} m√° nastaven√≠ IsReference {2}, proto≈æe je buƒè nastaveno explicitnƒõ, nebo je odvozeno od z√°kladn√≠ t≈ô√≠dy. Nastavte IsRequired v {0}.{1} na hodnotu false, nebo zaka≈æte IsReference v {0}. 8{0} nen√≠ platn√° hodnota pro pozn√°mku IsValueType. {1};Atribut s m√≠stn√≠m n√°zvem {0} nelze zapisovat v√≠cekr√°t.yNutnou podm√≠nkou vol√°n√≠ metody WriteStartAttribute je minim√°lnƒõ jedno p≈ôedchoz√≠ vol√°n√≠ metody WriteStartElement.óVe form√°tu JSON po z√°pisu ≈ôetƒõzcov√© hodnoty nelze zapsat hodnotu CLR, kter√° je mapov√°na na ƒç√≠slo, pole, objekt, hodnotu true, false nebo null.ÉByl proveden pokus o z√°pis textu po z√°pisu typu atributu {0}. Text lze zapsat pouze za atributy typu number, boolean nebo string.áBƒõhem serializace objektu typu {0} do form√°tu JSON se zjistil cyklick√Ω odkaz. Cyklick√© odkazy nejsou ve form√°tu JSON podporov√°ny.¨Hodnoty DateTime, kter√© jsou p≈ôi p≈ôevodu do form√°tu UTC vƒõt≈°√≠ ne≈æ DateTime.MaxValue nebo men≈°√≠ ne≈æ DateTime.MinValue, nen√≠ mo≈æn√© serializovat do t≈ô√≠dy JSON.wTyp kontraktu dat {0} nen√≠ mo≈æn√© deserializovat, proto≈æe datov√Ω ƒçlen {1} byl nalezen ve vstupu v√≠ce ne≈æ jednou.òTyp kontraktu dat {0} nelze serializovat pomoc√≠ metody DataContractJsonSerializer, proto≈æe datov√Ω ƒçlen {1} je v hierarchii typ≈Ø uveden duplicitnƒõ.yK√≥dov√°n√≠ nen√≠ podporov√°no ve t≈ô√≠d√°ch JSON. Podporov√°na jsou pouze k√≥dov√°n√≠ UTF-8, Unicode a BigEndianUnicode.&Byl zji≈°tƒõn neoƒçek√°van√Ω znak {0}.>Nen√≠ otev≈ôen ≈æ√°dn√Ω odpov√≠daj√≠c√≠ poƒç√°teƒçn√≠ element.JOƒçek√°van√© k√≥dov√°n√≠ {0} se neshoduje se skuteƒçn√Ωm k√≥dov√°n√≠m {1}.Neplatn√© k√≥dov√°n√≠ bajt≈Ø´Byl proveden pokus o z√°pis atributu {0}={1} po z√°pisu atributu s m√≠stn√≠m n√°zvem {2}. Atribut s m√≠stn√≠m n√°zvem {2} je platn√Ω pouze v kombinaci s atributem {0}={3}.gObsah DateTime {0} nezaƒç√≠n√° elementem {1} a nekonƒç√≠ elementem {2}, jak to vy≈æaduje standard JSON.CZnaky s ≈°estn√°ctkov√Ωmi hodnotami 0xFFFE a 0xFFFF nejsou platn√©.¶Byl zji≈°tƒõn neoƒçek√°van√Ω m√≠stn√≠ n√°zev elementu {0} pro polo≈æku v kolekci. Pro elementy v kolekci lze jako jedin√Ω platn√Ω m√≠stn√≠ n√°zev pou≈æ√≠t n√°zev {1}.JPodle standardu JSON nen√≠ pr√°zdn√Ω ≈ôetƒõzec platn√Ωm m√≠stn√≠m n√°zvem.6Souƒçasnƒõ se z√°pisem atributu nelze zapisovat obsah.zByl zji≈°tƒõn neplatn√Ω ko≈ôenov√Ω element s n√°zvem {0}. Jedin√Ωm povolen√Ωm n√°zvem ko≈ôenov√©ho elementu je n√°zev {1}.xMetodu WriteStartElement lze volat pouze na zaƒç√°tku dokumentu nebo bezprost≈ôednƒõ po vol√°n√≠ metody WriteEndElement.KDokud je stav WriteState nastaven na hodnotu {1}, metodu {0} nelze zavolat.KDokud je stav WriteState nastaven na hodnotu {1}, metodu {0} nelze zavolat.ETato implementace t≈ô√≠dy XmlDictionaryWriter nepodporuje metodu {0}.ZTato implementace XmlDictionaryWriter nepodporuje z√°pis nƒõkolika ko≈ôenov√Ωch element≈Ø.KAtribut {0}={1} mus√≠te zapsat po z√°pisu atributu s m√≠stn√≠m n√°zvem {2}.ãPokud chcete zapisovat hodnoty atribut≈Ø pomoc√≠ t√©to implementace XmlDictionaryWriter, mus√≠te zapisovat hodnoty typu string nebo char[].QByl zji≈°tƒõn neoƒçek√°van√Ω obor n√°zv≈Ø {0}. Obor n√°zv≈Ø mus√≠ b√Ωt pr√°zdn√Ω.#Vno≈ôen√° pole nejsou podporov√°na.*Nebyl nalezen ≈æ√°dn√Ω otev≈ôen√Ω atribut.ÉMetodu WriteStartElement nelze volat bezprost≈ôednƒõ po metodƒõ WriteStartElement bez z√°pisu atributu type=array nebo type=object.OZadan√Ω posun p≈ôekraƒçuje velikost vyrovn√°vac√≠ pamƒõti (poƒçet bajt≈Ø: {0}).^Typ kontraktu dat {0} nelze deserializovat, proto≈æe nebyl nalezen povinn√Ω datov√Ω ƒçlen {1}.KNeoƒçek√°van√Ω znak {0}. Metoda {1} m≈Ø≈æe zapisovat pouze pr√°zdn√© znaky.9Metodu {0} nelze volat v pr≈Øbƒõhu zapisov√°n√≠ atributu.hByla nalezena neoƒçek√°van√° p≈ôedpona {0}. P≈ôedpona mus√≠ m√≠t hodnotu null nebo mus√≠ b√Ωt pr√°zdn√°.eTyp kontraktu dat {0} nelze deserializovat, proto≈æe nebyly nalezeny po≈æadovan√© datov√© ƒçleny {1}.ßByl proveden pokus o z√°pis atributu s m√≠stn√≠m n√°zvem {0} po z√°pisu atributu {1}={2}. Atribut s m√≠stn√≠m n√°zvem {0} lze zapsat pouze po z√°pisu atributu {1}={3}.^Zadan√° velikost p≈ôekraƒçuje zb√Ωvaj√≠c√≠ prostor vyrovn√°vac√≠ pamƒõti (poƒçet bajt≈Ø: {0}).?Metoda DataContractJsonSerializer nepodporuje objekty typu {0}.ŒByl zji≈°tƒõn atribut s neoƒçek√°van√Ωm m√≠stn√≠m n√°zvem {0}. Pro atributy jsou povoleny pouze m√≠stn√≠ n√°zvy type a __type. N√°zev type m√° vliv na zp≈Øsob z√°pisu dat a platn√Ωmi hodnotami jsou object, string, number, null, boolean a array. Pou≈æit√≠m n√°zvu __type m≈Ø≈æete sdƒõlit zapisovac√≠mu modulu pomocn√© informace o typu.¥Atribut type mus√≠ m√≠t jako hodnotu nastaven nƒõkter√Ω z n√°sleduj√≠c√≠ch ≈ôetƒõzc≈Ø: string, number, array, object, null nebo boolean. Byla zji≈°tƒõna neoƒçek√°van√° hodnota {0}.Neoƒçek√°van√Ω konec souboru¬Typ {0} nelze serializovat do t≈ô√≠dy JSON, proto≈æe jeho nastaven√≠ IsReference je {1}. Form√°t JSON nepodporuje odkazy, proto≈æe neexistuje standardizovan√Ω form√°t pro uv√°dƒõn√≠ odkaz≈Ø. Pokud chcete umo≈ænit serializaci, deaktivujte nastaven√≠ IsReference u dan√©ho typu nebo odpov√≠daj√≠c√≠ nad≈ôazen√© t≈ô√≠dy typu.äPokud chcete zapisovat pole JSON, pou≈æijte metodu zapisovac√≠ho modulu XML a zapi≈°te typ atributu array a za n√≠m uveƒète metody typu WriteStartElement (s m√≠stn√≠m n√°zvem item), WriteAttributeString nebo WriteEndElement zaji≈°≈•uj√≠c√≠ z√°pis polo≈æek pole JSON.Zapisovac√≠ modul je uzav≈ôen.4Deklaraci XML lze zapsat jen na zaƒç√°tku dokumentu.BInstrukce zpracov√°n√≠ (kromƒõ deklarace XML) nejsou podporov√°ny.áSlovn√≠k typu {0} nelze deserializovat jako jednoduch√Ω slovn√≠k, proto≈æe jeho typ kl√≠ƒçe {1} nem√° ve≈ôejnou statickou metodu Parse.aN√°zev metody urƒçen√Ω atributem KnownTypeAttribute u typu {0} nem≈Ø≈æe b√Ωt pr√°zdn√Ω ≈ôetƒõzec.NMetoda urƒçen√° atributem KnownTypeAttribute u typu {0} vr√°tila hodnotu null.?Atribut KnownTypeAttribute u typu {0} neobsahuje ≈æ√°dn√° data.yTyp {0}: Kdy≈æ atribut KnownTypeAttribute urƒçuje metodu, mus√≠ j√≠t o jedin√Ω atribut KnownTypeAttribute u dan√©ho typu.âAtribut KnownTypeAttribute u typu {0} urƒçuje metodu s n√°zvem {1} , kter√° bude poskytovat zn√°m√© typy. Vr√°cen√Ω typ t√©to metody nen√≠ platn√Ω, proto≈æe jej nelze p≈ôi≈ôadit k typu IEnumerable<typ>. Ujistƒõte se, ≈æe metoda existuje a ≈æe m√° platnou signaturu.‹Atribut KnownTypeAttribute u typu {1} urƒçuje metodu s n√°zvem {0} k poskytnut√≠ zn√°m√Ωch typ≈Ø. U tohoto typu nebyla nalezena statick√° metoda {0}(). Zkontrolujte, zda metoda existuje a zda je oznaƒçena jako statick√°.TMetoda urƒçen√° atributem KnownTypeAttribute u typu {0} nezve≈ôej≈àuje platn√© typy.XP≈ôi ƒçten√≠ dat XML pro pole typu {1} byla p≈ôekroƒçena maxim√°ln√≠ d√©lka pole ({0}). úTyp {0} nem√° statickou metodu {1}, kter√° by p≈ôeb√≠rala parametr typu System.Xml.Schema.XmlSchemaSet, jak je urƒçeno atributem XmlSchemaProviderAttribute.8Komplexn√≠ typ se sm√≠≈°en√Ωm obsahem nen√≠ podporov√°n.¢Byla nalezena neplatn√° data XML. Stejn√° hodnota identifik√°toru {0} je definov√°na v√≠cekr√°t. V√≠ce objekt≈Ø se stejn√Ωm identifik√°torem nelze deserializovat.âKo≈ôenov√° sekvence mus√≠ obsahovat pouze m√≠stn√≠ prvky. Skupinov√Ω odkaz, v√Ωbƒõr, libovoln√© a vno≈ôen√© sekvence nejsou podporov√°ny.LVlastnost XmlQualifiedName.Name nesm√≠ m√≠t hodnotu null ani b√Ωt pr√°zdn√°.tDo≈°lo k vnit≈ôn√≠ chybƒõ. Nen√≠ mo≈æn√Ω p≈ôevod na {0} ‚Äì do≈°lo k chybƒõ p≈ôi generov√°n√≠ k√≥du pro serializaci.0≈Ω√°dn√° metoda get pro vlastnost {1} v typu {0}0≈Ω√°dn√° metoda set pro vlastnost {1} v typu {0}.Typ {0} mus√≠ m√≠t konstruktor bez parametr≈Ø.ñ{0}.{1} nen√≠ oznaƒçen atributem OptionalFieldAttribute a ud√°v√°, ≈æe mus√≠ b√Ωt serializovan√Ω. ƒålen {0} je odvozen od t≈ô√≠dy oznaƒçen√© atributem DataContractAttribute a m√° nastaven√≠ IsReference {2}. Nen√≠ mo≈æn√© m√≠t po≈æadovan√© datov√© ƒçleny ve t≈ô√≠d√°ch IsReference. Dekorujte {0}.{1} atributem OptionalFieldAttribute nebo v p≈ô√≠slu≈°n√© nad≈ôazen√© t≈ô√≠dƒõ zaka≈æte nastaven√≠ IsReference.ØJeden ze zn√°m√Ωch typ≈Ø poskytnut√Ωch serializ√°toru p≈ôes argument {0} nebyl platn√Ω, proto≈æe mƒõl hodnotu null. V≈°echny zn√°m√© typy musej√≠ m√≠t hodnoty jin√© ne≈æ null.‘Kolekce typu pouze pro z√≠sk√°n√≠ {0} vr√°tila hodnotu null. Vstupn√≠ stream obsahuje polo≈æky kolekce, kter√© nelze p≈ôidat, pokud m√° instance hodnotu null. Zva≈æte mo≈ænost inicializovat kolekci v metodƒõ get.8V ≈ôetƒõzci JSON byl zji≈°tƒõn neplatn√Ω ≈ô√≠dic√≠ k√≥d.ï{0} nen√≠ platn√Ω primitivn√≠ typ form√°tu JSON. K t√©to chybƒõ m≈Ø≈æe doj√≠t i v p≈ô√≠padƒõ, ≈æe se za daty form√°tu JSON nal√©zaj√≠ i dal≈°√≠ data."Pole JSON bylo ukonƒçeno ƒç√°rkou.2V objektu JSON se zjistil neplatn√Ω n√°zev ƒçlenu.ODo≈°lo k vnit≈ôn√≠ chybƒõ. ≈òetƒõzec JSON nen√≠ spr√°vnƒõ uzav≈ôen do uvozovek.ZVe form√°tu JSON byl zji≈°tƒõn neoƒçek√°van√Ω znak. Oƒçek√°van√Ω znak: {1}, obdr≈æeno: {0}éByl zji≈°tƒõn neukonƒçen√Ω ≈ôetƒõzec JSON. ≈òetƒõzce JSON mus√≠ zaƒç√≠nat znakem jednoduch√© nebo dvojit√© uvozovky a konƒçit stejn√Ωm znakem.DDo≈°lo k vnit≈ôn√≠ chybƒõ. Typ slovn√≠ku JSON {0} nen√≠ podporov√°n.îDo≈°lo k vnit≈ôn√≠ chybƒõ. P≈ôeteƒçen√≠ tabulky objekt≈Ø. M≈Ø≈æe to b√Ωt zp≈Øsobeno serializac√≠ nebo deserializac√≠ velmi velk√Ωch graf≈Ø objekt≈Ø.OZadan√Ω posun p≈ôekraƒçuje velikost vyrovn√°vac√≠ pamƒõti (poƒçet bajt≈Ø: {0}).OVlastnost Order v atributu DataMemberAttribute nem≈Ø≈æe b√Ωt z√°porn√© ƒç√≠slo.AV√Ωstupn√≠ parametry musej√≠ b√Ωt typu ByRef. P≈ôijat√Ω typ: {0}.êNeplatn√Ω poƒçet parametr≈Ø pro vol√°n√≠ metody {0}. Oƒçek√°v√°n byl tento poƒçet parametr≈Ø: {1}. Poƒçet poskytnut√Ωch parametr≈Ø je v≈°ak {2}.àTyp kontraktu dat kolekce {0} nem≈Ø≈æe b√Ωt rekonstruov√°n v ƒç√°steƒçn√©m vztahu d≈Øvƒõryhodnosti, proto≈æe metoda {1} nen√≠ ve≈ôejn√°.òTyp kontraktu dat kolekce {0} nem≈Ø≈æe b√Ωt rekonstruov√°n v ƒç√°steƒçn√©m vztahu d≈Øvƒõryhodnosti, proto≈æe nem√° ve≈ôejn√Ω konstruktor bez parametr≈Ø.xTyp kontraktu dat kolekce {0} nen√≠ serializovateln√Ω v ƒç√°steƒçn√©m vztahu d≈Øvƒõryhodnosti, proto≈æe nen√≠ ve≈ôejn√Ω.~Typ kontraktu dat {0} nem≈Ø≈æe b√Ωt serializov√°n v ƒç√°steƒçn√©m vztahu d≈Øvƒõryhodnosti, proto≈æe ƒçlen {1} nen√≠ ve≈ôejn√Ω.Typ kontraktu dat {0} nem≈Ø≈æe b√Ωt rekonstruov√°n v ƒç√°steƒçn√©m vztahu d≈Øvƒõryhodnosti, proto≈æe ƒçlen {1} nen√≠ ve≈ôejn√Ω.¶Typ kontraktu dat {0} nelze serializovat, proto≈æe ƒçlen {1} nen√≠ ve≈ôejn√Ω. P≈ôeveden√≠ tohoto ƒçlenu na ve≈ôejn√Ω tuto chybu oprav√≠. Alternativnƒõ m≈Ø≈æete tento ƒçlen p≈ôev√©st na intern√≠ a pou≈æ√≠t v sestaven√≠ atribut InternalsVisibleToAttribute, aby byla povolena serializace intern√≠ch ƒçlen≈Ø. Dal≈°√≠ podrobnosti naleznete v dokumentaci. Nezapome≈àte v≈°ak, ≈æe tento postup m√° urƒçit√Ω vliv na zabezpeƒçen√≠.®Typ kontraktu dat {0} nelze deserializovat, proto≈æe ƒçlen {1} nen√≠ ve≈ôejn√Ω. P≈ôeveden√≠ tohoto ƒçlenu na ve≈ôejn√Ω tuto chybu oprav√≠. Alternativnƒõ m≈Ø≈æete tento ƒçlen p≈ôev√©st na intern√≠ a pou≈æ√≠t v sestaven√≠ atribut InternalsVisibleToAttribute, aby byla povolena serializace intern√≠ch ƒçlen≈Ø. Dal≈°√≠ podrobnosti naleznete v dokumentaci. Nezapome≈àte v≈°ak, ≈æe tento postup m√° urƒçit√Ω vliv na zabezpeƒçen√≠.èTyp kontraktu dat {0} nem≈Ø≈æe b√Ωt rekonstruov√°n v ƒç√°steƒçn√©m vztahu d≈Øvƒõryhodnosti, proto≈æe metoda OnDeserialized {1} nen√≠ ve≈ôejn√°.êTyp kontraktu dat {0} nem≈Ø≈æe b√Ωt rekonstruov√°n v ƒç√°steƒçn√©m vztahu d≈Øvƒõryhodnosti, proto≈æe metoda OnDeserializing {1} nen√≠ ve≈ôejn√°.åTyp kontraktu dat {0} nem≈Ø≈æe b√Ωt serializov√°n v ƒç√°steƒçn√©m vztahu d≈Øvƒõryhodnosti, proto≈æe metoda OnSerialized {1} nen√≠ ve≈ôejn√°.çTyp kontraktu dat {0} nem≈Ø≈æe b√Ωt serializov√°n v ƒç√°steƒçn√©m vztahu d≈Øvƒõryhodnosti, proto≈æe metoda OnSerializing {1} nen√≠ ve≈ôejn√°.êTyp kontraktu dat {0} nem≈Ø≈æe b√Ωt serializov√°n v ƒç√°steƒçn√©m vztahu d≈Øvƒõryhodnosti, proto≈æe vlastnost {1} nem√° ve≈ôejnou metodu getter.ëTyp kontraktu dat {0} nem≈Ø≈æe b√Ωt rekonstruov√°n v ƒç√°steƒçn√©m vztahu d≈Øvƒõryhodnosti, proto≈æe vlastnost {1} nem√° ve≈ôejnou metodu setter.pTyp kontraktu dat {0} nen√≠ serializovateln√Ω v ƒç√°steƒçn√©m vztahu d≈Øvƒõryhodnosti, proto≈æe nen√≠ ve≈ôejn√Ω.sTyp IXmlSerializable {0} nen√≠ serializovateln√Ω v ƒç√°steƒçn√©m vztahu d≈Øvƒõryhodnosti, proto≈æe nen√≠ ve≈ôejn√Ω.ìTyp IXmlSerializable {0} nem≈Ø≈æe b√Ωt rekonstruov√°n v ƒç√°steƒçn√©m vztahu d≈Øvƒõryhodnosti, proto≈æe nem√° ve≈ôejn√Ω konstruktor bez parametr≈Ø.ÇTyp {0} nem≈Ø≈æe b√Ωt rekonstruov√°n v ƒç√°steƒçn√©m vztahu d≈Øvƒõryhodnosti, proto≈æe nem√° ve≈ôejn√Ω konstruktor bez parametr≈Ø.RNelze kop√≠rovat kv√≥ty XmlDictionaryReaderQuotas. C√≠l je urƒçen jen pro ƒçten√≠.&Kv√≥ta {0} je urƒçena jen pro ƒçten√≠.%Kv√≥ta mus√≠ b√Ωt pozitivn√≠ hodnota.©Typ {0} je datov√Ω kontrakt rekurzivn√≠ kolekce, kter√Ω nen√≠ podporov√°n. Zva≈æte √∫pravu definice kolekce {0} tak, aby do≈°lo k odebr√°n√≠ odkaz≈Ø na samotnou kolekci.$P≈ôedefinov√°n√≠ nen√≠ podporov√°no.ÚPro typ {0} z oboru n√°zv≈Ø {1} nelze generovat typ kolekce. P≈ôejmenujte typ na {2} v oboru n√°zv≈Ø {3} nebo odka≈æte na st√°vaj√≠c√≠ typ kolekce implementuj√≠c√≠ {4} nebo {5}, kter√Ω lze pou≈æ√≠t jako z√°kladn√≠ typ pro generovan√© kolekce.ÄTypy ReferencedCollectionTypes urƒçen√© mo≈ænostmi ImportOptions musej√≠ obsahovat platn√© typy. Nemohou obsahovat hodnotu null. Odkazovan√Ω typ {0} s n√°zvem kontraktu dat {1} v oboru n√°zv≈Ø {2} nelze pou≈æ√≠t, proto≈æe se neshoduje s importovan√Ωm kontraktem dat DataContract. Tento typ je nutn√© vy≈ôadit z odkazovan√Ωch typ≈Ø.	(shodn√©)(neshodn√©)vTypy ReferencedTypes urƒçen√© mo≈ænostmi ImportOptions musej√≠ obsahovat platn√© typy. Nemohou obsahovat hodnotu null.çƒålen {0} v typu {1} nelze serializovat. Tato v√Ωjimka je obvykle zp≈Øsobena pokusem o pou≈æit√≠ hodnoty null, kdy≈æ hodnota null nen√≠ povolena. ƒålen {0} je nastaven na v√Ωchoz√≠ hodnotu (obvykle hodnota null nebo nula). Nastaven√≠ EmitDefault ƒçlenu m√° hodnotu false, co≈æ znamen√°, ≈æe by ƒçlen nemƒõl b√Ωt serializov√°n. Ov≈°em nastaven√≠ ƒçlenu IsRequired m√° hodnotu true, co≈æ znamen√°, ≈æe serializov√°n b√Ωt mus√≠. Tento konflikt nelze vy≈ôe≈°it. Nastavte {0} na hodnotu jinou ne≈æ v√Ωchoz√≠. M≈Ø≈æete tak√© zmƒõnit vlastnost EmitDefaultValue u atributu DataMemberAttribute na hodnotu true, nebo zmƒõnit vlastnost IsRequired na hodnotu false.ôMetoda TryResolveType objektu typu {0} (odvozen√©ho od t≈ô√≠dy DataContractResolver) vr√°tila p≈ôi pokusu o z√≠sk√°n√≠ n√°zvu objektu typu {1} hodnotu false, co≈æ znamen√°, ≈æe z√≠sk√°n√≠ n√°zvu selhalo. Zmƒõ≈àte implementaci metody TryResolveType tak, aby se vracela hodnota true.ßMetoda TryResolveType objektu typu {0} (odvozen√©ho od t≈ô√≠dy DataContractResolver) vr√°tila p≈ôi pokusu o z√≠sk√°n√≠ n√°zvu objektu typu {1} jednu z vlastnost√≠ typeName nebo typeNamespace s hodnotou null. Pokud chcete prov√©st serializaci deklarovan√©ho typu, zmƒõ≈àte implementaci metody TryResolveType tak, aby nevracela hodnoty typu null, nebo aby tyto hodnoty vracela pro vlastnosti typeName a typeNamespace shodnƒõ.)Ko≈ôenov√° ƒç√°stice mus√≠ b√Ωt sekvence.@Hodnota vlastnosti maxOccurs u ko≈ôenov√© sekvence mus√≠ b√Ωt 1.@Hodnota vlastnosti minOccurs u ko≈ôenov√© sekvence mus√≠ b√Ωt 1.≠Typ {0} nelze serializovat, chyb√≠ jeho serializaƒçn√≠ k√≥d. P≈ôeƒçtƒõte si v dokumentaci k sadƒõ SDK informace o tom, jak tento typ p≈ôidat jako ko≈ôenov√Ω typ serializace.IKomplexn√≠ typy s jednoduch√Ωm roz≈°√≠≈ôen√≠m obsahu nejsou podporov√°ny.;Omezen√≠ jednoduch√Ωch typ≈Ø mus√≠ urƒçovat z√°kladn√≠ typ.7Jednoduch√© typy s obsahem <union> nejsou podporov√°ny.`Zadan√° velikost p≈ôekraƒçuje zb√Ωvaj√≠c√≠ m√≠sto ve vyrovn√°vac√≠ pamƒõti (poƒçet bajt≈Ø: {0}).[Je zad√°n neplatn√Ω typ. Typ s n√°zvem {0} nebyl nalezen ve sch√©matu s oborem n√°zv≈Ø {1}.5Substituƒçn√≠ skupina u prvku {0} nen√≠ podporov√°na.)V√≠cerozmƒõrn√° pole nejsou podporov√°na.±Pou≈æit√≠ znak≈Ø nahrazen√≠ s vlastnostmi kolekce pouze pro z√≠sk√°n√≠ nen√≠ podporov√°no. Odstra≈àte znak nahrazen√≠ spojen√Ω s vlastnost√≠ {0} nebo p≈ôidejte zdroj k {1}.{2}. íPou≈æit√≠ znak≈Ø nahrazen√≠ s vlastnostmi kolekce pouze pro z√≠sk√°n√≠ nen√≠ podporov√°no. Odstra≈àte znak nahrazen√≠ spojen√Ω s vlastnost√≠ {0}. <Typ {0} m√° v√≠ce atribut≈Ø CollectionDataContractAttribute.2Typ {0} m√° v√≠ce atribut≈Ø DataContractAttribute.6ƒålen {0}.{1} m√° v√≠ce atribut≈Ø DataMemberAttribute.6ƒålen {0}.{1} m√° v√≠ce atribut≈Ø EnumMemberAttribute.<ƒålen {0}.{1} m√° v√≠ce atribut≈Ø IgnoreDataMemberAttribute.ıGlob√°ln√≠ element nalezen√Ω ve sch√©matu se stejn√Ωm n√°zvem odkazuje na jin√Ω typ {0} v oboru n√°zv≈Ø {1}. Typy kontraktu dat musej√≠ m√≠t stejn√Ω n√°zev ko≈ôenov√©ho elementu. Zva≈æte mo≈ænost odebrat glob√°ln√≠ element nebo zmƒõnit jeho typ.1Import koment√°≈ôe p≈ôi importu XSD se nezda≈ôil.Zahajuje se import sch√©matu.Import sch√©matu se dokonƒçil.'P≈ôi importu sch√©matu do≈°lo k chybƒõ.1Typ {0} v oboru n√°zv≈Ø {1} nelze importovat. {2}ê{0} Zmƒõ≈àte sch√©ma, aby typy mohly namapovat typy kontrakt≈Ø dat, nebo pou≈æijte typ ImportXmlType, p≈ô√≠padnƒõ pou≈æijte jin√Ω serializ√°tor.†Typ {0} z oboru n√°zv≈Ø {1} nebyl ze sch√©matu importov√°n. Importujte nejd≈ô√≠ve tento typ vol√°n√≠m jedn√© z metod importu v t≈ô√≠dƒõ XsdDataContractImporter.ÜTyp sch√©matu {2} v oboru n√°zv≈Ø {3} je nutn√© importovat jako typ XML. Typ {0} nelze namapovat na tento typ sch√©matu, proto≈æe neimplementuje {1}. Zva≈æte mo≈ænost nep≈ôid√°vat typ {0} na seznam odkazovan√Ωch typ≈Ø nebo jej zmƒõnit tak, aby implementoval {1}.9Typ {0} nem√° zcela vytvo≈ôenou instanci obecn√© t≈ô√≠dy.ËTyp {0} nelze serializovat. Oznaƒçte jej atributem DataContractAttribute a oznaƒçte v≈°echny jeho ƒçleny, kter√© chcete serializovat, atributem DataMemberAttribute. Pokud je typem kolekce, zva≈æte jej√≠ oznaƒçen√≠ atributem CollectionDataContractAttribute. Informace o dal≈°√≠ch podporovan√Ωch typech z√≠sk√°te v dokumentaci rozhran√≠ Microsoft .NET Framework.7Atributy musej√≠ b√Ωt voliteln√© a z oboru n√°zv≈Ø {0}.UDo≈°lo k vnit≈ôn√≠ chybƒõ. Byl nalezen neoƒçek√°van√Ω typ kontraktu {0} pro typ {1}. J{0} {1} z oboru n√°zv≈Ø {2} nen√≠ oƒçek√°v√°n. Oƒçek√°v√°n je element {3}.Neoƒçek√°van√Ω konec souboruNerozpoznan√Ω typ konstanty {0}Nezn√°m√Ω kontrakt dat: {0}Typ {0} nen√≠ platn√Ω typ XML.<Hodnota tohoto argumentu mus√≠ b√Ωt v rozsahu od {0} do {1}./Hodnota tohoto argumentu nesm√≠ b√Ωt z√°porn√°.)ValueType {0} nem≈Ø≈æe b√Ωt hodnota null.sKontrakt dat {0} z oboru n√°zv≈Ø {1} je hodnotov√Ω typ a nem≈Ø≈æe m√≠t z√°kladn√≠ kontrakt {2} z oboru n√°zv≈Ø {3}.+ValueType {0} nem≈Ø≈æe m√≠t identifik√°tor.rHodnotov√Ω typ {0} nem≈Ø≈æe m√≠t nastaven√≠ IsReference {1}. Zmƒõ≈àte nastaven√≠ na {2} nebo ho √∫plnƒõ odeberte. 2ValueType {0} nem≈Ø≈æe m√≠t odkaz na jin√Ω objekt.Pole je p≈ô√≠li≈° mal√©.HPole je p≈ô√≠li≈° mal√©. D√©lka dostupn√Ωch dat mus√≠ b√Ωt alespo≈à {0}.APole je p≈ô√≠li≈° mal√©. Mus√≠ m√≠t mo≈ænost dr≈æet alespo≈à {0}.*Ji≈æ prob√≠h√° jin√° asynchronn√≠ operace.*Nerozpoznan√° znaƒçka pro po≈ôad√≠ bajt≈Ø.GOƒçek√°v√°na data k√≥dovan√° syst√©mem Base64. Byl nalezen element {0}.:Prvky CData nejsou platn√© v horn√≠ √∫rovni dokumentu XML.-']]>' nen√≠ platn√© v obsahu textov√©ho uzlu.*Hodnotu {0} nelze reprezentovat typem {1}.OPro v≈°echny dokumenty s jin√Ωm k√≥dov√°n√≠m ne≈æ UTF8 je nutn√° deklarace XML.&V deklaraci XML nebyla nalezena verze.8P≈ôed deklarac√≠ XML se nesm√≠ nach√°zet ≈æ√°dn√© znaky.^Pro v≈°echny dokumenty s jin√Ωm k√≥dov√°n√≠m ne≈æ UTF8 je nutn√° deklarace XML s k√≥dov√°n√≠m.IIdentifik√°tory XmlDictionaryString musej√≠ b√Ωt v rozsahu od {0} do {1}.XIdentifik√°tor XmlDictionaryString {0} nen√≠ definov√°n v relaci XmlBinaryReaderSession.MID t≈ô√≠dy XmlDictionaryString {0} nen√≠ definov√°no ve statick√©m slovn√≠ku.MByl nalezen duplicitn√≠ atribut. Atributy {0} a {1} jsou z oboru n√°zv≈Ø {2}."Atributy maj√≠ pouze uzly Element.JPr√°zdn√Ω obor n√°zv≈Ø vy≈æaduje p≈ôedponu, kter√° je null nebo pr√°zdn√°.FK√≥dov√°n√≠ v deklaraci {0} se neshoduje s k√≥dov√°n√≠m dokumentu {1}.#K√≥dov√°n√≠ XML nen√≠ podporov√°no.RByl oƒçek√°v√°n koncov√Ω element {0} z oboru n√°zv≈Ø {1}. Byl nalezen element {2}.>Nen√≠ otev≈ôen ≈æ√°dn√Ω odpov√≠daj√≠c√≠ poƒç√°teƒçn√≠ element.JOƒçek√°van√© k√≥dov√°n√≠ {0} se neshoduje se skuteƒçn√Ωm k√≥dov√°n√≠m {1}.ÆElement {0} z oboru n√°zv≈Ø {1} nem≈Ø≈æe m√≠t pod≈ô√≠zen√Ω obsah, kter√Ω se m√° deserializovat jako objekt. K deserializaci tohoto vzoru XML pros√≠m pou≈æijte uzel XmlNode[].	cdata {0}koment√°≈ô {0}element {0} z oboru n√°zv≈Ø {1}(koncov√Ω element {0} z oboru n√°zv≈Ø {1}konec souboruuzel {0}text {0}KByl oƒçek√°v√°n nepr√°zdn√Ω poƒç√°teƒçn√≠ element. Byl nalezen element {0}.cByl oƒçek√°v√°n nepr√°zdn√Ω poƒç√°teƒçn√≠ element {0} z oboru n√°zv≈Ø {1}. Byl nalezen element {2}.OByl oƒçek√°v√°n nepr√°zdn√Ω poƒç√°teƒçn√≠ element {0}. Byl nalezen element {1}.ID je u≈æ definovan√©.*Text nelze zapsat mimo ko≈ôenov√Ω element.CD√©lka sekvence Base64 ({0}) nen√≠ platn√°. Mus√≠ b√Ωt n√°sobkem 4.9Znaky {0} u odsazen√≠ {1} nejsou platn√° sekvence Base64.CD√©lka sekvence BinHex ({0}) nen√≠ platn√°. Mus√≠ b√Ωt n√°sobkem 2.9Znaky {0} u odsazen√≠ {1} nejsou platn√° sekvence BinHex.Neplatn√© k√≥dov√°n√≠ bajt≈ØOdkaz znak≈Ø nen√≠ platn√Ω.?Koment√°≈ôe XML nesm√≠ obsahovat znak -- nebo konƒçit znakem -.(Hodnotu {0} nelze parsovat jako typ {1}.$Hodnotu nelze parsovat jako typ {0}.4Deklaraci XML lze zapsat jen na zaƒç√°tku dokumentu.&Nelze volat {0}, kdy≈æ je Hloubka {1}.!K√≥dov√°n√≠ XML mus√≠ b√Ωt UTF-8.CZnaky s ≈°estn√°ctkov√Ωmi hodnotami 0xFFFE a 0xFFFF nejsou platn√©.-Vstupn√≠ zdroj nen√≠ spr√°vnƒõ form√°tovan√Ω.gVysok√Ω znak nahrazen√≠ 0x{0} nen√≠ platn√Ω. Vysok√© znaky nahrazen√≠ jsou v rozsahu 0xD800 a≈æ 0xDBFF.Identifik√°tor mus√≠ b√Ωt >= 0.gN√≠zk√Ω znak nahrazen√≠ 0x{0} nen√≠ platn√Ω. N√≠zk√© znaky nahrazen√≠ jsou v rozsahu 0xDC00 a≈æ 0xDFFF.!ƒåtec√≠ funkci nelze roz≈°√≠≈ôit.8P≈ôedponu nelze definovat, kdy≈æ je stav WriteState {0}.<Byl oƒçek√°v√°n urƒçen√Ω n√°zev XML. Byl nalezen n√°zev {0}.*Data na ko≈ôenov√© √∫rovni nejsou platn√°.6Hodnota standalone v deklaraci mus√≠ b√Ωt yes nebo no.KStream vr√°cen√Ω poskytovatelem IStreamProvider nem≈Ø≈æe b√Ωt hodnota null.ZZnak nahrazen√≠ 0x{0} nen√≠ platn√Ω. Znaky nahrazen√≠ jsou v rozsahu 0x10000 a≈æ 0x10FFFF."{0} obsahuje neplatn√© bajty UTF8.5Identifik√°tor UniqueId nem≈Ø≈æe m√≠t nulovou d√©lku.Verze XML mus√≠ b√Ωt 1.0.KDokud je stav WriteState nastaven na hodnotu {1}, metodu {0} nelze zavolat.+Bajt 0x{0} nen√≠ na tomto m√≠stƒõ platn√Ω. M{0} nen√≠ platn√° hodnota xml:space. Platn√© hodnoty jsou default a preserve.+Urƒçen√Ω kl√≠ƒç ji≈æ ve slovn√≠ku existuje.≈ò√°dek {0}, pozice {1}!Chybnƒõ vytvo≈ôen√° deklarace XMLÁP≈ôi ƒçten√≠ dat XML byla p≈ôekroƒçena kv√≥ta maxim√°ln√≠ d√©lky pole ({0}). Tuto kv√≥tu lze zv√Ω≈°it zmƒõnou vlastnosti MaxArrayLength u objektu XmlDictionaryReaderQuotas, kter√Ω se pou≈æ√≠v√° p≈ôi vytv√°≈ôen√≠ ƒçtec√≠ funkce XML.˝P≈ôi ƒçten√≠ dat XML byla p≈ôekroƒçena kv√≥ta maxim√°ln√≠ho poƒçtu bajt≈Ø na operaci Read ({0}). Tuto kv√≥tu mohou aktivovat dlouh√© poƒç√°teƒçn√≠ znaƒçky elementu (obsahuj√≠c√≠ n√°zev elementu, n√°zvy atribut≈Ø a hodnoty atribut≈Ø). Zv√Ω≈°it ji lze zmƒõnou vlastnosti MaxBytesPerRead u objektu XmlDictionaryReaderQuotas, kter√Ω je pou≈æ√≠v√°n p≈ôi vytv√°≈ôen√≠ ƒçtec√≠ funkce XML.õByla p≈ôekroƒçena maxim√°ln√≠ hloubka ƒçten√≠ ({0}), proto≈æe ƒçten√° data XML maj√≠ v√≠ce √∫rovn√≠ vno≈ôen√≠, ne≈æ je povoleno kv√≥tou. Tuto kv√≥tu lze zv√Ω≈°it zmƒõnou vlastnosti MaxDepth u objektu XmlDictionaryReaderQuotas, kter√Ω se pou≈æ√≠v√° p≈ôi vytv√°≈ôen√≠ ƒçteƒçky dat XML.˛P≈ôi ƒçten√≠ dat XML byla p≈ôekroƒçena kv√≥ta maxim√°ln√≠ho poƒçtu znak≈Ø tabulky n√°zv≈Ø ({0}). Tabulka n√°zv≈Ø je datov√° struktura pou≈æ√≠van√° k ulo≈æen√≠ ≈ôetƒõzc≈Ø nalezen√Ωch p≈ôi zpracov√°n√≠ dokument≈Ø XML ‚Äì tuto kv√≥tu mohou aktivovat dlouh√© dokumenty XML s neopakuj√≠c√≠mi se n√°zvy element≈Ø, n√°zvy atribut≈Ø a hodnotami atribut≈Ø. Tuto kv√≥tu lze zv√Ω≈°it zmƒõnou vlastnosti MaxNameTableCharCount u objektu XmlDictionaryReaderQuotas, kter√Ω je pou≈æ√≠v√°n p≈ôi vytv√°≈ôen√≠ ƒçtec√≠ funkce XML.˚P≈ôi ƒçten√≠ dat XML byla p≈ôekroƒçena kv√≥ta maxim√°ln√≠ d√©lky obsahu ≈ôetƒõzce ({0}). Tuto kv√≥tu lze zv√Ω≈°it zmƒõnou vlastnosti MaxStringContentLength u objektu XmlDictionaryReaderQuotas, kter√Ω se pou≈æ√≠v√° p≈ôi vytv√°≈ôen√≠ ƒçtec√≠ funkce XML.3Tato implementace XmlWriter nepodporuje metodu {0}.QN√°hradn√≠ p√°r je neplatn√Ω. Chyb√≠ znak z n√≠zk√©ho rozsahu n√°hradn√≠ho p√°ru.)Existuje nƒõkolik ko≈ôenov√Ωch element≈Ø.#Nen√≠ definovan√Ω obor n√°zv≈Ø {0}.#Vno≈ôen√° pole nejsou podporov√°na."Dokument nem√° ko≈ôenov√Ω element.â{0} je typ XML a nen√≠ mo≈æn√© ho serializovat, pokud je p≈ôi≈ôazen√Ω k typu rozhran√≠ bez implementace rozhran√≠ IXmlSerializable ({1}).=V jednom dokumentu je povolen pouze jeden ko≈ôenov√Ω element.HV atributu nebo obsahu m≈Ø≈æe b√Ωt zaps√°na pouze jedna zadan√° hodnota.&S touto metodou lze zapsat jen mezery.HP≈ôedpona {0} je v√°z√°na na obor n√°zv≈Ø {1} a nelze ji zmƒõnit na {2}.MPokyny pro zpracov√°n√≠ (jin√© ne≈æ deklarace XML) a DTD nejsou podporov√°ny.fP≈ôedpony zaƒç√≠naj√≠c√≠ ≈ôetƒõzcem xml (bez ohledu na velikost p√≠smen) jsou vyhrazeny pro jazyk XML. Mezi atributy mus√≠ b√Ωt mezera.1Obor n√°zv≈Ø {1} lze v√°zat jen na p≈ôedponu {0}.1P≈ôedponu {0} lze v√°zat jen na obor n√°zv≈Ø {1}.?Byl oƒçek√°v√°n poƒç√°teƒçn√≠ element. Nalezen byl element {0}.WByl oƒçek√°v√°n poƒç√°teƒçn√≠ element {0} z oboru n√°zv≈Ø {1}. Byl nalezen element {2}.CByl oƒçek√°v√°n poƒç√°teƒçn√≠ element {0}. Byl nalezen element {1}.APoƒç√°teƒçn√≠ element {0} se neshoduje s koncov√Ωm elementem {1}.5Byl oƒçek√°v√°n token {0}, ale byl nalezen token {1}. P≈ôedpona {0} nen√≠ definov√°na.FNeexistuje odpov√≠daj√≠c√≠ poƒç√°teƒçn√≠ znaƒçka pro koncov√Ω element.KNeoƒçek√°van√Ω konec souboru. N√°sleduj√≠c√≠ elementy nejsou uzav≈ôeny: {0}Funkce XmlWriter je zav≈ôena.zStav WriteState {0} nen√≠ platn√Ω. Volaj√≠c√≠ mus√≠ zapsat poƒç√°teƒçn√≠ element p≈ôed serializac√≠ v re≈æimu contentOnly.      +
  Œ Ôæ   ë   lSystem.Resources.ResourceReader, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089#System.Resources.RuntimeResourceSet          PADPADPúZ·Åòê>∞¢ö€≠’û§®≤ R◊Øt·˘¸ÏkàS˛vYá	Á±Ëyπÿøı AœÛ'ìña(AK:-dà¿6ŸŸé@„V…»`Ä1g    í  ^  k  «  /  b   ì  ó  »  ˛  0  ·       ≤   5     d  Ö   7   M  2A c t i o n I t e m C a l l b a c k I n v o k e d     &A c t i o n I t e m S c h e d u l e d S   A p p D o m a i n U n l o a d ¶   (B u f f e r P o o l A l l o c a t i o n 
  *B u f f e r P o o l C h a n g e Q u o t a (  *E t w U n h a n d l e d E x c e p t i o n l   H a n d l e d E x c e p t i o n ü  *H a n d l e d E x c e p t i o n E r r o r €  .H a n d l e d E x c e p t i o n V e r b o s e   .H a n d l e d E x c e p t i o n W a r n i n g S  4S h i p A s s e r t E x c e p t i o n M e s s a g e è  (T h r o w i n g E t w E x c e p t i o n D  6T h r o w i n g E t w E x c e p t i o n V e r b o s e Å  "T h r o w i n g E x c e p t i o n æ  0T h r o w i n g E x c e p t i o n V e r b o s e ˚  2T r a c e C o d e E v e n t L o g C r i t i c a l 8  ,T r a c e C o d e E v e n t L o g E r r o r O  *T r a c e C o d e E v e n t L o g I n f o f  0T r a c e C o d e E v e n t L o g V e r b o s e }  0T r a c e C o d e E v e n t L o g W a r n i n g î  $U n h a n d l e d E x c e p t i o n ´  QVyvolalo se zpƒõtn√© vol√°n√≠ pl√°novaƒçe vl√°ken vstupnƒõ-v√Ωstupn√≠ch operac√≠.QVyvolalo se zpƒõtn√© vol√°n√≠ pl√°novaƒçe vl√°ken vstupnƒõ-v√Ωstupn√≠ch operac√≠.bProb√≠h√° uvolnƒõn√≠ dom√©ny aplikace. AppDomain.FriendlyName {0}, ProcessName {1}, ProcessId {2}.Fond p≈ôidƒõluje {0} bajt≈Ø.BVelikost fondu vyrovn√°vac√≠ch pamƒõt√≠: {0}, zmƒõna kv√≥ty o: {1}1Neo≈°et≈ôen√° v√Ωjimka. Podrobnosti v√Ωjimky: {0}:Prob√≠h√° zpracov√°n√≠ v√Ωjimky. Podrobnosti v√Ωjimky: {0}:Prob√≠h√° zpracov√°n√≠ v√Ωjimky. Podrobnosti v√Ωjimky: {0}:Prob√≠h√° zpracov√°n√≠ v√Ωjimky. Podrobnosti v√Ωjimky: {0}:Prob√≠h√° zpracov√°n√≠ v√Ωjimky. Podrobnosti v√Ωjimky: {0}≤Do≈°lo k neoƒçek√°van√© chybƒõ. Aplikace by se nemƒõly pokou≈°et tuto chybu zpracovat. Pro diagnostick√© √∫ƒçely je k t√©to chybƒõ p≈ôidru≈æen√° tato zpr√°va v angliƒçtinƒõ: {0}.;Vyvolala se v√Ωjimka. Zdroj: {0}. Podrobnosti v√Ωjimky: {1};Vyvolala se v√Ωjimka. Zdroj: {0}. Podrobnosti v√Ωjimky: {1};Vyvolala se v√Ωjimka. Zdroj: {0}. Podrobnosti v√Ωjimky: {1};Vyvolala se v√Ωjimka. Zdroj: {0}. Podrobnosti v√Ωjimky: {1}Zaps√°no do EventLog.Zaps√°no do EventLog.Zaps√°no do EventLog.Zaps√°no do EventLog.Zaps√°no do EventLog.1Neo≈°et≈ôen√° v√Ωjimka. Podrobnosti v√Ωjimky: {0} 1‡ Œ Ôæ   ë   lSystem.Resources.ResourceReader, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089#System.Resources.RuntimeResourceSet   t      PADPADPMñÄ'5Ä
—CÄüî‘Ä√„ÓÄœa+Å∫>DÅÔ¥DÅ°~FÅÊ∆ÏÅ€7Ç'3GÇlO[ÇóvÇ¯†ÌÇÏEÉ‘ó(ÉÑBx<ÑG.vÑ¥ÛâÖˆá√ÖØˇÜ5Z¡Ü¯ÓÜÍíˆÜ{O˚ÜI!áx1¥á'Ldà˜z6âÂÑ∫âI≤Ïâ}Ïbä=}åädÎÍäµßã^ã˝íã^õãVt™ãfåƒ÷|åãtâå$÷òåEO∂å©ªçF‰OçÏEÑç'ˇàçŸ.éPBdéSBdé{)Çéw\ºé6›èŸuè√Üwè´Uê·S&ê¯¡}ê∆ åêº∏¶êNIpëzú∂ë–˝»ëèÆ*íı„;íŒéÆíÁC≤í13Ãí‡Wì·Wì‚WìÊWìÁWìM2ìMÍMìBÆpì˝zì©ØHîäŸKîæNîT∏™îp◊îº£lï‡óπï{:ñd+EñhÖJó@Eƒó13’ó¨7òÒ4òvåÀò?Áò≥÷ô9"ôSÆôtxÆô+8∞ôô—–ô/ÖŸô∏WÏôÁáxöPΩÑö÷◊lõtõ íÀõTÜsú≥[MùåπRùYigùë∆Âù&‹*û⁄ xû>…¢ûôÊ§û
3^ü¶ırüãT:†•*|†ÛZ¶†/˛†èp°ì^°w¢}Ÿ¢SBn¢H÷¢ª?É£Ë-ø£—£—£—£—£ ª‰£{GÒ£|ä
§¬à1§˙÷c§dù§%v•Ã©•‰8Z•Ñ¸ø• _¶b$•¶C\»¶_–¶Zx ßBF®+G®iC¶®Z2ß®Vx∞®’iÚ®Ñ©√¬©ëÇ$©xl"™§)7™ÖÌP™F4n™Âãû™@\Ë™ÇÒ™˛Z˙™ü%´ %´"Y´|Aª´ö„ ´CM¯´çÎ¨2¨*oÚ¨®À˝¨º°M≠0}ä≠5∆Ê≠NI9Æ/—Øê—7Ø˚Œ≠Øcdt∞Ëp≠∞y<˝∞¢h±6¿ê±¡«Â±mƒ'≤iﬁ4≤QB6≤·n≤‹Òà≤È
⁄≤Jº‹≤“S≥Ù=≥ql≥N˙≥J¥6\)¥“ÈZ¥Çxf¥iôXµ[∂ƒ∂º∂®M∑Ã¿≤∑nWM∏&úö∏'≤£∏Ü◊∑∏˜«kπ$K∫1¶;∫‹K∫ÉY∫»må∫˚◊∫óƒOªœMyªU©‰ªX6	ºBûàºüúΩ{VΩ`Æ!Ω—^RΩYN˝Ωò%æ¡—Pæƒ&¨æHC”æêÂæ£~ø‹c…ø±Ê˚ø)"-¿ÚIg¿Î6s¿ûﬂá¿7Ò¡’U¡hb¡á∑â¡K©·¡â¯1¬ÀÆÜ¬(¸”¬ˇ¶w√?–{√Ñ∫Å√?Ö¨√√‚ùƒ˛ÀÆƒF2≈W∆=≈√]K≈ `≈˚ˆâ∆Œ>°∆ñ“ø«l)‡«Ì:»Sfh»ï	Ï»€ˆ(…⁄_  KtB ∆É™ R%ÀNπWÃ_Ü√ÃË™˝Ã
(Õ“≥ÚÕ‹(ŒÁÒ+œM∏qœÄyõœ»ÈœÙœ;–{á®–‘;—œ=‰—‰7Ä“RöE”Ä5´”È¸À”ƒEo‘“æ∫‘µŒ‘%5”‘’õ’ì¬i÷ı˝√÷∞!◊`∫4◊A	5◊ò§B◊∑Bà◊ÊÁó◊£‘◊Ô .ÿkX°ÿÑH¥ÿIŸ«°WŸ
ô∏ŸÊ€u⁄ÆY*€Ó{4€°@€Î©î€{+π€YML‹RÌp‹çYû‹I÷™‹ÌÕø‹°∑˜‹n´›˙Æz›e–¶›˝∑›∞ﬁgà#ﬁk|Hﬁ7+«ﬁÈ∆›ﬁ!ﬂ’Éﬂ®Ó€ﬂ∏æG‡,∫‡OˆÕ‡≤èd·{j¯·ö9‚∏¸å‚L™‚·S™‚ôã»‚œ}„ÈÁF„¸=^„ÿG`„t+‰∞O‰^=≈‰ßUÂ–{ÀÂ–4˘Âµ´·ÊD-ıÊE{Á)zÜÁÀÉáÁ°∞ßÁf5æÁ›6zË∫rÉË\C+È‚ÀEÈ˘QaÈµcÈË·È›˛Èò∫Í4
ÍÚ$Í˘pèÍH‚©Í°ÙÍÜ*ÎãA˝Î™`πÏ*r·ÏZü˙ÏΩvÌ7Ù'Ì˙Á=Ì∂èOÌHõÌ%SıÌ‹^ÓjÖ7ÓÜ≤>ÓÓXÓä°ÃÓaﬁÓ{’0Ôr*:ÔmòVÔGrÔB·uÔÊ„uÔãÄ—7Ü˘7fa®>Ê¿ô-LÒ◊ÌbÒ!«ÀÒ˚qﬂÒ˝◊ÒÆ>)ÚAWAÚ@<YÚ¥J¥ÚÊ”Úf#èÛñãœÛGıÛ∫Õ6Ù"‹6Ù˙í[ÙÀªzÙüàÿÙséıPü°ıœ}˜ıF˛√ˆP“ù˜ÉA+¯<ﬂR¯àî¯”Èˇ¯:jz˘óº˘œÉ¿˘⁄T“˘ø_”˘±’q˙Jqâ˙Èg˚ÕÁo˚ŒÁo˚\Hû˚≈à…˚ b–˚úõ[¸¨óŸ¸.s˝"ÿ4˝îÜY˝Ù!^˝Sí7˛yÿC˛azD˛züQ˛cTª˛É5Fˇªèˇ2¥ °Îƒ Ÿe∆ “∞OÛ≥›iÛãï?Aı◊∏.Ï*sëuGb—é}È‡@WŸ}%·ΩùY‚!±„HLèÖˇgS»$åBO#FÚä9œm{Ï˚õ≥±Ã≠›E4Ò_¢©	≥ßÚ	ÌS
è∏V
öQ¢
Ü=ﬂ
µ¸$ms_±¥˙U-üKMçÖDﬂ¢M≥i·]∏WàjG”˝$MØ]]Âêªd•ªc©ª∂∂≈U≤‹ŸS]‘è´-íÂ/æzï2óéœéƒ	xæ$Ù iˆ_VΩá:çŸ±&mwh@æxÔâóùƒ£:9Îæ“Ò$÷3∆∂QÚˇ<¿S)U»ævÍ’ó@©∏C©∏+Q:ÔTOOäîÛGúú/” ¶G0ÖS’	r∆1ë_å•M»àÈ!ΩCËe®Äp∂Yç3®≠•lÖˆâ` ñã u© '≤ x€ )˛∆!º[""Á⁄>"}ûå"ü~ß";Í≤"îÁ"3èZ#∆I◊#êYó$»Í∞$Ω’÷$1D%k%23R%„ÃÄ%rRH&ﬁ‹è&¶[['Ÿëß':`í(1);æï)S£)ˆ±ˇ)£!ä*F¨ƒ*à≤+åhh+Ω¸t+$º+7'º+˘Â+˘«˘+JA7,o˘õ,“¡ ,u-ìML-1¿p-∞ßê-ˆ¡Í-≥).QÍ•.K7“.íî	/´»/ﬁB02≈É0†`Ø0◊ûb14q:2kÒQ2@‹2ƒ˙Y3>x3ò±ù3.i–33,¢4eu¿4⁄Ê«4øë5ÿB5˝Ωˇ5\*ê6æà7˚mä7ZÀW8By8E£©8ø˛f9V∆s9⁄Cè94◊9]1˚9ŸÜ7:´ÓJ:C∆!;»O2;ã®b;ìï†;T2D<Ω£J<çFl<˛qÊ<Ï3==⁄Q=oØÙ=8í>ú◊˘>6±D?Ê*@ß¯F@-2Œ@À~„@§:AÚ˝<AJÄ∫A«Â‹AÃﬂAW¸AëîBÂdB"{9CRåZCRß}CmóCµSÕC¢dUDƒÀÂDÄWE◊∫E±2ÊE’îÌE,ÛUFh\çGn¶GuÕG4Ÿ˙G‰?oHÎÎHh•bIÛÈ»IâØâJ‰eéJu◊.KÉÉHK£†cK?y!LvGL.¯ÖLK¨‹Læ-M1éâM#ŸÚMãì0NC8fNüÙÈN&xÛNÎLLOqµYOA ÖOaØóO´æ™O◊¡ P0PÓöëPˇ¶¯Pi7Q5qtQLˆºQ´ÍÛQ∏jR0oÏRÓÑ`SBπiS’h´Så†∏SôˇÒSòk"TxŒaT>eT(’≈TBP·T∫´ÈT.U_,U-éU’êU®®ªU$5}VÙÿÀVSáÎVT¨WW¨W$®]WWπ WÂz”Wf„eX[ÉûX„k§XŸ¶XPh,Yò0Y.V]YÛ◊YøsZ,_TZo·•ZÜyÆZxˇˆZ§J[¡…\[Ïµw[õ/Æ\`.>^´UΩ^ˇJ_†Qo_Nˇª_ó≠`9ÉÆ`%Mı`DÂa Pnb_ùübIøbàêÙb-T^c£6°cé∆?do®Gd4≈eÚÕOeÔ‘eY…‘e‚sﬂfØ2·fZµfG gÙßg
„Õgò¢#h=}uhú…†hú˝hb i]_)i=KkYK]kÀúgkÏ‚~kÇOÉkËÂ∫k`{l∞Sl6∫Zl8UdlÇƒxlXlºÖCm≈&Kmì\Nmû≈ímBn<sıné1bo·¬o⁄ñóo•oúQ…oŸ\ﬁo’¢ÍoÛè4pvuîp∫	cqÔR∂q˜-„q=hÈq7	Fr;∆«raIsd#s›	cs©Xås{Nós!œ´sßÎ—s†W)t¨é^t}ÑátYÜƒtÿwu≠XuØ⁄u‚´Úu@r"v`òHvÖπjvä-ìvÁüˇvb^9wT|{w∏Rëw;çüw˛ßw,€wV¨xæNexÿfxxÿ∫.y÷f0y.Ê:y"<Yy:ÓjyQˆyÙAëyi0«yÑ,Êy;rzÍZƒzÖüé{í(|RWí|;≈Î|∞˘Ì|√Áà})é}+≥ﬁ}ôxÔ}C~~A>Ã~L=#2çXzcfy±·ù^  0Y  9Â  ¬  V/  E  µ  ¢  ç‹  ∂`  ˝%  7d  *  q+  7  ÆÕ  -  Üv  8  QÕ  ñ!  à  Çü  ¥°  ∫ñ  8  ›  8µ  ŒT  |´  Oæ  0è  2ä  †  ’  ñû  «  .◊  ù  ó⁄  ΩÀ  ‘  0ú  âX  ∆‘  L+  r  âb  f  yÁ  m8  Â~    n1  ˛y  Wœ  UB  ºÑ  Æä  öæ  /j  œ»  ˆ4  ¨G  )\  §  Í  ‰∑  ÉR  ´p  qF  ÌÅ  ∞Å  sÅ  gÇ  *Ç  —ö    00  ¢‡  ∑1  +ç  —  „f  Ù◊  ˜  $O  ˘⁄  Ñ£  óà  Iá  lÿ  ´◊  F  ©Z  ^¿  ∏=  fc  ÿ©   Ö  í¡  %  |Ã  Ï1  )Ÿ  ÿR  jV  ¨"  Qõ  X  w∂  /-  Ä§  ,Z  ˛.  ª§  Í—  √I  t>  W:  '}  ±û  y#  ¨~  †o  ﬂ'  :8  *€  †ì  –/  M  7  ·Ä  òÄ  OÄ  *Å  RX  Óÿ  'Ê  Òç  ;  ΩF  Sº  ¡4  *|  Ñí  Œ  û'  ﬂ]  ¢&  Ë  b“  ÿC  …?  im  YY  î  #ò  ≠v  
  C  ,a  Ù^  w"  ÌŒ  Wµ  [_  …B  ‹  $…  55  ˘õ  Ûä  ?»  ˘<  ‰J  Â!  ◊  º  Ëq  ©,  ‘¨  »b    îœ  [W  ‘…  6ã  >Ü  mØ  Ln  √i  -  6√  ≥  ¯ß  éi  n}  ¸'  ›8  ﬁ∞  –π  ú  !  +∏  ƒx  j—  ¨m  îF  W  M  í  ªd  –  ìE  º÷  o    ÄN  ZD  X  .b  ¿  ·ú  sÑ  ë„  â©    ËH  /¶  ø∏  ‰Q  7  2"  ˙ﬁ  ã  ﬂñ  ~›  
ë  ä	  8B  {‘  n®  ÙO  Fw  #‚  :  /ì  ÚÀ  a'  ?  8÷  ?§  ±Ω    Íû  ‚§  ën  n  Ql  Òª  ∆  ö  -2  Ò°  ò_  xK  N  |  •>  ‘P  –¬  {  [  –⁄  b   æÉ  Âo  X‚  qÜ  éî  ‰n  2Ñ  0ó  ©s  π[  oñ  Ì‰  Ü  ıt  "‰  ù∞   æ  ˇ’  °  €  π  À  ∞Œ  Ñ[  nz  =  |  cä  Ω«  F  °$  ∏¢  rÀ  )·  ‡Ÿ  y4  ´3  _f  Å  Oß  HS  ∂  ˘º  ª–  …á  …£  Q  hà  ˚w     ™Y  ∂U  Æº  Áî  ëP  $  (  ©  -ÿ  Æ{  Z∏   ‡  !K  æD  LF  Uh  lj  ÛØ  ò    ˇ/  Ô÷  ∂  Z,  BÊ  é8  Åq  0x  ®ï  cG  9C  U‡  @u  Ÿc  0  çã  ÿ%  2  Úk  +  ê  Éø  Ù   ‰  Øﬂ  „=  ˆÇ  ÇI  2Ω  `Â  ¬å  .û  aZ  œ  \Q  Áe  uÊ  3®  µÿ  d∑  %k  œ6  3≤  ª  !R  8&  ca  é   µ  …z  êß  ˜`  Av  ÖS  §Ç  5~  ã  c  \  â  Ry  Í™  =À  û  (  K]  ï/  £  ˘Ê  ∞<  â†  ÜW  õ‚  ¯i  3  ΩÆ  Ük  Ï>  ıN  mé  ]ú  üH  Gà  ’  ï¥  „D  ä¶  –ù  -1  Ö  hŸ  {…  3r  œÂ  M   Q   ã∆  >∆  Ñt  ig  ^P  ñ6  •5  ¡  PÆ  j  n-  /ﬂ  J
  ◊ì  T”  e    U  ˙£  1—  ∂é  ‚  ö  Ii  ±  ®(  Ç?  ∂#  Œ  AJ  u~    √V  %I  âe   >  v≥  ˜G  B=  à  ä]  ¯¿  Ã7  QO  q<  øß  ßy  ]û  ∫  >#  „¶  h5  `C  ﬂX  Oö  …€  Á{  <∂  _!  »  ∫„  U  ©J  ”:  Úà  zô  L(  [√  º√  ƒ  Oê  Ü  ù¬  R≠  L  kï  td  ÖÂ  ó  \«  îZ  ◊  ø2  ·g  Y≈  v   '  t2  ]å  Èl  ¨M  √  Ã“  ¶g  ’K  *Á  js  »3  ÃN  =t  ˆs  ˆ≈  ﬁ·  y&  ïu  ¢r  O`  S  ˆj  Üh  Câ  \π  ÂÜ  ‰  Që  ƒ’  °@  {L  ñ≈  ôπ  Î;  ’≈  ≈  õŸ  »  •  L™  ’  y(    a9  ◊´  Õƒ  5´  ô  F‘  \  t»  M>  ‘v  ¢è    é–  ~ƒ  S;  ù±  9Ã  ‚‹  a)  ©∑  è=  >[  ¬X  ¥+  π-  G¡  éO  ‘  PR  ˛}    ™  1„  ¢Â     6  ¡Ç  ®Ü  ~B  ö:  O–  NÖ  åç    Uo  ÙÂ  M  ≤9  Ø  S  C  õ“  ˘é  R~  ¢)  Î9  ⁄  Îï  26  XH  ß  üQ  ∑  Vﬁ  y  ı›  £—   ©      ;/  ^ﬂ  z‰  JA  «  [É  ¥µ  :¢  m  ‘@  ≈.  µ®  y  §   ’M    
J   9  ≈Ã  ﬁ•  De  ¿w  ·¡  ÿ∆  Ãø  f\    Ø™  ”è  πh  íò  BU  2¨  è¨  ¬a  vE  	  )@  +  á  <†  ˘+  N  Å”  ()  Æe  È(  ”  KE  Ë±  S	  ﬂ  ©¿  #P  ÊW  °  ™S  6⁄  :L  ‹  ¸d  B°  êê  ß  {  QŒ  è|  è7  ò€  ”O  s  ~  ÎU  -ü  n±  ñ4  Õí    Ò  X·  G3  ~á  6ø  Î‡  –5  ⁄  q  ‡E  *ñ  Ó\  ^.  Ùu  |J  ?¬  ﬂ≠  ,  ∞õ  *  Qî  Ω}  Y£  .£  :∞  >¥  •T  /π  sU  FT  -.  º¥  ™f  àâ  ¿†  ØW  "  Ï[  d¬  "œ  J’  ‘∂  _[  [  ›_  Ω     ⁄?  ·  ç
  °•  ó  	A  Ú-  Ôa  Èæ  U€  ,ï  âÖ  ;z  Œ  ∂ë  4  ˚¥  -  €ê    p3  ≤Ê  QN  îl  q∫  Òm  ‘Z    Â	  :  G‰  ´‰  e  yó  „â  ‘L  0f  Jp  ã’  ⁄  ”ô  ’  á  c  U{  Û*  g%  	T  A  @ª  >^  ô·  ÿ‚  `  Ä  Í,  ¸í  ¡ﬁ  æ∫  ^7  ˜É  Áü  µj  ÂY  îö  øœ  É≠  ≠\  û  g  -D  ≠  77   i  TM  ô  õ  s  7“  #í  <∫  Æú  ∞≠  ÀA  ìD  ◊≥  m¢  Î&  #  ∑  mè  w  84  òª  ÷ó  [ª  a6  `„  yw  j  h  Â  |*  æ  ˇ¬  0é  °   qx  Æ≤  øk  ëù  u÷  ¸«  º”  üN  x@  d  L$   LA C h a n n e l S e r v i c e E n d p o i n t S B i n d i n g I s N u l l 0     NA C h a n n e l S e r v i c e E n d p o i n t S C o n t r a c t I s N u l l 0 >   XA C h a n n e l S e r v i c e E n d p o i n t S C o n t r a c t S N a m e I s N u l l 0    VA C h a n n e l S e r v i c e E n d p o i n t S C o n t r a c t S N a m e s p a c e 0 ⁄   A c c e s s D e n i e d )   A c t i v i t y B o u n d a r y B   A c t i v i t y C a l l b a c k T  A c t i v i t y C l o s e }  .A c t i v i t y C l o s e C l i e n t B a s e ç  >A c t i v i t y C o n s t r u c t C h a n n e l F a c t o r y ø  *A c t i v i t y E x e c u t e M e t h o d ı  A c t i v i t y O p e n   ,A c t i v i t y O p e n C l i e n t B a s e   *A c t i v i t y P r o c e s s A c t i o n J  4A d d r e s s i n g 1 0 T o S t r i n g F o r m a t _  <A d d r e s s i n g 2 0 0 4 0 8 T o S t r i n g F o r m a t s  4A d d r e s s i n g E x t e n s i o n I n B a d N S ã  bA d d r e s s i n g H e a d e r s C a n n o t B e A d d e d T o A d d r e s s i n g V e r s i o n T  8A d d r e s s i n g N o n e T o S t r i n g F o r m a t ®  :A d d r e s s i n g V e r s i o n N o t S u p p o r t e d æ  8A n o n y m o u s L o g o n s A r e N o t A l l o w e d Í  6A r g u m e n t C a n n o t B e E m p t y S t r i n g   *A r g u m e n t O u t O f M i n R a n g e D  $A r g u m e n t O u t O f R a n g e °  *A s s e r t i o n N o t S u p p o r t e d ∆  zA s y m m e t r i c S e c u r i t y B i n d i n g E l e m e n t N e e d s I n i t i a t o r T o k e n P a r a m e t e r s   zA s y m m e t r i c S e c u r i t y B i n d i n g E l e m e n t N e e d s R e c i p i e n t T o k e n P a r a m e t e r s Ë  8A s y n c E n d C a l l e d O n W r o n g C h a n n e l À  @A s y n c E n d C a l l e d W i t h A n I A s y n c R e s u l t 	  HA t L e a s t O n e F a u l t R e a s o n M u s t B e S p e c i f i e d a  VA t t e m p t e d T o G e t C o n t r a c t T y p e F o r B u t T h a t T y p e I s 1 ì  A u t h F a i l e d "  $B a d E n c r y p t i o n S t a t e =  $B a d I s s u e d T o k e n T y p e é  2B a d K e y E n c r y p t i o n A l g o r i t h m Ÿ  :B a s e A d d r e s s C a n n o t H a v e F r a g m e n t 	  4B a s e A d d r e s s C a n n o t H a v e Q u e r y P	  :B a s e A d d r e s s C a n n o t H a v e U s e r I n f o ö	  4B a s e A d d r e s s D u p l i c a t e S c h e m e ı	  2B a s e A d d r e s s M u s t B e A b s o l u t e ∞  VB a s i c H t t p M e s s a g e S e c u r i t y R e q u i r e s C e r t i f i c a t e ˙  `B e a r e r K e y I n c o m p a t i b l e W i t h W S F e d e r a t i o n H t t p B i n d i n g I  >B e a r e r K e y T y p e C a n n o t H a v e P r o o f K e y √  ^B e h a v i o r R e q u i r e s C o n t e x t P r o t o c o l S u p p o r t I n B i n d i n g î  6B i n a r y E n c o d e r S e s s i o n I n v a l i d U  :B i n a r y E n c o d e r S e s s i o n M a l f o r m e d ∑  8B i n a r y E n c o d e r S e s s i o n T o o L a r g e ¸  HB i n d i n g D o e s n T S u p p o r t A n y C h a n n e l T y p e s 1 …  \B i n d i n g D o e s n T S u p p o r t D u p l e x B u t C o n t r a c t R e q u i r e s 1 d  \B i n d i n g D o e s n T S u p p o r t O n e W a y B u t C o n t r a c t R e q u i r e s 1 ·  XB i n d i n g D o e s n T S u p p o r t R e q u e s t R e p l y B u t C o n t r a c t 1 ]  ^B i n d i n g D o e s n T S u p p o r t S e s s i o n B u t C o n t r a c t R e q u i r e s 1 Ë  \B i n d i n g D o e s n T S u p p o r t T w o W a y B u t C o n t r a c t R e q u i r e s 1 f  ^B i n d i n g D o e s n t S u p p o r t D a t a g r a m B u t C o n t r a c t R e q u i r e s   <B o d y W r i t e r C a n O n l y B e W r i t t e n O n c e è  >B o d y W r i t e r R e t u r n e d I s N o t B u f f e r e d Û  @B u f f e r Q u o t a E x c e e d e d R e a d i n g B a s e 6 4 S  "C a c h e Q u o t a R e a c h e d Ê  zC a n n o t A d d T w o I t e m s W i t h T h e S a m e K e y T o S y n c h r o n i z e d K e y e d C o l l e c t i o n 0 3  :C a n n o t D e t e c t A d d r e s s i n g V e r s i o n ç  @C a n n o t D e t e r m i n e S P N B a s e d O n A d d r e s s Î  C a n n o t F i n d C e r t   .C a n n o t F i n d C e r t F o r T a r g e t ü  TC a n n o t H a v e T w o O p e r a t i o n s W i t h T h e S a m e E l e m e n t 5 :  NC a n n o t H a v e T w o O p e r a t i o n s W i t h T h e S a m e N a m e 3 ã  nC a n n o t I m p o r t P r i v a c y N o t i c e E l e m e n t W i t h o u t V e r s i o n A t t r i b u t e ì  LC a n n o t I m p o r t P r o t e c t i o n L e v e l F o r C o n t r a c t ƒ  xC a n n o t I m p o r t S u p p o r t i n g T o k e n s F o r O p e r a t i o n W i t h o u t R e q u e s t A c t i o n ú  TC a n n o t I n h e r i t T w o O p e r a t i o n s W i t h T h e S a m e N a m e 3 p   C a n n o t R e a d T o k e n r!  >C a n n o t V a l i d a t e S e c u r i t y T o k e n T y p e ù"  JC a n t C r e a t e C h a n n e l W i t h M a n u a l A d d r e s s i n g Í"  4C a n t I n f e r R e f e r e n c e F o r T o k e n ñ#  hC e r t i f i c a t e U n s u p p o r t e d F o r H t t p T r a n s p o r t C r e d e n t i a l O n l y »#  HC h a n n e l D e m u x e r B i n d i n g E l e m e n t N o t F o u n d ^$  TC h a n n e l F a c t o r y C a n n o t B e U s e d T o C r e a t e C h a n n e l s ñ$  8C h a n n e l I n i t i a l i z a t i o n T i m e o u t ,%  BC h a n n e l P a r a m e t e r s C a n n o t B e M o d i f i e d å&  FC h a n n e l P a r a m e t e r s C a n n o t B e P r o p a g a t e d '  .C h a n n e l T y p e N o t S u p p o r t e d ú'  (C h i l d N o d e T y p e M i s s i n g „'  ,C l a i m T y p e C a n n o t B e E m p t y (  8C l i e n t C e r t i f i c a t e N o t P r o v i d e d N(  ^C l i e n t C e r t i f i c a t e N o t P r o v i d e d O n C l i e n t C r e d e n t i a l s ¡(  ^C l i e n t C r e d e n t i a l T y p e M u s t B e S p e c i f i e d F o r M i x e d M o d e  )  bC l i e n t C r e d e n t i a l s U n a b l e T o C r e a t e L o c a l T o k e n P r o v i d e r ‰)  >C l i e n t R u n t i m e R e q u i r e s F o r m a t t e r 0 R*  XC l i e n t W e b S o c k e t F a c t o r y _ C r e a t e W e b S o c k e t F a i l e d ‡*  RC l i e n t W e b S o c k e t F a c t o r y _ I n v a l i d S u b P r o t o c o l +  NC l i e n t W e b S o c k e t F a c t o r y _ I n v a l i d W e b S o c k e t ,  8C l o n e N o t I m p l e m e n t e d C o r r e c t l y ê,  C l o s e T i m e d O u t Í,  6C o m m u n i c a t i o n O b j e c t A b o r t e d 1 ‚-  VC o m m u n i c a t i o n O b j e c t B a s e C l a s s M e t h o d N o t C a l l e d 6.  FC o m m u n i c a t i o n O b j e c t C a n n o t B e M o d i f i e d ¶.  TC o m m u n i c a t i o n O b j e c t C a n n o t B e M o d i f i e d I n S t a t e Í.  >C o m m u n i c a t i o n O b j e c t C a n n o t B e U s e d )/  6C o m m u n i c a t i o n O b j e c t F a u l t e d 1 £/  BC o m m u n i c a t i o n O b j e c t I n I n v a l i d S t a t e ˆ/  JC o n f i g I n v a l i d B i n d i n g C o n f i g u r a t i o n N a m e ç0  RC o n f i g I n v a l i d T r a n s a c t i o n F l o w P r o t o c o l V a l u e √0  <C o n f i g u r a t i o n F i l e s N o t S u p p o r t e d I1  hC o n f i g u r a t i o n S c h e m a C o n t a i n s X 5 0 9 I s s u e r S e r i a l R e f e r e n c e v1  |C o n f i g u r a t i o n S c h e m a I n s u f f i e n t F o r S e c u r i t y B i n d i n g E l e m e n t I n s t a n c e x3  &C o n t e n t T y p e M i s m a t c h ˆ3  `C o n t e x t B i n d i n g E l e m e n t C a n n o t P r o v i d e C h a n n e l F a c t o r y j4  bC o n t e x t B i n d i n g E l e m e n t C a n n o t P r o v i d e C h a n n e l L i s t e n e r ﬁ4  TC o n t r a c t I s N o t S e l f C o n s i s t e n t I t H a s O n e O r M o r e 2 O5  ~C o n t r a c t I s N o t S e l f C o n s i s t e n t W h e n I s S e s s i o n O p e n N o t i f i c a t i o n E n a b l e d T6  (C o p y H t t p H e a d e r F a i l e d 7  <C o u l d N o t F i n d N a m e s p a c e F o r P r e f i x _7  FC o u l d n T C r e a t e C h a n n e l F o r C h a n n e l T y p e 2 ß7  8C o u l d n T C r e a t e C h a n n e l F o r T y p e 2  8  @C r e a t i o n T i m e U t c I s A f t e r E x p i r y T i m e ‡8  .C r e d e n t i a l D i s a l l o w s N t l m "9  <C u s t o m B i n d i n g R e q u i r e s T r a n s p o r t 9  D e f a u l t r:  \D e l e g a t i n g H a n d l e r A r r a y F r o m F u n c C o n t a i n s N u l l I t e m :  XD e l e g a t i n g H a n d l e r A r r a y H a s N o n N u l l I n n e r H a n d l e r Û:  2D e l i v e r y A s s u r a n c e R e q u i r e d D;  JD e l i v e r y A s s u r a n c e R e q u i r e d N o t h i n g F o u n d Ù;  HD e r i v e d K e y I n v a l i d G e n e r a t i o n S p e c i f i e d â<  @D e r i v e d K e y I n v a l i d O f f s e t S p e c i f i e d =  0D e r i v e d K e y N o t I n i t i a l i z e d ô=  RD e r i v e d K e y T o k e n G e n e r a t i o n A n d L e n g t h T o o H i g h ◊=  6D e r i v e d K e y T o k e n L a b e l T o o L o n g ì>  6D e r i v e d K e y T o k e n N o n c e T o o L o n g 
?  8D e r i v e d K e y T o k e n O f f s e t T o o H i g h á?  JD e r i v e d K e y T o k e n R e q u i r e s T o k e n R e f e r e n c e Ù?  BD i s p a t c h R u n t i m e R e q u i r e s F o r m a t t e r 0 '@  PD n s I d e n t i t y C h e c k F a i l e d F o r I n c o m i n g M e s s a g e ≤@  lD n s I d e n t i t y C h e c k F a i l e d F o r I n c o m i n g M e s s a g e L a c k O f D n s C l a i m 8B  PD n s I d e n t i t y C h e c k F a i l e d F o r O u t g o i n g M e s s a g e kC  lD n s I d e n t i t y C h e c k F a i l e d F o r O u t g o i n g M e s s a g e L a c k O f D n s C l a i m ÌD   D n s R e s o l v e F a i l e d F  6D o w n l e v e l N a m e C a n n o t M a p T o U p n FF  <D u p l e x C h a n n e l A b o r t e d D u r i n g O p e n ¬F  $D u p l i c a t e B e h a v i o r 1 G  DD u p l i c a t e C o n t r a c t Q N a m e N a m e O n E x p o r t ´G  0D u p l i c a t e M e s s a g e P r o p e r t y UH  <D u p l i c a t e P o l i c y D o c u m e n t S k i p p e d }H  8D u p l i c a t e P o l i c y I n W s d l S k i p p e d ˜H  <E f f e c t i v e G r e a t e r T h a n E x p i r a t i o n ÅI  E l e m e n t F o u n d «I  E l e m e n t R e q u i r e d 9J  (E m p t y B a s e 6 4 A t t r i b u t e õJ  (E m p t y X m l E l e m e n t E r r o r ¸J  *E n c o d e r B a d C o n t e n t T y p e  K  <E n c o d e r E n v e l o p e V e r s i o n M i s m a t c h >K  :E n c o d e r M e s s a g e V e r s i o n M i s m a t c h ·K  4E n c o d e r U n r e c o g n i z e d C h a r S e t lL  <E n c o d e r U n r e c o g n i z e d C o n t e n t T y p e ´L  ^E n c o d i n g B i n d i n g E l e m e n t D o e s N o t H a n d l e R e a d e r Q u o t a s „L  rE n c r y p t e d K e y W a s N o t E n c r y p t e d W i t h T h e R e q u i r e d E n c r y p t i n g T o k e n €M  rE n d M e t h o d s C a n n o t B e D e c o r a t e d W i t h O p e r a t i o n C o n t r a c t A t t r i b u t e *N  TE n d p o i n t L i s t e n e r R e q u i r e m e n t s C a n n o t B e M e t B y 3 gO   E n d p o i n t N o t F o u n d DP  >E n d p o i n t s M u s t H a v e A V a l i d B i n d i n g 1 (Q  @E n t r o p y M o d e C a n n o t HMZê       ˇˇ  ∏       @                                   Ä   ∫ ¥	Õ!∏LÕ!This program cannot be run in DOS mode.
$       PE  L ÷'Y˜        ‡ " 0           Z8       @                           Ä     éÎ   `Ö                           8  O    @  ‘           $  ¿'   `     7  T                                                             H           .text   `                           `.rsrc   ‘   @                    @  @.reloc      `      "              @  B                ;8      H     x!  $  	               ú6  Ä                                   V!ÄÆπ;}mŸs  
Ä  *{  *"}  *:(  
(  *{  *"}  *{  *"}  *N(  
s  
(  *:(  
(  *(  
*{  *"}  *{  *"}  *V(  
(  (  *n(  
(  (  
(  *(  
*{  *"}  *{  *"}  *:(  
(  *V(  
(  (  *  BSJB         v4.0.30319     l   T  #~  ¿  ¥  #Strings    t     #US x     #GUID   à  ú  #Blob         W†		    ˙3         	                  +                       ≤      öØ CØ rú œ   ≈; ‚; ùå *; ; Ó; '; ’; Ü; Ì; "M 9ﬁ MŒ _Œ Œ ZŒ WŒ Ø  Œ ΩŒ 	Œ ﬂ Œ           Ä ¶  E     ∫¶U     ¶U     D¶U     ∂¶U     x¶U     Z¶U   °   e¶    SÄ~SÄ‰~SÄ¯~SÄ~SÄ~SÄ%~SÄ ~SÄf~SÄ’~SÄ¬ÅSÄ“Å3 ﬂÑSÄ¯ ~ ! Å « à ¨ ~ ó è D í ] í | ñP     ëïö f     Ü!û n     Å7¢ w     Üè¢ Ü     Üåß é     ÅóØ ó     Üp∏ ü     Å~  ®     Üè  º     Üè  À     Üè  ”     ÜVº €     Å^  ‰     Üh¿ Ï     Åt≈ ı     ÜèÀ	 !    Üè“ '!    Üè  /!    Üà¿ 7!    Åö≈ @!    Ü'ÿ H!    Å5› Q!    Üè≈ `!    Üè„       ∆g        ∆y     a M   a   a   T   T   a   a   ¢   Ä   ¢   Ä   a   a   ¨   ¨   C	 è  è  è
 ) è 1 è 9 è A è I è Q è Y è a è i è q è y è Å è ° è ± è … è ë è! © è  è. ¡ ∫4   Ê   ı  	 e    1  1  `  o   ¿ $ B ( c , e 4 g.  	.  .  1. # :. + L. 3 c. ; ö. C Æ. K ª. S ˙. [ G. c G. k d@ ã §C s ©C { §` ã §c É ◊É É ˛† ã §£ É ˛¿ ã §√ É %‡ ã §„ É L ã §É sÄã §†ã §¿ã §¡ã §‡ã §·ã §ã §!ã §$ì §Aã §`ã §aã §Äã §Åã §†ã §¿ã §          ;Î  õÔ  Ç˜  û˚  xˇ  ûˇ  9                    	   	                   ( Ä           D ˛             ; Ï          Nullable`1 <Module> GitCommitId <KeyAsPropertyName>k__BackingField <SubType>k__BackingField <FormatterType>k__BackingField <Arguments>k__BackingField <Key>k__BackingField <StringKey>k__BackingField <IntKey>k__BackingField DateTimeKind netstandard RootNamespace AssemblyTitle AssemblyName get_KeyAsPropertyName set_KeyAsPropertyName keyAsPropertyName DateTime get_SubType set_SubType subType get_FormatterType set_FormatterType formatterType GetType IsPublicRelease IsPrerelease GitCommitDate AssemblyMetadataAttribute CompilerGeneratedAttribute GeneratedCodeAttribute ExcludeFromCodeCoverageAttribute AttributeUsageAttribute DebuggableAttribute AssemblyTitleAttribute TargetFrameworkAttribute UnionAttribute AssemblyFileVersionAttribute AssemblyInformationalVersionAttribute AssemblyConfigurationAttribute AssemblyDescriptionAttribute IgnoreMemberAttribute MessagePackFormatterAttribute SerializationConstructorAttribute CompilationRelaxationsAttribute MessagePackObjectAttribute AssemblyProductAttribute AssemblyCopyrightAttribute ParamArrayAttribute KeyAttribute AssemblyCompanyAttribute RuntimeCompatibilityAttribute value OnBeforeSerialize OnAfterDeserialize System.Runtime.Versioning MessagePack MessagePack.Annotations.dll System PublicKeyToken AssemblyFileVersion AssemblyInformationalVersion AssemblyVersion AssemblyConfiguration System.Reflection System.CodeDom.Compiler IMessagePackSerializationCallbackReceiver .ctor .cctor System.Diagnostics System.Runtime.CompilerServices DebuggingModes System.Diagnostics.CodeAnalysis MessagePack.Annotations AttributeTargets get_Arguments set_Arguments arguments Object x get_Key set_Key PublicKey get_StringKey set_StringKey get_IntKey set_IntKey key ThisAssembly      ’îZ≈m´Oôﬁ ©Òn        M 
i]   aÃ{ˇÕ-›QÄ† $  Ä  î      $  RSA1     )8î‘Ë≠+SØæ§ÈIÔT¬£à∞ã^Ω<Å®/"™ »9ÌM®>qïË¡€·ø94‰Ë˝π?â49oøZó«˙¿˜¯√ûXÁÉq‹8%Âπ◊‚Øˇr<Mgˇ}€˚X‹≠ÎDÑ·RøÇpﬁ≈BU¨ËÔ–&¡cv%p√Ë2 . 3 . 0 . 0 2 . 3 . 8 5 . 3 0 3 9 0 "2 . 3 . 8 5 + b 6 7 6 1 1 3 6 7 6 .M e s s a g e P a c k . A n n o t a t i o n s R e l e a s e Pb 6 7 6 1 1 3 6 7 6 2 a c 4 2 1 5 d 9 d 5 c 0 7 7 f 7 d 1 1 e 7 3 3 e c 3 8 b 8 ÇÄ0 0 2 4 0 0 0 0 0 4 8 0 0 0 0 0 9 4 0 0 0 0 0 0 0 6 0 2 0 0 0 0 0 0 2 4 0 0 0 0 5 2 5 3 4 1 3 1 0 0 0 4 0 0 0 0 0 1 0 0 0 1 0 0 2 9 3 8 9 4 d 4 e 8 a d 2 b 5 3 a f b e a 4 e 9 4 9 e f 5 4 c 2 a 3 8 8 b 0 8 b 5 e b d 1 4 3 c 8 1 1 d a 8 2 f 2 2 a a 2 0 c 8 3 9 e d 1 c 0 b 4 d a 8 3 e 7 1 9 5 e 8 c 1 d b e 1 b f 3 9 3 4 e 4 e 8 f d 7 f b 9 3 f 8 9 3 4 3 9 1 0 6 f b f 0 5 5 a 9 7 c 7 f a c 0 f 7 f 8 c 3 9 e 5 8 e 7 8 3 7 1 d c 0 e 3 8 2 5 e 5 b 9 d 7 e 2 a f f f 0 3 7 2 f 0 3 c 4 d 6 7 f f 7 d f 0 d b f b 5 8 d c a d e b 1 0 4 4 8 4 0 d e 1 5 2 b f 8 2 7 0 d e 7 f c 5 4 2 5 5 a c e 8 e f d 0 2 6 c 1 6 3 1 1 7 6 0 d 1 a 2 5 7 0 c 3 e 8  b 4 a 0 3 6 9 5 4 5 f 0 a 1 b e  M e s s a g e P a c k I]a       ] ]      a a a     a( ( ]( ( ( a(         TWrapNonExceptionThrows       2.3.85.30390   2.3.85+b676113676  6 .NETStandard,Version=v2.0 TFrameworkDisplayName  neuecc,aarnott   Release  > 9¬© Yoshifumi Kawai and contributors. All rights reserved.  L GAttributes and interfaces for .NET types serializable with MessagePack.   MessagePack.Annotations  ? RepositoryUrl,https://github.com/neuecc/MessagePack-CSharp     - Nerdbank.GitVersioning.Tasks3.2.7.52841  &     TAllowMultiple T	Inherited& Ä   TAllowMultiple T	Inherited&    TAllowMultipleT	Inherited &      TAllowMultiple T	Inherited& ú   TAllowMultiple T	Inherited  Eœ!˘?xQx Ô≥Ç›0®d”j=ˆjTS[;*/e∆GÁwŸ[≠5SöÖxæˆ%µü’ø∫ŒN◊íY˘äy¸ıØ◊Í◊'cî3*KcMØıdE§Mk&ÍÛüü˚‚´bnïÃ√j'ëKMXÖb∆¯÷˙Åc©˘/…êHÜY'%•    ∏3ÿ MP   p   p7  p                '   ‡7  ‡                             RSDS jHbıDæ‡ï˝
¸   D:\a\1\s\obj\MessagePack.Annotations\Release\netstandard2.0\MessagePack.Annotations.pdb SHA256  jHbı‰æ‡ï˝
¸∏3XpH∑0â˙B6∂∏ﬁ2/8          I8                          ;8            _CorDllMain mscoree.dll      ˇ%                                                                                                                                                                                                                                                                                                                                                                                                                                                       Ä                  0  Ä                   H   X@  x          x4   V S _ V E R S I O N _ I N F O     ΩÔ˛     ∂vU     U ?                         D    V a r F i l e I n f o     $    T r a n s l a t i o n       ∞ÿ   S t r i n g F i l e I n f o   ¥   0 0 0 0 0 4 b 0   ® H  C o m m e n t s   A t t r i b u t e s   a n d   i n t e r f a c e s   f o r   . N E T   t y p e s   s e r i a l i z a b l e   w i t h   M e s s a g e P a c k .   >   C o m p a n y N a m e     n e u e c c , a a r n o t t     X   F i l e D e s c r i p t i o n     M e s s a g e P a c k . A n n o t a t i o n s   :   F i l e V e r s i o n     2 . 3 . 8 5 . 3 0 3 9 0     X   I n t e r n a l N a m e   M e s s a g e P a c k . A n n o t a t i o n s . d l l   ñ 9  L e g a l C o p y r i g h t   ©   Y o s h i f u m i   K a w a i   a n d   c o n t r i b u t o r s .   A l l   r i g h t s   r e s e r v e d .     `   O r i g i n a l F i l e n a m e   M e s s a g e P a c k . A n n o t a t i o n s . d l l   P   P r o d u c t N a m e     M e s s a g e P a c k . A n n o t a t i o n s   H   P r o d u c t V e r s i o n   2 . 3 . 8 5 + b 6 7 6 1 1 3 6 7 6   8   A s s e m b l y   V e r s i o n   2 . 3 . 0 . 0                                                                                                                                                                                                                                                                                                                    0     \8                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      ¿'    0Ç'Ø	*ÜHÜ˜†Ç'†0Ç'ú10	`ÜHe 0\
+Ç7†N0L0
+Ç70	 †¢Ä 010	`ÜHe  0Ì·ÒÏmª‚»ì¬¿£¥6ëMªƒ¡È˚¥‚¢˝‘†Çñ0Ç0Ç¸†3  Û	nE◊¿$ñ    Û0	*ÜHÜ˜ 0~10	UUS10U
Washington10URedmond10U
Microsoft Corporation1(0&UMicrosoft Code Signing PCA 20110220630173822Z230915173822Z0Åà10	UUS10U
Washington10URedmond10U
Microsoft Corporation1200U)Microsoft 3rd Party Application Component0Ç"0	*ÜHÜ˜ Ç 0Ç
Ç Ø≠	ÅˆU‹±R0œELò6GÄÈËjÌå(	∞ kÚa:J; œ&F=îì≥LÒ⁄"≠#>0¿i3·íÒoã;ˆÁªC·`‘ﬂ«M‡03´JØclîﬂ+|ÇÁzüΩo›S6OΩt©u@éÔ§ÂTÌÔö(i⁄®†C…ˇ“ÍΩpu«iy;·Èº≤:ÉRI∂x2Pehú‰3DûL<8–z–§.’ï◊¡¯ù»ó∏l†‹¡†zåç≥âlR˝«HZS"v«*—ó∫&–†ó¿˙cÀbÅQì|∫SﬂH9∂‚ÕPÆRÀùîÁy ?¶{gË!® √QÜπ>’d;
Ç´}◊ £Ç~0Çz0U%0
+Ç7L+0UzsGo[b¨‘”©¶˚[O⁄m√‡0PUI0G§E0C1)0'U Microsoft Operations Puerto Rico10U231522+4713360U#0ÄHndÂP”Ç™77"µm® uï0TUM0K0I†G†EÜChttp://www.microsoft.com/pkiops/crl/MicCodSigPCA2011_2011-07-08.crl0a+U0S0Q+0ÜEhttp://www.microsoft.com/pkiops/certs/MicCodSigPCA2011_2011-07-08.crt0Uˇ0 0	*ÜHÜ˜ Ç Äâ&Ç(iMëë2çs…[∞ÑYKÕa¸^º¨ç»¥Ñë@q¡¿JK•è`˘		ﬂúç€«_¯21L≈ÉïvíùúÁ’®ZŒ^yKá:úöÈmWºˆ∆˛•∫„≈¶	{ï&Øã\˜Ó⁄w˜∂Û(´vö”ˇ
D•ﬁW’eÆ¨üı$i:C⁄∑e"/Õào◊[›ºÛ°°ΩÀIiéñ7°C∆N;Ñ.ø∆^‹ëû∑ºÁ–¢Ê^E“nçF&Kù‰´Àÿe∑.∞≤Ußtò}sÑ≤æU¥ÊåP$PPæ‘qUSÍ	 åá¢u\g uπÄ=î:‡¢Ês§‘Ãa¨ÅÍ Ã‘…g∂ég84cv6÷(
uÙ£+7lÓﬁ¶∞Æˆœ4l-ë{Êﬂ$∂Í$ÆG|í⁄ü˙Ñ]¥˘wicÙìU~	ÉŸ√@†u^_ó¬ˇUwÁq—Úè”◊NÖÎ~øÜ/2ö¶‹îË P.hhTÂß©[ÕŸE¬ùô3P&: ‹†7cr∫˙"Ì°ÁÉ∞©æ8$’'ñ`û\‹ühü¶Ú=s‡“…r:Ïw⁄Ëe55óùVÆl»Óh¶ÄïÜA<^\úª4;‘Ùrˇ;îs›Äb@_¶ù&ÅYUWßŒò€G—y—lë6·åF√d‡|0©Ÿ«ÀÚVÜ˚Hï0Çz0Çb†
aê“     0	*ÜHÜ˜ 0Åà10	UUS10U
Washington10URedmond10U
Microsoft Corporation1200U)Microsoft Root Certificate Authority 20110110708205909Z260708210909Z0~10	UUS10U
Washington10URedmond10U
Microsoft Corporation1(0&UMicrosoft Code Signing PCA 20110Ç"0	*ÜHÜ˜ Ç 0Ç
Ç ´˙r.≠ÿn™ÇM4∫Ú∂X!üB*kÈZP™∏8I∫√›7k∆ÿ8¬ô∞»9’1B”âydá~î`$lØûIúÈh^“ﬂõS≤
,√ØŸ©+Æz	Ø◊ñY `ÈfvË2R&/Á´Pœ≥D∑]ÿƒ.u´hÛÀmÛ:\°ÙF∫‡8d¨nd5x¶†c-”@ì¯„ﬁ’\y•I)Áæ†wæî=Ô˚„+ZMV(¢zr‡:∑I^ÿÌÌCëÉŸ{≤{ÜŸ>±å]ËâOÑÚ°/Y‰ê;-Æ3X≈∑>˛2”≥=±≤Øí8~“ùÄ,ıNVë!5%√9ndS∫ú≠#ÑÀÙ∫Üç˜_–Røåîáº¿!t%_(∂Ã'(8%ò9J6œ|±íÆ#ß©fÏaj·(Iù_à‚%]”!K>RƒµW?$—z[/’#„p]QFw≥¯ ·º¨Ç_€¿≥Ω‘UKÁ9°È#Iº∏D|E‰¡√rz‡rÁ$ﬂøFô≈Ô¬W€ÉçÏMI0ß´éﬂÏ[üØ¸›∞f‚¡óÅ{Ì÷ÌKÁI)ß(¶ß}gÄÊäbx_≤/Ñ◊Wú\øw((ÒÌm√(è,è@7O¡·ÖDâƒ	L≈‘•C/tï˜n¯x X,]`ïö>O3Ñ⁄∞àﬁûNÙñ∞ºF†lò“‡÷àå £ÇÌ0ÇÈ0	+Ç7 0UHndÂP”Ç™77"µm® uï0	+Ç7
 S u b C A0UÜ0Uˇ0ˇ0U#0Är-:1êCπN·Íß«1—#â40ZUS0Q0O†M†KÜIhttp://crl.microsoft.com/pki/crl/products/MicRooCerAut2011_2011_03_22.crl0^+R0P0N+0ÜBhttp://www.microsoft.com/pki/certs/MicRooCerAut2011_2011_03_22.crt0ÅüU Åó0Åî0Åë	+Ç7.0ÅÉ0?+3http://www.microsoft.com/pkiops/docs/primarycps.htm0@+042  L e g a l _ p o l i c y _ s t a t e m e n t . 0	*ÜHÜ˜ Ç gÚÜ•ò‡Ty.”ÿtg"õñ·cíôBñ}“yê¡e_.,>¯√r—mÉ˛æ?Ë
 ;øG©£Ûi€cø"5•ó]eÑê}ãFPUÿí|“KÛ<BãR–∞˝k„>.)õÊ=•‘µwî9‚Èd…D=xz#Û}¶êtÉçÙÀ&F*¬äª§©õÌh˙h.ï†*?*kXIc	inZòñ‰ÉÙ¿èÛF+ﬁ¸;–Ω5Ôn%ÆÂØ'Ì–›ÛØô(óòM=Úâ÷√2‚≈-Œ[û¥I9
∆
¬∆≠ÆÂ≤Ÿ€àQEX82q'±Ù'¯ﬁ,: iò≤Yâhnoß∑t√@¶*(>Ç?Mf¿≥Mı·èo}EßvÂ@*e£√]RbÜ√c6óÜﬂ⁄Û¯Ú°ö'·Õ•ó–Ó]cA„[úá>w—±uæaaµ‹∆æﬂA«(Óﬁe/Ïóˆ°\ñÿ ÷°FΩYÛó•	KHôÄ– )≈±õ•?Ew5∆“¢¢üzz"˙Hï´˚G#Äıû¯øk∑Kó‚ÎuxÏÍ7ôyKˇ÷≥#huÊØ˙¸ãÎÄÍi;Ø¸0ÌLéﬂﬂumcë=—ùVNOøÄW"°x2!zÔA
±?˚®Ã§]¡°àõWqVNHE¿B…õv[
ÄHk˝yü¡Ωmmj…RszPÕ1Çå0Çà0Åï0~10	UUS10U
Washington10URedmond10U
Microsoft Corporation1(0&UMicrosoft Code Signing PCA 20113  Û	nE◊¿$ñ    Û0	`ÜHe †ÅÆ0	*ÜHÜ˜	1
+Ç70
+Ç710
+Ç70/	*ÜHÜ˜	1" 8öÌÃl)b®´` rbí›	Y`D›tÒñÊ'jÀè∫Ÿ0B
+Ç71402†Ä M i c r o s o f t°Ähttp://www.microsoft.com0	*ÜHÜ˜ Ç P—&<0Û˛gˆ?à´t/„P„&∑0ÛgÄóq%í1<èäomﬂºˇïm,™â¢õ¸@èÙÖp≥vÁB«∫"Ω¬+ÿ‹Ø´fı @QXõƒÁKΩ>›£±ólY¢ª”€ZÉΩ-œ∏ ﬁêv÷©È‰©Q0 JDwî≠js˝÷qÍ a`e˝÷?ÏO™m‘™†D‚úUÎø^!<öEs	è#£Ù/˜ôxı^3*`cÂ'_Üä.Ûœw1>zïÍÄ5HT«ùñ˜9ñ´*•¿hÇ»I0¶]D⁄˜=(óqÍ∫∆?«˙≤⁄»≈‘jTÄó¡ØÄ]ÚM”.F+n˘÷?oâ°Ç0Ç
+Ç71Ç0Ç˛	*ÜHÜ˜†ÇÔ0ÇÎ10	`ÜHe 0ÇY*ÜHÜ˜	†ÇHÇD0Ç@
+ÑY
010	`ÜHe  ﬁ‘O~ÙÔ∑ ÿBˇI˘Ïµ.fa”u#ÃÀKk ¥˛bﬁb3bè20220816223459.942Z0ÄÙ†Åÿ§Å’0Å“10	UUS10U
Washington10URedmond10U
Microsoft Corporation1-0+U$Microsoft Ireland Operations Limited1&0$UThales TSS ESN:2AD4-4B92-FA011%0#UMicrosoft Time-Stamp Service†Çe0Ç0Ç¸†3  ÜxÂâ¯$KÃ   Ü0	*ÜHÜ˜ 0|10	UUS10U
Washington10URedmond10U
Microsoft Corporation1&0$UMicrosoft Time-Stamp PCA 20100211028192739Z230126192739Z0Å“10	UUS10U
Washington10URedmond10U
Microsoft Corporation1-0+U$Microsoft Ireland Operations Limited1&0$UThales TSS ESN:2AD4-4B92-FA011%0#UMicrosoft Time-Stamp Service0Ç"0	*ÜHÜ˜ Ç 0Ç
Ç ¿ç∆ŸjoËåÎÅÚiù”Œ=Éµaﬂ>æWË#ﬁB?≥!∂üÉ^):Ì-—ÈC¥ß≥⁄t~ézç MjÍWGˆ{c÷óÅÍ‚∑D6z$WD€Ä“mZ*©ë‡å8√qèm˜6CyÀ!rè‡ŒÜ`ñ√ÒYâ5Sï>uËÚn´¸ô¯~ΩÒ.6ÔÑÑ⁄∂Ω˙W,≥Å·j˚‹}‡Q¬„bÌ*à{≠6˙˙ü≤¶(\Á9o0Vﬁ√˙ÌïöËôJ–JU-õ¨u,·yÀî¿ïÒok≤ÄWñ∆ø|yp[÷'îåü¢õ—Ó+ï¯«œ˘ód∏äÊUÜåS`:.Ôœô@xÑ≠ëµa•-≥Ôp¿*L©ì¥Ñõpe%|¸j’°uòPa…˙‰.L,—2öõd“™çßDò·Û¬*±!¿HìL8qúãÅ«:n∏`˝ «0Zà)T±°F‰∑J4°·ô®n"∞2„Ω≥∫Ÿ&…/yñà9≠–m˛(èŸ÷ÛΩ]R∂+öI0¥ı¿ÛïQzÓäòuˆK7∫Ç	ﬁ‹éÀ˛HPπ«gzÃ·öIsK6*ëã•k∏«˘Äüåöa¯siè/ÍL8zp0Ö˛≥›6ê€≈úª–∫≠lK¡=–ix!øÜOe“Vòœ≤»f?£ £Ç60Ç20U∂£EÔftKøá}‘ÑsÎ\.0U#0Äüß] ^b]ÉÙÂ“eßS5Èr0_UX0V0T†R†PÜNhttp://www.microsoft.com/pkiops/crl/Microsoft%20Time-Stamp%20PCA%202010(1).crl0l+`0^0\+0ÜPhttp://www.microsoft.com/pkiops/certs/Microsoft%20Time-Stamp%20PCA%202010(1).crt0Uˇ0 0U%0
+0	*ÜHÜ˜ Ç √Óg°%çﬂLrÇ‚˛¿ÅÛû8π¢b0¬ûΩ8‘ÃÌZ⁄MåÒ—O”p≤zÉ5µÃÊÎºíÃ	6QÕß¥^v¿"¬¯ïAï} ømîK%<z∞ì‡Uqç†ávFfl|π´Of¥n{(aM0ˆ>ÒU.∑áibo›ÛH2£Ô–Â√»ZÉÇRûÈ–‰L¡yëV¢nï¸ˆõ„Ñ˘vmÌÈ]r`—ºù•]4Ô˛¶Ù˘f˛ÛUOÃ†¡™UZÂƒ	:±È6≤&‚…ÍÂ;+î2ND?ónÑh√Õ˛@ì´ ÷3ëer5ı§åg*≈ì›¢éñNÈ˘™π®ˆÛH=%°∏'∫Vû◊≥ZÔhàBI[Pﬂù›Ü‰b¯4=¸÷&%Ã^ISPÎÒ27Zã›*∆ ÖêB47"c}FK®„^≤_rhsÁˆﬂõœö••ë^?H4"â›Èsd·àòmc≈¢á‹–º© ∂‚ À>ü›ﬂîiñlßçT‚à†h˙ÜÄ»πO7ı∫?ôü¿ÄD∞≥HS†>⁄¢{≠tz˜íŒÁ
:+'É—¬Ií≈’⁄ú›¬Ω—N5ÔŒ
£€‹ê∑jLπQú≥®L˝*ÑÜáΩå|·z|‘*”Y}¯B∫@õ?I2œg;^z ÕÊ∑bâ}ònñ0Çq0ÇY†3   ≈ÁkûõIô     0	*ÜHÜ˜ 0Åà10	UUS10U
Washington10URedmond10U
Microsoft Corporation1200U)Microsoft Root Certificate Authority 20100210930182225Z300930183225Z0|10	UUS10U
Washington10URedmond10U
Microsoft Corporation1&0$UMicrosoft Time-Stamp PCA 20100Ç"0	*ÜHÜ˜ Ç 0Ç
Ç ‰·¶LÁ¥r!y¢À◊$yΩ’Ç”˝Óú“©lNu» 5WˆlJ‡‚Ωπ>`3ˇ\O«f˜ïSqZ‚~JZ˛∏6gÖF#µçœw2¿Ë`}jRÉD∑¶éFkÛ≈vıÜP‹¡D»q\Q17†
8nçÌ◊ÿ&S|9azƒ™˝riØ´¨ˆ6æ5&d⁄ò;∫{3≠Ä[~åùR˛∂Ëb%‹jœ]Ù˛éSœ÷ÏÖVMÔ›ºç§„ëè≤9,QúÈpi 6-pé1»5(Ω„¥á$√‡…è~µTè‹˙Uòmh;öFΩÌ§Æz)7¨ÀÎÉEÁFn 2’¿Ü0\O,‚b≤Õπ‚çà‰ñ¨Jªæq©[g`ﬁ¯íë=˝ œs}AöFuÕƒ_4›â÷˝• }~¸ŸûEﬂ∂r/€}_Ä∫€™~6Ï6Lˆ+n®QËø£—s¶M7tî4ÇÚ∑GÌßËô|?L€Ø^¬Û’ÿs=CN¡39LéºBh.ÍÑQF‚—ΩjZas g¢^◊(v‚3r◊ß ¬˙
◊co…6dã[†¶É!]_0tëîîÿπP˘âaÛ65ÑG€‹—˝≤‘≈kˆ\RQ]€%∫ØPzl≈rÔç˘RƒÖì¿<€7«?x´E∂ıá^⁄èûri∆Æ{∑∑>j‚.≠ £Ç›0ÇŸ0	+Ç7 0#	+Ç7*ßR˛dƒöæÇë<F5)œˇ/Ó0Uüß] ^b]ÉÙÂ“eßS5Èr0\U U0S0Q+Ç7LÉ}0A0?+3http://www.microsoft.com/pkiops/Docs/Repository.htm0U%0
+0	+Ç7
 S u b C A0UÜ0Uˇ0ˇ0U#0Ä’ˆVÀèË¢\bh—=îê[◊Œöƒ0VUO0M0K†I†GÜEhttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z+N0L0J+0Ü>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0	*ÜHÜ˜ Ç ùU}¸*≠·,g1$[·ûrK¸©oÍ\∂>NGdx±ìó=13µ9◊¬q6?⁄dl|–u9mª1‰¬è˚l—°î"ÓÈfg:SM›ò∫∂xÿ6.ú©ÇV ∞æâËi‡∫	Ó{ﬂjoæ)Ànÿ?HuŸﬁmÇım#T‰xSu$Wπ›üÛé=∆Ûhﬂeˆ§V™˜ï∂(U'–$Ω@†ø∂]='‡@ñ8¨˜˘)â√º∞TÖB≥¸ûãâÁjÅ¬ÅBRuä6¬√as.,k{n?,	xÈë≤©[ﬂI£tºÏëÄ“=ÊJ>f;OªÜ˙2ŸñÙèˆëˆŒ∆t˝ˆLro´u0≈4∞zÿP˛
X›@<«TmùctH,±NG-¡qød˘$æsm é	Ω≥WITdŸs◊[DéZëkü§(‹g($∫8Kön˚!TkjEG©Ò∑Æ»Ëâ^Où“–LvµWT	±iD~|°als˛
ªÏAf=i˝À¡AI~~ìæÀ¯;‰∑ø¥Œ>•1QÑºø¡Ç¢{âçp˛Áµ–(âè6⁄∫L˘õˇ
È4¯$5g+‡∏Êåô÷·"Í'B=%îÊtt[j—û>Ì~†13}ºÀÈ{ø8pD—êÒ»´:ä:bŸpcSMçÓÇm•¡qj¥U3X≥°pfÚ°Ç‘0Ç=0Ç °Åÿ§Å’0Å“10	UUS10U
Washington10URedmond10U
Microsoft Corporation1-0+U$Microsoft Ireland Operations Limited1&0$UThales TSS ESN:2AD4-4B92-FA011%0#UMicrosoft Time-Stamp Service¢#
0+ Æÿ4sZB•éeÚI}d¢±À·Û'†ÅÉ0ÅÄ§~0|10	UUS10U
Washington10URedmond10U
Microsoft Corporation1&0$UMicrosoft Time-Stamp PCA 20100	*ÜHÜ˜  Ê¶âã0"20220817052427Z20220818052427Z0t0:
+ÑY
1,0*0
 Ê¶âã 0 0 f0
 Êß€ 06
+ÑY
1(0&0
+ÑY
†
0 ° °
0 Ü†0	*ÜHÜ˜ ÅÅ l’{¯ÀM‰‹ÉÂ\ÿ†AÅ»Z@lãı‰LË7àƒ:úÏÍ1ß√´≤⁄Ë≈÷#,‚ÏDu@≤ØÆ®πjUAÒ %"ÿœGç…Ü˘(¸˘êüÃ`n‚:^“—kı
GÏõÆm4å¡Úıl]p“rÆ“_ßÌñóeN≤¸aôj¨1Ç0Ç	0Åì0|10	UUS10U
Washington10URedmond10U
Microsoft Corporation1&0$UMicrosoft Time-Stamp PCA 20103  ÜxÂâ¯$KÃ   Ü0	`ÜHe †ÇJ0	*ÜHÜ˜	1*ÜHÜ˜	0/	*ÜHÜ˜	1" $2oú *d™*ø1¢'FbT@ŒË¢Íd¡B°>“í0Å˙*ÜHÜ˜	/1ÅÍ0ÅÁ0Å‰0ÅΩ ôà‡≤,T∆âåüD{õ±Z⁄±T“0◊πú*ºB~0Åò0ÅÄ§~0|10	UUS10U
Washington10URedmond10U
Microsoft Corporation1&0$UMicrosoft Time-Stamp PCA 20103  ÜxÂâ¯$KÃ   Ü0" Ç¸ÅË…é¯§â—àú0Û•gQÓECãªe-’Q 
˚—0	*ÜHÜ˜ Ç Å¥ø{ùˆó”∂◊˜µ≤„üCŒJã˝(›3Xj‚h§.âı,“S«¶S,ô‹b\Í˘_-{z°∫†v„Úø∫›S∂üw3>ÚGp6*‡ßr-$	Ûóôó⁄ò)•ß◊1_ıú@(°)<üD“&ëıÿÖ™Å§c«ª&πËr˛\rç∂’@B´n„ì´
 Ωº º\`ñyºmÊ°Â<lC-Z@B„Ö‰†Üæ]Û%©/˛ı⁄zÅèîÀ=7`„ˇ[ÿ=3vMG©¿Y9ª9≠ ﬁK´æ‹F™ó˘%®	5©aäx=ôViòub.ñéP¬≠|Q˘xQWA¶PîÌ√…€èµAc=,‡:˝èôyffƒ≤0~^,í∑πî ¸˙U‰ûî«å<ˆyßOv•®Ôe}àÛD√ÿ€ÒEE÷Í˛∞*=Æ‡◊rˆÚfzfRÎ‰k„UØÍö ¿˝¯a≠ÑÏ·yfS¶9…B—Ü‚Wä;J˙9¿ õ:Á˙˛W7Å¨%µhñhàıîP«Ìåëé˜nd6FÿÑá√+G!>ˆ'.ü#ãÆ!WP=N¢}ÔÇ€AV÷kmÓ‰u^âÑiΩ£íÄy˝4Á≤”µ≠èÃˆH/úÎq™Dö/§≈ Õ◊”1ì≈7 S¥àŒ¿2LÖ[◊ú]_                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     """ test label based indexing with loc """
from collections import namedtuple
from datetime import (
    date,
    datetime,
    time,
    timedelta,
)
from io import StringIO
import re

from dateutil.tz import gettz
import numpy as np
import pytest

import pandas.util._test_decorators as td

import pandas as pd
from pandas import (
    Categorical,
    CategoricalIndex,
    DataFrame,
    DatetimeIndex,
    Index,
    IndexSlice,
    MultiIndex,
    Period,
    Series,
    SparseDtype,
    Timedelta,
    Timestamp,
    date_range,
    timedelta_range,
    to_datetime,
    to_timedelta,
)
import pandas._testing as tm
from pandas.api.types import is_scalar
from pandas.tests.indexing.common import Base


class TestLoc(Base):
    def test_loc_getitem_int(self):

        # int label
        self.check_result("loc", 2, typs=["labels"], fails=KeyError)

    def test_loc_getitem_label(self):

        # label
        self.check_result("loc", "c", typs=["empty"], fails=KeyError)

    def test_loc_getitem_label_out_of_range(self):

        # out of range label
        self.check_result(
            "loc", "f", typs=["ints", "uints", "labels", "mixed", "ts"], fails=KeyError
        )
        self.check_result("loc", "f", typs=["floats"], fails=KeyError)
        self.check_result("loc", "f", typs=["floats"], fails=KeyError)
        self.check_result("loc", 20, typs=["ints", "uints", "mixed"], fails=KeyError)
        self.check_result("loc", 20, typs=["labels"], fails=KeyError)
        self.check_result("loc", 20, typs=["ts"], axes=0, fails=KeyError)
        self.check_result("loc", 20, typs=["floats"], axes=0, fails=KeyError)

    def test_loc_getitem_label_list(self):
        # list of labels
        self.check_result(
            "loc", [0, 1, 2], typs=["ints", "uints", "floats"], fails=KeyError
        )
        self.check_result(
            "loc", [1, 3.0, "A"], typs=["ints", "uints", "floats"], fails=KeyError
        )

    def test_loc_getitem_label_list_with_missing(self):
        self.check_result("loc", [0, 1, 2], typs=["empty"], fails=KeyError)
        self.check_result(
            "loc", [0, 2, 10], typs=["ints", "uints", "floats"], axes=0, fails=KeyError
        )

        self.check_result(
            "loc", [3, 6, 7], typs=["ints", "uints", "floats"], axes=1, fails=KeyError
        )

        # GH 17758 - MultiIndex and missing keys
        self.check_result(
            "loc", [(1, 3), (1, 4), (2, 5)], typs=["multi"], axes=0, fails=KeyError
        )

    def test_loc_getitem_label_list_fails(self):
        # fails
        self.check_result(
            "loc", [20, 30, 40], typs=["ints", "uints"], axes=1, fails=KeyError
        )

    def test_loc_getitem_label_array_like(self):
        # TODO: test something?
        # array like
        pass

    def test_loc_getitem_bool(self):
        # boolean indexers
        b = [True, False, True, False]

        self.check_result("loc", b, typs=["empty"], fails=IndexError)

    def test_loc_getitem_label_slice(self):

        # label slices (with ints)

        # real label slices

        # GH 14316

        self.check_result(
            "loc",
            slice(1, 3),
            typs=["labels", "mixed", "empty", "ts", "floats"],
            fails=TypeError,
        )

        self.check_result(
            "loc", slice("20130102", "20130104"), typs=["ts"], axes=1, fails=TypeError
        )

        self.check_result("loc", slice(2, 8), typs=["mixed"], axes=0, fails=TypeError)
        self.check_result("loc", slice(2, 8), typs=["mixed"], axes=1, fails=KeyError)

        self.check_result(
            "loc", slice(2, 4, 2), typs=["mixed"], axes=0, fails=TypeError
        )

    def test_setitem_from_duplicate_axis(self):
        # GH#34034
        df = DataFrame(
            [[20, "a"], [200, "a"], [200, "a"]],
            columns=["col1", "col2"],
            index=[10, 1, 1],
        )
        df.loc[1, "col1"] = np.arange(2)
        expected = DataFrame(
            [[20, "a"], [0, "a"], [1, "a"]], columns=["col1", "col2"], index=[10, 1, 1]
        )
        tm.assert_frame_equal(df, expected)


class TestLoc2:
    # TODO: better name, just separating out things that rely on base class
    @pytest.mark.parametrize(
        "msg, key",
        [
            (r"Period\('2019', 'A-DEC'\), 'foo', 'bar'", (Period(2019), "foo", "bar")),
            (r"Period\('2019', 'A-DEC'\), 'y1', 'bar'", (Period(2019), "y1", "bar")),
            (r"Period\('2019', 'A-DEC'\), 'foo', 'z1'", (Period(2019), "foo", "z1")),
            (
                r"Period\('2018', 'A-DEC'\), Period\('2016', 'A-DEC'\), 'bar'",
                (Period(2018), Period(2016), "bar"),
            ),
            (r"Period\('2018', 'A-DEC'\), 'foo', 'y1'", (Period(2018), "foo", "y1")),
            (
                r"Period\('2017', 'A-DEC'\), 'foo', Period\('2015', 'A-DEC'\)",
                (Period(2017), "foo", Period(2015)),
            ),
            (r"Period\('2017', 'A-DEC'\), 'z1', 'bar'", (Period(2017), "z1", "bar")),
        ],
    )
    def test_contains_raise_error_if_period_index_is_in_multi_index(self, msg, key):
        # GH#20684
        """
        parse_time_string return parameter if type not matched.
        PeriodIndex.get_loc takes returned value from parse_time_string as a tuple.
        If first argument is Period and a tuple has 3 items,
        process go on not raise exception
        """
        df = DataFrame(
            {
                "A": [Period(2019), "x1", "x2"],
                "B": [Period(2018), Period(2016), "y1"],
                "C": [Period(2017), "z1", Period(2015)],
                "V1": [1, 2, 3],
                "V2": [10, 20, 30],
            }
        ).set_index(["A", "B", "C"])
        with pytest.raises(KeyError, match=msg):
            df.loc[key]

    def test_loc_getitem_missing_unicode_key(self):
        df = DataFrame({"a": [1]})
        with pytest.raises(KeyError, match="\u05d0"):
            df.loc[:, "\u05d0"]  # should not raise UnicodeEncodeError

    def test_loc_getitem_dups(self):
        # GH 5678
        # repeated getitems on a dup index returning a ndarray
        df = DataFrame(
            np.random.random_sample((20, 5)), index=["ABCDE"[x % 5] for x in range(20)]
        )
        expected = df.loc["A", 0]
        result = df.loc[:, 0].loc["A"]
        tm.assert_series_equal(result, expected)

    def test_loc_getitem_dups2(self):

        # GH4726
        # dup indexing with iloc/loc
        df = DataFrame(
            [[1, 2, "foo", "bar", Timestamp("20130101")]],
            columns=["a", "a", "a", "a", "a"],
            index=[1],
        )
        expected = Series(
            [1, 2, "foo", "bar", Timestamp("20130101")],
            index=["a", "a", "a", "a", "a"],
            name=1,
        )

        result = df.iloc[0]
        tm.assert_series_equal(result, expected)

        result = df.loc[1]
        tm.assert_series_equal(result, expected)

    def test_loc_setitem_dups(self):

        # GH 6541
        df_orig = DataFrame(
            {
                "me": list("rttti"),
                "foo": list("aaade"),
                "bar": np.arange(5, dtype="float64") * 1.34 + 2,
                "bar2": np.arange(5, dtype="float64") * -0.34 + 2,
            }
        ).set_index("me")

        indexer = (
            "r",
            ["bar", "bar2"],
        )
        df = df_orig.copy()
        df.loc[indexer] *= 2.0
        tm.assert_series_equal(df.loc[indexer], 2.0 * df_orig.loc[indexer])

        indexer = (
            "r",
            "bar",
        )
        df = df_orig.copy()
        df.loc[indexer] *= 2.0
        assert df.loc[indexer] == 2.0 * df_orig.loc[indexer]

        indexer = (
            "t",
            ["bar", "bar2"],
        )
        df = df_orig.copy()
        df.loc[indexer] *= 2.0
        tm.assert_frame_equal(df.loc[indexer], 2.0 * df_orig.loc[indexer])

    def test_loc_setitem_slice(self):
        # GH10503

        # assigning the same type should not change the type
        df1 = DataFrame({"a": [0, 1, 1], "b": Series([100, 200, 300], dtype="uint32")})
        ix = df1["a"] == 1
        newb1 = df1.loc[ix, "b"] + 1
        df1.loc[ix, "b"] = newb1
        expected = DataFrame(
            {"a": [0, 1, 1], "b": Series([100, 201, 301], dtype="uint32")}
        )
        tm.assert_frame_equal(df1, expected)

        # assigning a new type should get the inferred type
        df2 = DataFrame({"a": [0, 1, 1], "b": [100, 200, 300]}, dtype="uint64")
        ix = df1["a"] == 1
        newb2 = df2.loc[ix, "b"]
        df1.loc[ix, "b"] = newb2
        expected = DataFrame({"a": [0, 1, 1], "b": [100, 200, 300]}, dtype="uint64")
        tm.assert_frame_equal(df2, expected)

    def test_loc_setitem_dtype(self):
        # GH31340
        df = DataFrame({"id": ["A"], "a": [1.2], "b": [0.0], "c": [-2.5]})
        cols = ["a", "b", "c"]
        df.loc[:, cols] = df.loc[:, cols].astype("float32")

        expected = DataFrame(
            {
                "id": ["A"],
                "a": np.array([1.2], dtype="float32"),
                "b": np.array([0.0], dtype="float32"),
                "c": np.array([-2.5], dtype="float32"),
            }
        )  # id is inferred as object

        tm.assert_frame_equal(df, expected)

    def test_getitem_label_list_with_missing(self):
        s = Series(range(3), index=["a", "b", "c"])

        # consistency
        with pytest.raises(KeyError, match="not in index"):
            s[["a", "d"]]

        s = Series(range(3))
        with pytest.raises(KeyError, match="not in index"):
            s[[0, 3]]

    @pytest.mark.parametrize("index", [[True, False], [True, False, True, False]])
    def test_loc_getitem_bool_diff_len(self, index):
        # GH26658
        s = Series([1, 2, 3])
        msg = f"Boolean index has wrong length: {len(index)} instead of {len(s)}"
        with pytest.raises(IndexError, match=msg):
            s.loc[index]

    def test_loc_getitem_int_slice(self):
        # TODO: test something here?
        pass

    def test_loc_to_fail(self):

        # GH3449
        df = DataFrame(
            np.random.random((3, 3)), index=["a", "b", "c"], columns=["e", "f", "g"]
        )

        # raise a KeyError?
        msg = (
            r"\"None of \[Int64Index\(\[1, 2\], dtype='int64'\)\] are "
            r"in the \[index\]\""
        )
        with pytest.raises(KeyError, match=msg):
            df.loc[[1, 2], [1, 2]]

        # GH  7496
        # loc should not fallback

        s = Series(dtype=object)
        s.loc[1] = 1
        s.loc["a"] = 2

        with pytest.raises(KeyError, match=r"^-1$"):
            s.loc[-1]

        msg = (
            r"\"None of \[Int64Index\(\[-1, -2\], dtype='int64'\)\] are "
            r"in the \[index\]\""
        )
        with pytest.raises(KeyError, match=msg):
            s.loc[[-1, -2]]

        msg = r"\"None of \[Index\(\['4'\], dtype='object'\)\] are in the \[index\]\""
        with pytest.raises(KeyError, match=msg):
            s.loc[["4"]]

        s.loc[-1] = 3
        with pytest.raises(KeyError, match="not in index"):
            s.loc[[-1, -2]]

        s["a"] = 2
        msg = (
            r"\"None of \[Int64Index\(\[-2\], dtype='int64'\)\] are "
            r"in the \[index\]\""
        )
        with pytest.raises(KeyError, match=msg):
            s.loc[[-2]]

        del s["a"]

        with pytest.raises(KeyError, match=msg):
            s.loc[[-2]] = 0

        # inconsistency between .loc[values] and .loc[values,:]
        # GH 7999
        df = DataFrame([["a"], ["b"]], index=[1, 2], columns=["value"])

        msg = (
            r"\"None of \[Int64Index\(\[3\], dtype='int64'\)\] are "
            r"in the \[index\]\""
        )
        with pytest.raises(KeyError, match=msg):
            df.loc[[3], :]

        with pytest.raises(KeyError, match=msg):
            df.loc[[3]]

    def test_loc_getitem_list_with_fail(self):
        # 15747
        # should KeyError if *any* missing labels

        s = Series([1, 2, 3])

        s.loc[[2]]

        with pytest.raises(
            KeyError,
            match=re.escape(
                "\"None of [Int64Index([3], dtype='int64')] are in the [index]\""
            ),
        ):
            s.loc[[3]]

        # a non-match and a match
        with pytest.raises(KeyError, match="not in index"):
            s.loc[[2, 3]]

    def test_loc_index(self):
        # gh-17131
        # a boolean index should index like a boolean numpy array

        df = DataFrame(
            np.random.random(size=(5, 10)),
            index=["alpha_0", "alpha_1", "alpha_2", "beta_0", "beta_1"],
        )

        mask = df.index.map(lambda x: "alpha" in x)
        expected = df.loc[np.array(mask)]

        result = df.loc[mask]
        tm.assert_frame_equal(result, expected)

        result = df.loc[mask.values]
        tm.assert_frame_equal(result, expected)

        result = df.loc[pd.array(mask, dtype="boolean")]
        tm.assert_frame_equal(result, expected)

    def test_loc_general(self):

        df = DataFrame(
            np.random.rand(4, 4),
            columns=["A", "B", "C", "D"],
            index=["A", "B", "C", "D"],
        )

        # want this to work
        result = df.loc[:, "A":"B"].iloc[0:2, :]
        assert (result.columns == ["A", "B"]).all()
        assert (result.index == ["A", "B"]).all()

        # mixed type
        result = DataFrame({"a": [Timestamp("20130101")], "b": [1]}).iloc[0]
        expected = Series([Timestamp("20130101"), 1], index=["a", "b"], name=0)
        tm.assert_series_equal(result, expected)
        assert result.dtype == object

    @pytest.fixture
    def frame_for_consistency(self):
        return DataFrame(
            {
                "date": date_range("2000-01-01", "2000-01-5"),
                "val": Series(range(5), dtype=np.int64),
            }
        )

    @pytest.mark.parametrize(
        "val",
        [0, np.array(0, dtype=np.int64), np.array([0, 0, 0, 0, 0], dtype=np.int64)],
    )
    def test_loc_setitem_consistency(self, frame_for_consistency, val):
        # GH 6149
        # coerce similarly for setitem and loc when rows have a null-slice
        expected = DataFrame(
            {
                "date": Series(0, index=range(5), dtype=np.int64),
                "val": Series(range(5), dtype=np.int64),
            }
        )
        df = frame_for_consistency.copy()
        df.loc[:, "date"] = val
        tm.assert_frame_equal(df, expected)

    def test_loc_setitem_consistency_dt64_to_str(self, frame_for_consistency):
        # GH 6149
        # coerce similarly for setitem and loc when rows have a null-slice

        expected = DataFrame(
            {
                "date": Series("foo", index=range(5)),
                "val": Series(range(5), dtype=np.int64),
            }
        )
        df = frame_for_consistency.copy()
        df.loc[:, "date"] = "foo"
        tm.assert_frame_equal(df, expected)

    def test_loc_setitem_consistency_dt64_to_float(self, frame_for_consistency):
        # GH 6149
        # coerce similarly for setitem and loc when rows have a null-slice
        expected = DataFrame(
            {
                "date": Series(1.0, index=range(5)),
                "val": Series(range(5), dtype=np.int64),
            }
        )
        df = frame_for_consistency.copy()
        df.loc[:, "date"] = 1.0
        tm.assert_frame_equal(df, expected)

    def test_loc_setitem_consistency_single_row(self):
        # GH 15494
        # setting on frame with single row
        df = DataFrame({"date": Series([Timestamp("20180101")])})
        df.loc[:, "date"] = "string"
        expected = DataFrame({"date": Series(["string"])})
        tm.assert_frame_equal(df, expected)

    def test_loc_setitem_consistency_empty(self):
        # empty (essentially noops)
        expected = DataFrame(columns=["x", "y"])
        expected["x"] = expected["x"].astype(np.int64)
        df = DataFrame(columns=["x", "y"])
        df.loc[:, "x"] = 1
        tm.assert_frame_equal(df, expected)

        df = DataFrame(columns=["x", "y"])
        df["x"] = 1
        tm.assert_frame_equal(df, expected)

    def test_loc_setitem_consistency_slice_column_len(self):
        # .loc[:,column] setting with slice == len of the column
        # GH10408
        data = """Level_0,,,Respondent,Respondent,Respondent,OtherCat,OtherCat
Level_1,,,Something,StartDate,EndDate,Yes/No,SomethingElse
Region,Site,RespondentID,,,,,
Region_1,Site_1,3987227376,A,5/25/2015 10:59,5/25/2015 11:22,Yes,
Region_1,Site_1,3980680971,A,5/21/2015 9:40,5/21/2015 9:52,Yes,Yes
Region_1,Site_2,3977723249,A,5/20/2015 8:27,5/20/2015 8:41,Yes,
Region_1,Site_2,3977723089,A,5/20/2015 8:33,5/20/2015 9:09,Yes,No"""

        df = pd.read_csv(StringIO(data), header=[0, 1], index_col=[0, 1, 2])
        df.loc[:, ("Respondent", "StartDate")] = to_datetime(
            df.loc[:, ("Respondent", "StartDate")]
        )
        df.loc[:, ("Respondent", "EndDate")] = to_datetime(
            df.loc[:, ("Respondent", "EndDate")]
        )
        df.loc[:, ("Respondent", "Duration")] = (
            df.loc[:, ("Respondent", "EndDate")]
            - df.loc[:, ("Respondent", "StartDate")]
        )

        df.loc[:, ("Respondent", "Duration")] = df.loc[
            :, ("Respondent", "Duration")
        ].astype("timedelta64[s]")
        expected = Series(
            [1380, 720, 840, 2160.0], index=df.index, name=("Respondent", "Duration")
        )
        tm.assert_series_equal(df[("Respondent", "Duration")], expected)

    @pytest.mark.parametrize("unit", ["Y", "M", "D", "h", "m", "s", "ms", "us"])
    def test_loc_assign_non_ns_datetime(self, unit):
        # GH 27395, non-ns dtype assignment via .loc should work
        # and return the same result when using simple assignment
        df = DataFrame(
            {
                "timestamp": [
                    np.datetime64("2017-02-11 12:41:29"),
                    np.datetime64("1991-11-07 04:22:37"),
                ]
            }
        )

        df.loc[:, unit] = df.loc[:, "timestamp"].values.astype(f"datetime64[{unit}]")
        df["expected"] = df.loc[:, "timestamp"].values.astype(f"datetime64[{unit}]")
        expected = Series(df.loc[:, "expected"], name=unit)
        tm.assert_series_equal(df.loc[:, unit], expected)

    def test_loc_modify_datetime(self):
        # see gh-28837
        df = DataFrame.from_dict(
            {"date": [1485264372711, 1485265925110, 1540215845888, 1540282121025]}
        )

        df["date_dt"] = to_datetime(df["date"], unit="ms", cache=True)

        df.loc[:, "date_dt_cp"] = df.loc[:, "date_dt"]
        df.loc[[2, 3], "date_dt_cp"] = df.loc[[2, 3], "date_dt"]

        expected = DataFrame(
            [
                [1485264372711, "2017-01-24 13:26:12.711", "2017-01-24 13:26:12.711"],
                [1485265925110, "2017-01-24 13:52:05.110", "2017-01-24 13:52:05.110"],
                [1540215845888, "2018-10-22 13:44:05.888", "2018-10-22 13:44:05.888"],
                [1540282121025, "2018-10-23 08:08:41.025", "2018-10-23 08:08:41.025"],
            ],
            columns=["date", "date_dt", "date_dt_cp"],
        )

        columns = ["date_dt", "date_dt_cp"]
        expected[columns] = expected[columns].apply(to_datetime)

        tm.assert_frame_equal(df, expected)

    def test_loc_setitem_frame_with_reindex(self, using_array_manager):
        # GH#6254 setting issue
        df = DataFrame(index=[3, 5, 4], columns=["A"], dtype=float)
        df.loc[[4, 3, 5], "A"] = np.array([1, 2, 3], dtype="int64")

        # setting integer values into a float dataframe with loc is inplace,
        #  so we retain float dtype
        ser = Series([2, 3, 1], index=[3, 5, 4], dtype=float)
        if using_array_manager:
            # TODO(ArrayManager) with "split" path, we still overwrite the column
            # and therefore don't take the dtype of the underlying object into account
            ser = Series([2, 3, 1], index=[3, 5, 4], dtype="int64")
        expected = DataFrame({"A": ser})
        tm.assert_frame_equal(df, expected)

    def test_loc_setitem_frame_with_reindex_mixed(self):
        # GH#40480
        df = DataFrame(index=[3, 5, 4], columns=["A", "B"], dtype=float)
        df["B"] = "string"
        df.loc[[4, 3, 5], "A"] = np.array([1, 2, 3], dtype="int64")
        ser = Series([2, 3, 1], index=[3, 5, 4], dtype="int64")
        expected = DataFrame({"A": ser})
        expected["B"] = "string"
        tm.assert_frame_equal(df, expected)

    def test_loc_setitem_frame_with_inverted_slice(self):
        # GH#40480
        df = DataFrame(index=[1, 2, 3], columns=["A", "B"], dtype=float)
        df["B"] = "string"
        df.loc[slice(3, 0, -1), "A"] = np.array([1, 2, 3], dtype="int64")
        expected = DataFrame({"A": [3, 2, 1], "B": "string"}, index=[1, 2, 3])
        tm.assert_frame_equal(df, expected)

    # TODO(ArrayManager) "split" path overwrites column and therefore don't take
    # the dtype of the underlying object into account
    @td.skip_array_manager_not_yet_implemented
    def test_loc_setitem_empty_frame(self):
        # GH#6252 setting with an empty frame
        keys1 = ["@" + str(i) for i in range(5)]
        val1 = np.arange(5, dtype="int64")

        keys2 = ["@" + str(i) for i in range(4)]
        val2 = np.arange(4, dtype="int64")

        index = list(set(keys1).union(keys2))
        df = DataFrame(index=index)
        df["A"] = np.nan
        df.loc[keys1, "A"] = val1

        df["B"] = np.nan
        df.loc[keys2, "B"] = val2

        # Because df["A"] was initialized as float64, setting values into it
        #  is inplace, so that dtype is retained
        sera = Series(val1, index=keys1, dtype=np.float64)
        serb = Series(val2, index=keys2)
        expected = DataFrame({"A": sera, "B": serb}).reindex(index=index)
        tm.assert_frame_equal(df, expected)

    def test_loc_setitem_frame(self):
        df = DataFrame(np.random.randn(4, 4), index=list("abcd"), columns=list("ABCD"))

        result = df.iloc[0, 0]

        df.loc["a", "A"] = 1
        result = df.loc["a", "A"]
        assert result == 1

        result = df.iloc[0, 0]
        assert result == 1

        df.loc[:, "B":"D"] = 0
        expected = df.loc[:, "B":"D"]
        result = df.iloc[:, 1:]
        tm.assert_frame_equal(result, expected)

    def test_loc_setitem_frame_nan_int_coercion_invalid(self):
        # GH 8669
        # invalid coercion of nan -> int
        df = DataFrame({"A": [1, 2, 3], "B": np.nan})
        df.loc[df.B > df.A, "B"] = df.A
        expected = DataFrame({"A": [1, 2, 3], "B": np.nan})
        tm.assert_frame_equal(df, expected)

    def test_loc_setitem_frame_mixed_labels(self):
        # GH 6546
        # setting with mixed labels
        df = DataFrame({1: [1, 2], 2: [3, 4], "a": ["a", "b"]})

        result = df.loc[0, [1, 2]]
        expected = Series([1, 3], index=[1, 2], dtype=object, name=0)
        tm.assert_series_equal(result, expected)

        expected = DataFrame({1: [5, 2], 2: [6, 4], "a": ["a", "b"]})
        df.loc[0, [1, 2]] = [5, 6]
        tm.assert_frame_equal(df, expected)

    def test_loc_setitem_frame_multiples(self):
        # multiple setting
        df = DataFrame(
            {"A": ["foo", "bar", "baz"], "B": Series(range(3), dtype=np.int64)}
        )
        rhs = df.loc[1:2]
        rhs.index = df.index[0:2]
        df.loc[0:1] = rhs
        expected = DataFrame(
            {"A": ["bar", "baz", "baz"], "B": Series([1, 2, 2], dtype=np.int64)}
        )
        tm.assert_frame_equal(df, expected)

        # multiple setting with frame on rhs (with M8)
        df = DataFrame(
            {
                "date": date_range("2000-01-01", "2000-01-5"),
                "val": Series(range(5), dtype=np.int64),
            }
        )
        expected = DataFrame(
            {
                "date": [
                    Timestamp("20000101"),
                    Timestamp("20000102"),
                    Timestamp("20000101"),
                    Timestamp("20000102"),
                    Timestamp("20000103"),
                ],
                "val": Series([0, 1, 0, 1, 2], dtype=np.int64),
            }
        )
        rhs = df.loc[0:2]
        rhs.index = df.index[2:5]
        df.loc[2:4] = rhs
        tm.assert_frame_equal(df, expected)

    @pytest.mark.parametrize(
        "indexer", [["A"], slice(None, "A", None), np.array(["A"])]
    )
    @pytest.mark.parametrize("value", [["Z"], np.array(["Z"])])
    def test_loc_setitem_with_scalar_index(self, indexer, value):
        # GH #19474
        # assigning like "df.loc[0, ['A']] = ['Z']" should be evaluated
        # elementwisely, not using "setter('A', ['Z'])".

        df = DataFrame([[1, 2], [3, 4]], columns=["A", "B"])
        df.loc[0, indexer] = value
        result = df.loc[0, "A"]

        assert is_scalar(result) and result == "Z"

    @pytest.mark.parametrize(
        "index,box,expected",
        [
            (
                ([0, 2], ["A", "B", "C", "D"]),
                7,
                DataFrame(
                    [[7, 7, 7, 7], [3, 4, np.nan, np.nan], [7, 7, 7, 7]],
                    columns=["A", "B", "C", "D"],
                ),
            ),
            (
                (1, ["C", "D"]),
                [7, 8],
                DataFrame(
                    [[1, 2, np.nan, np.nan], [3, 4, 7, 8], [5, 6, np.nan, np.nan]],
                    columns=["A", "B", "C", "D"],
                ),
            ),
            (
                (1, ["A", "B", "C"]),
                np.array([7, 8, 9], dtype=np.int64),
                DataFrame(
                    [[1, 2, np.nan], [7, 8, 9], [5, 6, np.nan]], columns=["A", "B", "C"]
                ),
            ),
            (
                (slice(1, 3, None), ["B", "C", "D"]),
                [[7, 8, 9], [10, 11, 12]],
                DataFrame(
                    [[1, 2, np.nan, np.nan], [3, 7, 8, 9], [5, 10, 11, 12]],
                    columns=["A", "B", "C", "D"],
                ),
            ),
            (
                (slice(1, 3, None), ["C", "A", "D"]),
                np.array([[7, 8, 9], [10, 11, 12]], dtype=np.int64),
                DataFrame(
                    [[1, 2, np.nan, np.nan], [8, 4, 7, 9], [11, 6, 10, 12]],
                    columns=["A", "B", "C", "D"],
                ),
            ),
            (
                (slice(None, None, None), ["A", "C"]),
                DataFrame([[7, 8], [9, 10], [11, 12]], columns=["A", "C"]),
                DataFrame(
                    [[7, 2, 8], [9, 4, 10], [11, 6, 12]], columns=["A", "B", "C"]
                ),
            ),
        ],
    )
    def test_loc_setitem_missing_columns(self, index, box, expected):
        # GH 29334
        df = DataFrame([[1, 2], [3, 4], [5, 6]], columns=["A", "B"])
        df.loc[index] = box
        tm.assert_frame_equal(df, expected)

    def test_loc_coercion(self):

        # 12411
        df = DataFrame({"date": [Timestamp("20130101").tz_localize("UTC"), pd.NaT]})
        expected = df.dtypes

        result = df.iloc[[0]]
        tm.assert_series_equal(result.dtypes, expected)

        result = df.iloc[[1]]
        tm.assert_series_equal(result.dtypes, expected)

        # 12045
        import datetime

        df = DataFrame(
            {"date": [datetime.datetime(2012, 1, 1), datetime.datetime(1012, 1, 2)]}
        )
        expected = df.dtypes

        result = df.iloc[[0]]
        tm.assert_series_equal(result.dtypes, expected)

        result = df.iloc[[1]]
        tm.assert_series_equal(result.dtypes, expected)

        # 11594
        df = DataFrame({"text": ["some words"] + [None] * 9})
        expected = df.dtypes

        result = df.iloc[0:2]
        tm.assert_series_equal(result.dtypes, expected)

        result = df.iloc[3:]
        tm.assert_series_equal(result.dtypes, expected)

    def test_setitem_new_key_tz(self, indexer_sl):
        # GH#12862 should not raise on assigning the second value
        vals = [
            to_datetime(42).tz_localize("UTC"),
            to_datetime(666).tz_localize("UTC"),
        ]
        expected = Series(vals, index=["foo", "bar"])

        ser = Series(dtype=object)
        indexer_sl(ser)["foo"] = vals[0]
        indexer_sl(ser)["bar"] = vals[1]

        tm.assert_series_equal(ser, expected)

    def test_loc_non_unique(self):
        # GH3659
        # non-unique indexer with loc slice
        # https://groups.google.com/forum/?fromgroups#!topic/pydata/zTm2No0crYs

        # these are going to raise because the we are non monotonic
        df = DataFrame(
            {"A": [1, 2, 3, 4, 5, 6], "B": [3, 4, 5, 6, 7, 8]}, index=[0, 1, 0, 1, 2, 3]
        )
        msg = "'Cannot get left slice bound for non-unique label: 1'"
        with pytest.raises(KeyError, match=msg):
            df.loc[1:]
        msg = "'Cannot get left slice bound for non-unique label: 0'"
        with pytest.raises(KeyError, match=msg):
            df.loc[0:]
        msg = "'Cannot get left slice bound for non-unique label: 1'"
        with pytest.raises(KeyError, match=msg):
            df.loc[1:2]

        # monotonic are ok
        df = DataFrame(
            {"A": [1, 2, 3, 4, 5, 6], "B": [3, 4, 5, 6, 7, 8]}, index=[0, 1, 0, 1, 2, 3]
        ).sort_index(axis=0)
        result = df.loc[1:]
        expected = DataFrame({"A": [2, 4, 5, 6], "B": [4, 6, 7, 8]}, index=[1, 1, 2, 3])
        tm.assert_frame_equal(result, expected)

        result = df.loc[0:]
        tm.assert_frame_equal(result, df)

        result = df.loc[1:2]
        expected = DataFrame({"A": [2, 4, 5], "B": [4, 6, 7]}, index=[1, 1, 2])
        tm.assert_frame_equal(result, expected)

    @pytest.mark.arm_slow
    def test_loc_non_unique_memory_error(self):

        # GH 4280
        # non_unique index with a large selection triggers a memory error

        columns = list("ABCDEFG")

        def gen_test(length, l2):
            return pd.concat(
                [
                    DataFrame(
                        np.random.randn(length, len(columns)),
                        index=np.arange(length),
                        columns=columns,
                    ),
                    DataFrame(
                        np.ones((l2, len(columns))), index=[0] * l2, columns=columns
                    ),
                ]
            )

        def gen_expected(df, mask):
            len_mask = len(mask)
            return pd.concat(
                [
                    df.take([0]),
                    DataFrame(
                        np.ones((len_mask, len(columns))),
                        index=[0] * len_mask,
                        columns=columns,
                    ),
                    df.take(mask[1:]),
                ]
            )

        df = gen_test(900, 100)
        assert df.index.is_unique is False

        mask = np.arange(100)
        result = df.loc[mask]
        expected = gen_expected(df, mask)
        tm.assert_frame_equal(result, expected)

        df = gen_test(900000, 100000)
        assert df.index.is_unique is False

        mask = np.arange(100000)
        result = df.loc[mask]
        expected = gen_expected(df, mask)
        tm.assert_frame_equal(result, expected)

    def test_loc_name(self):
        # GH 3880
        df = DataFrame([[1, 1], [1, 1]])
        df.index.name = "index_name"
        result = df.iloc[[0, 1]].index.name
        assert result == "index_name"

        result = df.loc[[0, 1]].index.name
        assert result == "index_name"

    def test_loc_empty_list_indexer_is_ok(self):

        df = tm.makeCustomDataframe(5, 2)
        # vertical empty
        tm.assert_frame_equal(
            df.loc[:, []], df.iloc[:, :0], check_index_type=True, check_column_type=True
        )
        # horizontal empty
        tm.assert_frame_equal(
            df.loc[[], :], df.iloc[:0, :], check_index_type=True, check_column_type=True
        )
        # horizontal empty
        tm.assert_frame_equal(
            df.loc[[]], df.iloc[:0, :], check_index_type=True, check_column_type=True
        )

    def test_identity_slice_returns_new_object(self, using_array_manager):
        # GH13873
        original_df = DataFrame({"a": [1, 2, 3]})
        sliced_df = original_df.loc[:]
        assert sliced_df is not original_df
        assert original_df[:] is not original_df

        # should be a shallow copy
        original_df["a"] = [4, 4, 4]
        if using_array_manager:
            # TODO(ArrayManager) verify it is expected that the original didn't change
            # setitem is replacing full column, so doesn't update "viewing" dataframe
            assert not (sliced_df["a"] == 4).all()
        else:
            assert (sliced_df["a"] == 4).all()

        # These should not return copies
        assert original_df is original_df.loc[:, :]
        df = DataFrame(np.random.randn(10, 4))
        assert df[0] is df.loc[:, 0]

        # Same tests for Series
        original_series = Series([1, 2, 3, 4, 5, 6])
        sliced_series = original_series.loc[:]
        assert sliced_series is not original_series
        assert original_series[:] is not original_series

        original_series[:3] = [7, 8, 9]
        assert all(sliced_series[:3] == [7, 8, 9])

    @pytest.mark.xfail(reason="accidental fix reverted - GH37497")
    def test_loc_copy_vs_view(self):
        # GH 15631
        x = DataFrame(zip(range(3), range(3)), columns=["a", "b"])

        y = x.copy()
        q = y.loc[:, "a"]
        q += 2

        tm.assert_frame_equal(x, y)

        z = x.copy()
        q = z.loc[x.index, "a"]
        q += 2

        tm.assert_frame_equal(x, z)

    def test_loc_uint64(self):
        # GH20722
        # Test whether loc accept uint64 max value as index.
        umax = np.iinfo("uint64").max
        ser = Series([1, 2], index=[umax - 1, umax])

        result = ser.loc[umax - 1]
        expected = ser.iloc[0]
        assert result == expected

        result = ser.loc[[umax - 1]]
        expected = ser.iloc[[0]]
        tm.assert_series_equal(result, expected)

        result = ser.loc[[umax - 1, umax]]
        tm.assert_series_equal(result, ser)

    def test_loc_uint64_disallow_negative(self):
        # GH#41775
        umax = np.iinfo("uint64").max
        ser = Series([1, 2], index=[umax - 1, umax])

        with pytest.raises(KeyError, match="-1"):
            # don't wrap around
            ser.loc[-1]

        with pytest.raises(KeyError, match="-1"):
            # don't wrap around
            ser.loc[[-1]]

    def test_loc_setitem_empty_append_expands_rows(self):
        # GH6173, various appends to an empty dataframe

        data = [1, 2, 3]
        expected = DataFrame({"x": data, "y": [None] * len(data)})

        # appends to fit length of data
        df = DataFrame(columns=["x", "y"])
        df.loc[:, "x"] = data
        tm.assert_frame_equal(df, expected)

    def test_loc_setitem_empty_append_expands_rows_mixed_dtype(self):
        # GH#37932 same as test_loc_setitem_empty_append_expands_rows
        #  but with mixed dtype so we go through take_split_path
        data = [1, 2, 3]
        expected = DataFrame({"x": data, "y": [None] * len(data)})

        df = DataFrame(columns=["x", "y"])
        df["x"] = df["x"].astype(np.int64)
        df.loc[:, "x"] = data
        tm.assert_frame_equal(df, expected)

    def test_loc_setitem_empty_append_single_value(self):
        # only appends one value
        expected = DataFrame({"x": [1.0], "y": [np.nan]})
        df = DataFrame(columns=["x", "y"], dtype=float)
        df.loc[0, "x"] = expected.loc[0, "x"]
        tm.assert_frame_equal(df, expected)

    # TODO(ArrayManager) "split" path doesn't handle this case and gives wrong
    # error message
    @td.skip_array_manager_not_yet_implemented
    def test_loc_setitem_empty_append_raises(self):
        # GH6173, various appends to an empty dataframe

        data = [1, 2]
        df = DataFrame(columns=["x", "y"])
        df.index = df.index.astype(np.int64)
        msg = (
            r"None of \[Int64Index\(\[0, 1\], dtype='int64'\)\] "
            r"are in the \[index\]"
        )
        with pytest.raises(KeyError, match=msg):
            df.loc[[0, 1], "x"] = data

        msg = "|".join(
            [
                "cannot copy sequence with size 2 to array axis with dimension 0",
                r"could not broadcast input array from shape \(2,\) into shape \(0,\)",
                "Must have equal len keys and value when setting with an iterable",
            ]
        )
        with pytest.raises(ValueError, match=msg):
            df.loc[0:2, "x"] = data

    def test_indexing_zerodim_np_array(self):
        # GH24924
        df = DataFrame([[1, 2], [3, 4]])
        result = df.loc[np.array(0)]
        s = Series([1, 2], name=0)
        tm.assert_series_equal(result, s)

    def test_series_indexing_zerodim_np_array(self):
        # GH24924
        s = Series([1, 2])
        result = s.loc[np.array(0)]
        assert result == 1

    def test_loc_reverse_assignment(self):
        # GH26939
        data = [1, 2, 3, 4, 5, 6] + [None] * 4
        expected = Series(data, index=range(2010, 2020))

        result = Series(index=range(2010, 2020), dtype=np.float64)
        result.loc[2015:2010:-1] = [6, 5, 4, 3, 2, 1]

        tm.assert_series_equal(result, expected)

    def test_loc_setitem_str_to_small_float_conversion_type(self):
        # GH#20388
        np.random.seed(13)
        col_data = [str(np.random.random() * 1e-12) for _ in range(5)]
        result = DataFrame(col_data, columns=["A"])
        expected = DataFrame(col_data, columns=["A"], dtype=object)
        tm.assert_frame_equal(result, expected)

        # assigning with loc/iloc attempts to set the values inplace, which
        #  in this case is successful
        result.loc[result.index, "A"] = [float(x) for x in col_data]
        expected = DataFrame(col_data, columns=["A"], dtype=float).astype(object)
        tm.assert_frame_equal(result, expected)

        # assigning the entire column using __setitem__ swaps in the new array
        # GH#???
        result["A"] = [float(x) for x in col_data]
        expected = DataFrame(col_data, columns=["A"], dtype=float)
        tm.assert_frame_equal(result, expected)

    def test_loc_getitem_time_object(self, frame_or_series):
        rng = date_range("1/1/2000", "1/5/2000", freq="5min")
        mask = (rng.hour == 9) & (rng.minute == 30)

        obj = DataFrame(np.random.randn(len(rng), 3), index=rng)
        if frame_or_series is Series:
            obj = obj[0]

        result = obj.loc[time(9, 30)]
        exp = obj.loc[mask]
        tm.assert_equal(result, exp)

        chunk = obj.loc["1/4/2000":]
        result = chunk.loc[time(9, 30)]
        expected = result[-1:]

        # Without resetting the freqs, these are 5 min and 1440 min, respectively
        result.index = result.index._with_freq(None)
        expected.index = expected.index._with_freq(None)
        tm.assert_equal(result, expected)

    @pytest.mark.parametrize("spmatrix_t", ["coo_matrix", "csc_matrix", "csr_matrix"])
    @pytest.mark.parametrize("dtype", [np.int64, np.float64, complex])
    @td.skip_if_no_scipy
    def test_loc_getitem_range_from_spmatrix(self, spmatrix_t, dtype):
        import scipy.sparse

        spmatrix_t = getattr(scipy.sparse, spmatrix_t)

        # The bug is triggered by a sparse matrix with purely sparse columns.  So the
        # recipe below generates a rectangular matrix of dimension (5, 7) where all the
        # diagonal cells are ones, meaning the last two columns are purely sparse.
        rows, cols = 5, 7
        spmatrix = spmatrix_t(np.eye(rows, cols, dtype=dtype), dtype=dtype)
        df = DataFrame.sparse.from_spmatrix(spmatrix)

        # regression test for GH#34526
        itr_idx = range(2, rows)
        result = df.loc[itr_idx].values
        expected = spmatrix.toarray()[itr_idx]
        tm.assert_numpy_array_equal(result, expected)

        # regression test for GH#34540
        result = df.loc[itr_idx].dtypes.values
        expected = np.full(cols, SparseDtype(dtype, fill_value=0))
        tm.assert_numpy_array_equal(result, expected)

    def test_loc_getitem_listlike_all_retains_sparse(self):
        df = DataFrame({"A": pd.array([0, 0], dtype=SparseDtype("int64"))})
        result = df.loc[[0, 1]]
        tm.assert_frame_equal(result, df)

    @td.skip_if_no_scipy
    def test_loc_getitem_sparse_frame(self):
        # GH34687
        from scipy.sparse import eye

        df = DataFrame.sparse.from_spmatrix(eye(5))
        result = df.loc[range(2)]
        expected = DataFrame(
            [[1.0, 0.0, 0.0, 0.0, 0.0], [0.0, 1.0, 0.0, 0.0, 0.0]],
            dtype=SparseDtype("float64", 0.0),
        )
        tm.assert_frame_equal(result, expected)

        result = df.loc[range(2)].loc[range(1)]
        expected = DataFrame(
            [[1.0, 0.0, 0.0, 0.0, 0.0]], dtype=SparseDtype("float64", 0.0)
        )
        tm.assert_frame_equal(result, expected)

    def test_loc_getitem_sparse_series(self):
        # GH34687
        s = Series([1.0, 0.0, 0.0, 0.0, 0.0], dtype=SparseDtype("float64", 0.0))

        result = s.loc[range(2)]
        expected = Series([1.0, 0.0], dtype=SparseDtype("float64", 0.0))
        tm.assert_series_equal(result, expected)

        result = s.loc[range(3)].loc[range(2)]
        expected = Series([1.0, 0.0], dtype=SparseDtype("float64", 0.0))
        tm.assert_series_equal(result, expected)

    @pytest.mark.parametrize("key_type", [iter, np.array, Series, Index])
    def test_loc_getitem_iterable(self, float_frame, key_type):
        idx = key_type(["A", "B", "C"])
        result = float_frame.loc[:, idx]
        expected = float_frame.loc[:, ["A", "B", "C"]]
        tm.assert_frame_equal(result, expected)

    def test_loc_getitem_timedelta_0seconds(self):
        # GH#10583
        df = DataFrame(np.random.normal(size=(10, 4)))
        df.index = timedelta_range(start="0s", periods=10, freq="s")
        expected = df.loc[Timedelta("0s") :, :]
        result = df.loc["0s":, :]
        tm.assert_frame_equal(result, expected)

    @pytest.mark.parametrize(
        "val,expected", [(2 ** 63 - 1, Series([1])), (2 ** 63, Series([2]))]
    )
    def test_loc_getitem_uint64_scalar(self, val, expected):
        # see GH#19399
        df = DataFrame([1, 2], index=[2 ** 63 - 1, 2 ** 63])
        result = df.loc[val]

        expected.name = val
        tm.assert_series_equal(result, expected)

    def test_loc_setitem_int_label_with_float64index(self):
        # note labels are floats
        ser = Series(["a", "b", "c"], index=[0, 0.5, 1])
        expected = ser.copy()

        ser.loc[1] = "zoo"
        expected.iloc[2] = "zoo"

        tm.assert_series_equal(ser, expected)

    @pytest.mark.parametrize(
        "indexer, expected",
        [
            # The test name is a misnomer in the 0 case as df.index[indexer]
            #  is a scalar.
            (0, [20, 1, 2, 3, 4, 5, 6, 7, 8, 9]),
            (slice(4, 8), [0, 1, 2, 3, 20, 20, 20, 20, 8, 9]),
            ([3, 5], [0, 1, 2, 20, 4, 20, 6, 7, 8, 9]),
        ],
    )
    def test_loc_setitem_listlike_with_timedelta64index(self, indexer, expected):
        # GH#16637
        tdi = to_timedelta(range(10), unit="s")
        df = DataFrame({"x": range(10)}, dtype="int64", index=tdi)

        df.loc[df.index[indexer], "x"] = 20

        expected = DataFrame(
            expected,
            index=tdi,
            columns=["x"],
            dtype="int64",
        )

        tm.assert_frame_equal(expected, df)

    def test_loc_setitem_categorical_values_partial_column_slice(self):
        # Assigning a Category to parts of a int/... column uses the values of
        # the Categorical
        df = DataFrame({"a": [1, 1, 1, 1, 1], "b": list("aaaaa")})
        exp = DataFrame({"a": [1, "b", "b", 1, 1], "b": list("aabba")})
        df.loc[1:2, "a"] = Categorical(["b", "b"], categories=["a", "b"])
        df.loc[2:3, "b"] = Categorical(["b", "b"], categories=["a", "b"])
        tm.assert_frame_equal(df, exp)

    def test_loc_setitem_single_row_categorical(self):
        # GH#25495
        df = DataFrame({"Alpha": ["a"], "Numeric": [0]})
        categories = Categorical(df["Alpha"], categories=["a", "b", "c"])
        df.loc[:, "Alpha"] = categories

        result = df["Alpha"]
        expected = Series(categories, index=df.index, name="Alpha")
        tm.assert_series_equal(result, expected)

    def test_loc_setitem_datetime_coercion(self):
        # GH#1048
        df = DataFrame({"c": [Timestamp("2010-10-01")] * 3})
        df.loc[0:1, "c"] = np.datetime64("2008-08-08")
        assert Timestamp("2008-08-08") == df.loc[0, "c"]
        assert Timestamp("2008-08-08") == df.loc[1, "c"]
        df.loc[2, "c"] = date(2005, 5, 5)
        with tm.assert_produces_warning(FutureWarning):
            # Comparing Timestamp to date obj is deprecated
            assert Timestamp("2005-05-05") == df.loc[2, "c"]
        assert Timestamp("2005-05-05").date() == df.loc[2, "c"]

    @pytest.mark.parametrize("idxer", ["var", ["var"]])
    def test_loc_setitem_datetimeindex_tz(self, idxer, tz_naive_fixture):
        # GH#11365
        tz = tz_naive_fixture
        idx = date_range(start="2015-07-12", periods=3, freq="H", tz=tz)
        expected = DataFrame(1.2, index=idx, columns=["var"])
        # if result started off with object dtype, tehn the .loc.__setitem__
        #  below would retain object dtype
        result = DataFrame(index=idx, columns=["var"], dtype=np.float64)
        result.loc[:, idxer] = expected
        tm.assert_frame_equal(result, expected)

    def test_loc_setitem_time_key(self, using_array_manager):
        index = date_range("2012-01-01", "2012-01-05", freq="30min")
        df = DataFrame(np.random.randn(len(index), 5), index=index)
        akey = time(12, 0, 0)
        bkey = slice(time(13, 0, 0), time(14, 0, 0))
        ainds = [24, 72, 120, 168]
        binds = [26, 27, 28, 74, 75, 76, 122, 123, 124, 170, 171, 172]

        result = df.copy()
        result.loc[akey] = 0
        result = result.loc[akey]
        expected = df.loc[akey].copy()
        expected.loc[:] = 0
        if using_array_manager:
            # TODO(ArrayManager) we are still overwriting columns
            expected = expected.astype(float)
        tm.assert_frame_equal(result, expected)

        result = df.copy()
        result.loc[akey] = 0
        result.loc[akey] = df.iloc[ainds]
        tm.assert_frame_equal(result, df)

        result = df.copy()
        result.loc[bkey] = 0
        result = result.loc[bkey]
        expected = df.loc[bkey].copy()
        expected.loc[:] = 0
        if using_array_manager:
            # TODO(ArrayManager) we are still overwriting columns
            expected = expected.astype(float)
        tm.assert_frame_equal(result, expected)

        result = df.copy()
        result.loc[bkey] = 0
        result.loc[bkey] = df.iloc[binds]
        tm.assert_frame_equal(result, df)

    @pytest.mark.parametrize("key", ["A", ["A"], ("A", slice(None))])
    def test_loc_setitem_unsorted_multiindex_columns(self, key):
        # GH#38601
        mi = MultiIndex.from_tuples([("A", 4), ("B", "3"), ("A", "2")])
        df = DataFrame([[1, 2, 3], [4, 5, 6]], columns=mi)
        obj = df.copy()
        obj.loc[:, key] = np.zeros((2, 2), dtype=int)
        expected = DataFrame([[0, 2, 0], [0, 5, 0]], columns=mi)
        tm.assert_frame_equal(obj, expected)

        df = df.sort_index(axis=1)
        df.loc[:, key] = np.zeros((2, 2), dtype=int)
        expected = expected.sort_index(axis=1)
        tm.assert_frame_equal(df, expected)

    def test_loc_setitem_uint_drop(self, any_int_dtype):
        # see GH#18311
        # assigning series.loc[0] = 4 changed series.dtype to int
        series = Series([1, 2, 3], dtype=any_int_dtype)
        series.loc[0] = 4
        expected = Series([4, 2, 3], dtype=any_int_dtype)
        tm.assert_series_equal(series, expected)

    def test_loc_setitem_td64_non_nano(self):
        # GH#14155
        ser = Series(10 * [np.timedelta64(10, "m")])
        ser.loc[[1, 2, 3]] = np.timedelta64(20, "m")
        expected = Series(10 * [np.timedelta64(10, "m")])
        expected.loc[[1, 2, 3]] = Timedelta(np.timedelta64(20, "m"))
        tm.assert_series_equal(ser, expected)

    def test_loc_setitem_2d_to_1d_raises(self):
        data = np.random.randn(2, 2)
        ser = Series(range(2))

        msg = "|".join(
            [
                r"shape mismatch: value array of shape \(2,2\)",
                r"cannot reshape array of size 4 into shape \(2,\)",
            ]
        )
        with pytest.raises(ValueError, match=msg):
            ser.loc[range(2)] = data

        msg = r"could not broadcast input array from shape \(2,2\) into shape \(2,?\)"
        with pytest.raises(ValueError, match=msg):
            ser.loc[:] = data

    def test_loc_getitem_interval_index(self):
        # GH#19977
        index = pd.interval_range(start=0, periods=3)
        df = DataFrame(
            [[1, 2, 3], [4, 5, 6], [7, 8, 9]], index=index, columns=["A", "B", "C"]
        )

        expected = 1
        result = df.loc[0.5, "A"]
        tm.assert_almost_equal(result, expected)

    def test_loc_getitem_interval_index2(self):
        # GH#19977
        index = pd.interval_range(start=0, periods=3, closed="both")
        df = DataFrame(
            [[1, 2, 3], [4, 5, 6], [7, 8, 9]], index=index, columns=["A", "B", "C"]
        )

        index_exp = pd.interval_range(start=0, periods=2, freq=1, closed="both")
        expected = Series([1, 4], index=index_exp, name="A")
        result = df.loc[1, "A"]
        tm.assert_series_equal(result, expected)

    @pytest.mark.parametrize("tpl", [(1,), (1, 2)])
    def test_loc_getitem_index_single_double_tuples(self, tpl):
        # GH#20991
        idx = Index(
            [(1,), (1, 2)],
            name="A",
            tupleize_cols=False,
        )
        df = DataFrame(index=idx)

        result = df.loc[[tpl]]
        idx = Index([tpl], name="A", tupleize_cols=False)
        expected = DataFrame(index=idx)
        tm.assert_frame_equal(result, expected)

    def test_loc_getitem_index_namedtuple(self):
        IndexType = namedtuple("IndexType", ["a", "b"])
        idx1 = IndexType("foo", "bar")
        idx2 = IndexType("baz", "bof")
        index = Index([idx1, idx2], name="composite_index", tupleize_cols=False)
        df = DataFrame([(1, 2), (3, 4)], index=index, columns=["A", "B"])

        result = df.loc[IndexType("foo", "bar")]["A"]
        assert result == 1

    def test_loc_setitem_single_column_mixed(self):
        df = DataFrame(
            np.random.randn(5, 3),
            index=["a", "b", "c", "d", "e"],
            columns=["foo", "bar", "baz"],
        )
        df["str"] = "qux"
        df.loc[df.index[::2], "str"] = np.nan
        expected = np.array([np.nan, "qux", np.nan, "qux", np.nan], dtype=object)
        tm.assert_almost_equal(df["str"].values, expected)

    def test_loc_setitem_cast2(self):
        # GH#7704
        # dtype conversion on setting
        df = DataFrame(np.random.rand(30, 3), columns=tuple("ABC"))
        df["event"] = np.nan
        df.loc[10, "event"] = "foo"
        result = df.dtypes
        expected = Series(
            [np.dtype("float64")] * 3 + [np.dtype("object")],
            index=["A", "B", "C", "event"],
        )
        tm.assert_series_equal(result, expected)

    def test_loc_setitem_cast3(self):
        # Test that data type is preserved . GH#5782
        df = DataFrame({"one": np.arange(6, dtype=np.int8)})
        df.loc[1, "one"] = 6
        assert df.dtypes.one == np.dtype(np.int8)
        df.one = np.int8(7)
        assert df.dtypes.one == np.dtype(np.int8)


class TestLocWithMultiIndex:
    @pytest.mark.parametrize(
        "keys, expected",
        [
            (["b", "a"], [["b", "b", "a", "a"], [1, 2, 1, 2]]),
            (["a", "b"], [["a", "a", "b", "b"], [1, 2, 1, 2]]),
            ((["a", "b"], [1, 2]), [["a", "a", "b", "b"], [1, 2, 1, 2]]),
            ((["a", "b"], [2, 1]), [["a", "a", "b", "b"], [2, 1, 2, 1]]),
            ((["b", "a"], [2, 1]), [["b", "b", "a", "a"], [2, 1, 2, 1]]),
            ((["b", "a"], [1, 2]), [["b", "b", "a", "a"], [1, 2, 1, 2]]),
            ((["c", "a"], [2, 1]), [["c", "a", "a"], [1, 2, 1]]),
        ],
    )
    @pytest.mark.parametrize("dim", ["index", "columns"])
    def test_loc_getitem_multilevel_index_order(self, dim, keys, expected):
        # GH#22797
        # Try to respect order of keys given for MultiIndex.loc
        kwargs = {dim: [["c", "a", "a", "b", "b"], [1, 1, 2, 1, 2]]}
        df = DataFrame(np.arange(25).reshape(5, 5), **kwargs)
        exp_index = MultiIndex.from_arrays(expected)
        if dim == "index":
            res = df.loc[keys, :]
            tm.assert_index_equal(res.index, exp_index)
        elif dim == "columns":
            res = df.loc[:, keys]
            tm.assert_index_equal(res.columns, exp_index)

    def test_loc_preserve_names(self, multiindex_year_month_day_dataframe_random_data):
        ymd = multiindex_year_month_day_dataframe_random_data

        result = ymd.loc[2000]
        result2 = ymd["A"].loc[2000]
        assert result.index.names == ymd.index.names[1:]
        assert result2.index.names == ymd.index.names[1:]

        result = ymd.loc[2000, 2]
        result2 = ymd["A"].loc[2000, 2]
        assert result.index.name == ymd.index.names[2]
        assert result2.index.name == ymd.index.names[2]

    def test_loc_getitem_multiindex_nonunique_len_zero(self):
        # GH#13691
        mi = MultiIndex.from_product([[0], [1, 1]])
        ser = Series(0, index=mi)

        res = ser.loc[[]]

        expected = ser[:0]
        tm.assert_series_equal(res, expected)

        res2 = ser.loc[ser.iloc[0:0]]
        tm.assert_series_equal(res2, expected)

    def test_loc_getitem_access_none_value_in_multiindex(self):
        # GH#34318: test that you can access a None value using .loc
        #  through a Multiindex

        ser = Series([None], MultiIndex.from_arrays([["Level1"], ["Level2"]]))
        result = ser.loc[("Level1", "Level2")]
        assert result is None

        midx = MultiIndex.from_product([["Level1"], ["Level2_a", "Level2_b"]])
        ser = Series([None] * len(midx), dtype=object, index=midx)
        result = ser.loc[("Level1", "Level2_a")]
        assert result is None

        ser = Series([1] * len(midx), dtype=object, index=midx)
        result = ser.loc[("Level1", "Level2_a")]
        assert result == 1

    def test_loc_setitem_multiindex_slice(self):
        # GH 34870

        index = MultiIndex.from_tuples(
            zip(
                ["bar", "bar", "baz", "baz", "foo", "foo", "qux", "qux"],
                ["one", "two", "one", "two", "one", "two", "one", "two"],
            ),
            names=["first", "second"],
        )

        result = Series([1, 1, 1, 1, 1, 1, 1, 1], index=index)
        result.loc[("baz", "one"):("foo", "two")] = 100

        expected = Series([1, 1, 100, 100, 100, 100, 1, 1], index=index)

        tm.assert_series_equal(result, expected)

    def test_loc_getitem_slice_datetime_objs_with_datetimeindex(self):
        times = date_range("2000-01-01", freq="10min", periods=100000)
        ser = Series(range(100000), times)
        result = ser.loc[datetime(1900, 1, 1) : datetime(2100, 1, 1)]
        tm.assert_series_equal(result, ser)

    def test_loc_getitem_datetime_string_with_datetimeindex(self):
        # GH 16710
        df = DataFrame(
            {"a": range(10), "b": range(10)},
            index=date_range("2010-01-01", "2010-01-10"),
        )
        result = df.loc[["2010-01-01", "2010-01-05"], ["a", "b"]]
        expected = DataFrame(
            {"a": [0, 4], "b": [0, 4]},
            index=DatetimeIndex(["2010-01-01", "2010-01-05"]),
        )
        tm.assert_frame_equal(result, expected)

    def test_loc_getitem_sorted_index_level_with_duplicates(self):
        # GH#4516 sorting a MultiIndex with duplicates and multiple dtypes
        mi = MultiIndex.from_tuples(
            [
                ("foo", "bar"),
                ("foo", "bar"),
                ("bah", "bam"),
                ("bah", "bam"),
                ("foo", "bar"),
                ("bah", "bam"),
            ],
            names=["A", "B"],
        )
        df = DataFrame(
            [
                [1.0, 1],
                [2.0, 2],
                [3.0, 3],
                [4.0, 4],
                [5.0, 5],
                [6.0, 6],
            ],
            index=mi,
            columns=["C", "D"],
        )
        df = df.sort_index(level=0)

        expected = DataFrame(
            [[1.0, 1], [2.0, 2], [5.0, 5]], columns=["C", "D"], index=mi.take([0, 1, 4])
        )

        result = df.loc[("foo", "bar")]
        tm.assert_frame_equal(result, expected)

    def test_loc_getitem_preserves_index_level_category_dtype(self):
        # GH#15166
        df = DataFrame(
            data=np.arange(2, 22, 2),
            index=MultiIndex(
                levels=[CategoricalIndex(["a", "b"]), range(10)],
                codes=[[0] * 5 + [1] * 5, range(10)],
                names=["Index1", "Index2"],
            ),
        )

        expected = CategoricalIndex(
            ["a", "b"],
            categories=["a", "b"],
            ordered=False,
            name="Index1",
            dtype="category",
        )

        result = df.index.levels[0]
        tm.assert_index_equal(result, expected)

        result = df.loc[["a"]].index.levels[0]
        tm.assert_index_equal(result, expected)

    @pytest.mark.parametrize("lt_value", [30, 10])
    def test_loc_multiindex_levels_contain_values_not_in_index_anymore(self, lt_value):
        # GH#41170
        df = DataFrame({"a": [12, 23, 34, 45]}, index=[list("aabb"), [0, 1, 2, 3]])
        with pytest.raises(KeyError, match=r"\['b'\] not in index"):
            df.loc[df["a"] < lt_value, :].loc[["b"], :]


class TestLocSetitemWithExpansion:
    @pytest.mark.slow
    def test_loc_setitem_with_expansion_large_dataframe(self):
        # GH#10692
        result = DataFrame({"x": range(10 ** 6)}, dtype="int64")
        result.loc[len(result)] = len(result) + 1
        expected = DataFrame({"x": range(10 ** 6 + 1)}, dtype="int64")
        tm.assert_frame_equal(result, expected)

    def test_loc_setitem_empty_series(self):
        # GH#5226

        # partially set with an empty object series
        ser = Series(dtype=object)
        ser.loc[1] = 1
        tm.assert_series_equal(ser, Series([1], index=[1]))
        ser.loc[3] = 3
        tm.assert_series_equal(ser, Series([1, 3], index=[1, 3]))

        ser = Series(dtype=object)
        ser.loc[1] = 1.0
        tm.assert_series_equal(ser, Series([1.0], index=[1]))
        ser.loc[3] = 3.0
        tm.assert_series_equal(ser, Series([1.0, 3.0], index=[1, 3]))

        ser = Series(dtype=object)
        ser.loc["foo"] = 1
        tm.assert_series_equal(ser, Series([1], index=["foo"]))
        ser.loc["bar"] = 3
        tm.assert_series_equal(ser, Series([1, 3], index=["foo", "bar"]))
        ser.loc[3] = 4
        tm.assert_series_equal(ser, Series([1, 3, 4], index=["foo", "bar", 3]))

    def test_loc_setitem_incremental_with_dst(self):
        # GH#20724
        base = datetime(2015, 11, 1, tzinfo=gettz("US/Pacific"))
        idxs = [base + timedelta(seconds=i * 900) for i in range(16)]
        result = Series([0], index=[idxs[0]])
        for ts in idxs:
            result.loc[ts] = 1
        expected = Series(1, index=idxs)
        tm.assert_series_equal(result, expected)

    def test_loc_setitem_datetime_keys_cast(self):
        # GH#9516
        dt1 = Timestamp("20130101 09:00:00")
        dt2 = Timestamp("20130101 10:00:00")

        for conv in [
            lambda x: x,
            lambda x: x.to_datetime64(),
            lambda x: x.to_pydatetime(),
            lambda x: np.datetime64(x),
        ]:

            df = DataFrame()
            df.loc[conv(dt1), "one"] = 100
            df.loc[conv(dt2), "one"] = 200

            expected = DataFrame({"one": [100.0, 200.0]}, index=[dt1, dt2])
            tm.assert_frame_equal(df, expected)

    def test_loc_setitem_categorical_column_retains_dtype(self, ordered):
        # GH16360
        result = DataFrame({"A": [1]})
        result.loc[:, "B"] = Categorical(["b"], ordered=ordered)
        expected = DataFrame({"A": [1], "B": Categorical(["b"], ordered=ordered)})
        tm.assert_frame_equal(result, expected)

    def test_loc_setitem_with_expansion_and_existing_dst(self):
        # GH#18308
        start = Timestamp("2017-10-29 00:00:00+0200", tz="Europe/Madrid")
        end = Timestamp("2017-10-29 03:00:00+0100", tz="Europe/Madrid")
        ts = Timestamp("2016-10-10 03:00:00", tz="Europe/Madrid")
        idx = date_range(start, end, closed="left", freq="H")
        assert ts not in idx  # i.e. result.loc setitem is with-expansion

        result = DataFrame(index=idx, columns=["value"])
        result.loc[ts, "value"] = 12
        expected = DataFrame(
            [np.nan] * len(idx) + [12],
            index=idx.append(DatetimeIndex([ts])),
            columns=["value"],
            dtype=object,
        )
        tm.assert_frame_equal(result, expected)

    def test_setitem_with_expansion(self):
        # indexing - setting an element
        df = DataFrame(
            data=to_datetime(["2015-03-30 20:12:32", "2015-03-12 00:11:11"]),
            columns=["time"],
        )
        df["new_col"] = ["new", "old"]
        df.time = df.set_index("time").index.tz_localize("UTC")
        v = df[df.new_col == "new"].set_index("time").index.tz_convert("US/Pacific")

        # trying to set a single element on a part of a different timezone
        # this converts to object
        df2 = df.copy()
        df2.loc[df2.new_col == "new", "time"] = v

        expected = Series([v[0], df.loc[1, "time"]], name="time")
        tm.assert_series_equal(df2.time, expected)

        v = df.loc[df.new_col == "new", "time"] + Timedelta("1s")
        df.loc[df.new_col == "new", "time"] = v
        tm.assert_series_equal(df.loc[df.new_col == "new", "time"], v)

    def test_loc_setitem_with_expansion_inf_upcast_empty(self):
        # Test with np.inf in columns
        df = DataFrame()
        df.loc[0, 0] = 1
        df.loc[1, 1] = 2
        df.loc[0, np.inf] = 3

        result = df.columns
        expected = pd.Float64Index([0, 1, np.inf])
        tm.assert_index_equal(result, expected)

    @pytest.mark.filterwarnings("ignore:indexing past lexsort depth")
    def test_loc_setitem_with_expansion_nonunique_index(self, index, request):
        # GH#40096
        if not len(index):
            return

        index = index.repeat(2)  # ensure non-unique
        N = len(index)
        arr = np.arange(N).astype(np.int64)

        orig = DataFrame(arr, index=index, columns=[0])

        # key that will requiring object-dtype casting in the index
        key = "kapow"
        assert key not in index  # otherwise test is invalid
        # TODO: using a tuple key breaks here in many cases

        exp_index = index.insert(len(index), key)
        if isinstance(index, MultiIndex):
            assert exp_index[-1][0] == key
        else:
            assert exp_index[-1] == key
        exp_data = np.arange(N + 1).astype(np.float64)
        expected = DataFrame(exp_data, index=exp_index, columns=[0])

        # Add new row, but no new columns
        df = orig.copy()
        df.loc[key, 0] = N
        tm.assert_frame_equal(df, expected)

        # add new row on a Series
        ser = orig.copy()[0]
        ser.loc[key] = N
        # the series machinery lets us preserve int dtype instead of float
        expected = expected[0].astype(np.int64)
        tm.assert_series_equal(ser, expected)

        # add new row and new column
        df = orig.copy()
        df.loc[key, 1] = N
        expected = DataFrame(
            {0: list(arr) + [np.nan], 1: [np.nan] * N + [float(N)]},
            index=exp_index,
        )
        tm.assert_frame_equal(df, expected)

    @pytest.mark.parametrize(
        "dtype", ["Int32", "Int64", "UInt32", "UInt64", "Float32", "Float64"]
    )
    def test_loc_setitem_with_expansion_preserves_nullable_int(self, dtype):
        # GH#42099
        ser = Series([0, 1, 2, 3], dtype=dtype)
        df = DataFrame({"data": ser})

        result = DataFrame(index=df.index)
        result.loc[df.index, "data"] = ser

        tm.assert_frame_equal(result, df)

        result = DataFrame(index=df.index)
        result.loc[df.index, "data"] = ser._values
        tm.assert_frame_equal(result, df)


class TestLocCallable:
    def test_frame_loc_getitem_callable(self):
        # GH#11485
        df = DataFrame({"A": [1, 2, 3, 4], "B": list("aabb"), "C": [1, 2, 3, 4]})
        # iloc cannot use boolean Series (see GH3635)

        # return bool indexer
        res = df.loc[lambda x: x.A > 2]
        tm.assert_frame_equal(res, df.loc[df.A > 2])

        res = df.loc[lambda x: x.B == "b", :]
        tm.assert_frame_equal(res, df.loc[df.B == "b", :])

        res = df.loc[lambda x: x.A > 2, lambda x: x.columns == "B"]
        tm.assert_frame_equal(res, df.loc[df.A > 2, [False, True, False]])

        res = df.loc[lambda x: x.A > 2, lambda x: "B"]
        tm.assert_series_equal(res, df.loc[df.A > 2, "B"])

        res = df.loc[lambda x: x.A > 2, lambda x: ["A", "B"]]
        tm.assert_frame_equal(res, df.loc[df.A > 2, ["A", "B"]])

        res = df.loc[lambda x: x.A == 2, lambda x: ["A", "B"]]
        tm.assert_frame_equal(res, df.loc[df.A == 2, ["A", "B"]])

        # scalar
        res = df.loc[lambda x: 1, lambda x: "A"]
        assert res == df.loc[1, "A"]

    def test_frame_loc_getitem_callable_mixture(self):
        # GH#11485
        df = DataFrame({"A": [1, 2, 3, 4], "B": list("aabb"), "C": [1, 2, 3, 4]})

        res = df.loc[lambda x: x.A > 2, ["A", "B"]]
        tm.assert_frame_equal(res, df.loc[df.A > 2, ["A", "B"]])

        res = df.loc[[2, 3], lambda x: ["A", "B"]]
        tm.assert_frame_equal(res, df.loc[[2, 3], ["A", "B"]])

        res = df.loc[3, lambda x: ["A", "B"]]
        tm.assert_series_equal(res, df.loc[3, ["A", "B"]])

    def test_frame_loc_getitem_callable_labels(self):
        # GH#11485
        df = DataFrame({"X": [1, 2, 3, 4], "Y": list("aabb")}, index=list("ABCD"))

        # return label
        res = df.loc[lambda x: ["A", "C"]]
        tm.assert_frame_equal(res, df.loc[["A", "C"]])

        res = df.loc[lambda x: ["A", "C"], :]
        tm.assert_frame_equal(res, df.loc[["A", "C"], :])

        res = df.loc[lambda x: ["A", "C"], lambda x: "X"]
        tm.assert_series_equal(res, df.loc[["A", "C"], "X"])

        res = df.loc[lambda x: ["A", "C"], lambda x: ["X"]]
        tm.assert_frame_equal(res, df.loc[["A", "C"], ["X"]])

        # mixture
        res = df.loc[["A", "C"], lambda x: "X"]
        tm.assert_series_equal(res, df.loc[["A", "C"], "X"])

        res = df.loc[["A", "C"], lambda x: ["X"]]
        tm.assert_frame_equal(res, df.loc[["A", "C"], ["X"]])

        res = df.loc[lambda x: ["A", "C"], "X"]
        tm.assert_series_equal(res, df.loc[["A", "C"], "X"])

        res = df.loc[lambda x: ["A", "C"], ["X"]]
        tm.assert_frame_equal(res, df.loc[["A", "C"], ["X"]])

    def test_frame_loc_setitem_callable(self):
        # GH#11485
        df = DataFrame({"X": [1, 2, 3, 4], "Y": list("aabb")}, index=list("ABCD"))

        # return label
        res = df.copy()
        res.loc[lambda x: ["A", "C"]] = -20
        exp = df.copy()
        exp.loc[["A", "C"]] = -20
        tm.assert_frame_equal(res, exp)

        res = df.copy()
        res.loc[lambda x: ["A", "C"], :] = 20
        exp = df.copy()
        exp.loc[["A", "C"], :] = 20
        tm.assert_frame_equal(res, exp)

        res = df.copy()
        res.loc[lambda x: ["A", "C"], lambda x: "X"] = -1
        exp = df.copy()
        exp.loc[["A", "C"], "X"] = -1
        tm.assert_frame_equal(res, exp)

        res = df.copy()
        res.loc[lambda x: ["A", "C"], lambda x: ["X"]] = [5, 10]
        exp = df.copy()
        exp.loc[["A", "C"], ["X"]] = [5, 10]
        tm.assert_frame_equal(res, exp)

        # mixture
        res = df.copy()
        res.loc[["A", "C"], lambda x: "X"] = np.array([-1, -2])
        exp = df.copy()
        exp.loc[["A", "C"], "X"] = np.array([-1, -2])
        tm.assert_frame_equal(res, exp)

        res = df.copy()
        res.loc[["A", "C"], lambda x: ["X"]] = 10
        exp = df.copy()
        exp.loc[["A", "C"], ["X"]] = 10
        tm.assert_frame_equal(res, exp)

        res = df.copy()
        res.loc[lambda x: ["A", "C"], "X"] = -2
        exp = df.copy()
        exp.loc[["A", "C"], "X"] = -2
        tm.assert_frame_equal(res, exp)

        res = df.copy()
        res.loc[lambda x: ["A", "C"], ["X"]] = -4
        exp = df.copy()
        exp.loc[["A", "C"], ["X"]] = -4
        tm.assert_frame_equal(res, exp)


class TestPartialStringSlicing:
    def test_loc_getitem_partial_string_slicing_datetimeindex(self):
        # GH#35509
        df = DataFrame(
            {"col1": ["a", "b", "c"], "col2": [1, 2, 3]},
            index=to_datetime(["2020-08-01", "2020-07-02", "2020-08-05"]),
        )
        expected = DataFrame(
            {"col1": ["a", "c"], "col2": [1, 3]},
            index=to_datetime(["2020-08-01", "2020-08-05"]),
        )
        result = df.loc["2020-08"]
        tm.assert_frame_equal(result, expected)

    def test_loc_getitem_partial_string_slicing_with_periodindex(self):
        pi = pd.period_range(start="2017-01-01", end="2018-01-01", freq="M")
        ser = pi.to_series()
        result = ser.loc[:"2017-12"]
        expected = ser.iloc[:-1]

        tm.assert_series_equal(result, expected)

    def test_loc_getitem_partial_string_slicing_with_timedeltaindex(self):
        ix = timedelta_range(start="1 day", end="2 days", freq="1H")
        ser = ix.to_series()
        result = ser.loc[:"1 days"]
        expected = ser.iloc[:-1]

        tm.assert_series_equal(result, expected)

    def test_loc_getitem_str_timedeltaindex(self):
        # GH#16896
        df = DataFrame({"x": range(3)}, index=to_timedelta(range(3), unit="days"))
        expected = df.iloc[0]
        sliced = df.loc["0 days"]
        tm.assert_series_equal(sliced, expected)

    @pytest.mark.parametrize("indexer_end", [None, "2020-01-02 23:59:59.999999999"])
    def test_loc_getitem_partial_slice_non_monotonicity(
        self, tz_aware_fixture, indexer_end, frame_or_series
    ):
        # GH#33146
        obj = frame_or_series(
            [1] * 5,
            index=DatetimeIndex(
                [
                    Timestamp("2019-12-30"),
                    Timestamp("2020-01-01"),
                    Timestamp("2019-12-25"),
                    Timestamp("2020-01-02 23:59:59.999999999"),
                    Timestamp("2019-12-19"),
                ],
                tz=tz_aware_fixture,
            ),
        )
        expected = frame_or_series(
            [1] * 2,
            index=DatetimeIndex(
                [
                    Timestamp("2020-01-01"),
                    Timestamp("2020-01-02 23:59:59.999999999"),
                ],
                tz=tz_aware_fixture,
            ),
        )
        indexer = slice("2020-01-01", indexer_end)

        result = obj[indexer]
        tm.assert_equal(result, expected)

        result = obj.loc[indexer]
        tm.assert_equal(result, expected)


class TestLabelSlicing:
    def test_loc_getitem_slicing_datetimes_frame(self):
        # GH#7523

        # unique
        df_unique = DataFrame(
            np.arange(4.0, dtype="float64"),
            index=[datetime(2001, 1, i, 10, 00) for i in [1, 2, 3, 4]],
        )

        # duplicates
        df_dups = DataFrame(
            np.arange(5.0, dtype="float64"),
            index=[datetime(2001, 1, i, 10, 00) for i in [1, 2, 2, 3, 4]],
        )

        for df in [df_unique, df_dups]:
            result = df.loc[datetime(2001, 1, 1, 10) :]
            tm.assert_frame_equal(result, df)
            result = df.loc[: datetime(2001, 1, 4, 10)]
            tm.assert_frame_equal(result, df)
            result = df.loc[datetime(2001, 1, 1, 10) : datetime(2001, 1, 4, 10)]
            tm.assert_frame_equal(result, df)

            result = df.loc[datetime(2001, 1, 1, 11) :]
            expected = df.iloc[1:]
            tm.assert_frame_equal(result, expected)
            result = df.loc["20010101 11":]
            tm.assert_frame_equal(result, expected)

    def test_loc_getitem_label_slice_across_dst(self):
        # GH#21846
        idx = date_range(
            "2017-10-29 01:30:00", tz="Europe/Berlin", periods=5, freq="30 min"
        )
        series2 = Series([0, 1, 2, 3, 4], index=idx)

        t_1 = Timestamp("2017-10-29 02:30:00+02:00", tz="Europe/Berlin")
        t_2 = Timestamp("2017-10-29 02:00:00+01:00", tz="Europe/Berlin")
        result = series2.loc[t_1:t_2]
        expected = Series([2, 3], index=idx[2:4])
        tm.assert_series_equal(result, expected)

        result = series2[t_1]
        expected = 2
        assert result == expected

    @pytest.mark.parametrize(
        "index",
        [
            pd.period_range(start="2017-01-01", end="2018-01-01", freq="M"),
            timedelta_range(start="1 day", end="2 days", freq="1H"),
        ],
    )
    def test_loc_getitem_label_slice_period_timedelta(self, index):
        ser = index.to_series()
        result = ser.loc[: index[-2]]
        expected = ser.iloc[:-1]

        tm.assert_series_equal(result, expected)

    def test_loc_getitem_slice_floats_inexact(self):
        index = [52195.504153, 52196.303147, 52198.369883]
        df = DataFrame(np.random.rand(3, 2), index=index)

        s1 = df.loc[52195.1:52196.5]
        assert len(s1) == 2

        s1 = df.loc[52195.1:52196.6]
        assert len(s1) == 2

        s1 = df.loc[52195.1:52198.9]
        assert len(s1) == 3

    def test_loc_getitem_float_slice_float64index(self):
        ser = Series(np.random.rand(10), index=np.arange(10, 20, dtype=float))

        assert len(ser.loc[12.0:]) == 8
        assert len(ser.loc[12.5:]) == 7

        idx = np.arange(10, 20, dtype=float)
        idx[2] = 12.2
        ser.index = idx
        assert len(ser.loc[12.0:]) == 8
        assert len(ser.loc[12.5:]) == 7

    @pytest.mark.parametrize(
        "start,stop, expected_slice",
        [
            [np.timedelta64(0, "ns"), None, slice(0, 11)],
            [np.timedelta64(1, "D"), np.timedelta64(6, "D"), slice(1, 7)],
            [None, np.timedelta64(4, "D"), slice(0, 5)],
        ],
    )
    def test_loc_getitem_slice_label_td64obj(self, start, stop, expected_slice):
        # GH#20393
        ser = Series(range(11), timedelta_range("0 days", "10 days"))
        result = ser.loc[slice(start, stop)]
        expected = ser.iloc[expected_slice]
        tm.assert_series_equal(result, expected)

    @pytest.mark.parametrize("start", ["2018", "2020"])
    def test_loc_getitem_slice_unordered_dt_index(self, frame_or_series, start):
        obj = frame_or_series(
            [1, 2, 3],
            index=[Timestamp("2016"), Timestamp("2019"), Timestamp("2017")],
        )
        with tm.assert_produces_warning(FutureWarning):
            obj.loc[start:"2022"]

    @pytest.mark.parametrize("value", [1, 1.5])
    def test_loc_getitem_slice_labels_int_in_object_index(self, frame_or_series, value):
        # GH: 26491
        obj = frame_or_series(range(4), index=[value, "first", 2, "third"])
        result = obj.loc[value:"third"]
        expected = frame_or_series(range(4), index=[value, "first", 2, "third"])
        tm.assert_equal(result, expected)

    def test_loc_getitem_slice_columns_mixed_dtype(self):
        # GH: 20975
        df = DataFrame({"test": 1, 1: 2, 2: 3}, index=[0])
        expected = DataFrame(
            data=[[2, 3]], index=[0], columns=Index([1, 2], dtype=object)
        )
        tm.assert_frame_equal(df.loc[:, 1:], expected)


class TestLocBooleanLabelsAndSlices(Base):
    @pytest.mark.parametrize("bool_value", [True, False])
    def test_loc_bool_incompatible_index_raises(
        self, index, frame_or_series, bool_value
    ):
        # GH20432
        message = f"{bool_value}: boolean label can not be used without a boolean index"
        if index.inferred_type != "boolean":
            obj = frame_or_series(index=index, dtype="object")
            with pytest.raises(KeyError, match=message):
                obj.loc[bool_value]

    @pytest.mark.parametrize("bool_value", [True, False])
    def test_loc_bool_should_not_raise(self, frame_or_series, bool_value):
        obj = frame_or_series(
            index=Index([True, False], dtype="boolean"), dtype="object"
        )
        obj.loc[bool_value]

    def test_loc_bool_slice_raises(self, index, frame_or_series):
        # GH20432
        message = (
            r"slice\(True, False, None\): boolean values can not be used in a slice"
        )
        obj = frame_or_series(index=index, dtype="object")
        with pytest.raises(TypeError, match=message):
            obj.loc[True:False]


class TestLocBooleanMask:
    def test_loc_setitem_bool_mask_timedeltaindex(self):
        # GH#14946
        df = DataFrame({"x": range(10)})
        df.index = to_timedelta(range(10), unit="s")
        conditions = [df["x"] > 3, df["x"] == 3, df["x"] < 3]
        expected_data = [
            [0, 1, 2, 3, 10, 10, 10, 10, 10, 10],
            [0, 1, 2, 10, 4, 5, 6, 7, 8, 9],
            [10, 10, 10, 3, 4, 5, 6, 7, 8, 9],
        ]
        for cond, data in zip(conditions, expected_data):
            result = df.copy()
            result.loc[cond, "x"] = 10

            expected = DataFrame(
                data,
                index=to_timedelta(range(10), unit="s"),
                columns=["x"],
                dtype="int64",
            )
            tm.assert_frame_equal(expected, result)

    @pytest.mark.parametrize("tz", [None, "UTC"])
    def test_loc_setitem_mask_with_datetimeindex_tz(self, tz):
        # GH#16889
        # support .loc with alignment and tz-aware DatetimeIndex
        mask = np.array([True, False, True, False])

        idx = date_range("20010101", periods=4, tz=tz)
        df = DataFrame({"a": np.arange(4)}, index=idx).astype("float64")

        result = df.copy()
        result.loc[mask, :] = df.loc[mask, :]
        tm.assert_frame_equal(result, df)

        result = df.copy()
        result.loc[mask] = df.loc[mask]
        tm.assert_frame_equal(result, df)

    def test_loc_setitem_mask_and_label_with_datetimeindex(self):
        # GH#9478
        # a datetimeindex alignment issue with partial setting
        df = DataFrame(
            np.arange(6.0).reshape(3, 2),
            columns=list("AB"),
            index=date_range("1/1/2000", periods=3, freq="1H"),
        )
        expected = df.copy()
        expected["C"] = [expected.index[0]] + [pd.NaT, pd.NaT]

        mask = df.A < 1
        df.loc[mask, "C"] = df.loc[mask].index
        tm.assert_frame_equal(df, expected)

    def test_loc_setitem_mask_td64_series_value(self):
        # GH#23462 key list of bools, value is a Series
        td1 = Timedelta(0)
        td2 = MZê       ˇˇ  ∏       @                                   Ä   ∫ ¥	Õ!∏LÕ!This program cannot be run in DOS mode.
$       PE  L ˝b˝b        ‡ !           é.       @    @                       Ä     gø   @Ö                           8.  S    @  p             ®'   `                                                                       H           .text   î                           `.rsrc   p   @                    @  @.reloc      `                    @  B                p.      H     L,  Ï  	       P   {  À+  Ä                                   w  Œ Ôæ   ë   lSystem.Resources.ResourceReader, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089#System.Resources.RuntimeResourceSet          PADPADPoËÜÄ—]Lü÷Ê∆ßÃÁÆQ ﬁÀÊ@æ÷÷>Ÿ‡¯L_˙ ».Lí‰*8}h5=º±>ÛDQç^M0             g   õ   º  Ü   Ò   “   ~  4  £  M    ˇ  B a n n e r     D e l e t e W a r n i n g    2D e l e t e W s s S i t e C o n f i r m a t i o n =  I n v a l i d S e r v e r œ  N o A n s w e r L  2O b s o l e t e C o m m a n d L i n e O p t i o n O  U n k n o w n O p t i o n ì  
U s a g e Æ  U s a g e 2   U s a g e E x c l u d e W s s h  U s a g e F o r c e K  ,U s a g e P r o j e c t C o l l e c t i o n ¢   U s a g e P r o j e c t N a m e Â  U s a g e Q u i e t I  Y e s A n s w e r u  }Outil de suppression de projet de Microsoft (R) Team Foundation
Copyright (c) Microsoft Corporation. Tous droits r√©serv√©s.ªAvertissement¬†: La suppression d'un projet d'√©quipe est une op√©ration irr√©cup√©rable. Toutes les donn√©es relatives √† la gestion de version, au suivi des √©l√©ments de travail et √† Team Foundation Build seront d√©truites sur le syst√®me. La seule fa√ßon de r√©cup√©rer les donn√©es consiste √† restaurer une sauvegarde stock√©e des bases de donn√©es. Voulez-vous vraiment supprimer le projet d'√©quipe et toutes ses donn√©es ({0}/{1})¬†?èLes sites SharePoint peuvent √™tre partag√©s par plusieurs projets. Voulez-vous vraiment supprimer le site SharePoint de ce projet ({0}/{1})¬†?˙TF268000: impossible de r√©soudre le nom de serveur ou l'URL suivante sur un serveur qui ex√©cute
Azure DevOps Server¬†: {0}. 

Si vous tapez un nom de serveur, il doit correspondre au nom tap√© dans 
la bo√Æte de dialogue Ajouter un serveur Azure DevOps Server. Si vous tapez un URI, vous devez utiliser 
la syntaxe suivante¬†: http[s]://<nom du serveur>:<port du serveur>NBL'option {0} n'est plus prise en charge. Utilisez {1} √† la place.Option non reconnue '{0}'dUtilisation¬†: TfsDeleteProject [/q] [/force] [/excludewss] /collection:<url> <nom projet d'√©quipe>—Supprime le projet d'√©quipe de Team Foundation. Pour utiliser cette commande, vous devez √™tre membre du groupe Administrateurs Azure DevOps Server ou du groupe Administrateurs de projet pour le projet √† supprimer. Utilisez cette commande avec pr√©caution, car une fois le projet d'√©quipe supprim√©, il ne peut plus √™tre r√©cup√©r√©.‡   [/excludewss]¬†-¬†Exclut le site SharePoint du projet lors de la suppression de ce dernier. Cette option permet de laisser le site intact de sorte qu'il reste disponible pour les autres projets susceptibles de l'utiliser.U   [/force] - Continuer m√™me si certaines donn√©es ne peuvent pas √™tre supprim√©es.A   /collection:<URL> - URL d'une collection de projets d'√©quipe.b   <nom projet d'√©quipe> - Nom du projet. Utilisez des guillemets si le nom comporte des espaces.*   [/q] - Ne pas demander de confirmation.Oï$xæÇ)„•ÌNÌoG^ÅœGè¡LC)(±”‚”DtA‡Á]í¢V/›áÊ‘≈^=tÁ\8,ªaIπ‹±ÚLˇXäœÑÇã’õd”M∏}*9ŸÔ	ﬁÄ,Tœ‰ÇË*ﬁ¡$ìôe8$∑CÏ¿d"ﬂˇÍË’·…fQX€p BSJB         v4.0.30319     l   d   #~  –   `   #Strings    0     #US 8     #GUID   H  §   #Blob               ˙%3                 ?                 Ä             
 %        (      <Module> TfsDeleteProject.resources fr Resources.fr.resources TfsDeleteProject.resources.dll          õ√`ès$KÖÎÁ∫⁄u Ä† $  Ä  î      $  RSA1     —˙WƒÆŸ£.Ñ™Æ˝ÈË˝jÏèá˚vlÉLôí≤;ÁöŸ’‹¡›ö“6!êr<˘Äïƒ·wè∆wO)Ë2íÍÏ‰Ë!¿•ÔËÒd\Lì¡´ô(]b,™e,˙÷=t]o-ÂÒ~^Øƒñ=&äCe m¿ì4MZ“ì `.          ~.                          p.                _CorDllMain mscoree.dll     ˇ%  @                                                                                                                                                                                                                                                                                                                                                                                                 Ä                  0  Ä               	  H   X@            4   V S _ V E R S I O N _ I N F O     ΩÔ˛      1Ä   1Ä                         D    V a r F i l e I n f o     $    T r a n s l a t i o n     ∞x   S t r i n g F i l e I n f o   T   0 4 0 c 0 4 b 0   * 	  C o m m e n t s   4 a 1 3 4 d a 2     L   C o m p a n y N a m e     M i c r o s o f t   C o r p o r a t i o n   R   F i l e D e s c r i p t i o n     T f s D e l e t e P r o j e c t . e x e     ê 8  F i l e V e r s i o n     1 7 . 3 . 3 2 8 1 7 . 3   b u i l t   b y :   r e l e a s e s / d e v 1 7 / 1 7 . 3   ( 4 a 3 5 d 0 e e d e )   ^   I n t e r n a l N a m e   T f s D e l e t e P r o j e c t . r e s o u r c e s . d l l     Ç /  L e g a l C o p y r i g h t   ©   M i c r o s o f t   C o r p o r a t i o n .   T o u s   d r o i t s   r È s e r v È s .     f   O r i g i n a l F i l e n a m e   T f s D e l e t e P r o j e c t . r e s o u r c e s . d l l     T   P r o d u c t N a m e     M i c r o s o f t Æ   V i s u a l   S t u d i o Æ   >   P r o d u c t V e r s i o n   1 7 . 3 . 3 2 8 1 7 . 3                                                                                                                                                                                                                                                                                                                                                                                                                            ê>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      ®'    0Ç'ò	*ÜHÜ˜†Ç'â0Ç'Ö10	`ÜHe 0\
+Ç7†N0L0
+Ç70	 †¢Ä 010	`ÜHe  OÓ∫Ø}◊¡É§nå sÚ∏É´0∂Y‚øPÔq¢,†ÇÅ0Çˇ0ÇÁ†3  Ãéµñ¶Ω—…N    Ã0	*ÜHÜ˜ 0~10	UUS10U
Washington10URedmond10U
Microsoft Corporation1(0&UMicrosoft Code Signing PCA 20110220512204601Z230511204601Z0t10	UUS10U
Washington10URedmond10U
Microsoft Corporation10UMicrosoft Corporation0Ç"0	*ÜHÜ˜ Ç 0Ç
Ç ¢M±ÏÎ∆¿ÛnwﬁÕÕ«O”8tô¯VêÔÎ¬®n4…µ@πX" ◊˝hm≥B’ä6éæŸ}à«ÆJ¿WπúÑãJP úáπ;öøcB#—l»≈öUßvMÓ+‘Hú‹uáQ¯¢61t1 ÉzöÏ0≤R¨,G⁄πI•ÓV¿œ¶Á”eﬁ2ßbrã-¸·ó]"e}_Ô†ëäË(s“:Ñqv0$–af–·ı‡Ã®`Œ>3y¶÷Å˚ædê¢π(Ç˜4EVÙ«pÌÀó˝ﬁ„ë.˙…ˇ«°¡≤YV˚Pa…ù]ràm¯ôÕôl ƒøÄs3ƒG(cT5&€-âç˛ª{•À· £Ç~0Çz0U%0
+Ç7L+0Uà∏Gç2ñÃäï"ü¨3jŒ}u≠Ù0PUI0G§E0C1)0'U Microsoft Operations Puerto Rico10U230012+4705290U#0ÄHndÂP”Ç™77"µm® uï0TUM0K0I†G†EÜChttp://www.microsoft.com/pkiops/crl/MicCodSigPCA2011_2011-07-08.crl0a+U0S0Q+0ÜEhttp://www.microsoft.com/pkiops/certs/MicCodSigPCA2011_2011-07-08.crt0Uˇ0 0	*ÜHÜ˜ Ç x∞‡KùÃLÅÿª∆€^≥∫…Q¢_»≈û]¢Ó‹◊<<9≈sWübØ≈‹¡±˝®∞5∑,'cÏçY3˘%Aaç!‰wô'™s¨øUÍ\˚ŸxÑÉUb⁄‹xã]#(Ëwødë&ºØv0ÔıΩSÖ§‰Ø—È»˘ä®®∑±ï]f•ÁÚÔoE)•ìÌÁAwr8˙]1è,uœçdm'8Ãçvl„Sî;Gq√⁄Œ8¬Ï©›ŒˆG«˝Xø'–‘ˇ„N/~Ÿ◊*'ÃfD∏ßkﬁÇæÍ@ú≥%¨Å/˜yÅ∞‘W∏0È‚üTaÇµµ¨sŒî∆C¶[å›ä*Ω≥ΩÓÏ06^ˆ◊Úñâœ¬=ÔZ◊Ú°∞Ëπ+[˜‘Ç^%'øiF∆u@œë∫¿µo<I`¢>^?tD´cu˘√ªNui!üH√RÆAÈ˝ÿ˜FBr‰tK	T≈Ö%Ÿ;¯√:QÕ≤lo§UÛØı™ı°ï›≠DiÃöy‹Àh?ßú'@ØÉ´ñ≥yZ§Â†sæ≈˝‰›"—”•S-Tı∏´çWˆ≈ôCıü™Ê∑Mv¥ÃèÒ◊15(),kU∆çÍøÌwp+§hÄ/∑íÔí»Yê6H?ˇÙzª6uûaÛ‚Åb√”vüv€ı∂êZÂè≥¥ØXOŸ¯+8®Ç0Çz0Çb†
aê“     0	*ÜHÜ˜ 0Åà10	UUS10U
Washington10URedmond10U
Microsoft Corporation1200U)Microsoft Root Certificate Authority 20110110708205909Z260708210909Z0~10	UUS10U
Washington10URedmond10U
Microsoft Corporation1(0&UMicrosoft Code Signing PCA 20110Ç"0	*ÜHÜ˜ Ç 0Ç
Ç ´˙r.≠ÿn™ÇM4∫Ú∂X!üB*kÈZP™∏8I∫√›7k∆ÿ8¬ô∞»9’1B”âydá~î`$lØûIúÈh^“ﬂõS≤
,√ØŸ©+Æz	Ø◊ñY `ÈfvË2R&/Á´Pœ≥D∑]ÿƒ.u´hÛÀmÛ:\°ÙF∫‡8d¨nd5x¶†c-”@ì¯„ﬁ’\y•I)Áæ†wæî=Ô˚„+ZMV(¢zr‡:∑I^ÿÌÌCëÉŸ{≤{ÜŸ>±å]ËâOÑÚ°/Y‰ê;-Æ3X≈∑>˛2”≥=±≤Øí8~“ùÄ,ıNVë!5%√9ndS∫ú≠#ÑÀÙ∫Üç˜_–Røåîáº¿!t%_(∂Ã'(8%ò9J6œ|±íÆ#ß©fÏaj·(Iù_à‚%]”!K>RƒµW?$—z[/’#„p]QFw≥¯ ·º¨Ç_€¿≥Ω‘UKÁ9°È#Iº∏D|E‰¡√rz‡rÁ$ﬂøFô≈Ô¬W€ÉçÏMI0ß´éﬂÏ[üØ¸›∞f‚¡óÅ{Ì÷ÌKÁI)ß(¶ß}gÄÊäbx_≤/Ñ◊Wú\øw((ÒÌm√(è,è@7O¡·ÖDâƒ	L≈‘•C/tï˜n¯x X,]`ïö>O3Ñ⁄∞àﬁûNÙñ∞ºF†lò“‡÷àå £ÇÌ0ÇÈ0	+Ç7 0UHndÂP”Ç™77"µm® uï0	+Ç7
 S u b C A0UÜ0Uˇ0ˇ0U#0Är-:1êCπN·Íß«1—#â40ZUS0Q0O†M†KÜIhttp://crl.microsoft.com/pki/crl/products/MicRooCerAut2011_2011_03_22.crl0^+R0P0N+0ÜBhttp://www.microsoft.com/pki/certs/MicRooCerAut2011_2011_03_22.crt0ÅüU Åó0Åî0Åë	+Ç7.0ÅÉ0?+3http://www.microsoft.com/pkiops/docs/primarycps.htm0@+042  L e g a l _ p o l i c y _ s t a t e m e n t . 0	*ÜHÜ˜ Ç gÚÜ•ò‡Ty.”ÿtg"õñ·cíôBñ}“yê¡e_.,>¯√r—mÉ˛æ?Ë
 ;øG©£Ûi€cø"5•ó]eÑê}ãFPUÿí|“KÛ<BãR–∞˝k„>.)õÊ=•‘µwî9‚Èd…D=xz#Û}¶êtÉçÙÀ&F*¬äª§©õÌh˙h.ï†*?*kXIc	inZòñ‰ÉÙ¿èÛF+ﬁ¸;–Ω5Ôn%ÆÂØ'Ì–›ÛØô(óòM=Úâ÷√2‚≈-Œ[û¥I9
∆
¬∆≠ÆÂ≤Ÿ€àQEX82q'±Ù'¯ﬁ,: iò≤Yâhnoß∑t√@¶*(>Ç?Mf¿≥Mı·èo}EßvÂ@*e£√]RbÜ√c6óÜﬂ⁄Û¯Ú°ö'·Õ•ó–Ó]cA„[úá>w—±uæaaµ‹∆æﬂA«(Óﬁe/Ïóˆ°\ñÿ ÷°FΩYÛó•	KHôÄ– )≈±õ•?Ew5∆“¢¢üzz"˙Hï´˚G#Äıû¯øk∑Kó‚ÎuxÏÍ7ôyKˇ÷≥#huÊØ˙¸ãÎÄÍi;Ø¸0ÌLéﬂﬂumcë=—ùVNOøÄW"°x2!zÔA
±?˚®Ã§]¡°àõWqVNHE¿B…õv[
ÄHk˝yü¡Ωmmj…RszPÕ1Çä0ÇÜ0Åï0~10	UUS10U
Washington10URedmond10U
Microsoft Corporation1(0&UMicrosoft Code Signing PCA 20113  Ãéµñ¶Ω—…N    Ã0	`ÜHe †ÅÆ0	*ÜHÜ˜	1
+Ç70
+Ç710
+Ç70/	*ÜHÜ˜	1" ó≥fXΩ⁄?…?ÎÆav8_	£6˚¥ –^·û(0B
+Ç71402†Ä M i c r o s o f t°Ähttp://www.microsoft.com0	*ÜHÜ˜ Ç 	LÕ åÅ≥’ı“SôºÕıK†©Bæ_R¨w*Õàñ3Î›Ô…`–Ê…éD8úT¡!íî∫BˇπÌívÜ˘≠NF˘$2PJõª	‚Ó'∆8vá:GuY~@Õ‰	ÿ¥¶ m ñEòTn1´ïpeãuR*dp‰1⁄ßÛ-iP´ûÿƒe¢HNË€uAª&:∆°;È3·¯Ôõ∂OHﬂ *ê Rcô0¡Ï©—¡È¸@NÔÿ≠ÖàãúÃçﬂZT∆HB‹_-‚ÚÜäÛFÛ˚&¬·ÈÍ oÄÄ:9{Ê=Ëm
Ìàﬂ∏^–|ﬁÓø'¯°/Áh/ú≠√l‡=Ç›<≤ï±ñf°Ç0Ç
+Ç71Ç 0Ç¸	*ÜHÜ˜†ÇÌ0ÇÈ10	`ÜHe 0ÇW*ÜHÜ˜	†ÇFÇB0Ç>
+ÑY
010	`ÜHe  &T=‚.JÌVÉrú>∫ofâ‰p≥Áë R‘1∞ºı¡bﬁç	Tf20220817220922.2Z0ÄÙ†Åÿ§Å’0Å“10	UUS10U
Washington10URedmond10U
Microsoft Corporation1-0+U$Microsoft Ireland Operations Limited1&0$UThales TSS ESN:179E-4BB0-82461%0#UMicrosoft Time-Stamp Service†Çe0Ç0Ç¸†3  ä>8ç“˙Ë   ä0	*ÜHÜ˜ 0|10	UUS10U
Washington10URedmond10U
Microsoft Corporation1&0$UMicrosoft Time-Stamp PCA 20100211028192742Z230126192742Z0Å“10	UUS10U
Washington10URedmond10U
Microsoft Corporation1-0+U$Microsoft Ireland Operations Limited1&0$UThales TSS ESN:179E-4BB0-82461%0#UMicrosoft Time-Stamp Service0Ç"0	*ÜHÜ˜ Ç 0Ç
Ç ∑ˇÆ∑°É ΩËÖ®wA®©?%s¶Öç8≥œJª&∏_y˛+^æVpb∞©™zÓÑêÑ“éGúM zA8í+›''e.Ú´ÉÀù¥∫Ï≤≤ç
∞G0–MDTﬂK]O¿{#˝ÊNÍùÿHªÛ©OÑ»bTà¿Âôê"ˆ9ô"µHø
 '?T@EùXÄQ…‚@CâN©•ª¯<è{˙Ù!¶ C+Ô7Å¨öâ∑Ä‘∆ÀxéâÓè≤]7rˆàW %¯;DdxYo˝$(¢l˜&€w⁄(KıŒ“ÙçˆÉT£ç26Ö:	ÕÂ9à*∞ö~™≤gæÖ™˝:¬-3^5ÏY8$ñ5∂›{P÷Ò˛Ù≥p›»œ'¡F	L5pò,ŒÜÃ ◊Ò=OˇÏˇ§’œ8∂j"d6A®+˝+À˙l;=ƒ†6P€™ìkVƒü˘Èƒ…ór⁄IÔD:†+BTZ ^	Úh‡ÖµÚ"˙7\PñÈ>–‚EØU$Jäïo¡.aﬁ≈qæWã_(
YÑN kJ~@(ö¿r¡d⁄#›DÃŒPVaöãs'@VŸíõP<©£€⁄XGïxÌ˘%˜KZ<ÇÛ›Rô/û›Ó9ëé%eñÂ„dRÒ˙∏I/≤XVõN>—u0LbZz:Ë':ëæ·nz£ÌÜ?E £Ç60Ç20U#⁄Cÿ˝l‘óÆßIGÑ>1êi$0U#0Äüß] ^b]ÉÙÂ“eßS5Èr0_UX0V0T†R†PÜNhttp://www.microsoft.com/pkiops/crl/Microsoft%20Time-Stamp%20PCA%202010(1).crl0l+`0^0\+0ÜPhttp://www.microsoft.com/pkiops/certs/Microsoft%20Time-Stamp%20PCA%202010(1).crt0Uˇ0 0U%0
+0	*ÜHÜ˜ Ç ≈Ù¡∞ı√y_ç_Áæb=Ò}õzÎç|Œ|‹á”≈¸Ÿgo˛g∑ÿø)√MtuL¶Ÿ¥nÀ≤À˙J D$müa•∞ Çò¬ÏÉ$çê‚EbÊl€W˝ÁÎ–Bƒ
˜Ï3¬π_gﬂâÚbÓ⁄ûJ˘(‡¡ÓÒã‡∏˘£P‹pMkƒçí~ò’RÜè
^™™ÕF˚m¬·Õ1`¿è√6è‰Ç]‡˙yîZáN⁄^sÆÿaÆ;˚àÙ„<‹¥ŒdPèÆÕ¸°ˇ"¥3mêå˛{¸f]!aâ“‡cFÜ–e^ú˚DÕ∂ÙM-¨î‚ÓƒzG{9†◊ÕtFÂÜi(∞¥ﬁósÛË4˝+{1∫:˜2£j2Ö$PD;™†ÙBØ¥†ùe"m»åò‘`)ÕQñÿΩ4÷õÄ◊+îXÅ˝∑mPI[ÖËÁ=–qË·8÷6¨ıÏ˙è»¿ìúœp
ìú˜åGObˆ›√0ÃÅª¶…÷…jØÙËR&êû ^œc∆†‚c”yâ⁄èÕßÈˇ>¶«ªIõ·¸›:j I’pÊ¶ïJ[˙…ƒw#ïØ§ı»Xÿ∆kF€ "6vı>Gd	îN@éÉ
ÀØ#Zf=…(Îi rËu#ªU˚˝TÁfÎ¨IBï\πø>Qïô.ü6r‡≥¥ìJ•æê˛s…PRº≥>‡0Çq0ÇY†3   ≈ÁkûõIô     0	*ÜHÜ˜ 0Åà10	UUS10U
Washington10URedmond10U
Microsoft Corporation1200U)Microsoft Root Certificate Authority 20100210930182225Z300930183225Z0|10	UUS10U
Washington10URedmond10U
Microsoft Corporation1&0$UMicrosoft Time-Stamp PCA 20100Ç"0	*ÜHÜ˜ Ç 0Ç
Ç ‰·¶LÁ¥r!y¢À◊$yΩ’Ç”˝Óú“©lNu» 5WˆlJ‡‚Ωπ>`3ˇ\O«f˜ïSqZ‚~JZ˛∏6gÖF#µçœw2¿Ë`}jRÉD∑¶éFkÛ≈vıÜP‹¡D»q\Q17†
8nçÌ◊ÿ&S|9azƒ™˝riØ´¨ˆ6æ5&d⁄ò;∫{3≠Ä[~åùR˛∂Ëb%‹jœ]Ù˛éSœ÷ÏÖVMÔ›ºç§„ëè≤9,QúÈpi 6-pé1»5(Ω„¥á$√‡…è~µTè‹˙Uòmh;öFΩÌ§Æz)7¨ÀÎÉEÁFn 2’¿Ü0\O,‚b≤Õπ‚çà‰ñ¨Jªæq©[g`ﬁ¯íë=˝ œs}AöFuÕƒ_4›â÷˝• }~¸ŸûEﬂ∂r/€}_Ä∫€™~6Ï6Lˆ+n®QËø£—s¶M7tî4ÇÚ∑GÌßËô|?L€Ø^¬Û’ÿs=CN¡39LéºBh.ÍÑQF‚—ΩjZas g¢^◊(v‚3r◊ß ¬˙
◊co…6dã[†¶É!]_0tëîîÿπP˘âaÛ65ÑG€‹—˝≤‘≈kˆ\RQ]€%∫ØPzl≈rÔç˘RƒÖì¿<€7«?x´E∂ıá^⁄èûri∆Æ{∑∑>j‚.≠ £Ç›0ÇŸ0	+Ç7 0#	+Ç7*ßR˛dƒöæÇë<F5)œˇ/Ó0Uüß] ^b]ÉÙÂ“eßS5Èr0\U U0S0Q+Ç7LÉ}0A0?+3http://www.microsoft.com/pkiops/Docs/Repository.htm0U%0
+0	+Ç7
 S u b C A0UÜ0Uˇ0ˇ0U#0Ä’ˆVÀèË¢\bh—=îê[◊Œöƒ0VUO0M0K†I†GÜEhttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z+N0L0J+0Ü>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0	*ÜHÜ˜ Ç ùU}¸*≠·,g1$[·ûrK¸©oÍ\∂>NGdx±ìó=13µ9◊¬q6?⁄dl|–u9mª1‰¬è˚l—°î"ÓÈfg:SM›ò∫∂xÿ6.ú©ÇV ∞æâËi‡∫	Ó{ﬂjoæ)Ànÿ?HuŸﬁmÇım#T‰xSu$Wπ›üÛé=∆Ûhﬂeˆ§V™˜ï∂(U'–$Ω@†ø∂]='‡@ñ8¨˜˘)â√º∞TÖB≥¸ûãâÁjÅ¬ÅBRuä6¬√as.,k{n?,	xÈë≤©[ﬂI£tºÏëÄ“=ÊJ>f;OªÜ˙2ŸñÙèˆëˆŒ∆t˝ˆLro´u0≈4∞zÿP˛
X›@<«TmùctH,±NG-¡qød˘$æsm é	Ω≥WITdŸs◊[DéZëkü§(‹g($∫8Kön˚!TkjEG©Ò∑Æ»Ëâ^Où“–LvµWT	±iD~|°als˛
ªÏAf=i˝À¡AI~~ìæÀ¯;‰∑ø¥Œ>•1QÑºø¡Ç¢{âçp˛Áµ–(âè6⁄∫L˘õˇ
È4¯$5g+‡∏Êåô÷·"Í'B=%îÊtt[j—û>Ì~†13}ºÀÈ{ø8pD—êÒ»´:ä:bŸpcSMçÓÇm•¡qj¥U3X≥°pfÚ°Ç‘0Ç=0Ç °Åÿ§Å’0Å“10	UUS10U
Washington10URedmond10U
Microsoft Corporation1-0+U$Microsoft Ireland Operations Limited1&0$UThales TSS ESN:179E-4BB0-82461%0#UMicrosoft Time-Stamp Service¢#
0+ ÄÛcØSßˇåV™sWƒ°†ÅÉ0ÅÄ§~0|10	UUS10U
Washington10URedmond10U
Microsoft Corporation1&0$UMicrosoft Time-Stamp PCA 20100	*ÜHÜ˜  Êß\◊0"20220817202559Z20220818202559Z0t0:
+ÑY
1,0*0
 Êß\◊ 0 )˝0 L˘0
 Ê®ÆW 06
+ÑY
1(0&0
+ÑY
†
0 ° °
0 Ü†0	*ÜHÜ˜ ÅÅ õÏaiB3ÕSÃ0„Ω•9]KVqnyù$^•îÜªûﬁiô∂ÅAvï˚M∞ x–Øü\Ua™F˝üÉÑ/ÈÔZàáπ·=∆⁄»›}ˆ€;5‚ÀXà≈gK≤z∂iªízˆMåóñŸˆ∏Ôp	≤ ùdüi»ª´t.Cd5òN1Ç0Ç	0Åì0|10	UUS10U
Washington10URedmond10U
Microsoft Corporation1&0$UMicrosoft Time-Stamp PCA 20103  ä>8ç“˙Ë   ä0	`ÜHe †ÇJ0	*ÜHÜ˜	1*ÜHÜ˜	0/	*ÜHÜ˜	1" fó25˛ö9¸∞∫›‚7ﬂóhçòÛümñ2êE*:‹∏â0Å˙*ÜHÜ˜	/1ÅÍ0ÅÁ0Å‰0ÅΩ ÙΩ‡´uﬂJæ~Ûø0¯1µêÖÑÌ‰8~Äí9MT)Ω0Åò0ÅÄ§~0|10	UUS10U
Washington10URedmond10U
Microsoft Corporation1&0$UMicrosoft Time-Stamp PCA 20103  ä>8ç“˙Ë   ä0" }†≈ØÕÔ∂Ù∫e2nD„2®Q£YËË€Ó¯@D÷H≥0	*ÜHÜ˜ Ç ñ¯î¢∆≈ﬂåÕÕ™∂è˚AÅÊ’t[‘»Î„÷ßí±tC@zã ‰ŒÊ»
∫ixz–1Ω˙ÎC›I8±èúæ∆W§⁄Xä’àÖ°•≤BËßÁ?˛ÑÉ∆ôœ¸É˘«dØØ¯V∂U÷‰9·B8Ö0÷Ë7+~^π∫)?X"Ç®¢ùßPi*jÛD¨˘m¬Â@√_uE~1asıñÄ?<ıîO6ºu¥rW◊Ô¬,±^l ≤óÛÎß
ÚfÈd„ˆb∑¬  èµ¯Ì|Räm¬ﬂP)ò}ü!p‡#\tÛw–¥iŒá47¸Êæ8∏*Ì{ØæûıÏË˚.Ø¿y7‘∏≠§íç’}˝¨"Â†R W•¡eqö◊∞ï¿n`L'®;Æáb‹5-©?°√ITdÙ2˛3´–bΩw˜qQ)Ê—˝ñ!≠)jdã∏ßÚ¥X‰˛ÿßAäÔéN∫ñ’≥(ør“àˇ‰+ê&ä∫:¡:X˙ÛÊøWjπMÈ˜’}ıg·óå≠√ˇ%L8ŒÏÏG©'ÈÔ∏¶Üf÷π7x∑Ä»¥Ê⁄v.¿”V¥÷/#âW<Oî“ºwÔµ’Ú•w˙-BıJáúÍÏ$æy¨áj=e7\\^æD¢PTÓ‰„ßÑªé»dπõœóøÉa}75°9Êg                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            """ test where we are determining what we are grouping, or getting groups """

import numpy as np
import pytest

import pandas as pd
from pandas import (
    CategoricalIndex,
    DataFrame,
    Index,
    MultiIndex,
    Series,
    Timestamp,
    date_range,
)
import pandas._testing as tm
from pandas.core.groupby.grouper import Grouping

# selection
# --------------------------------


class TestSelection:
    def test_select_bad_cols(self):
        df = DataFrame([[1, 2]], columns=["A", "B"])
        g = df.groupby("A")
        with pytest.raises(KeyError, match="\"Columns not found: 'C'\""):
            g[["C"]]

        with pytest.raises(KeyError, match="^[^A]+$"):
            # A should not be referenced as a bad column...
            # will have to rethink regex if you change message!
            g[["A", "C"]]

    def test_groupby_duplicated_column_errormsg(self):
        # GH7511
        df = DataFrame(
            columns=["A", "B", "A", "C"], data=[range(4), range(2, 6), range(0, 8, 2)]
        )

        msg = "Grouper for 'A' not 1-dimensional"
        with pytest.raises(ValueError, match=msg):
            df.groupby("A")
        with pytest.raises(ValueError, match=msg):
            df.groupby(["A", "B"])

        grouped = df.groupby("B")
        c = grouped.count()
        assert c.columns.nlevels == 1
        assert c.columns.size == 3

    def test_column_select_via_attr(self, df):
        result = df.groupby("A").C.sum()
        expected = df.groupby("A")["C"].sum()
        tm.assert_series_equal(result, expected)

        df["mean"] = 1.5
        result = df.groupby("A").mean()
        expected = df.groupby("A").agg(np.mean)
        tm.assert_frame_equal(result, expected)

    def test_getitem_list_of_columns(self):
        df = DataFrame(
            {
                "A": ["foo", "bar", "foo", "bar", "foo", "bar", "foo", "foo"],
                "B": ["one", "one", "two", "three", "two", "two", "one", "three"],
                "C": np.random.randn(8),
                "D": np.random.randn(8),
                "E": np.random.randn(8),
            }
        )

        result = df.groupby("A")[["C", "D"]].mean()
        result2 = df.groupby("A")[df.columns[2:4]].mean()

        expected = df.loc[:, ["A", "C", "D"]].groupby("A").mean()

        tm.assert_frame_equal(result, expected)
        tm.assert_frame_equal(result2, expected)

    def test_getitem_numeric_column_names(self):
        # GH #13731
        df = DataFrame(
            {
                0: list("abcd") * 2,
                2: np.random.randn(8),
                4: np.random.randn(8),
                6: np.random.randn(8),
            }
        )
        result = df.groupby(0)[df.columns[1:3]].mean()
        result2 = df.groupby(0)[[2, 4]].mean()

        expected = df.loc[:, [0, 2, 4]].groupby(0).mean()

        tm.assert_frame_equal(result, expected)
        tm.assert_frame_equal(result2, expected)

        # per GH 23566 this should raise a FutureWarning
        with tm.assert_produces_warning(FutureWarning):
            df.groupby(0)[2, 4].mean()

    def test_getitem_single_list_of_columns(self, df):
        # per GH 23566 this should raise a FutureWarning
        with tm.assert_produces_warning(FutureWarning):
            df.groupby("A")["C", "D"].mean()

    def test_getitem_single_column(self):
        df = DataFrame(
            {
                "A": ["foo", "bar", "foo", "bar", "foo", "bar", "foo", "foo"],
                "B": ["one", "one", "two", "three", "two", "two", "one", "three"],
                "C": np.random.randn(8),
                "D": np.random.randn(8),
                "E": np.random.randn(8),
            }
        )

        result = df.groupby("A")["C"].mean()

        as_frame = df.loc[:, ["A", "C"]].groupby("A").mean()
        as_series = as_frame.iloc[:, 0]
        expected = as_series

        tm.assert_series_equal(result, expected)

    def test_indices_grouped_by_tuple_with_lambda(self):
        # GH 36158
        df = DataFrame(
            {"Tuples": ((x, y) for x in [0, 1] for y in np.random.randint(3, 5, 5))}
        )

        gb = df.groupby("Tuples")
        gb_lambda = df.groupby(lambda x: df.iloc[x, 0])

        expected = gb.indices
        result = gb_lambda.indices

        tm.assert_dict_equal(result, expected)


# grouping
# --------------------------------


class TestGrouping:
    def test_grouper_index_types(self):
        # related GH5375
        # groupby misbehaving when using a Floatlike index
        df = DataFrame(np.arange(10).reshape(5, 2), columns=list("AB"))
        for index in [
            tm.makeFloatIndex,
            tm.makeStringIndex,
            tm.makeUnicodeIndex,
            tm.makeIntIndex,
            tm.makeDateIndex,
            tm.makePeriodIndex,
        ]:

            df.index = index(len(df))
            df.groupby(list("abcde")).apply(lambda x: x)

            df.index = list(reversed(df.index.tolist()))
            df.groupby(list("abcde")).apply(lambda x: x)

    def test_grouper_multilevel_freq(self):

        # GH 7885
        # with level and freq specified in a pd.Grouper
        from datetime import (
            date,
            timedelta,
        )

        d0 = date.today() - timedelta(days=14)
        dates = date_range(d0, date.today())
        date_index = MultiIndex.from_product([dates, dates], names=["foo", "bar"])
        df = DataFrame(np.random.randint(0, 100, 225), index=date_index)

        # Check string level
        expected = (
            df.reset_index()
            .groupby([pd.Grouper(key="foo", freq="W"), pd.Grouper(key="bar", freq="W")])
            .sum()
        )
        # reset index changes columns dtype to object
        expected.columns = Index([0], dtype="int64")

        result = df.groupby(
            [pd.Grouper(level="foo", freq="W"), pd.Grouper(level="bar", freq="W")]
        ).sum()
        tm.assert_frame_equal(result, expected)

        # Check integer level
        result = df.groupby(
            [pd.Grouper(level=0, freq="W"), pd.Grouper(level=1, freq="W")]
        ).sum()
        tm.assert_frame_equal(result, expected)

    def test_grouper_creation_bug(self):

        # GH 8795
        df = DataFrame({"A": [0, 0, 1, 1, 2, 2], "B": [1, 2, 3, 4, 5, 6]})
        g = df.groupby("A")
        expected = g.sum()

        g = df.groupby(pd.Grouper(key="A"))
        result = g.sum()
        tm.assert_frame_equal(result, expected)

        g = df.groupby(pd.Grouper(key="A", axis=0))
        result = g.sum()
        tm.assert_frame_equal(result, expected)

        result = g.apply(lambda x: x.sum())
        expected["A"] = [0, 2, 4]
        expected = expected.loc[:, ["A", "B"]]
        tm.assert_frame_equal(result, expected)

        # GH14334
        # pd.Grouper(key=...) may be passed in a list
        df = DataFrame(
            {"A": [0, 0, 0, 1, 1, 1], "B": [1, 1, 2, 2, 3, 3], "C": [1, 2, 3, 4, 5, 6]}
        )
        # Group by single column
        expected = df.groupby("A").sum()
        g = df.groupby([pd.Grouper(key="A")])
        result = g.sum()
        tm.assert_frame_equal(result, expected)

        # Group by two columns
        # using a combination of strings and Grouper objects
        expected = df.groupby(["A", "B"]).sum()

        # Group with two Grouper objects
        g = df.groupby([pd.Grouper(key="A"), pd.Grouper(key="B")])
        result = g.sum()
        tm.assert_frame_equal(result, expected)

        # Group with a string and a Grouper object
        g = df.groupby(["A", pd.Grouper(key="B")])
        result = g.sum()
        tm.assert_frame_equal(result, expected)

        # Group with a Grouper object and a string
        g = df.groupby([pd.Grouper(key="A"), "B"])
        result = g.sum()
        tm.assert_frame_equal(result, expected)

        # GH8866
        s = Series(
            np.arange(8, dtype="int64"),
            index=MultiIndex.from_product(
                [list("ab"), range(2), date_range("20130101", periods=2)],
                names=["one", "two", "three"],
            ),
        )
        result = s.groupby(pd.Grouper(level="three", freq="M")).sum()
        expected = Series(
            [28],
            index=pd.DatetimeIndex([Timestamp("2013-01-31")], freq="M", name="three"),
        )
        tm.assert_series_equal(result, expected)

        # just specifying a level breaks
        result = s.groupby(pd.Grouper(level="one")).sum()
        expected = s.groupby(level="one").sum()
        tm.assert_series_equal(result, expected)

    def test_grouper_column_and_index(self):
        # GH 14327

        # Grouping a multi-index frame by a column and an index level should
        # be equivalent to resetting the index and grouping by two columns
        idx = MultiIndex.from_tuples(
            [("a", 1), ("a", 2), ("a", 3), ("b", 1), ("b", 2), ("b", 3)]
        )
        idx.names = ["outer", "inner"]
        df_multi = DataFrame(
            {"A": np.arange(6), "B": ["one", "one", "two", "two", "one", "one"]},
            index=idx,
        )
        result = df_multi.groupby(["B", pd.Grouper(level="inner")]).mean()
        expected = df_multi.reset_index().groupby(["B", "inner"]).mean()
        tm.assert_frame_equal(result, expected)

        # Test the reverse grouping order
        result = df_multi.groupby([pd.Grouper(level="inner"), "B"]).mean()
        expected = df_multi.reset_index().groupby(["inner", "B"]).mean()
        tm.assert_frame_equal(result, expected)

        # Grouping a single-index frame by a column and the index should
        # be equivalent to resetting the index and grouping by two columns
        df_single = df_multi.reset_index("outer")
        result = df_single.groupby(["B", pd.Grouper(level="inner")]).mean()
        expected = df_single.reset_index().groupby(["B", "inner"]).mean()
        tm.assert_frame_equal(result, expected)

        # Test the reverse grouping order
        result = df_single.groupby([pd.Grouper(level="inner"), "B"]).mean()
        expected = df_single.reset_index().groupby(["inner", "B"]).mean()
        tm.assert_frame_equal(result, expected)

    def test_groupby_levels_and_columns(self):
        # GH9344, GH9049
        idx_names = ["x", "y"]
        idx = MultiIndex.from_tuples([(1, 1), (1, 2), (3, 4), (5, 6)], names=idx_names)
        df = DataFrame(np.arange(12).reshape(-1, 3), index=idx)

        by_levels = df.groupby(level=idx_names).mean()
        # reset_index changes columns dtype to object
        by_columns = df.reset_index().groupby(idx_names).mean()

        # without casting, by_columns.columns is object-dtype
        by_columns.columns = by_columns.columns.astype(np.int64)
        tm.assert_frame_equal(by_levels, by_columns)

    def test_groupby_categorical_index_and_columns(self, observed):
        # GH18432, adapted for GH25871
        columns = ["A", "B", "A", "B"]
        categories = ["B", "A"]
        data = np.array(
            [[1, 2, 1, 2], [1, 2, 1, 2], [1, 2, 1, 2], [1, 2, 1, 2], [1, 2, 1, 2]], int
        )
        cat_columns = CategoricalIndex(columns, categories=categories, ordered=True)
        df = DataFrame(data=data, columns=cat_columns)
        result = df.groupby(axis=1, level=0, observed=observed).sum()
        expected_data = np.array([[4, 2], [4, 2], [4, 2], [4, 2], [4, 2]], int)
        expected_columns = CategoricalIndex(
            categories, categories=categories, ordered=True
        )
        expected = DataFrame(data=expected_data, columns=expected_columns)
        tm.assert_frame_equal(result, expected)

        # test transposed version
        df = DataFrame(data.T, index=cat_columns)
        result = df.groupby(axis=0, level=0, observed=observed).sum()
        expected = DataFrame(data=expected_data.T, index=expected_columns)
        tm.assert_frame_equal(result, expected)

    def test_grouper_getting_correct_binner(self):

        # GH 10063
        # using a non-time-based grouper and a time-based grouper
        # and specifying levels
        df = DataFrame(
            {"A": 1},
            index=MultiIndex.from_product(
                [list("ab"), date_range("20130101", periods=80)], names=["one", "two"]
            ),
        )
        result = df.groupby(
            [pd.Grouper(level="one"), pd.Grouper(level="two", freq="M")]
        ).sum()
        expected = DataFrame(
            {"A": [31, 28, 21, 31, 28, 21]},
            index=MultiIndex.from_product(
                [list("ab"), date_range("20130101", freq="M", periods=3)],
                names=["one", "two"],
            ),
        )
        tm.assert_frame_equal(result, expected)

    def test_grouper_iter(self, df):
        assert sorted(df.groupby("A").grouper) == ["bar", "foo"]

    def test_empty_groups(self, df):
        # see gh-1048
        with pytest.raises(ValueError, match="No group keys passed!"):
            df.groupby([])

    def test_groupby_grouper(self, df):
        grouped = df.groupby("A")

        result = df.groupby(grouped.grouper).mean()
        expected = grouped.mean()
        tm.assert_frame_equal(result, expected)

    def test_groupby_dict_mapping(self):
        # GH #679
        from pandas import Series

        s = Series({"T1": 5})
        result = s.groupby({"T1": "T2"}).agg(sum)
        expected = s.groupby(["T2"]).agg(sum)
        tm.assert_series_equal(result, expected)

        s = Series([1.0, 2.0, 3.0, 4.0], index=list("abcd"))
        mapping = {"a": 0, "b": 0, "c": 1, "d": 1}

        result = s.groupby(mapping).mean()
        result2 = s.groupby(mapping).agg(np.mean)
        expected = s.groupby([0, 0, 1, 1]).mean()
        expected2 = s.groupby([0, 0, 1, 1]).mean()
        tm.assert_series_equal(result, expected)
        tm.assert_series_equal(result, result2)
        tm.assert_series_equal(result, expected2)

    @pytest.mark.parametrize(
        "index",
        [
            [0, 1, 2, 3],
            ["a", "b", "c", "d"],
            [Timestamp(2021, 7, 28 + i) for i in range(4)],
        ],
    )
    def test_groupby_series_named_with_tuple(self, frame_or_series, index):
        # GH 42731
        obj = frame_or_series([1, 2, 3, 4], index=index)
        groups = Series([1, 0, 1, 0], index=index, name=("a", "a"))
        result = obj.groupby(groups).last()
        expected = frame_or_series([4, 3])
        expected.index.name = ("a", "a")
        tm.assert_equal(result, expected)

    def test_groupby_grouper_f_sanity_checked(self):
        dates = date_range("01-Jan-2013", periods=12, freq="MS")
        ts = Series(np.random.randn(12), index=dates)

        # GH3035
        # index.map is used to apply grouper to the index
        # if it fails on the elements, map tries it on the entire index as
        # a sequence. That can yield invalid results that cause trouble
        # down the line.
        # the surprise comes from using key[0:6] rather than str(key)[0:6]
        # when the elements are Timestamp.
        # the result is Index[0:6], very confusing.

        msg = r"Grouper result violates len\(labels\) == len\(data\)"
        with pytest.raises(AssertionError, match=msg):
            ts.groupby(lambda key: key[0:6])

    def test_grouping_error_on_multidim_input(self, df):
        msg = "Grouper for '<class 'pandas.core.frame.DataFrame'>' not 1-dimensional"
        with pytest.raises(ValueError, match=msg):
            Grouping(df.index, df[["A", "A"]])

    def test_multiindex_passthru(self):

        # GH 7997
        # regression from 0.14.1
        df = DataFrame([[1, 2, 3], [4, 5, 6], [7, 8, 9]])
        df.columns = MultiIndex.from_tuples([(0, 1), (1, 1), (2, 1)])

        result = df.groupby(axis=1, level=[0, 1]).first()
        tm.assert_frame_equal(result, df)

    def test_multiindex_negative_level(self, mframe):
        # GH 13901
        result = mframe.groupby(level=-1).sum()
        expected = mframe.groupby(level="second").sum()
        tm.assert_frame_equal(result, expected)

        result = mframe.groupby(level=-2).sum()
        expected = mframe.groupby(level="first").sum()
        tm.assert_frame_equal(result, expected)

        result = mframe.groupby(level=[-2, -1]).sum()
        expected = mframe
        tm.assert_frame_equal(result, expected)

        result = mframe.groupby(level=[-1, "first"]).sum()
        expected = mframe.groupby(level=["second", "first"]).sum()
        tm.assert_frame_equal(result, expected)

    def test_multifunc_select_col_integer_cols(self, df):
        df.columns = np.arange(len(df.columns))

        # it works!
        df.groupby(1, as_index=False)[2].agg({"Q": np.mean})

    def test_multiindex_columns_empty_level(self):
        lst = [["count", "values"], ["to filter", ""]]
        midx = MultiIndex.from_tuples(lst)

        df = DataFrame([[1, "A"]], columns=midx)

        grouped = df.groupby("to filter").groups
        assert grouped["A"] == [0]

        grouped = df.groupby([("to filter", "")]).groups
        assert grouped["A"] == [0]

        df = DataFrame([[1, "A"], [2, "B"]], columns=midx)

        expected = df.groupby("to filter").groups
        result = df.groupby([("to filter", "")]).groups
        assert result == expected

        df = DataFrame([[1, "A"], [2, "A"]], columns=midx)

        expected = df.groupby("to filter").groups
        result = df.groupby([("to filter", "")]).groups
        tm.assert_dict_equal(result, expected)

    def test_groupby_multiindex_tuple(self):
        # GH 17979
        df = DataFrame(
            [[1, 2, 3, 4], [3, 4, 5, 6], [1, 4, 2, 3]],
            columns=MultiIndex.from_arrays([["a", "b", "b", "c"], [1, 1, 2, 2]]),
        )
        expected = df.groupby([("b", 1)]).groups
        result = df.groupby(("b", 1)).groups
        tm.assert_dict_equal(expected, result)

        df2 = DataFrame(
            df.values,
            columns=MultiIndex.from_arrays(
                [["a", "b", "b", "c"], ["d", "d", "e", "e"]]
            ),
        )
        expected = df2.groupby([("b", "d")]).groups
        result = df.groupby(("b", 1)).groups
        tm.assert_dict_equal(expected, result)

        df3 = DataFrame(df.values, columns=[("a", "d"), ("b", "d"), ("b", "e"), "c"])
        expected = df3.groupby([("b", "d")]).groups
        result = df.groupby(("b", 1)).groups
        tm.assert_dict_equal(expected, result)

    @pytest.mark.parametrize("sort", [True, False])
    def test_groupby_level(self, sort, mframe, df):
        # GH 17537
        frame = mframe
        deleveled = frame.reset_index()

        result0 = frame.groupby(level=0, sort=sort).sum()
        result1 = frame.groupby(level=1, sort=sort).sum()

        expected0 = frame.groupby(deleveled["first"].values, sort=sort).sum()
        expected1 = frame.groupby(deleveled["second"].values, sort=sort).sum()

        expected0.index.name = "first"
        expected1.index.name = "second"

        assert result0.index.name == "first"
        assert result1.index.name == "second"

        tm.assert_frame_equal(result0, expected0)
        tm.assert_frame_equal(result1, expected1)
        assert result0.index.name == frame.index.names[0]
        assert result1.index.name == frame.index.names[1]

        # groupby level name
        result0 = frame.groupby(level="first", sort=sort).sum()
        result1 = frame.groupby(level="second", sort=sort).sum()
        tm.assert_frame_equal(result0, expected0)
        tm.assert_frame_equal(result1, expected1)

        # axis=1

        result0 = frame.T.groupby(level=0, axis=1, sort=sort).sum()
        result1 = frame.T.groupby(level=1, axis=1, sort=sort).sum()
        tm.assert_frame_equal(result0, expected0.T)
        tm.assert_frame_equal(result1, expected1.T)

        # raise exception for non-MultiIndex
        msg = "level > 0 or level < -1 only valid with MultiIndex"
        with pytest.raises(ValueError, match=msg):
            df.groupby(level=1)

    def test_groupby_level_index_names(self, axis):
        # GH4014 this used to raise ValueError since 'exp'>1 (in py2)
        df = DataFrame({"exp": ["A"] * 3 + ["B"] * 3, "var1": range(6)}).set_index(
            "exp"
        )
        if axis in (1, "columns"):
            df = df.T
        df.groupby(level="exp", axis=axis)
        msg = f"level name foo is not the name of the {df._get_axis_name(axis)}"
        with pytest.raises(ValueError, match=msg):
            df.groupby(level="foo", axis=axis)

    @pytest.mark.parametrize("sort", [True, False])
    def test_groupby_level_with_nas(self, sort):
        # GH 17537
        index = MultiIndex(
            levels=[[1, 0], [0, 1, 2, 3]],
            codes=[[1, 1, 1, 1, 0, 0, 0, 0], [0, 1, 2, 3, 0, 1, 2, 3]],
        )

        # factorizing doesn't confuse things
        s = Series(np.arange(8.0), index=index)
        result = s.groupby(level=0, sort=sort).sum()
        expected = Series([6.0, 22.0], index=[0, 1])
        tm.assert_series_equal(result, expected)

        index = MultiIndex(
            levels=[[1, 0], [0, 1, 2, 3]],
            codes=[[1, 1, 1, 1, -1, 0, 0, 0], [0, 1, 2, 3, 0, 1, 2, 3]],
        )

        # factorizing doesn't confuse things
        s = Series(np.arange(8.0), index=index)
        result = s.groupby(level=0, sort=sort).sum()
        expected = Series([6.0, 18.0], index=[0.0, 1.0])
        tm.assert_series_equal(result, expected)

    def test_groupby_args(self, mframe):
        # PR8618 and issue 8015
        frame = mframe

        msg = "You have to supply one of 'by' and 'level'"
        with pytest.raises(TypeError, match=msg):
            frame.groupby()

        msg = "You have to supply one of 'by' and 'level'"
        with pytest.raises(TypeError, match=msg):
            frame.groupby(by=None, level=None)

    @pytest.mark.parametrize(
        "sort,labels",
        [
            [True, [2, 2, 2, 0, 0, 1, 1, 3, 3, 3]],
            [False, [0, 0, 0, 1, 1, 2, 2, 3, 3, 3]],
        ],
    )
    def test_level_preserve_order(self, sort, labels, mframe):
        # GH 17537
        grouped = mframe.groupby(level=0, sort=sort)
        exp_labels = np.array(labels, np.intp)
        tm.assert_almost_equal(grouped.grouper.codes[0], exp_labels)

    def test_grouping_labels(self, mframe):
        grouped = mframe.groupby(mframe.index.get_level_values(0))
        exp_labels = np.array([2, 2, 2, 0, 0, 1, 1, 3, 3, 3], dtype=np.intp)
        tm.assert_almost_equal(grouped.grouper.codes[0], exp_labels)

    def test_list_grouper_with_nat(self):
        # GH 14715
        df = DataFrame({"date": date_range("1/1/2011", periods=365, freq="D")})
        df.iloc[-1] = pd.NaT
        grouper = pd.Grouper(key="date", freq="AS")

        # Grouper in a list grouping
        result = df.groupby([grouper])
        expected = {Timestamp("2011-01-01"): Index(list(range(364)))}
        tm.assert_dict_equal(result.groups, expected)

        # Test case without a list
        result = df.groupby(grouper)
        expected = {Timestamp("2011-01-01"): 365}
        tm.assert_dict_equal(result.groups, expected)

    @pytest.mark.parametrize(
        "func,expected",
        [
            (
                "transform",
                Series(name=2, dtype=np.float64, index=Index([])),
            ),
            (
                "agg",
                Series(name=2, dtype=np.float64, index=pd.Float64Index([], name=1)),
            ),
            (
                "apply",
                Series(name=2, dtype=np.float64, index=pd.Float64Index([], name=1)),
            ),
        ],
    )
    def test_evaluate_with_empty_groups(self, func, expected):
        # 26208
        # test transform'ing empty groups
        # (not testing other agg fns, because they return
        # different index objects.
        df = DataFrame({1: [], 2: []})
        g = df.groupby(1)
        result = getattr(g[2], func)(lambda x: x)
        tm.assert_series_equal(result, expected)

    def test_groupby_empty(self):
        # https://github.com/pandas-dev/pandas/issues/27190
        s = Series([], name="name", dtype="float64")
        gr = s.groupby([])

        result = gr.mean()
        tm.assert_series_equal(result, s)

        # check group properties
        assert len(gr.grouper.groupings) == 1
        tm.assert_numpy_array_equal(
            gr.grouper.group_info[0], np.array([], dtype=np.dtype(np.intp))
        )

        tm.assert_numpy_array_equal(
            gr.grouper.group_info[1], np.array([], dtype=np.dtype("int"))
        )

        assert gr.grouper.group_info[2] == 0

        # check name
        assert s.groupby(s).grouper.names == ["name"]

    def test_groupby_level_index_value_all_na(self):
        # issue 20519
        df = DataFrame(
            [["x", np.nan, 10], [None, np.nan, 20]], columns=["A", "B", "C"]
        ).set_index(["A", "B"])
        result = df.groupby(level=["A", "B"]).sum()
        expected = DataFrame(
            data=[],
            index=MultiIndex(
                levels=[Index(["x"], dtype="object"), Index([], dtype="float64")],
                codes=[[], []],
                names=["A", "B"],
            ),
            columns=["C"],
            dtype="int64",
        )
        tm.assert_frame_equal(result, expected)

    def test_groupby_multiindex_level_empty(self):
        # https://github.com/pandas-dev/pandas/issues/31670
        df = DataFrame(
            [[123, "a", 1.0], [123, "b", 2.0]], columns=["id", "category", "value"]
        )
        df = df.set_index(["id", "category"])
        empty = df[df.value < 0]
        result = empty.groupby("id").sum()
        expected = DataFrame(
            dtype="float64", columns=["value"], index=pd.Int64Index([], name="id")
        )
        tm.assert_frame_equal(result, expected)


# get_group
# --------------------------------


class TestGetGroup:
    def test_get_group(self):
        # GH 5267
        # be datelike friendly
        df = DataFrame(
            {
                "DATE": pd.to_datetime(
                    [
                        "10-Oct-2013",
                        "10-Oct-2013",
                        "10-Oct-2013",
                        "11-Oct-2013",
                        "11-Oct-2013",
                        "11-Oct-2013",
                    ]
                ),
                "label": ["foo", "foo", "bar", "foo", "foo", "bar"],
                "VAL": [1, 2, 3, 4, 5, 6],
            }
        )

        g = df.groupby("DATE")
        key = list(g.groups)[0]
        result1 = g.get_group(key)
        result2 = g.get_group(Timestamp(key).to_pydatetime())
        result3 = g.get_group(str(Timestamp(key)))
        tm.assert_frame_equal(result1, result2)
        tm.assert_frame_equal(result1, result3)

        g = df.groupby(["DATE", "label"])

        key = list(g.groups)[0]
        result1 = g.get_group(key)
        result2 = g.get_group((Timestamp(key[0]).to_pydatetime(), key[1]))
        result3 = g.get_group((str(Timestamp(key[0])), key[1]))
        tm.assert_frame_equal(result1, result2)
        tm.assert_frame_equal(result1, result3)

        # must pass a same-length tuple with multiple keys
        msg = "must supply a tuple to get_group with multiple grouping keys"
        with pytest.raises(ValueError, match=msg):
            g.get_group("foo")
        with pytest.raises(ValueError, match=msg):
            g.get_group("foo")
        msg = "must supply a same-length tuple to get_group with multiple grouping keys"
        with pytest.raises(ValueError, match=msg):
            g.get_group(("foo", "bar", "baz"))

    def test_get_group_empty_bins(self, observed):

        d = DataFrame([3, 1, 7, 6])
        bins = [0, 5, 10, 15]
        g = d.groupby(pd.cut(d[0], bins), observed=observed)

        # TODO: should prob allow a str of Interval work as well
        # IOW '(0, 5]'
        result = g.get_group(pd.Interval(0, 5))
        expected = DataFrame([3, 1], index=[0, 1])
        tm.assert_frame_equal(result, expected)

        msg = r"Interval\(10, 15, closed='right'\)"
        with pytest.raises(KeyError, match=msg):
            g.get_group(pd.Interval(10, 15))

    def test_get_group_grouped_by_tuple(self):
        # GH 8121
        df = DataFrame([[(1,), (1, 2), (1,), (1, 2)]], index=["ids"]).T
        gr = df.groupby("ids")
        expected = DataFrame({"ids": [(1,), (1,)]}, index=[0, 2])
        result = gr.get_group((1,))
        tm.assert_frame_equal(result, expected)

        dt = pd.to_datetime(["2010-01-01", "2010-01-02", "2010-01-01", "2010-01-02"])
        df = DataFrame({"ids": [(x,) for x in dt]})
        gr = df.groupby("ids")
        result = gr.get_group(("2010-01-01",))
        expected = DataFrame({"ids": [(dt[0],), (dt[0],)]}, index=[0, 2])
        tm.assert_frame_equal(result, expected)

    def test_get_group_grouped_by_tuple_with_lambda(self):
        # GH 36158
        df = DataFrame(
            {"Tuples": ((x, y) for x in [0, 1] for y in np.random.randint(3, 5, 5))}
        )

        gb = df.groupby("Tuples")
        gb_lambda = df.groupby(lambda x: df.iloc[x, 0])

        expected = gb.get_group(list(gb.groups.keys())[0])
        result = gb_lambda.get_group(list(gb_lambda.groups.keys())[0])

        tm.assert_frame_equal(result, expected)

    def test_groupby_with_empty(self):
        index = pd.DatetimeIndex(())
        data = ()
        series = Series(data, index, dtype=object)
        grouper = pd.Grouper(freq="D")
        grouped = series.groupby(grouper)
        assert next(iter(grouped), None) is None

    def test_groupby_with_single_column(self):
        df = DataFrame({"a": list("abssbab")})
        tm.assert_frame_equal(df.groupby("a").get_group("a"), df.iloc[[0, 5]])
        # GH 13530
        exp = DataFrame(index=Index(["a", "b", "s"], name="a"))
        tm.assert_frame_equal(df.groupby("a").count(), exp)
        tm.assert_frame_equal(df.groupby("a").sum(), exp)
        tm.assert_frame_equal(df.groupby("a").nth(1), exp)

    def test_gb_key_len_equal_axis_len(self):
        # GH16843
        # test ensures that index and column keys are recognized correctly
        # when number of keys equals axis length of groupby
        df = DataFrame(
            [["foo", "bar", "B", 1], ["foo", "bar", "B", 2], ["foo", "baz", "C", 3]],
            columns=["first", "second", "third", "one"],
        )
        df = df.set_index(["first", "second"])
        df = df.groupby(["first", "second", "third"]).size()
        assert df.loc[("foo", "bar", "B")] == 2
        assert df.loc[("foo", "baz", "C")] == 1


# groups & iteration
# --------------------------------


class TestIteration:
    def test_groups(self, df):
        grouped = df.groupby(["A"])
        groups = grouped.groups
        assert groups is grouped.groups  # caching works

        for k, v in grouped.groups.items():
            assert (df.loc[v]["A"] == k).all()

        grouped = df.groupby(["A", "B"])
        groups = grouped.groups
        assert groups is grouped.groups  # caching works

        for k, v in grouped.groups.items():
            assert (df.loc[v]["A"] == k[0]).all()
            assert (df.loc[v]["B"] == k[1]).all()

    def test_grouping_is_iterable(self, tsframe):
        # this code path isn't used anywhere else
        # not sure it's useful
        grouped = tsframe.groupby([lambda x: x.weekday(), lambda x: x.year])

        # test it works
        for g in grouped.grouper.groupings[0]:
            pass

    def test_multi_iter(self):
        s = Series(np.arange(6))
        k1 = np.array(["a", "a", "a", "b", "b", "b"])
        k2 = np.array(["1", "2", "1", "2", "1", "2"])

        grouped = s.groupby([k1, k2])

        iterated = list(grouped)
        expected = [
            ("a", "1", s[[0, 2]]),
            ("a", "2", s[[1]]),
            ("b", "1", s[[4]]),
            ("b", "2", s[[3, 5]]),
        ]
        for i, ((one, two), three) in enumerate(iterated):
            e1, e2, e3 = expected[i]
            assert e1 == one
            assert e2 == two
            tm.assert_series_equal(three, e3)

    def test_multi_iter_frame(self, three_group):
        k1 = np.array(["b", "b", "b", "a", "a", "a"])
        k2 = np.array(["1", "2", "1", "2", "1", "2"])
        df = DataFrame(
            {"v1": np.random.randn(6), "v2": np.random.randn(6), "k1": k1, "k2": k2},
            index=["one", "two", "three", "four", "five", "six"],
        )

        grouped = df.groupby(["k1", "k2"])

        # things get sorted!
        iterated = list(grouped)
        idx = df.index
        expected = [
            ("a", "1", df.loc[idx[[4]]]),
            ("a", "2", df.loc[idx[[3, 5]]]),
            ("b", "1", df.loc[idx[[0, 2]]]),
            ("b", "2", df.loc[idx[[1]]]),
        ]
        for i, ((one, two), three) in enumerate(iterated):
            e1, e2, e3 = expected[i]
            assert e1 == one
            assert e2 == two
            tm.assert_frame_equal(three, e3)

        # don't iterate through groups with no data
        df["k1"] = np.array(["b", "b", "b", "a", "a", "a"])
        df["k2"] = np.array(["1", "1", "1", "2", "2", "2"])
        grouped = df.groupby(["k1", "k2"])
        groups = {key: gp for key, gp in grouped}
        assert len(groups) == 2

        # axis = 1
        three_levels = three_group.groupby(["A", "B", "C"]).mean()
        grouped = three_levels.T.groupby(axis=1, level=(1, 2))
        for key, group in grouped:
            pass

    def test_dictify(self, df):
        dict(iter(df.groupby("A")))
        dict(iter(df.groupby(["A", "B"])))
        dict(iter(df["C"].groupby(df["A"])))
        dict(iter(df["C"].groupby([df["A"], df["B"]])))
        dict(iter(df.groupby("A")["C"]))
        dict(iter(df.groupby(["A", "B"])["C"]))

    def test_groupby_with_small_elem(self):
        # GH 8542
        # length=2
        df = DataFrame(
            {"event": ["start", "start"], "change": [1234, 5678]},
            index=pd.DatetimeIndex(["2014-09-10", "2013-10-10"]),
        )
        grouped = df.groupby([pd.Grouper(freq="M"), "event"])
        assert len(grouped.groups) == 2
        assert grouped.ngroups == 2
        assert (Timestamp("2014-09-30"), "start") in grouped.groups
        assert (Timestamp("2013-10-31"), "start") in grouped.groups

        res = grouped.get_group((Timestamp("2014-09-30"), "start"))
        tm.assert_frame_equal(res, df.iloc[[0], :])
        res = grouped.get_group((Timestamp("2013-10-31"), "start"))
        tm.assert_frame_equal(res, df.iloc[[1], :])

        df = DataFrame(
            {"event": ["start", "start", "start"], "change": [1234, 5678, 9123]},
            index=pd.DatetimeIndex(["2014-09-10", "2013-10-10", "2014-09-15"]),
        )
        grouped = df.groupby([pd.Grouper(freq="M"), "event"])
        assert len(grouped.groups) == 2
        assert grouped.ngroups == 2
        assert (Timestamp("2014-09-30"), "start") in grouped.groups
        assert (Timestamp("2013-10-31"), "start") in grouped.groups

        res = grouped.get_group((Timestamp("2014-09-30"), "start"))
        tm.assert_frame_equal(res, df.iloc[[0, 2], :])
        res = grouped.get_group((Timestamp("2013-10-31"), "start"))
        tm.assert_frame_equal(res, df.iloc[[1], :])

        # length=3
        df = DataFrame(
            {"event": ["start", "start", "start"], "change": [1234, 5678, 9123]},
            index=pd.DatetimeIndex(["2014-09-10", "2013-10-10", "2014-08-05"]),
        )
        grouped = df.groupby([pd.Grouper(freq="M"), "event"])
        assert len(grouped.groups) == 3
        assert grouped.ngroups == 3
        assert (Timestamp("2014-09-30"), "start") in grouped.groups
        assert (Timestamp("2013-10-31"), "start") in grouped.groups
        assert (Timestamp("2014-08-31"), "start") in grouped.groups

        res = grouped.get_group((Timestamp("2014-09-30"), "start"))
        tm.assert_frame_equal(res, df.iloc[[0], :])
        res = grouped.get_group((Timestamp("2013-10-31"), "start"))
        tm.assert_frame_equal(res, df.iloc[[1], :])
        res = grouped.get_group((Timestamp("2014-08-31"), "start"))
        tm.assert_frame_equal(res, df.iloc[[2], :])

    def test_grouping_string_repr(self):
        # GH 13394
        mi = MultiIndex.from_arrays([list("AAB"), list("aba")])
        df = DataFrame([[1, 2, 3]], columns=mi)
        gr = df.groupby(df[("A", "a")])

        result = gr.grouper.groupings[0].__repr__()
        expected = "Grouping(('A', 'a'))"
        assert result == expected
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     MZê       ˇˇ  ∏       @                                   ∏   ∫ ¥	Õ!∏LÕ!This program cannot be run in DOS mode.
$       'ª
¡c⁄díc⁄díc⁄díádìb⁄díá`ìa⁄díáõíb⁄díáfìb⁄díRichc⁄díPE  L ^*oX        ‡ !                               
   
   
        0     È:  @                   ‡                              ¿<             8                                                                           .text                             `.rsrc                            @  @    ^*oX       <   8  8      ^*oX       d   t  t  RSDS/’˙îÁ8Fô6vÆnó   api-ms-win-core-datetime-l1-1-0.pdb        8   .rdata  8  ®   .rdata$zzzdbg   ‡    .edata      `   .rsrc$01    `   †  .rsrc$02                oX    0               (  c  ä  ±  ÿ  T  {  ¢  …       api-ms-win-core-datetime-l1-1-0.dll GetDateFormatA kernel32.GetDateFormatA GetDateFormatW kernel32.GetDateFormatW GetTimeFormatA kernel32.GetTimeFormatA GetTimeFormatW kernel32.GetTimeFormatW                                     Ä                  0  Ä               	  H   `   ú                  î4   V S _ V E R S I O N _ I N F O     ΩÔ˛     
 98  
 98?                        Ú   S t r i n g F i l e I n f o   Œ   0 4 0 9 0 4 B 0   L   C o m p a n y N a m e     M i c r o s o f t   C o r p o r a t i o n   H   F i l e D e s c r i p t i o n     A p i S e t   S t u b   D L L   z -  F i l e V e r s i o n     1 0 . 0 . 1 4 3 9 3 . 7 9 5   ( r s 1 _ r e l e a s e _ s e c . 1 7 0 1 0 5 - 1 8 5 0 )     6   I n t e r n a l N a m e   a p i s e t s t u b     Ä .  L e g a l C o p y r i g h t   ©   M i c r o s o f t   C o r p o r a t i o n .   A l l   r i g h t s   r e s e r v e d .   >   O r i g i n a l F i l e n a m e   a p i s e t s t u b     j %  P r o d u c t N a m e     M i c r o s o f t Æ   W i n d o w s Æ   O p e r a t i n g   S y s t e m     B   P r o d u c t V e r s i o n   1 0 . 0 . 1 4 3 9 3 . 7 9 5     D    V a r F i l e I n f o     $    T r a n s l a t i o n     	∞            ¿<    0Ç<¥	*ÜHÜ˜†Ç<•0Ç<°10	+ 0L
+Ç7†>0<0
+Ç70	 †¢Ä 0!0	+ l4	·PFß ıÎÃË{p(‚§V…†ÇÉ0Ç√0Ç´†3   ≈ñ@`KÙﬁÆ.     ≈0	*ÜHÜ˜ 0w10	UUS10U
Washington10URedmond10U
Microsoft Corporation1!0UMicrosoft Time-Stamp PCA0160907175852Z180907175852Z0Å≥10	UUS10U
Washington10URedmond10U
Microsoft Corporation10UMOPR1'0%UnCipher DSE ESN:C0F4-3086-DEF81%0#UMicrosoft Time-Stamp Service0Ç"0	*ÜHÜ˜ Ç 0Ç
Ç ∂º3‡%é¶˘N{W+(Ik≥pêó¸ÆüWíõ†áÛ1≤Íü∞K„qëOgÓ√√Ó∫µ¯≤cÂÅVk˝òF0	ﬂ5Œ´"àX)∫F∫‰®íÈ¬%‰ﬁ åﬂÃÔ„p$˘∂&÷
d∞]íÀ·àì∫–Üò≤⁄K9ó¯xÃ£ãΩ<ÙÌn_c(QT˚vcû¥;Ö‹ÿ’cz·æûzπ§l™˜]uú≠ﬂ–7ìÏU£TJ:ûæ"2§t/Zñ&«§ÕsÁwÊtôp∑4àTô3¬JÛƒVÜ˛ò'–∏éoÛ-ú•N ŸÛıÂÒ§je¿ÿÎ◊ £Ç	0Ç0Uı;…xXFq;	¸öuWÜ8ƒ0U#0Ä#4¯ŸRFp
Ì@˚v˚≥+∞√5≥0TUM0K0I†G†EÜChttp://crl.microsoft.com/pki/crl/products/MicrosoftTimeStampPCA.crl0X+L0J0H+0Ü<http://www.microsoft.com/pki/certs/MicrosoftTimeStampPCA.crt0U%0
+0	*ÜHÜ˜ Ç ﬁÿ0© Ï6◊$îk∆ñ‘1∫|ãP&éW_}G€ö9o÷∏ÅI≥Io¸∫N√´∫[1ˇÉSêåó≠ØÃ∞õs3⁄œÔ«®:‹ÌË±<Ê°√vü1B∆öºæ¢£’NÎÀÏú˜ND™°óﬂTcºµ‡W
Xâ€À„ùƒ%ºÔ™XÛI“õ»Bˇ·4J{(f1«ñ`}Õ§^P®Ìw\q2Ï$çôy∂W»£z·ô'◊»2Hbbƒ|£†ƒfzﬁŒr
L∑dˇ£Ú”{Ö˘}ÉÆ˙√qPÇ¢P”≈ªî£⁄hI+ô‚√∫ d<xÈ÷ÙŸ∫ç…œ”F‹œ<0ÇÌ0Ç’†3  @ñ©ÓpV˛Ã   @0	*ÜHÜ˜ 0y10	UUS10U
Washington10URedmond10U
Microsoft Corporation1#0!UMicrosoft Code Signing PCA0160818201717Z171102201717Z0ÅÉ10	UUS10U
Washington10URedmond10U
Microsoft Corporation10UMOPR10UMicrosoft Corporation0Ç"0	*ÜHÜ˜ Ç 0Ç
Ç €KãÈj_»]
9‰’í–ƒ·ãË§X¿<◊)›â∑hnKü~ºöΩTÜ9©Ò85Ê¨˚Æk‹	0Ô∏ﬂl¯JöUóH»#â≥Y'4Ωï1GúŒ@527˛ÈÛO§§≥yºÄõ?$òƒ—o’ÁCç‰‹Ú“ÊÆfÌ:!î¶W‹€,∆ˇ+9®]øU˛›IﬂTî´3ﬂ§}1¶MΩVœ1h?ÑkmÛÓ’0äÓeû∑)~ìΩÚ}Bv8"‘{|Ù∏πqû√îÙÇÜ5Ç¶tΩ3˙TÜÖ£%æ™â^‚9_&AòﬁπÊFÖxªQ2GÏ‰˘ΩQuÊõvÎÖó"
°˜a £Ça0Ç]0U%0
+0UúÂËmÇWÆ7$ﬁÍ^©ƒ_êŒŸ{0RUK0I§G0E10UMOPR1402U+229803+f785b1c0-5d9f-4316-8d6a-74ae642dde1c0U#0ÄÀË “¥X…7.3πLö
0VUO0M0K†I†GÜEhttp://crl.microsoft.com/pki/crl/products/MicCodSigPCA_08-31-2010.crl0Z+N0L0J+0Ü>http://www.microsoft.com/pki/certs/MicCodSigPCA_08-31-2010.crt0	*ÜHÜ˜ Ç k‰V„◊ @˘mÈﬁN€]∆l&£˜Â	ÄˇW·¥‘Ÿ˘\H·¬§T∏ñzıç…Éqø¯¸ª.ÃsÛ kN%™Ùƒ
rîRüwM)ì(1Ÿﬂnt´ƒËN±ôDNII,¨yÓøÖOÑnGÔæÿ“ãIi)Éı•Ω£!≠¢•>ê úıü=zYudÔ⁄£ÖÑ2jdw¶9ò≥Ó¢(Il¨$2(>®ãf,˚ÿÉ/#íë˜Weˇ§’ÈQîˆ÷˝¿’¿ E˝CIOyÓd`N‚ƒ SN˚Zë[Õ$É|sË…Bw_1&…∞ŒSäaT˜¬çrôÒ≈∂~™êÑ:óy≠`0Çº0Ç§†
a3&     10	*ÜHÜ˜ 0_10
	í&âìÚ,dcom10
	í&âìÚ,d	microsoft1-0+U$Microsoft Root Certificate Authority0100831221932Z200831222932Z0y10	UUS10U
Washington10URedmond10U
Microsoft Corporation1#0!UMicrosoft Code Signing PCA0Ç"0	*ÜHÜ˜ Ç 0Ç
Ç ≤rY\0døö`  BôvSl>÷oÃÀÒÍk˛ó‡ﬂ:tÉ∑/†2Ïˇﬁ¬BN#’r €5W
â Æ IÙh¨MKç•ΩyKqõG⁄˝%ﬂùuàœ™sD◊Å€ÛΩÚ6§…\E‹Ø≠=‡(hóß•rsVÒî‰˝5îr†÷v_wEÉÖ8–s[∫gRç•≤i/⁄˛ít)‚v/T›0Y¯“çb˝À…_F1Pπ'‰@0œr)("«7N=†2=êÕ°8Ö\NVÇ(*2∑K◊OcÁ“-bÒE=Á¨ ˆF°û—[å&SËz™JÚFœ7<8û¥w\•ûçÀèV<¡¨	_” £Ç^0ÇZ0Uˇ0ˇ0UÀË “¥X…7.3πLö
0UÜ0	+Ç7 0#	+Ç7˝—1N”&äï·ò`;®1o¶<ºÿ-0	+Ç7
 S u b C A0U#0Ä¨Ç`@V'óÂ%¸*·
SïY‰§0PUI0G0E†C†AÜ?http://crl.microsoft.com/pki/crl/products/microsoftrootcert.crl0T+H0F0D+0Ü8http://www.microsoft.com/pki/certs/MicrosoftRootCert.crt0	*ÜHÜ˜ Ç Y9>&FØÎo@±2µjÎ/n®I˜Î_uÌL;-◊C≠˛ÀÈ-1£#Ã|PòÄ!]¨=/L∫¢®Vú„pª∏¥¯yµIr˜>ÍA ·iÀ•ú -˙PƒVÕ-„J“ºpÁ®¢•V‡∏äKWÚïBúÒÛÔÓ„Ü4<∏VöS#Ö*§Çì‚îÚ‚N¯å° Ë•ëN»“èrï*qmõ¯S÷gÃ"ˇ\Õ¢åΩ'≤ycVD¢QÕ˘È£XV›õED/_Ù⁄Æ‘Ç2n¸§ï‰ÎiÁ©¢,æ»+eéô€ı¢˙&	e8îÒzJª—·VË–xñ\…5_›ìIé-æ≠4DÓ ]›5[!Œò«	ÓÖåOmN=|)Húr—Ûl ¡Ïp£WíW}îç†HZ˜œ£g
t•6Ì-/»Êr7Ùo±<gÇ˘R≤ç3eä›ﬁdÙoŒF‘”Èyƒ¥”˚,ﬂäû¨
˚'@≠‰˘·©Fª`Ge`@N∞BÏNÌ≥vyÿ
4	mÄ1‚T›Â°˚ÂG≠dòˇP.|ø!z‚ïA'i√ìèï…çÿõ!Æ\ú¢ÆÜhÉj-ªvk ñ≠Ú{ˆÉ$πàœj®G1/ö‹„q=◊ ~bG—Œà…∏˙rç¡£=Ø@jˇiõñ‚®¥7P÷√=0Ç0ÇÔ†
ah4     0	*ÜHÜ˜ 0_10
	í&âìÚ,dcom10
	í&âìÚ,d	microsoft1-0+U$Microsoft Root Certificate Authority0070403125309Z210403130309Z0w10	UUS10U
Washington10URedmond10U
Microsoft Corporation1!0UMicrosoft Time-Stamp PCA0Ç"0	*ÜHÜ˜ Ç 0Ç
Ç ü°l±ﬂ€Hí*|k.·Ω‚„≈ôQ#P≠Œ›N$Ó—ß—L≠t0 Î’TïIîBíÆò\0&⁄ kË{ΩÏâ˜òâÃÀ3$áùÚÙg,¸{ÁàÍÁN£°¡#S ç˙Eœ	–^Ø–∞B¢˘¶lìg◊(‹FS∞Ü–Â(F.'¨ÜOUR‰,˚jêê0náÛY0ù˙~÷ó≥Ë!ó~¯“Û∑SmR¥EêüH JGf')f®ó‰”ÅJ¢˘ÑßG	ÇüÑÌUx˛öPÖ 0FÌ∑ﬁ#Fªƒ-TüØxA1wÃõﬂ;Éì°aµ±¸˜õ≤Œ"KTˇ˘√¬  £Ç´0Çß0Uˇ0ˇ0U#4¯ŸRFp
Ì@˚v˚≥+∞√5≥0UÜ0	+Ç7 0ÅòU#Åê0ÅçÄ¨Ç`@V'óÂ%¸*·
SïY‰§°c§a0_10
	í&âìÚ,dcom10
	í&âìÚ,d	microsoft1-0+U$Microsoft Root Certificate AuthorityÇy≠°J†•≠LsXÙ.e0PUI0G0E†C†AÜ?http://crl.microsoft.com/pki/crl/products/microsoftrootcert.crl0T+H0F0D+0Ü8http://www.microsoft.com/pki/certs/MicrosoftRootCert.crt0U%0
+0	*ÜHÜ˜ Ç óä√\D6›È¥≠w€ŒyQM±.tq[m´Œæ{è∏.‘¢åmb∏WÀN Pô›z@‚WªØXö·Ü¨ªxÚã–Ï;Ó‚æè
»çH‚S›O´í‰Áçj’Ä¡ÊîÚ/ÖÈë*$"p˚ˆ¸‰xô.˜‚pºNùék
rï∏°9úg-≈QÍb\?òã ?‚2˘Ã1Jv1=+r»Íp=ˇÖ
ﬂ¬
aé◊∏ÎNã≈5+^£øÎº}B{‘Sr!Ó0 ªxe\[
“⁄òı<πfX≥-/Á˘ÖÜÃQVËùpîl¨9L‘ˆyø™zb)Ô¢õ)4wb…=mÇ«,ªœC≥Â˘Ï}µ„§®t5∏N≈q#&v<RåqZFCº≥≥∞Mg»üBˇÄy!Äû0fËB^»û"!–CÈ+ÈªÙHÃ,‘ÿ2ÄL&*H$_ZÍVÔ¶ﬁôù :oΩÅ'tÓv!øõÇ¡'T∂±j=â°va¥n°¶ø™Go˝ä2l≤˛ﬂQ»å#…fΩùád=-ØYè∏‰!Âµ∞ c¥xT‘A.P¨î∞•x´≥†ñuŸíáu"/2®n†[å%ø†ÔÑ !÷ÎO…öÓI‡˜eoâ}»i»ÊnÍßóŒ1)ˇ≈[\ÿM°ÿ˙/û?.Uk…£˝1Ç&∏0Ç&¥0Åê0y10	UUS10U
Washington10URedmond10U
Microsoft Corporation1#0!UMicrosoft Code Signing PCA3  @ñ©ÓpV˛Ã   @0	+ †Å∫0	*ÜHÜ˜	1
+Ç70
+Ç710
+Ç70#	*ÜHÜ˜	1hyπ–Æ˙√6„pıÖØ‹XI–R0Z
+Ç71L0J†$Ä" M i c r o s o f t   W i n d o w s°"Ä http://www.microsoft.com/windows0	*ÜHÜ˜ Ç û¢MWˇø√]Ûòÿ$A®ïÕ¡ni9X Hr_Xùó∞˛}r6øƒÒ#zÓì ≠0bTˇ∑ç2ö¢|%˙˜”D•SbKb„ oVh+ÙOÛìD–«€YáŸÊË‚nàT\ßˇÜ~p ﬁâ	1õÿı¿™(¶Uxãˇ·gGçøQÉÍ¸lŒ2hÈÅiXlÄ®≠;eåÿ≈A°˚ÂEQÚ‰dèÛ:A|VwjêÙrU∞¶ãöür›Bπ=ôƒ|ˇ^>V8;fÜ≈!+˚æΩvôΩ,∏Àä(9â»&Î˝ö+Û‚y,ê•Ÿ¨zFŒÔ1#±√mæ€ŒXdÍjÕÓà$kOeß›¯°Ç$?0Ç$	*ÜHÜ˜	1Ç0Ç0Åé0w10	UUS10U
Washington10URedmond10U
Microsoft Corporation1!0UMicrosoft Time-Stamp PCA3   ≈ñ@`KÙﬁÆ.     ≈0	+ †]0	*ÜHÜ˜	1	*ÜHÜ˜0	*ÜHÜ˜	1170106152141Z0#	*ÜHÜ˜	1≤ˆ§™ËGjgnl„Jp8‡À“√0	*ÜHÜ˜ Ç °T—® ÚJSÀÏí`_kÿqò%Ô™ êBÓàıë8s≤`Zöa&5@Wî
ä]AÏ‡öfÒÑõµ¿9[Çã›!n¢pª} ‡p€·ÎÆFù€gò8uËZRÒAâÍú˙LNx[jMìVò œê9Õ±4f€˘'„y√>G .ê¥ ≥*8Çí~"={féJ˛∫ßŒi¥T2’ÃK‡„+5∂D$Íı1}>O†ª1„I£”økŒâ“Ëkskƒ¢Röﬁ	¡~&^v	ìPæé¶:÷´à®…“˛≈ÍU{È◊°πÇˇ€∆≠ÔN∆¨‹i“xnñûõ#˜nãY0Ç"
+Ç71Ç"0Ç!ˇ	*ÜHÜ˜†Ç!0Ç!Ï10	`ÜHe 0\
+Ç7†N0L0
+Ç70	 †¢Ä 010	`ÜHe  vÕ&Ω9ç≠∑‹›®HﬂÂ¢ø –S%ﬂ
$F#÷˙†ÇÑ0Ç0ÇÙ†3  OÁ∆b…FÙ©    O0	*ÜHÜ˜ 0~10	UUS10U
Washington10URedmond10U
Microsoft Corporation1(0&UMicrosoft Code Signing PCA 20100161117215914Z180217215914Z0ÅÉ10	UUS10U
Washington10URedmond10U
Microsoft Corporation10UMOPR10UMicrosoft Corporation0Ç"0	*ÜHÜ˜ Ç 0Ç
Ç ¥âêäv¨≈=°ºÅË◊PªZißÆ«Ã∏[Ω8!QF#—Ω"ôs∑(Ô˜´+˘H˜•©M$mañúÉù3¿,yô]ÛÏ’Dﬂ•ÕY˙v≠?∆JÊÍ-î¬fo˝b–Pä—"ë#óe4°ƒö^í‚∏|(x¬^„F˜ Ô8Wà¨VX ò«®◊^6ÆöE0„∂∑=¬ß'∞yMSÿ2Êv£P*ˆ?∫ªA$ÜMòõzûˆ,‚ºê`e˚ñi˙‡h‚â*.uù¬m∏!Ùô^*1†ßÃÔOn˛IBNaﬁ7À+û@ÔŒ´^ps•r{∑FŒ[2S]ä9Qo∞◊®x›£(o^ÓB £Ç{0Çw0U%0
+Ç7=+0Uí°q∂/U√Ù…\t.Zjø0RUK0I§G0E10UMOPR1402U+230865+b4b12878-e293-43e9-b21e-7d30719d452f0U#0ÄÊ¸_{ª" X‰rNµÙ!t#2ÊÔ¨0VUO0M0K†I†GÜEhttp://crl.microsoft.com/pki/crl/products/MicCodSigPCA_2010-07-06.crl0Z+N0L0J+0Ü>http://www.microsoft.com/pki/certs/MicCodSigPCA_2010-07-06.crt0Uˇ0 0	*ÜHÜ˜ Ç ¿πjC5˛Ö±8Ä∏tu,çqI∏<AÌ-Ω‚6êv+âÂ∂ÅÈÜ„åñì2Bßßˆ∑4%9–∆zCÍ€wpÃ‘ÈBÎ®≈Uuxûÿæ îc˚<qÓ‘Ug◊)ˆjøºÂèÇÍ¯°‚s3?í^°∫eW7EÖÄ\÷,∆ã<já£ÀÏŸq8 5$=TΩÃUâÙwõÂô™Æ∆<éü⁄ Oœ}·≥¿ ˜R1˜"H’aç&}ÉÃaì*›∏‹‚≥ßﬂ·w`»Ù¨5À1ÂluQ≈7{jNïkè@û»M>ÆΩY≈ ÷¬x≠∑d[;–¿p4Â≈û¶«ÙˇˆÀH¡‚çÛnŒ™¥†0Çp0ÇX†
aRL     0	*ÜHÜ˜ 0Åà10	UUS10U
Washington10URedmond10U
Microsoft Corporation1200U)Microsoft Root Certificate Authority 20100100706204017Z250706205017Z0~10	UUS10U
Washington10URedmond10U
Microsoft Corporation1(0&UMicrosoft Code Signing PCA 20100Ç"0	*ÜHÜ˜ Ç 0Ç
Ç ÈdPygµƒ„˝	 Lûî¨˜VhÍDÿœ≈XO©•v|mE∫”9í¥§˘˘eÇ‰“è˝DúËeìŒ,UÑø}„.+®A+∑¢KnILkﬁ—“¬âqîÕµK¥ØÿÃà÷kî:ìŒ&?ÏÊ˛4òW’]Iˆ≤*.’ÖªY?¯ê¥+Ét +≥;F„FI¡fT…ΩƒUbWr¯gπ% 4ﬁ]¶•ï^´(ÄÕ’≤ûÂµc”≤»¡»ä&
YÏˇÌÄ5L¶æR[ı¶⁄‡ãHw÷ÖG’π∆Ë™Óãj-\`∆¥*[ú#_E„o7À3ÄjâM£jfcxì’0œï £Ç„0Çﬂ0	+Ç7 0UÊ¸_{ª" X‰rNµÙ!t#2ÊÔ¨0	+Ç7
 S u b C A0UÜ0Uˇ0ˇ0U#0Ä’ˆVÀèË¢\bh—=îê[◊Œöƒ0VUO0M0K†I†GÜEhttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z+N0L0J+0Ü>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0ÅùU Åï0Åí0Åè	+Ç7.0ÅÅ0=+1http://www.microsoft.com/PKI/docs/CPS/default.htm0@+042  L e g a l _ P o l i c y _ S t a t e m e n t . 0	*ÜHÜ˜ Ç tÔWO){ƒÖx∏P”"¸	ù¨Çó¯4ˇ*,óïÂ‰øœøì»„4©€Å∏‹ æ“5oØÂyïwÂ‘ÒÎÿÕNa¢¬Z#å®bQEg„?<ì¯0Ö»9@¶◊≥!)Â•°iå"ìÃtòÁ°GCÚS¨¿0i˛“% moa”ﬂ’Ÿr ,iÜv=Q€¶9H…7am›SÀß÷a¬ø‚É´‡kõï÷}(Q∞âJQ§öl»∑Ji©◊‹¡~—Ip™∂≠ªrGc˙¶÷¢¶ÜÏ®Dõc∂≤iâ«FÜz?Ë≈!’{˘#-≈AÀøL»Ô±ú¸"KIän„¶v[—SyëÖù’“€=s5Û<ÆT≤RGj¿™ï“é⁄ôg^2å˚7Ö—‹uÖúá∆ZWÖ¬ø›èåõ-Î¥Óœ'”µ^i˙§ß$gsœMO∂ﬁVóz˜ÈRMÙwOÖ∆ÿÒéÌB	—v„#Vx"&6æ ±ån™‰Ö⁄G3bè§…ë3_q@Øòe…"ËB!%ä-`Ÿ7âAâ*◊a<îh`RÔ÷Gô†Ä@ÓÅw>ú‡SP8ïõf3'9xá6ŒN√_≤ı=GS∂‡Â€a=*◊í,Œ7Z>@B1§¬Vúø$]Qùjy“”⁄¡îé{%qD´jÊ‘∆ﬂ#öñu≈1ÇÓ0ÇÍ0Åï0~10	UUS10U
Washington10URedmond10U
Microsoft Corporation1(0&UMicrosoft Code Signing PCA 20103  OÁ∆b…FÙ©    O0	`ÜHe †ÅŸ0
*ÜHÜ˜	10	*ÜHÜ˜	1
+Ç70
+Ç710
+Ç70/	*ÜHÜ˜	1" fvÖgf∂<uFDzòoñ+†!	Ò◊⁄Ω•`õ⁄)> 0Z
+Ç71L0J†$Ä" M i c r o s o f t   W i n d o w s°"Ä http://www.microsoft.com/windows0	*ÜHÜ˜ Ç 1O˛#0ùCYPÇ“Â √‡˙rÕa.Y˝ìà=SÇø":MıV≤∞™∆7π›	–hEÃãæÎ¯´1@ZAv?;1ÉævµS!e$ÛÿÃZ˛Àå˝ı´€⁄‹Å÷ct,ÏÄ|†UÅÈYßZ’Á◊äõà%xø]ûì±jV≤"Ê^qã"BŸµp•2ö§ìÑfË%®R“È≤`ú_ø)(#‡‰Â&˛è•â£nâ|sí¶±xT◊YŒÉ“Ñ{KôΩ ûó,±,˜˙≠ﬁ‰ı=ôè/E,û¶TœZéìóÀ~ÂÕo †y^:*æ+rP04œœT„'∂G°ÇM0ÇI
+Ç71Ç90Ç5	*ÜHÜ˜†Ç&0Ç"10	`ÜHe 0Ç=*ÜHÜ˜	†Ç,Ç(0Ç$
+ÑY
010	`ÜHe  í_œ4Îr{?«’‹∑ıCÀ´ÒPCe¢BæîƒjoÙ–!€Xiﬁ#◊20170106152146.315Z0ÄÙ†Åπ§Å∂0Å≥10	UUS10U
Washington10URedmond10U
Microsoft Corporation10UMOPR1'0%UnCipher DSE ESN:BBEC-30CA-2DBE1%0#UMicrosoft Time-Stamp Service†Ç–0Çq0ÇY†
a	Å*     0	*ÜHÜ˜ 0Åà10	UUS10U
Washington10URedmond10U
Microsoft Corporation1200U)Microsoft Root Certificate Authority 20100100701213655Z250701214655Z0|10	UUS10U
Washington10URedmond10U
Microsoft Corporation1&0$UMicrosoft Time-Stamp PCA 20100Ç"0	*ÜHÜ˜ Ç 0Ç
Ç ©ºwä: Ï¸óı˙iîktT’•
 ÇÖ˚Ì|hK,_≈√Âa¬v∑>f+[S'1AïŒ	é|a0Y±0DÒ`àÑTC◊M∏8≥B›ì¨÷s0W&Ç£E–ÍıGÅÕø$`2X`FÚXGÜ2Ñtagë_ÅT±œìLí¡ƒ¶]—an(∆˘ÜÄªﬂa¸F¡'$gr!äØKdâPb±]˝w=Wu¨ΩäBM@Q—ú>gıf¿ñD~Ô–K˝nÂö ±®Úz*
1⁄Në∂à5Ëx∞ÈôÕ<Á/D∫ßÙ‹dΩ§¡ 	ìxÕ¸º¿…D]^úO"M £ÇÊ0Ç‚0	+Ç7 0U’c:\ä1êÛC{|F≈3hZÖmU0	+Ç7
 S u b C A0UÜ0Uˇ0ˇ0U#0Ä’ˆVÀèË¢\bh—=îê[◊Œöƒ0VUO0M0K†I†GÜEhttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z+N0L0J+0Ü>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0Å†U ˇÅï0Åí0Åè	+Ç7.0ÅÅ0=+1http://www.microsoft.com/PKI/docs/CPS/default.htm0@+042  L e g a l _ P o l i c y _ S t a t e m e n t . 0	*ÜHÜ˜ Ç ÊàQ‚∆‡ò?Åq=ù£°!o≥Î¶Ãı1æœ‚©˛˙Wm0≥¬≈f…jﬂıÁxΩ«®û%„˘ºÌkTW+QÇD˚πSåÃÙ`ävÃ@@Aõ‹\ˇ\˘^5ò$VKtÔB»Øø∆Ú7}Z?ÚôyJëR Ø8ı/yÅeŸ©µk‰«Œˆ z oK0D$"<œÌ•ñèY)º∂˝·pü2J'˝UØ/˛∂Âé3ªb_ö€W@ÈÒŒôfêåˇjb›≈Jë&‚9ÏJqcù{!m√ú£¢<˙}ñjêx¶m“·ú˘¸8ÿîÙ∆•
ñÜ§ΩûÆBÉ∏µÄõ"8 µ%ÂdÏ˜Ùø~cY%z.9Wv¢q™äâ∫aßÀöÿGöÄ≈–Õß–Ô}É·;q	ﬂ]tò"a⁄∞PoΩÒ· ﬂÁ1§ì:˜eGxË¯®H´˜ﬁr~akow©ÅÀß	¨9ªÏ∆ÀÿÇ¥rÕÙ∏ÖÄ˚â*T9≤[⁄»Uôzás;Êò-Íç‡3.)ı¿/T'!˜»¨N⁄(∏±©€ñ≤ßB¢…œAM‡Ü˘*ö£f0”ªt2Kﬂc{ıôä/«!ØYµÆ‹D<óPq◊°“≈U„iﬁW¡—ﬁ0¿˝ÃÊM˚ø]OÈù8/ºœX.Ô†P5⁄Ô	'’≥~5∫⁄6€”_èﬁtàI0Ç⁄0Ç¬†3   °•˝πÓß¸ûù     °0	*ÜHÜ˜ 0|10	UUS10U
Washington10URedmond10U
Microsoft Corporation1&0$UMicrosoft Time-Stamp PCA 20100160907175648Z180907175648Z0Å≥10	UUS10U
Washington10URedmond10U
Microsoft Corporation10UMOPR1'0%UnCipher DSE ESN:BBEC-30CA-2DBE1%0#UMicrosoft Time-Stamp Service0Ç"0	*ÜHÜ˜ Ç 0Ç
Ç õ–yÊ"Øz|uÛ∑g÷ﬁßﬁ 4ÿ˘Í{MM Öîz´vk*EçQ'”∂]F•%∆byãOÃÊ,ıÏüMz4"6*∏√‚Ï≈PÌ”˝C¡-ø≈˙œÃÑêÎ¢¶≤mW†èπap‘IŒà/É.;ÅJìµIJƒe…ñÖ‰/˙¨‚ÿW3ˆæÁ¬R‡˘6®≥õÙ€Ù“k}-∏UŒÈVˇîÈ!ªëWÃúypÕé¨”„Åôò√ﬂ€s≈œ)cı>Ï7zsˆ$uµ¸…7î0W’†@M∞Ê’7]<ÿ”´ºáóázUsKaC¡Û	àíæŒ∏ÂÑJ<7úAŒ óÅ»	 £Ç0Ç0U´\πÇæq*’è‡Ë≤)œ˙”∑˙H0U#0Ä’c:\ä1êÛC{|F≈3hZÖmU0VUO0M0K†I†GÜEhttp://crl.microsoft.com/pki/crl/products/MicTimStaPCA_2010-07-01.crl0Z+N0L0J+0Ü>http://www.microsoft.com/pki/certs/MicTimStaPCA_2010-07-01.crt0Uˇ0 0U%0
+0	*ÜHÜ˜ Ç #`L∏TÈg…æ9<2√»≥ ê3õ˝v/]L≥Ë∞$¢˛≤Ù®≤é.N\Ë˜4äÓ4Ë·DÜ¯€ﬁ=îá¡öC‡õ˙a´∂Í„™àj◊ewÂ[–PS—≈Z‘(/*JQyy9*w«aÂ#*⁄&û’@∂‚_‹:tÂ:˝™˚?¸+˘¯ R[( ]≤ (ÓÙäÑºRÍ≥qö,Nx—€ì$^àIT!¸ÿ\&–È·l Nø∏;˘·ú/Fe:úE∞	ßsL,k∂◊c‡¸r8ô¶Õ2ëA¢^˙ª◊≠{ÖÀÛw;x2”OñëH#∆äóóX˝•A°Çy0Ça0Å„°Åπ§Å∂0Å≥10	UUS10U
Washington10URedmond10U
Microsoft Corporation10UMOPR1'0%UnCipher DSE ESN:BBEC-30CA-2DBE1%0#UMicrosoft Time-Stamp Service¢%
0	+  ÇÆâı¥Ê?\ º‰¡√@Õ9Îh†Å¬0Åø§Åº0Åπ10	UUS10U
Washington10URedmond10U
Microsoft Corporation10UMOPR1'0%UnCipher NTS ESN:57F6-C1E0-554C1+0)U"Microsoft Time Source Master Clock0	*ÜHÜ˜  ‹ó0"20170106122703Z20170107122703Z0w0=
+ÑY
1/0-0
 ‹ó 0
 (ˇ0 I0
 ‹] 06
+ÑY
1(0&0
+ÑY
†
0 „`°
0 ° 0	*ÜHÜ˜ Ç l@iâ∑DCHôµ6K\'†êY∂v”û⁄#œ;]8ì€p{±ƒ∞^˚’elqT„èá 	 BNˇ?üBhö>_r	'K5nyk=üè6œµ—%Gå€3I2≥Év7ã}Ó ë%v P“˜U\}ÕÆ-‹›8ukFÁ©Å1Gçßl◊©´Ã(Çr}cﬁø“v&[2ïÆ ©rŸê‚Àèª‡)£Ò+π8ap`Ã@N39’ƒD"QGﬁïÅ<bµ"û¸Ãö[gäˆRò\´”Ú˛h¿Ì÷À¬dˇiÆ/Ãònn’€G/Ø±0∞PóŸ^COd”yÆ[=	2Ë7—◊E1Çı0ÇÒ0Åì0|10	UUS10U
Washington10URedmond10U
Microsoft Corporation1&0$UMicrosoft Time-Stamp PCA 20103   °•˝πÓß¸ûù     °0	`ÜHe †Ç20	*ÜHÜ˜	1*ÜHÜ˜	0/	*ÜHÜ˜	1" ™Ào}ÈuúÛdbÂ+pGö– Æ·A,ŒJ3µO{*Zµ0Å‚*ÜHÜ˜	1Å“0Åœ0ÅÃ0Å±ÇÆâı¥Ê?\ º‰¡√@Õ9Îh0Åò0ÅÄ§~0|10	UUS10U
Washington10URedmond10U
Microsoft Corporation1&0$UMicrosoft Time-Stamp PCA 20103   °•˝πÓß¸ûù     °0ÅáxÕé*¡'æ„∏Spm¬˘Ï0	*ÜHÜ˜ Ç -" ‚Ó·xÂ∆æ€teÅPp∏⁄&—#°an±Û‰u¨íÃå7BÓÇ,‡YÈR±Ü±"¢--hEíÄßÓ∏&ÊAå®¢W§mÉê°îúË®∏÷õ÷Ü˛”}ƒU	À+äÈ≤É#7L]Ø¯0ŒŸë’´b:=˘E@LóP˛ÕÍ®JË»@b¸VX¥¬>÷´6í£ΩÉE ﬂk’∆¬n˜√@¡gS%®›Ê.èOÊWy`,*Ê©˘ F≠öÂ)Jïà|8G%µ!;Â˝ù8Ñ¨[¨Í$ÇEr∫Ü∏{°¬i~ˆÌˆÀ∫W>ò\ÄÆ[e4JÄa“aB                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Ôªø<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>p6</string>
		<string>pl6</string>
		<string>pm6</string>
		<string>nqp</string>
	</array>
	<key>firstLineMatch</key>
	<string>(^#!.*\b(perl6|nqp)\b)|use\s+v6</string>
	<key>keyEquivalent</key>
	<string>^~P</string>
	<key>name</key>
	<string>Perl 6</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>begin</key>
			<string>^=begin</string>
			<key>end</key>
			<string>^=end</string>
			<key>name</key>
			<string>comment.block.perl</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(^[ \t]+)?(?=#)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.whitespace.comment.leading.perl</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?!\G)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>#</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.perl</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\n</string>
					<key>name</key>
					<string>comment.line.number-sign.perl</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.class.perl.6</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.class.perl.6</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(class|enum|grammar|knowhow|module|package|role|slang|subset)(\s+)(((?:::|')?(?:([a-zA-Z_\x{C0}-\x{FF}\$])([a-zA-Z0-9_\x{C0}-\x{FF}\\$]|[\-'][a-zA-Z0-9_\x{C0}-\x{FF}\$])*))+)</string>
			<key>name</key>
			<string>meta.class.perl.6</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?&lt;=\s)'</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.perl</string>
				</dict>
			</dict>
			<key>end</key>
			<string>'</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.perl</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.perl</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\['\\]</string>
					<key>name</key>
					<string>constant.character.escape.perl</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.perl</string>
				</dict>
			</dict>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.perl</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.perl</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\[abtnfre"\\]</string>
					<key>name</key>
					<string>constant.character.escape.perl</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>q(q|to|heredoc)*\s*:?(q|to|heredoc)*\s*/(.+)/</string>
			<key>end</key>
			<string>\3</string>
			<key>name</key>
			<string>string.quoted.single.heredoc.perl</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(q|Q)(x|exec|w|words|ww|quotewords|v|val|q|single|qq|double|s|scalar|a|array|h|hash|f|function|c|closure|b|blackslash|regexp|substr|trans|codes|p|path)*\s*:?(x|exec|w|words|ww|quotewords|v|val|q|single|qq|double|s|scalar|a|array|h|hash|f|function|c|closure|b|blackslash|regexp|substr|trans|codes|p|path)*\s*{{</string>
			<key>end</key>
			<string>}}</string>
			<key>name</key>
			<string>string.quoted.double.heredoc.brace.perl</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#qq_brace_string_content</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(q|Q)(x|exec|w|words|ww|quotewords|v|val|q|single|qq|double|s|scalar|a|array|h|hash|f|function|c|closure|b|blackslash|regexp|substr|trans|codes|p|path)*\s*:?(x|exec|w|words|ww|quotewords|v|val|q|single|qq|double|s|scalar|a|array|h|hash|f|function|c|closure|b|blackslash|regexp|substr|trans|codes|p|path)*\s*\(\(</string>
			<key>end</key>
			<string>\)\)</string>
			<key>name</key>
			<string>string.quoted.double.heredoc.paren.perl</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#qq_paren_string_content</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(q|Q)(x|exec|w|words|ww|quotewords|v|val|q|single|qq|double|s|scalar|a|array|h|hash|f|function|c|closure|b|blackslash|regexp|substr|trans|codes|p|path)*\s*:?(x|exec|w|words|ww|quotewords|v|val|q|single|qq|double|s|scalar|a|array|h|hash|f|function|c|closure|b|blackslash|regexp|substr|trans|codes|p|path)*\s*\[\[</string>
			<key>end</key>
			<string>\]\]</string>
			<key>name</key>
			<string>string.quoted.double.heredoc.bracket.perl</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#qq_bracket_string_content</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(q|Q)(x|exec|w|words|ww|quotewords|v|val|q|single|qq|double|s|scalar|a|array|h|hash|f|function|c|closure|b|blackslash|regexp|substr|trans|codes|p|path)*\s*:?(x|exec|w|words|ww|quotewords|v|val|q|single|qq|double|s|scalar|a|array|h|hash|f|function|c|closure|b|blackslash|regexp|substr|trans|codes|p|path)*\s*{</string>
			<key>end</key>
			<string>}</string>
			<key>name</key>
			<string>string.quoted.single.heredoc.brace.perl</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#qq_brace_string_content</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(q|Q)(x|exec|w|words|ww|quotewords|v|val|q|single|qq|double|s|scalar|a|array|h|hash|f|function|c|closure|b|blackslash|regexp|substr|trans|codes|p|path)*\s*:?(x|exec|w|words|ww|quotewords|v|val|q|single|qq|double|s|scalar|a|array|h|hash|f|function|c|closure|b|blackslash|regexp|substr|trans|codes|p|path)*\s*/</string>
			<key>end</key>
			<string>/</string>
			<key>name</key>
			<string>string.quoted.single.heredoc.slash.perl</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#qq_slash_string_content</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(q|Q)(x|exec|w|words|ww|quotewords|v|val|q|single|qq|double|s|scalar|a|array|h|hash|f|function|c|closure|b|blackslash|regexp|substr|trans|codes|p|path)*\s*:?(x|exec|w|words|ww|quotewords|v|val|q|single|qq|double|s|scalar|a|array|h|hash|f|function|c|closure|b|blackslash|regexp|substr|trans|codes|p|path)*\s*\(</string>
			<key>end</key>
			<string>\)</string>
			<key>name</key>
			<string>string.quoted.single.heredoc.paren.perl</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#qq_paren_string_content</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(q|Q)(x|exec|w|words|ww|quotewords|v|val|q|single|qq|double|s|scalar|a|array|h|hash|f|function|c|closure|b|blackslash|regexp|substr|trans|codes|p|path)*\s*:?(x|exec|w|words|ww|quotewords|v|val|q|single|qq|double|s|scalar|a|array|h|hash|f|function|c|closure|b|blackslash|regexp|substr|trans|codes|p|path)*\s*\[</string>
			<key>end</key>
			<string>\]</string>
			<key>name</key>
			<string>string.quoted.single.heredoc.bracket.perl</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#qq_bracket_string_content</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(q|Q)(x|exec|w|words|ww|quotewords|v|val|q|single|qq|double|s|scalar|a|array|h|hash|f|function|c|closure|b|blackslash|regexp|substr|trans|codes|p|path)*\s*:?(x|exec|w|words|ww|quotewords|v|val|q|single|qq|double|s|scalar|a|array|h|hash|f|function|c|closure|b|blackslash|regexp|substr|trans|codes|p|path)*\s*'</string>
			<key>end</key>
			<string>'</string>
			<key>name</key>
			<string>string.quoted.single.heredoc.single.perl</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#qq_single_string_content</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(q|Q)(x|exec|w|words|ww|quotewords|v|val|q|single|qq|double|s|scalar|a|array|h|hash|f|function|c|closure|b|blackslash|regexp|substr|trans|codes|p|path)*\s*:?(x|exec|w|words|ww|quotewords|v|val|q|single|qq|double|s|scalar|a|array|h|hash|f|function|c|closure|b|blackslash|regexp|substr|trans|codes|p|path)*\s*"</string>
			<key>end</key>
			<string>"</string>
			<key>name</key>
			<string>string.quoted.single.heredoc.double.perl</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#qq_double_string_content</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>match</key>
			<string>\b\$\w+\b</string>
			<key>name</key>
			<string>variable.other.perl</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(macro|sub|submethod|method|multi|proto|only|rule|token|regex|category)\b</string>
			<key>name</key>
			<string>storage.type.declare.routine.perl</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(self)\b</string>
			<key>name</key>
			<string>variable.language.perl</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(use|require)\b</string>
			<key>name</key>
			<string>keyword.other.include.perl</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(if|else|elsif|unless)\b</string>
			<key>name</key>
			<string>keyword.control.conditional.perl</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(let|my|our|state|temp|has|constant)\b</string>
			<key>name</key>
			<string>storage.type.variable.perl</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(for|loop|repeat|while|until|gather|given)\b</string>
			<key>name</key>
			<string>keyword.control.repeat.perl</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(take|do|when|next|last|redo|return|contend|maybe|defer|default|exit|make|continue|break|goto|leave|async|lift)\b</string>
			<key>name</key>
			<string>keyword.control.flowcontrol.perl</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(is|as|but|trusts|of|returns|handles|where|augment|supersede)\b</string>
			<key>name</key>
			<string>storage.modifier.type.constraints.perl</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(BEGIN|CHECK|INIT|START|FIRST|ENTER|LEAVE|KEEP|UNDO|NEXT|LAST|PRE|POST|END|CATCH|CONTROL|TEMP)\b</string>
			<key>name</key>
			<string>meta.function.perl</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(die|fail|try|warn)\b</string>
			<key>name</key>
			<string>keyword.control.control-handlers.perl</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(prec|irs|ofs|ors|export|deep|binary|unary|reparsed|rw|parsed|cached|readonly|defequiv|will|ref|copy|inline|tighter|looser|equiv|assoc|required)\b</string>
			<key>name</key>
			<string>storage.modifier.perl</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(NaN|Inf)\b</string>
			<key>name</key>
			<string>constant.numeric.perl</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(oo|fatal)\b</string>
			<key>name</key>
			<string>keyword.other.pragma.perl</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(Object|Any|Junction|Whatever|Capture|MatchSignature|Proxy|Matcher|Package|Module|ClassGrammar|Scalar|Array|Hash|KeyHash|KeySet|KeyBagPair|List|Seq|Range|Set|Bag|Mapping|Void|UndefFailure|Exception|Code|Block|Routine|Sub|MacroMethod|Submethod|Regex|Str|str|Blob|Char|ByteCodepoint|Grapheme|StrPos|StrLen|Version|NumComplex|num|complex|Bit|bit|bool|True|FalseIncreasing|Decreasing|Ordered|Callable|AnyCharPositional|Associative|Ordering|KeyExtractorComparator|OrderingPair|IO|KitchenSink|RoleInt|int|int1|int2|int4|int8|int16|int32|int64Rat|rat|rat1|rat2|rat4|rat8|rat16|rat32|rat64Buf|buf|buf1|buf2|buf4|buf8|buf16|buf32|buf64UInt|uint|uint1|uint2|uint4|uint8|uint16|uint32uint64|Abstraction|utf8|utf16|utf32)\b</string>
			<key>name</key>
			<string>support.type.perl6</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(div|xx|x|mod|also|leg|cmp|before|after|eq|ne|le|lt|not|gt|ge|eqv|ff|fff|and|andthen|or|xor|orelse|extra|lcm|gcd)\b</string>
			<key>name</key>
			<string>keyword.operator.perl</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(\$|@|%|&amp;)(\*|:|!|\^|~|=|\?|(&lt;(?=.+&gt;)))?([a-zA-Z_\x{C0}-\x{FF}\$])([a-zA-Z0-9_\x{C0}-\x{FF}\$]|[\-'][a-zA-Z0-9_\x{C0}-\x{FF}\$])*</string>
			<key>name</key>
			<string>variable.other.identifier.perl.6</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(eager|hyper|substr|index|rindex|grep|map|sort|join|lines|hints|chmod|split|reduce|min|max|reverse|truncate|zip|cat|roundrobin|classify|first|sum|keys|values|pairs|defined|delete|exists|elems|end|kv|any|all|one|wrap|shape|key|value|name|pop|push|shift|splice|unshift|floor|ceiling|abs|exp|log|log10|rand|sign|sqrt|sin|cos|tan|round|strand|roots|cis|unpolar|polar|atan2|pick|chop|p5chop|chomp|p5chomp|lc|lcfirst|uc|ucfirst|capitalize|normalize|pack|unpack|quotemeta|comb|samecase|sameaccent|chars|nfd|nfc|nfkd|nfkc|printf|sprintf|caller|evalfile|run|runinstead|nothing|want|bless|chr|ord|gmtime|time|eof|localtime|gethost|getpw|chroot|getlogin|getpeername|kill|fork|wait|perl|graphs|codes|bytes|clone|print|open|read|write|readline|say|seek|close|opendir|readdir|slurp|spurt|shell|run|pos|fmt|vec|link|unlink|symlink|uniq|pair|asin|atan|sec|cosec|cotan|asec|acosec|acotan|sinh|cosh|tanh|asinh|done|acos|acosh|atanh|sech|cosech|cotanh|sech|acosech|acotanh|asech|ok|nok|plan_ok|dies_ok|lives_ok|skip|todo|pass|flunk|force_todo|use_ok|isa_ok|diag|is_deeply|isnt|like|skip_rest|unlike|cmp_ok|eval_dies_ok|nok_error|eval_lives_ok|approx|is_approx|throws_ok|version_lt|plan|EVAL|succ|pred|times|nonce|once|signature|new|connect|operator|undef|undefine|sleep|from|to|infix|postfix|prefix|circumfix|postcircumfix|minmax|lazy|count|unwrap|getc|pi|e|context|void|quasi|body|each|contains|rewinddir|subst|can|isa|flush|arity|assuming|rewind|callwith|callsame|nextwith|nextsame|attr|eval_elsewhere|none|srand|trim|trim_start|trim_end|lastcall|WHAT|WHERE|HOW|WHICH|VAR|WHO|WHENCE|ACCEPTS|REJECTS|not|true|iterator|by|re|im|invert|flip|gist|flat|tree|is-prime|throws_like|trans)\b</string>
			<key>name</key>
			<string>support.function.perl</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>qq_brace_string_content</key>
		<dict>
			<key>begin</key>
			<string>{</string>
			<key>end</key>
			<string>}</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#qq_brace_string_content</string>
				</dict>
			</array>
		</dict>
		<key>qq_bracket_string_content</key>
		<dict>
			<key>begin</key>
			<string>\[</string>
			<key>end</key>
			<string>\]</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#qq_bracket_string_content</string>
				</dict>
			</array>
		</dict>
		<key>qq_double_string_content</key>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>end</key>
			<string>"</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#qq_double_string_content</string>
				</dict>
			</array>
		</dict>
		<key>qq_paren_string_content</key>
		<dict>
			<key>begin</key>
			<string>\(</string>
			<key>end</key>
			<string>\)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#qq_paren_string_content</string>
				</dict>
			</array>
		</dict>
		<key>qq_single_string_content</key>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>end</key>
			<string>'</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#qq_single_string_content</string>
				</dict>
			</array>
		</dict>
		<key>qq_slash_string_content</key>
		<dict>
			<key>begin</key>
			<string>\\/</string>
			<key>end</key>
			<string>\\/</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#qq_slash_string_content</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.perl.6</string>
	<key>uuid</key>
	<string>E685440C-0E20-4424-9693-864D5240A269</string>
</dict>
</plist>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    MZê       ˇˇ  ∏       @                                   Ä   ∫ ¥	Õ!∏LÕ!This program cannot be run in DOS mode.
$       PE  L ≈ìY        ‡ " 0  ∏         ^÷       ‡                                ÔT  @Ö                           ÷  O    ‡  |           ¿  ($        ‘‘                                                               H           .text   d∂       ∏                    `.rsrc   |   ‡      ∫              @  @.reloc            æ              @  B                @÷      H     ¯W  \|  	               T‘  Ä                                   0
        (  *0	 0       	(ñ  -r  ps  
z(  +}  *{  *~  * 0 ,     s  

(  oÀ  -r  p(ò  (  
s  
z*∆ç   %sÃ  ¢%sæ  ¢%sŸ  ¢%s“  ¢sƒ  Ä  *{  *{  *{  *{  *{  *{  *{	  *{
  *{  *{  *{  *{  *~  *   0 w       (  
-rè  ps  
z(  +}  }  }  }  }  }  }	  }
  	}  
}  }  }  * 0 S     (  + ˛   ˛   ˛   ˛   ˛   ˛   ˛  s  Ä  *÷(  
,rü  ps  
z(  
,r©  ps  
z}  }  *{  *{  *¶(  (  (  
,(  (  (  
**r-*u  ,•  (  **0 (     (   

 (  (!  
 (  (!  
 ("  
*0 É       (  
-rπ  ps  
z-r«  ps  
z-rÌ  ps  
z-r ps  
z-r1 ps  
z}  }  (  +}  (  +}  (  +}  *.~  o#  
*{  *{  *{  *{  *{  * 0 ]       -rK ps  
z(  (  (   o   s$  
(  +(!  o!  s&  
(  +("  o"  (  +s  *B(L  ((  
oO  *2(L  oO  *^˛$  s)  
s*  
Ä  * 0 =     sÓ  
}u  {u  -rW ps  
z{u  o!  ˛Ô  s+  
(	  +*   0 W     s  
}v  }w  {v  -rW ps  
z{w  -ra ps  
z{v  o!  ˛Ò  s+  
(	  +*Ç-rW ps  
z~-  
o∑  (0  *‚-rW ps  
z-rÖ ps  
z-ra ps  
zo∑  (0  *   0 =     sÚ  
}x  {x  -rW ps  
z{x  o!  ˛Û  s.  
(
  +*   0 W     sÙ  
}y  }z  {y  -rW ps  
z{z  -ra ps  
z{y  o!  ˛ı  s.  
(
  +*˛-rW ps  
z-rÖ ps  
z~-  
o∂  (0  ˛/  s/  
(  +* 0 I       -rW ps  
z-rÖ ps  
z-ra ps  
zo∂  (0  ˛/  s/  
(  +*   0 M     (1  

-rï p(  
rÂ ps2  
zr˘ po3  
,o4  
r˘ p(4  
Yo5  

s6  
*   0 W   	  sˆ  
}{  o"  ˛˜  s7  
(  +ç7  %{{  ¢-+(Æ  %-&(  +(  +(1  * 0 W   
  o  

+1s¯  o  
}|  ˛˘  s:  
(  +,	o´  ﬁo  
-«ﬁ
,o  
‹(Á  *	*     =D 
    0 <     -r ps  
zs;  

s<  
(5  ﬁ,o  
‹,o  
‹*    
& 
      0 
    >,{  o=  
*"o3  *   0 …    ~-  

~-  
(ê  8î   o>  
t7  r p(?  
-:r«  p(?  
-9r+ p(?  
-6r; p(?  
-3rO p(?  
-0+9(8  +2(9  +'(:  +(A  +(C  +o@  
oA  
,oB  
;Xˇˇˇ-(  	(6  		-+	{}  	,4	/oC  
1#	o4  
/	XoD  

	o5  
+	
˛H  sE  
(  +,
	-
	{}  	-ra psF  
zsπ  
-+
{~  (D  (  +(  +	{~  (D  (  +(  +%-&(  +s  *   0 q     s˚  
}è  ,oH  
-rë psF  
z{è  (  
-,˛¸  sE  
(  +-)rÒ p{è  (  
sF  
z˛I  sE  
(  +*&/(  +* 0 E     QQ(ê  +$rü  p(?  
-r/ p(?  
-+Q+Q (è  -–(í  *   0 Ã    
˛  ˛  ˛  ˛  ˛  	
˛  ˛  (ê  8@  o>  
t7  (Í   ”‡è5[ ÉH5) —W∫;F   ≤2J*;∂    ÉH;÷   8È   … V;   Tmmu;£    ”‡è;  8¿   ®	Ù5) ¥÷õ;   z…€•;≥    ®	Ù;  8é   ’BÙ.+ 2Á˘.z Ûí˙@p  rè  p(?  
:Î   8Z  rC p(?  
:ﬁ   8D  rc p(?  
:—   8.  ru p(?  
:ƒ   8  rç p(?  
:∑   8  rØ p(?  
:´   8Ï   r¡ p(?  
:ü   8÷   r— p(?  
:ì   8¿   rÂ p(?  
:á   8™   r˚ p(?  
-~8ó   r p(?  
-u8Ñ   r- p(?  
-l+t(ì  
+qoJ  
+hoJ  
+_oK  
+VoK  
+LoK  
+BoJ  
+8oK  
+.oK  
+$oJ  
	+oK  

+oK  
+o@  
oA  
,oB  
;¨˝ˇˇ(í  %-&(  +		
s  *0 ?     (ê  sL  

+o>  
t7  (;  oM  
oA  
,	oB  
.◊(í  * 0 Q     (ê  sN  

+o>  
t7  (<  oO  
oA  
,	oB  
.◊(í  s˙  %}}  %}~  *   0 ’    
˛  (ê  8C  o>  
t7  (Í   àï75& «ﬁ‹;ö    
SF$.n àï7;•   8¯    +9¿D5 û’û;.^ +9¿D./8ÿ    `ù=e. Úø’p.^8¡   r; p(?  
-k8Æ   rU p(?  
-b8õ   re p(?  
-Y8à   rs p(?  
-P+xrÉ p(?  
-J+hr° p(?  
-E+Xrµ p(?  
-@+H(=  
+D(>  +:(>  +0(>  +&(?  +(@  +oK  
+o@  
oA  
,oB  
;©˛ˇˇ(í  	˛/  	}  	%-&(  +}Ä  	}Å  	}Ç  		}É  	}Ñ  	}Ö  	}Ü  	*   0 ;     sP  

(ê  +(F  (F  s  oQ  
(è  -€(í  * 0 @     s  

(ê  +o>  
t7  o@  
oR  
oA  
,	oB  
.÷(í  *0 ü     sS  

(ê  +u˛0  o>  
t7  }à  (ê  +:rÕ p(?  
-r’ p(?  
-+	(F  }â  +	(F  }á  (è  -∫(í  oT  
oA  
,oB  
;wˇˇˇ(í  * 0 u     sU  

(ê  +No>  
t7  (ê  +	rÈ p(?  
,(è  -‰(í  ,(F  sü  oV  
oA  
,	oB  
.°(í  *   0 G     sW  

(ê  + o>  
t7  (F  (B  oX  
oA  
,	oB  
.œ(í  * 0 ˝     
(ê  8ì   o>  
t7  r˜ p(?  
-:r p(?  
-5r p(?  
-0r' p(?  
-5r1 p(?  
-0+8oJ  

+5oJ  
+,oK  
(Y  
+oJ  
+oJ  
+o@  
oA  
,oB  
;Yˇˇˇ(í  ˛1  }ä  (F  }ã  }å  	}ç  }é  *   0 G     sZ  

(ê  + o>  
t7  (ì  s∞  o[  
oA  
,	oB  
.œ(í  * 0 [     s˝  
}í  }ê  }ë  -(  +*˛˛  s\  
(  +~î  %-&~ì  ˛ s]  
%Äî  (  +* 0 ˘    {  
,o_  
-rC p(  
s  
z/oC  
o5  
(F  XoD  
(F  9Z  {Ü  (`  
.+(a  
,*sb  
sb  
{Ñ  9  {Ñ  ~ï  %-&~ì  ˛ sc  
%Äï  (  +oe  
	8/  	of  


~ñ  %-&~ì  ˛ sg  
%Äñ  (  +~ó  %-&~ì  ˛ sc  
%Äó  (  +(  +(  +,9
oi  
~ò  %-&~ì  ˛ sj  
%Äò  (  +s©  ok  

~ô  %-&~ì  ˛ sg  
%Äô  (  +~ö  %-&~ì  ˛ sc  
%Äö  (  +(  +(  +,9
oi  
~õ  %-&~ì  ˛ sj  
%Äõ  (  +s©  ok  
	o  
:≈˛ˇˇﬁ	,	o  
‹{Å  ,%{Å  ol  
1~-  
{Å  s©  ok  
{Ç  ,%{Ç  ol  
1~-  
{Ç  s©  ok  
{ã  	{ä  {Ö  %-&(  +{Ä  {å  {ç  {é  s≥  *{É  -(  ++
{É  {ã  	{ä  {Ä  {å  {ç  {é  s  *   A     √   B           0 &     -*{   om  
-{  on  

*Jso  
}  (  
*B{}  (7  ˛*6{}  (7  *˛(T  oU  (T  oV  (z  ~ù  %-&~ú  ˛ sp  
%Äù  (K  *í(  
}  }  }  }  *~  *2((  
oq  
*"or  
*  0 p     (s  
,rì ps  
z
{  ot  
oM  ,(P  
-	(R  
, (  oΩ  ,(Q  ,o#  
ﬁ
,o  
‹*   " Bd 
    0 <     {  (  
-+{  oç  {  oä  
oÖ  ﬁ,o  
‹**   $ 
. 
    0 <     {  (  
-+{  oç  {  oä  
oÖ  ﬁ,o  
‹**   $ 
. 
    0 Ñ     ou  
ov  
r• p(w  
oN  ,
oÖ  ﬁXﬁ
,o  
‹ox  
r• p(y  

{  oç  oà  ,&{  oç  oä  	oÖ  ﬁ	,	o  
‹**    , 
     l 
v 
    .sJ  Ä  *~!  *{"  *{#  *V(  
}"  }#  *   0 O     (z  
~   o{  
u7  %-&+çB  %;ù(|  

,é-+ö,éi0+ösW  *Vrª pÄ   (X  Ä!  *(  
*   0 [      -rÖ ps  
z-r ps  
zs}  

s~  
%o  
(\  çG  oÄ  
ﬁ,o  
‹,o  
‹*    1 F 
     # -P 
    0 á   !  ç  %r p(]  sÅ  
¢%r«  po  (_  sÅ  
¢%r+ p(a  sÅ  
¢%r; p(m  sÅ  
¢sÇ  

o"  (  +,rO p(^  sÅ  
oÉ  
* 0 k       ç  %rü  po  oΩ  -"o  o∫  rÈ po  oª  (Ñ  
+o  o∫  sÅ  
¢%r/ po  oº  sÅ  
¢sÇ  
*¬o"  ~ü  %-&~û  ˛ sÖ  
%Äü  (  +sÜ  
*0 ¯   !  sá  

o  %-&+(  +,rè  po  sà  
oâ  
rC po  (   +rc po	  (   +ru po
  (!  +rç po  (!  +rØ po  (!  +r¡ po  (   +r— po  (!  +rÂ po  (!  +r po  (!  +r- po  (!  +r˚ po  (   +*nå%  ,å%  sÅ  
oÉ  
*0 î       o  oΩ  ,(o  o∫  o!  o   (c  sÅ  
sÜ  
*ç  %o  o∫  o   (b  sÅ  
¢%o  o∫  rÈ po  oª  (Ñ  
o!  (b  sÅ  
¢sÇ  
*b˛q  sä  
("  +sÜ  
*   0 Ï   "  ~†  %-&~û  ˛ sã  
%Ä†  (å  
(#  +
~°  %-&~û  ˛ sé  
%Ä°  (å  
($  +sá  
oè  
oê  
(  +(%  +o  
+\	o  
oí  
&oì  
&,&%-&oò  rÈ poô  (Ñ  
(i  sÅ  
oÉ  
	o  
-úﬁ
	,	o  
‹*   x h‡ 
    Ü(  +-*rs p(l  sÅ  
oÉ  
*™,o´  (  +-*o´  (l  sÅ  
oÉ  
*   0 D       (&  +-*r; p~¢  %-&~û  ˛ sî  
%Ä¢  ('  +sÜ  
sÅ  
oï  
*≤((  +-*r° p˛r  sñ  
()  +sÜ  
oó  
*   0 å   #  u  
,Psá  
oõ  (f  rU po∂  (‰  (e  re po∑  (‰  (e  o∏  (g  *u  ,"sá  
	oõ  (f  	o  (d  	*sò  
z0 ’   $  sá  

sô  
9Ü   rU po∂  (‰  (e  re po∑  (‰  (e  o∏  (g  sá  
rU po∂  (j  re po∑  (j  oö  
1rÉ poó  
oõ  oõ  
,o  (d  oõ  oõ  
(f  ,-rµ p(ú  
oó  
*   0 œ   %  ~£  %-&~û  ˛ s:  
%Ä£  (*  +où  

8á   oû  
o´  (  +,o´  o™  (k  +]rU p(?  
-re p+rÌ prı po™  (ü  
ç  %rÕ po™  sÅ  
¢%r’ psÅ  
¢sÇ  
oâ  
o  
:nˇˇˇﬁ
,o  
‹*    + ôƒ 
    0 _   &  o  

+Ao  
(o  ç  %rÕ psÅ  
¢%r’ psÅ  
¢sÇ  
sÅ  
oÉ  
o  
-∑ﬁ
,o  
‹*     MT 
    b˛s  s†  
(+  +sÜ  
*   0 Q       o!  (,  +o   (-  +~§  %-&~û  ˛ s°  
%Ä§  (.  +˛t  s¢  
(/  +sÜ  
*   0 à   !  ç  %r poó  sÅ  
¢%r poú  åN  sÅ  
¢%r˜ poö  sÅ  
¢sÇ  

où  ,r' poù  sÅ  
oÉ  
oû  ,r1 poû  sÅ  
oÉ  
*.\/o£  
*éoò  rÈ poô  (Ñ  
(h  sÅ  
*ûo¢  (o  rÈ po†  sÅ  
sÜ  
sÅ  
*J(o  sá  
sÅ  
*bo§  
(0  +(n  sÅ  
*(¶  
*(ß  
*.sx  ÄJ  *~K  *{L  *{M  *vsÑ  }L  sv  }M  (  
*.s}  ÄK  *(®  
*(©  
*(™  
*>s´  
*   0    '  (¨  

,o≠  
ﬁ&ﬁ *           0 O       QQoA  
,?oB  
36o>  
t7  QoA  
,oB  
	3o>  
t7  Q+o@  
**:oA  
&(ë  *ZoB  
.r p(î  z*^oB  
.r! p(î  z*   0 d     oA  
&oB  
.r% p(î  zs  

+o>  
t7  oR  
oA  
,
oB  
	.›oB  
.r) p(î  zoÆ  
*Úr- p(  
rë poØ  
åR  o∞  
åR  o±  
(≤  
(w  
sF  
*   0	        (ñ  *  0 ë       (  
(  
,r ps  
z(  
,rü  ps  
z(  
,r©  ps  
z-r; ps  
z}N  }O  }P  }Q  (1  +}R  }S  }T  }U  *{N  *{O  *{P  *{Q  *{R  *{S  *{T  *{U  *Ó(  
(  
,r' ps  
z(  
,rÈ ps  
z(°  (£  *{V  *"}V  *{W  *"}W  *Ó(  
(  
,r’ ps  
z(  
,r' ps  
z}Y  }Z  *2{Y  s6  
*{Z  *0 N     (1  

-rï p(  
r' ps2  
zr˘ po3  
,o4  
r˘ p(4  
Yo5  

s§  *&(©  *j(  
}[  (  +}\  *{[  *{\  *{]  *"}]  *{^  *"}^  *&(±  *Ó(  
(  
,rU ps  
z-rÔ ps  
z(≠  (  +(Ø  * 0        	(≥  *0	 v       	
(ñ  -r ps  
z-r/ ps  
z-rW ps  
z}a  (2  +}c  }b  ç  }_  ç7  }`  *{_  *{`  *{a  *{b  *{c  *ﬁ(  
(  
,r} ps  
z}d  }e  }f  }g  *{d  *{e  *{f  *{g  *2(z  (¿  *J(z  (T  (¡  *J(≥  
(T  (¡  *r(  
}i  }j  }k  *  0 ≥  (  oó  rë p(¥  
-oó  r° p(¥  
+
oó  rø p(¥  
--oó  rœ p(¥  
-*{j  ~h  (µ  
{i  oé  oÜ  --	-*s  
%{j  oR  
	,	o∂  
{k  oV  	_,F(  
-=(∑  
~h  (µ  
{i  oé  oÜ  ,	oR  
oR  
o  o  
8à   o  
	(∏  

oπ  
+)(∫  
{i  
(„  ,oR  
	ﬁ(ª  
-Œﬁ˛4  o  
‹	-&	,rÛ p
rC p(º  
(ü  
s  
zﬁo  
:lˇˇˇﬁ,o  
‹**    &6\     õ¢    .rG pÄh  *:(  
}l  * 0 %   )  {l  
+öoÀ  ,*Xéi2Ë*   0      ~m  oá  
(  
-*(»  *B~J  (z  (∆  *  0 Z   *  (Ω  

3*3oé  rQ poÜ  ,rQ p*oé  r poÜ  ,r p*oé  r<	 poÜ  ,r<	 p**.r|	 pÄm  *F(z  ~J  (Œ  *6(z  (œ  *:(—  (œ  *V(  
}o  }n  * 0   +  oó  rø p(¥  
-*{o  (  
:‰   oö  -oC  

1oö  o4  
Y3ræ	 poö  oò  (ü  
s  
z{n  {o  (·  9ç   oû  (  
,(oö  o5  
r
 poò  oô  (≤  
(µ  
{n  oç  	oà  ,;{n  oç  	oâ  oö  XoD  
(?  
,{n  (‚  oæ  
**2r8
 poá  *F~J  (z  (‘  *6(z  (’  *:(÷  (’  *V(  
}p  }q  *2(Ω  
(◊  *  0 O     rd
 poá  
(  
-*3rÇ
 poá  +rö
 poá  (  
,*r§
 pr≤
 p(ø  
* 0 O     {q  (  
-oó  rø p(¥  
-*{p  {q   (·  ,{p  (‚  oæ  
**F(z  ~J  (€  *:(z  (‹  *Ç(Ω  
(‡  (Ω  
(ﬂ  (‹  *r(  
}r  }s  }t  *  0 i   ,  oó  rœ p(¥  
-*o  o  

+0o  
(ﬁ  -rƒ
 poò  (ü  
s  
zoR  
o  
-»ﬁ
,o  
‹*      ! <] 
    0 s   -  Q{s  ,%{s  (µ  
{r  oç  oà  ,Q*(∏  

{t  +)	ö(µ  
{r  oç  oà  ,Q*	X	éi2—* 0 K     .ç7  *r: poá  rH prd prx p(¿  

oé  oÜ  -ç7  *ç7  %¢* 0 X     (∆  
(  
-*.*ré poá  (  
,r≤ poá  (  
,*rÃ prˆ prd p(¿  
*0 =     où  
(  
,oò  oô  (µ  

(µ  
Qoé  PoÜ  ,**v˛s %}´  %}©  %}≠  *r(µ  
Qoç  Poà  ,**2~-  
(Ê  *n(  
,rU ps  
z(Ê  *   0     .  s 
}Ø  ˛ s:  
(  +*2~-  
(È  *n(  
,rU ps  
z(È  *   0 D   /  s 
}∞  ˛  s:  
(*  +~≤  %-&~±  ˛# s¡  
%Ä≤  (3  +*0 ,   0  ,' ≈ùÅ
+o¬  
a ì Z
Xo4  
2„*Ü(å  
å6  oò  å6  oò  o√  
*Z(å  
å6  oò  oƒ  
*6{u  ()  *N{v  {w  (*  *6{x  (-  *N{y  {z  (.  *Jo¨  {{  (?  
*Jo™  {|  (?  
*J{}  {è  (?  
*f{í  {ê  {ë  (E  *.s  Äì  *˛*{â  *F{á  rU p(?  
*{à  *F(∏  
r
 p(≈  
*F{á  re p(?  
*.s
 Äú  *sG  *.s Äû  *^o¨  oÆ  sà  
sÅ  
*oò  *R(  (  sÅ  
*>o™  (  
˛*^oò  rÈ poô  (Ñ  
*f(  
}•  (∆  
}ß  *  0    1  {•  
˝.3
 ﬁ( ‹*          0 ª   2  {•  ,.~
›§   }•  {®  o  o  
}Æ  ˝}•  +X{Æ  o  
{™  {¨  („  -r p{®  oò  	(ü  
s  
z	}¶  }•  
ﬁ-˝}•  {Æ  o  
-õ( }Æ  
ﬁ( ‹*      ≤≤     n}•  {Æ  ,{Æ  o  
*{¶  *sò  
z 0 O   3  {•  ˛3{ß  (∆  
3}•  
+s 
{´  }™  {©  }®  {≠  }¨  *( *Jo™  {Ø  (?  
*No™  {∞  (¥  
*.s" Ä±  *o´  *  BSJB         v4.0.30319     l   41  #~  †1  å(  #Strings    ,Z  |  #US ®f     #GUID   ∏f  §  #Blob         W¢	   ˙3      U   :   ≤   #  P     ∆   )   ¨   3      ;   ?      6               3        ◊      iÈ ¯È ,È — $   ø; |; ô; 8© —; ‹È ÎÈ ö ∏ö (ö x"} ≠} ‹}
 rë /} ê&; ‘ö ç; ö ∞} òö QV ﬂV  ôö }§ v} ¶} ‘V Ï 9"∞ ö P(∞ V !V <V  V MV ‰} }? õ  
 Øë 2} È )∑ §∑ Q— ú} •§ …} ≤} ‹} nV V ∆ö âö ˝ ÷ Ã} } À} ; } V · Ë  œ∞ g∞ π%∞ ≈}{ M   Ü} «} (V ù#} $V O}
 í#ë .}
 #ë    .        '≤X      ≤A   	 ÿ%≤I     8%≤A   Å h≤A  '   Ï≤A  2   7≤A  J    î≤A   T    ≤A $ Z   ˚≤A J [    ¥≤A J u    °≤A J w    è≤A K z    É≤A N  °   ≤  N Ö †   ¶'≤  N Ü †   r#≤  N á †   ÷≤  N à †   h≤  N ç Ä O≤A N è   ~'≤A N ï   W&≤A V ü   h&≤A X §   |≤A [ ®   ≤A ] ¨    &≤X _ ≤   S≤A d π   ·ÓA h æ   ÓA l ƒ   !ÓA m ∆ °   yÓ  n À   πÓA n Ã   ñÓA p “   GÓA r Ÿ Ä #ÓA u · Å :öA u ‰    7  A u Í   Ë  A u Î  q   A u Ó  •   A v   2  A x Ú  G  A y Ù     A { ˆ  [   A | ¯   Ù"  A } ˙  j'  I  ˚    I á ˚  s  I ä ˚  2  A è ˚  œ  A ê ˝ ! ñ  A ì ˇ ! ñ  A ú 	! ñ  A û  â  A •  •   A Ø  2  A ∞ ! ñ  A ± !! ë1 ±ò! ï	ë! IY! ﬂY! ù! U
ù! Fù! åY! ù! ˘ù! 	Y! ¡
ù! áù1 è
§! •Y! 0Y1 (%®! w
∞! Â	§! 0	¥! R	º! `ƒQÄ†%Y! ÃQÄIY! ÌY! ÿY! x‘! ì'ÿ1 è
·1 p(Y1 ®
Â! jY! ‘YSÄ¶ÈSÄˆ%YSÄ&YSÄ$&YSÄ5YSÄæYSÄ!YSÄÜYSÄ›YSÄÚYSÄÓYSÄ•YSÄ+YSÄlYSÄÈYSÄEYSÄYSÄ YSÄ˝YSÄŸYSÄXYSÄ/YSÄYSÄäYSÄOYSÄaYSÄCYSÄlYSÄ∂YSÄ‘YSÄYSÄYSÄ†YSÄYSÄYSÄüYSÄYSÄjY j#Ï1 è
‘! v! ·
Ù! ÛY! •Y! 0Y! ~Y! “¯! = ! îY! ™Y %Y îYQÄ†%Y! öY! îY! ªY! Æ	ë ªY  	ë! ! t	ë! 	
! 0
! 	! ƒY! ªY! $Y! Z  ∫Y! x‘! ªY! ´Â! Â 6 %Y! x‘! (Y! x‘! ø'Y! x‘! <Y! e! §% §% UY §% §% UY UY Y ÅY †) ÅY e2 ˙: : Ñ: I!A J ¢&ù 2Y nY  Y JY 2Y u  nY ◊Y OY √  ƒR €\6 *` fe  o —z Uo ¶Ö «z Ëo 	Ö6 *é ÿ6 *ì ∫ ò ™§ AÆ 8 ∏ Í ƒ àŒ ¿ÿ ù$Y –ÿ ã'€ Ü'€ y‘ t‘ ºY ∑Y 6ﬂ √Y √Y6 *Ê ÚÎP     Ü∑˘ p     Ü∑ ¨     Ü# ¥     ìe+ º     Ü 81 Ù     ëΩ9 &!    Ü# .!    ÜÉ€ 6!    ÜÑ€ >!    Ü"ﬂ F!    Ü ﬂ N!    ÜÜﬂ V!    ÜÓ€ ^!    Ü˙ﬂ f!    Ü‡ﬂ n!    ÜÊ€ v!    Ü™$ﬂ ~!    Üﬂ Ü!    ñ9#= ê!    Ü∑B "    ëΩ9 s"    Ü∑  ©"    Ü)€ ±"    Üw€ π"    Ü r „"    ∆ Ô   #    ∆ £ ! 4#    Ü∑x! √#    ñ9#í& œ#    Üè"ó& ◊#    Ü‚ú& ﬂ#    Ü°& Á#    Ü<™& Ô#    ÜÛ≥& ¯#    Ü Gº& a$    ë E#í' r$    ñ Ó√' $    ëΩ9( ò$    ñ «! ( ‰$    ñ ∞!‘) G%    ñ «!ﬂ+ h%    ñ ∞!Î- §%    ñ Ã¯0 %    ñ ¥1 S&    ñ Ã3 î&    ñ ¥5 Ï&    ë ä*8 H'    ë ﬁ!09 ¨'    ë Ï!A<  (    ÊÈT> Ñ(    ƒ±[? î(    Ê± @ †(    Å È`@ x*    Å €"gA ı*    Å À"ÆC  +    Å π"uD T+    Å ˘G ,.    Å ,!ÜH x.    Å ö"íI ÿ.    Å 8'õK º0    Ü T§M 1    Å ‰ØN P1    Å 8!πO ¸1    Å 	≈P Ä2    Å –Q ‘2    Å Ë&›R ‡3    Å ˆÂS 44    Å bT ú4    Å ˜&	W ¿7    Å Z Ú7    Ü∑ [ 8    Å › [ 8    Å \ $8    Ü∑ ] d8    É∑&] â8    ñ9#5a ê8    √x&:a ù8    √!@b ®8    Ü ÓHd 49    Å ^%Oe å9    Å %Of ‰9    Å J%Vg ê:    ëΩ9i ú:    ñÜ$_i £:    ÜØ€i ´:    Ü£€i ≥:    Ü∑ i Ã:    ë í$_k ';    ëΩ9k =;    Ü∑ k H;    Ü Àdk Ã;    Å Àlm `<    Å Gln ◊<    Å lo =    Å  tp >    Å  |q (>    Å g!lt »>    Å Ô"áu ‰>    Å •"ìv Ï?    Å Œ•x @    Å ï!±z <@    Å Dª} å@    Å •» º@    Å e'’Å TA    Å J'›Ç 8B    Å N ÁÑ $C    Å |!ıá †C    Å Ë$ã ºC    Å rlå D    Å '’ç ∞D    Å ≈é =;    Ü∑ è ºD    Å tè ‡D    Å Ü ê E    Å \ë E    Å )%í 4E    Ê"Æì =;    Ü∑ î <E    Êçî =;    Ü∑ ï DE    ëΩ9ï PE    ñ9#2ï WE    Ê	‹7ï _E    Ê	±'<ï gE    Ü∑ ï ÖE    ëΩ9ï ëE    Ê"Æï ôE    Ê	%ñ °E    ÊÂÙó ©E    ÊÂAò ºE    Ê û =;    Ü∑ ü       ∆ÈTü       ∆"Æ†       ∆ç°       ∆"Æ¢       ∆	%£       ∆ÂÙ§       ∆ÂA•       ∆ ´       ∆‹7¨       ∆±'<¨ E    ì Z(T¨ KF    ì P"^Ø ZF    ì `"^∞ qF    ì A"^± åF    ì ¿%d≤ ¸F    ì lk≥ <G    Ü∑tµ \G    Ü∑Éª ˘G    Ü”€√ H    Ü)€√ 	H    Üw€√ H    Ü#€√ H    Ü3î√ !H    Üq) √ )H    ÜT€√ 1H    Ü”€√ 9H    Ü∑ √ uH    ÜT€≈ }H    Ü_ ≈ ÜH    ÜT€∆ éH    Ü] ∆ óH    Ü∑ « ”H    Ü)… ‡H    ÜT€… ËH    ñ πù… BI    Ü∑£  LI    Ü∑™Ã gI    Üã€Œ oI    Üz#Œ wI    Üã€Œ I    Üó Œ àI    ÜÂ#œ êI    ÜÛ¥œ ôI    Ü∑£– £I    Ü∑™“ ‡I    Ü∑Ω‘ J    Ü∑ﬁ› ÜJ    ÜË éJ    ÜÅ#Ë ñJ    Üx 
Ë ûJ    Ü® 
Ë ¶J    ÜéË ÆJ    Ü∑Ë ÊJ    Üö€Ï ÓJ    Üã€Ï ˆJ    Üb€Ï ˛J    Üº) Ï K    Ü∑ Ï K    Ü∑ Ï &K    É∑$Ì 9K    É∑*Ó XK    Ê√3Ò 4M    ëΩ9Û @M    Ü∑>Û PM    Ê√3Ù ÑM    ì sFˆ ≠M    ñ sO¯ ¿M    ë ÚN¯ =;    Ü∑ ˘ &N    ëΩ9˘       ∆√3˘ 2N    Ü∑ ˚ DN    Ü∑ ˚ RN    É∑T¸ aN    É∑\˛ xN    Ê√3 èO    ì Ò'cúO    Ü∑ ÆO    Ü∑ ºO    É∑iÀO    É∑\·O    ë ÷'cO    ì ÷'q	LP    Ê√3ßP    Ü∑ πP    Ü∑£»P    É∑TÈP    É∑zQ    Ê√3êQ    Å ;&ÉR    ì NähR    ì ñÃR    ì f°S    ì |¨"3S    ì π%PS    ñ é√)]S    ñ cŒ*|S    ë sŒ,®S    ñ "⁄.µS    ñ ü!Ë/‘S    ë ˘!Ë1$T    ì =˜3\T    Ê¸4~T    Ê6=;    Ü∑ 7=;    Ü∑ 7ïT    É c
7=;    Ü∑ 8£T    É F
8=;    Ü∑ 9∑T    É (9=;    Ü∑ :≈T    É 
:=;    Ü∑ ;ŸT    É Ä;=;    Ü∑ <ÏT    É î%<=;    Ü∑ ==;    Ü∑ =ˇT    É ∑==;    Ü∑ >U    É Ù+>,U    ëΩ9?=;    Ü∑ ?8U    É p3?>U    É ! 9@FU    É €@AXU    É _9B`U    É ∞ÆCrU    É —@DXU    É Ú9E`U    É ÆFÑU    ëΩ9G=;    Ü∑ GêU    É $GGóU    ëΩ9G=;    Ü∑ G£U    É √ LGªU    É ≥THªU    É JZI√U    É B `JÿU    É Ù %KËU    É íhL V    Ü∑ MV    ·û NTV    · %) N,W    Å A NHW    ·	%$€NPW    ·# NHW    ·	g$8 NXW    ·5nN≥W    ·yK N=;    Ü∑ NªW    É Â%N=;    Ü∑ OŒW    É ß%O‚W    ëΩ9P=;    Ü∑ PÓW    É ˚vP   7   Ü   ß   O   ˝   r   Å   7   Ü   ß   O   ˝   r   Å   s  	 ‡      ó   ∏   2   !   ì   ˙     	 Ô  
 Ù   Ω$   "   Ü   ß   O   ñ   ˚"   (    +   Q      O   ô&   §   §   U   §   w%   §   w%   U   §   §   U   §   w%   §   w%   U   \   w%   U   "   ‰   ‘    X   ⁄   0   t!   O   Ü   0  O  w   0   0   0   a   0   ®   0   0   0   0   0   0   0   ™   √   ƒ   x'   √   ƒ   )"   }%   }%   Ó   Ÿ   y   î'   ô&   ô&   Ü   ô&   0   0   ô&   0   ø   µ   w%   X   w%   w%   w%   (    \   Ü   m   w%   ™   Q   ï   q"   Á   q"   7&   û   q"   r   q"   ª   ã'   Ÿ&   %'   X!   -   l    ˚"   "   √   -   â   w%   ã'   s   ã'   h   ô&   ™   s   Ü   s   s   s   s      !!   F   {   ÷   s   X   s   Ü   s   s   s   s      !!   F   {   ÷   s   0  Ü  m   0   0   0   0   0   ˜   7   Ü   ß   O   r   Å   7   Ü   ß   O   r   Å   s   ‡   s   j   m   m   õ   s   s   √   â   √   â   m   m   √      √      7   Ü   ß   O   í    ¿    ª   r  	 Å   7   Ü   ß   O   í    ¿    ª   r  	 Å  
 s   ‡   ®   √   w   À   º   y   y   º   ¨   ã'   ˝   Ê    ã'   ˝   µ#   y   y   ã'   ˝   (   y   ©#   y   (   ã'   ˝   ©#   ¿'   ©#   y   y   ¿'   ©#   ≠   ©#   ã'   ˝   =   f   y   ©#   y   =   f   ã'   ˝   s  È   y   ∏   ©#   y   ∏   ©#   y   ã'   º  ì   y   ã'   º   y   º   f  >   §   §   √   ‘    √   §   §   √   ‘    √   )"   Ø%   â(   ñ   ã'   ã'   ã'   ã'   ß   Ò   }%   Ç(   ã'   ö   ö   ö   h   ö   ö   h   Ò         „%   Ò   ã'   ¿   Ò   h   h @  e  D  H  P  L  e  Ä  Ä ! Ä " Ä # Ä '  7  7 Õ 7 
 7 e 7 … 	 ∑  ∑  ∑ ! ∑
 1 ∑ 9 ∑ A ∑ I ∑ Q ∑ Y ∑ a ∑ i∑ â∑" … ± ë %)  Ü$3 ë!# ëÜ$8  òB ôòK °∑ ©∑ ±–%Q $ ∑ π2"p ¡∑ Å ∑ ±J(~ πB(é …∑ πì ô ÷$û ô Û ô ,£ 4 J3 < ∑ ±3≈ D ∑ ±3È © à&ˇ L ∑4 ∑T ∑±≤&0πJ(Y\ ∑d ∑±"Ü—[©…∑ πçÆπx£ π–≥π ∑ l ∑±c#œ±+"È t ∑· ∑È ∑| ≈ ÒJ8 π((ì Ò^ ÒÈ) Ò˛Vπú\π–aÑ ∑∑ ±„$vå Ã$£ ±1îÒ√€Ò¡ﬂå ∑ å ÛÒî ∑ î ÛÒú ∑ ú ÛÒ$ ÛÒ§ ∑ § ÛÒ¨ ∑ ¨ ÛÒ¥ ∑ ¥ Ûò, Q#±º ∑ º ÛÒƒ ∑Ã ∑±PÚ¥ aN, Q#3 , T) ‘ ∑ ‹ ∑±±%h‰ òB Ï Ü$3 Ù ∑±Æ&∏¸ Ó%3 ∑‘ ÛÒ$ Ã$£ aN_ò∑ ∑Å Ô© 3Ù© ((M3 © Gπ )€π+"!© À€—9!	,	b2π3#7∑∑J)‰QA?X1∑i!∑oIÛuπ+"z$∑!∑u!∑ Q∑u!_î4∑<∑Yà„±Ω&ÈD∑L""!T""!±Ü"5LaNTaN\∑I˜$ud∑!Ûîi∑ l∑ IÃ$£ lÉêA'#ötòB |Ü$3 π2"ªÑ∑å∑î∑π¸
úÓ%3 ±˙$y"é Åç©â"é â	%©âÂ"Y∑)âπ"Ÿ ± $ –%AÈ –£ È [£ ÒT€π2"GôüOπr—À!$ ‹${—Ã©—2©$ òÇ§Ü$3 § %) π.ì©ë´$ >ê—Àz—ÀÃ¨∑π€ ¯Y Yπ4(ì Åµ ` › h ‰ ê ˘ î ¸ ò 	 ú 	 † '	 § B	 ® U	 ¨ d	 ∞ }	 ¥ ä	 ∏ ì	 º §	 ¿ ≠	 ƒ ƒ	 » È	 Ã ¯	 – 
 ‘ (
 ÿ ?
 ‹ `
 ‡ q
 ‰ Ä
 Ë ì
 Ï ®
  ª
 Ù ÿ
 ¯ Â
 ¸ ˆ
  ˇ
  # @ G 	 	 Z  m $z `›! [ .  .  .  !. # @. + I. 3 v. ; É. C é. K ∞. S ∆A [ ` [ a [ Ä [ Å [ ° [ ¡ [ √  ‡ [ · [  [ [  [ ![ @[ A[ `[ a[ Ä[ Å[ †[ °[ ¿[ ¡[ ‡[ ·[  [ [  [ ![ @[ `[ a[ Å[ °[ £ ¡[ ‡[ ·[  [ ¿[ ‡[ ·[  [  [ ![ @[ A[ a[ £ √[ ‡   [   #[ @ C[ ` c[ Ä É[ † £[ ¿ C[ c[ É[ £[ √[ „[ [ #[ C[  	[  	[ a	[ Ä	[ Å	[ °	[ ¡	[ ·	[ 
[ !
[ A
[ a
[ Ä
[ Å
[ †
[ °
[ ¿
[ ¡
[ ·
[ A[ a[ Å[ °[ ¡[ ·[ [ ![ A[ a[ Å[ °[ ¡[ ·[  [ @[ `[ Ä[ @[ `[ Ä[ ‡     @ ` ‡[  [  [ @[ `[ Ä[ †[ ¿[  [  [ @[ `[ ¿[ @[ `[ Ä[ †[ ¿[ ‡[ Ä[ †[ ¿[ ‡[  [ @[ `[ Ä[ †[ dc $c @k DÄ † ‡   Ä"´ †"´  #´  #´ @#´ `#´ Ä#´ b v ô S\w•π„&É•™Á˜	=OXoÉ†∏À
˙'Ac∫kx°¬;Sù•±π√‘⁄Û          	       !  )  +  -  /  1  6 7 :   ÚÄ  ià  Ä  áé  Øé  &í  Ù í  äí  Úé  ˛í  ‰í  Íé  Æ$í  	í  j#ö  Åé  üé  j#ü  Ù"§   ©  Æ  @∑  	¿  j#…  ï$Œ  ≥é  ßé  j#”  $ÿ  (›  $ÿ  (›  2é  Åé  üé  Jé  e‚  uÎ  né  ◊é  cé  né  ÅÔ  né  ªé  ~Ä  ªé  Ä  ÚÙ  ÖÄ  | ˝  ¨ ˝  ®  ûé  ªé  fé  ¿Î  ¿#é  ˛#           	  	   
                               !   #   %   '   )    +  ! -  " /  L 1  T 3  U 5  V 7  z 9  { ;  | =  ç ?  é A  ó C  ò E  ô G  ö I  õ K  ú M  ù O  û Q  † S  ° S  ¢ U  £ U  • W  ¶ Y  ™ [  ´ ]  ¨ _  ≠ _  Æ a  Ø a  ¥ c  µ e  ∂ g  ∑ i  ∏ k  ∫ m  ª o  º q  Ω s  u  w 7 * 7 , 7 0! 7 2# 7 4% 7 6' 7 8)  - < j à ∂ Ω · #b}∆ıfåHg|èƒ÷ÈW^éõ®√ÃŸ‡ÁÅ§ß⁄
-EXà≠¥À‹Îå‡˝Ä          ;≤              j             )ë    	           2                V    '  (  )  *  +  ,  -  .  /  0  1  2  3  4  5  6  7 $ 8 % 9 % : %     N `    ¡ `/ ^ 9 ^ / ß / ¨ / ± K ß K ¨ O ± Y MY pa üq ± s ^ q ˛q pè ß è ¨ 9 ± ì °9 89 —a ·Ω —… áΩ ≤a á— ^ Ω ^ 9 ‘— ± a å¿ ^ ¿ úa ≤M#^ — 8a P— ‘a cΩ ˛a ’è —s —… Âa ˚K—/ 8/ ‘Y Ì X    <>c__DisplayClass10_0 <>9__20_0 <CreateLibrary>b__20_0 <>9__11_0 <AddDependencies>b__11_0 <>c__DisplayClass11_0 <>c__DisplayClass1_0 <AddResourceAssemblies>b__12_0 <>c__DisplayClass2_0 <>9__3_0 <WriteRuntimeGraph>b__3_0 <Read>b__4_0 <>9__15_0 <AddRuntimeSpecificAssetGroups>b__15_0 <>9__5_0 <.ctor>b__5_0 <>c__DisplayClass5_0 <>c__DisplayClass6_0 <WriteAssetList>b__17_0 <WriteTarget>b__7_0 <>9__18_0 <WriteLibraries>b__18_0 <>9__8_0 <WritePortableTarget>b__8_0 <>c__DisplayClass19_0 <GetGroup>b__0 <CreateLibraries>b__0 <GetRuntimeAssemblyNames>b__0 <GetDefaultAssemblyNames>b__0 <GetRuntimeNativeAssets>b__0 <GetDefaultNativeAssets>b__0 <ResolveAssets>b__0 <SelectAssets>b__0 <GetAssets>b__0 <SelectRuntimeTarget>b__0 <>9__20_1 <CreateLibrary>b__20_1 <>9__5_1 <GetAssets>b__5_1 <SelectRuntimeTarget>b__5_1 <WriteLibraries>b__18_1 <>9__8_1 <WritePortableTarget>b__8_1 <>9__19_1 <CreateLibraries>b__19_1 <ResolveFromPackagePath>d__1 Func`1 Nullable`1 IEnumerable`1 ICollection`1 IEqualityComparer`1 LibraryMergeEqualityComparer`1 IEnumerator`1 HashSet`1 IReadOnlyList`1 Lazy`1 <>7__wrap1 <>m__Finally1 Int32 <>9__20_2 <CreateLibrary>b__20_2 Func`2 IGrouping`2 KeyValuePair`2 IDictionary`2 <>9__20_3 <CreateLibrary>b__20_3 <>9__20_4 <CreateLibrary>b__20_4 <>9__20_5 <CreateLibrary>b__20_5 <>9__20_6 <CreateLibrary>b__20_6 <>9 <Module> <PrivateImplementationDetails> System.IO T GetData mscorlib LibraryStub RuntimeTargetEntryStub <>c System.Collections.Generic get_CurrentManagedThreadId <>l__initialThreadId OpenRead Load Add expected Rid rid <AllowUnsafe>k__BackingField <Locale>k__BackingField <Serviceable>k__BackingField <IsPortable>k__BackingField <File>k__BackingField <KeyFile>k__BackingField <Name>k__BackingField <Runtime>k__BackingField <SharedRuntime>k__BackingField <Type>k__BackingField <DebugType>k__BackingField <RuntimeSignature>k__BackingField <Optimize>k__BackingField <RuntimeGraph>k__BackingField <Hash>k__BackingField <Path>k__BackingField <HashPath>k__BackingField <Framework>k__BackingField <Platform>k__BackingField <PublicSign>k__BackingField <DelaySign>k__BackingField <Version>k__BackingField <LanguageVersion>k__BackingField <Application>k__BackingField <GenerateXmlDocumentation>k__BackingField <DefaultResolver>k__BackingField <Dependencies>k__BackingField <Assemblies>k__BackingField <ResourceAssemblies>k__BackingField <CompileLibraries>k__BackingField <RuntimeLibraries>k__BackingField <NativeLibraries>k__BackingField <Defines>k__BackingField <AssetPaths>k__BackingField <Fallbacks>k__BackingField <CompilationOptions>k__BackingField <RuntimeAssemblyGroups>k__BackingField <NativeLibraryGroups>k__BackingField <WarningsAsErrors>k__BackingField <Target>k__BackingField <Default>k__BackingField <Current>k__BackingField <EmitEntryPoint>k__BackingField <Directory>k__BackingField Replace GetHashCode FileMode fileMode get_AllowUnsafe allowUnsafe AddRange Merge Invoke get_Locale set_Locale locale get_Serviceable serviceable GetEnvironmentVariable IEnumerable IDisposable get_IsPortable isPortable IFile get_File OpenFile get_KeyFile keyFile TryResolveAssemblyFile CreateEmptyFile get_Name GetFileName fullName GetName runtimeTargetName targetName CompilationOptionsPropertName GetAssemblyName _assemblyName targetLibraryName RefsDirectoryName GetDirectoryName Sha512PropertyName RidPropertyName AllowUnsafePropertyName LocalePropertyName ServiceablePropertyName PortablePropertyName KeyFilePropertyName RuntimeTargetNamePropertyName DebugTypePropertyName AssetTypePropertyName RuntimeTargetSignaturePropertyName OptimizePropertyName HashPathPropertyName PlatformPropertyName PublicSignPropertyName DelaySignPropertyName LanguageVersionPropertyName GenerateXmlDocumentationPropertyName DependenciesPropertyName ResourceAssembliesPropertyName LibrariesPropertyName RuntimesPropertyName DefinesPropertyName WarningsAsErrorsPropertyName RuntimeTargetsPropertyName RuntimeTargetPropertyName EmitEntryPointPropertyName CompilationOnlyPropertyName name get_Runtime set_Runtime get_SharedRuntime sharedRuntime runtime Combine get_Type ValueType get_DebugType debugType get_TokenType RuntimeAssetType NativeAssetType assetType type FileShare fileShare Where System.Core get_RuntimeSignature runtimeSignature get_OrdinalIgnoreCase System.IDisposable.Dispose Create <>1__state Write AssemblyMetadataAttribute CompilerGeneratedAttribute DebuggableAttribute IteratorStateMachineAttribute TargetFrameworkAttribute DebuggerHiddenAttribute ExtensionAttribute AssemblyFileVersionAttribute AssemblyInformationalVersionAttribute AssemblyDescriptionAttribute InternalsVisibleToAttribute CompilationRelaxationsAttribute ParamArrayAttribute RuntimeCompatibilityAttribute get_Value get_HasValue TryGetValue value Resolve bufferSize get_Optimize optimize IndexOf self System.Runtime.Versioning ReadAsString Substring disposing set_Formatting get_RuntimeGraph WriteRuntimeGraph runtimeGraph get_Hash get_CombinedHash ComputeStringHash hash get_Path set_Path TryResolvePackagePath ResolveFromPackagePath packagePath get_ApplicationBasePath <>3__basePath NormalizePath get_HashPath hashPath fullPath GetDefaultDotNetReferenceAssembliesPath GetDefaultReferenceAssembliesPath _defaultReferenceAssembliesPath assetPath assemblyPath path get_Length UnionWith EndsWith obj get_Framework framework Microsoft.Extensions.DependencyModel Microsoft.Extensions.DependencyModel.dll AddPropertyIfNotNull _stringPool GetResourceStream GetManifestResourceStream FileStream stream set_Item IFileSystem <>3__fileSystem get_Platform get_OperatingSystemPlatform osPlatform platform ReadAsBoolean JToken JsonToken get_PublicSign publicSign get_DelaySign delaySign AppDomain get_CurrentDomain Join Union ChangeExtension DepsJsonExtension GetFileNameWithoutExtension get_Version get_LanguageVersion languageVersion version get_Application application get_Location _runtimeDepsLocation _entryPointDepsLocation get_GenerateXmlDocumentation generateXmlDocumentation System.Reflection KeyCollection get_LinePosition CreateUnexpectedException NotSupportedException ArgumentNullException InvalidOperationException FormatException ArgumentException Microsoft.Extensions.DependencyModel.Resolution Newtonsoft.Json StringComparison WriteTo WriteRuntimeTargetInfo Skip GetRuntimeGroup GetGroup RuntimeAssetGroup GetDefaultGroup group System.Linq Newtonsoft.Json.Linq Clear Char get_LineNumber StreamReader DependencyContextJsonReader JsonTextReader IDependencyContextReader reader DependencyContextLoader other runtimeIdentifier JContainer HashCodeCombiner FileWrapper FileSystemWrapper EnvironmentWrapper DirectoryWrapper StringComparer StreamWriter JsonWriter JsonTextWriter DependencyContextWriter JsonConverter DotNetReferenceAssembliesPathResolver ReferenceAssemblyPathResolver get_DefaultResolver ICompilationAssemblyResolver PackageCompilationAssemblyResolver PackageCacheCompilationAssemblyResolver AppBaseCompilationAssemblyResolver CompositeCompilationAssemblyResolver IEnumerator System.Collections.Generic.IEnumerable<System.String>.GetEnumerator System.Collections.IEnumerable.GetEnumerator VersionSeperator .ctor .cctor libraryStubs System.Diagnostics rids System.Runtime.CompilerServices ReadTargetLibraryResources DebuggingModes get_Dependencies AddDependencies ReadTargetLibraryDependencies dependencies get_Assemblies get_ResourceAssemblies AddResourceAssemblies resourceAssemblies AddCompilationAssemblies compilationAssemblies assemblies ReadLibraries get_CompileLibraries compileLibraries get_RuntimeLibraries runtimeLibraries CreateLibraries WriteLibraries get_NativeLibraries compilationLibraries libraries GetRuntimeAssemblyNames GetDefaultAssemblyNames ReadPropertyNames ReadRuntimes get_Defines defines Natives DependencyContextStrings ResolveReferencePaths GetFallbackSearchPaths _fallbackSearchPaths get_AssetPaths assetPaths DependencyContextPaths _dependencyContextPaths TryResolveAssemblyPaths <>4__this get_Fallbacks set_Fallbacks RuntimeFallbacks fallbacks Equals ResolverUtils Contains CollectionExtensions JsonTextReaderExtensions DependencyContextExtensions Compilations Microsoft.DotNet.PlatformAbstractions System.Collections FileOptions fileOptions get_CompilationOptions ReadCompilationOptions WriteCompilationOptions compilationOptions StringSplitOptions AddRuntimeSpecificAssetGroups assetGroups get_RuntimeAssemblyGroups runtimeAssemblyGroups get_NativeLibraryGroups nativeLibraryGroups groups get_Chars _resolvers get_WarningsAsErrors warningsAsErrors FileAccess fileAccess ReadTargets ReadTargetLibraryRuntimeTargets runtimeTargets WriteTargets targets AddRuntimeSpecificAssets AddAssets GetRuntimeAssets GetRuntimeNativeAssets GetDefaultNativeAssets ResolveAssets SelectAssets GetAssets GetDefaultAssets assets Exists get_Keys Concat Format JObject CheckEndObject ReadStartObject CheckStartObject libraryObject Select Distinct get_Target ReadTarget WritePortableTarget ReadRuntimeTarget IsRuntimeTarget SelectRuntimeTarget WriteTarget target System.Collections.IEnumerator.Reset op_Implicit Split get_Default LoadDefault GetValueOrDefault FirstOrDefault IEnvironment RuntimeEnvironment ApplicationEnvironment environment envirnment System.Collections.Generic.IEnumerator<System.String>.Current System.Collections.IEnumerator.Current System.Collections.Generic.IEnumerator<System.String>.get_Current System.Collections.IEnumerator.get_Current GetCurrent <>2__current get_EmitEntryPoint emitEntryPoint get_Count Start Insert Cast WriteAssetList AddFirst MoveNext ReadAllText LoadRuntimeContext _defaultContext DependencyContext LoadAssemblyContext LoadEntryAssemblyContext context DotNetReferenceAssembliesPathEnv NativeImageSufix GroupBy JArray ReadStringArray ToArray Dependency dependency get_Key CompileTimeAssembliesKey RuntimeAssembliesKey NativeLibrariesKey key TryResolveReferenceAssembly ResourceAssembly RuntimeAssembly IsEntryAssembly GetEntryAssembly assembly CompileOnly Any SelectMany ToDictionary RuntimeLibrary runtimeLibrary ReadOneLibrary CreateLibrary WriteLibrary CompilationLibrary compilationLibrary ReadTargetLibrary WritePortableTargetLibrary WriteTargetLibrary targetLibrary <>3__library _jsonReaderFactory IDirectory get_Directory _nugetPackageDirectory GetDefaultPackageDirectory GetDefaultPackageCacheDirectory _packageCacheDirectory op_Equality op_Inequality IsNullOrEmpty JProperty TryReadStringProperty DepsFilesProperty property   a s s e m b l i e s  wC a n   n o t   f i n d   c o m p i l a t i o n   l i b r a r y   l o c a t i o n   f o r   p a c k a g e   ' { 0 } ' d e f i n e s  	n a m e  v e r s i o n  t a r g e t  %c o m p i l a t i o n O p t i o n s  !c o m p i l e L i b r a r i e s  !r u n t i m e L i b r a r i e s  r u n t i m e G r a p h  o t h e r  	s e l f  #r u n t i m e I d e n t i f i e r  c o n t e x t  OP r o v i d e d   p a t h   h a s   e m p t y   f i l e   n a m e   ' { 0 } ' a s s e t P a t h  . n i  s t r e a m  r u n t i m e T a r g e t  t a r g e t s  l i b r a r i e s  r u n t i m e s  /N o   r u n t i m e   t a r g e t   f o u n d  _D e p e n d e n c y   f i l e   d o e s   n o t   h a v e   ' t a r g e t s '   s e c t i o n =T a r g e t   w i t h   n a m e   { 0 }   n o t   f o u n d  s i g n a t u r e  l a n g u a g e V e r s i o n  p l a t f o r m  a l l o w U n s a f e  !w a r n i n g s A s E r r o r s  o p t i m i z e  k e y F i l e  d e l a y S i g n  p u b l i c S i g n  d e b u g T y p e  e m i t E n t r y P o i n t  x m l D o c  d e p e n d e n c i e s  r u n t i m e  n a t i v e  c o m p i l e  r u n t i m e T a r g e t s  r e s o u r c e s  c o m p i l e O n l y  r i d  a s s e t T y p e  l o c a l e  s h a 5 1 2  	t y p e  s e r v i c e a b l e  	p a t h  h a s h P a t h  OC a n n o t   f i n d   l i b r a r y   i n f o r m a t i o n   f o r   { 0 }  a s s e m b l y  . d e p s . j s o n  -A P P _ C O N T E X T _ D E P S _ F I L E S  /  l i b  'r u n t i m e / { 0 } / { 1 } / _ . _  {  }  [  ]  cU n e x p e c t e d   c h a r a c t e r   e n c o u n t e r e d ,   e x c e p t e d   ' { 0 } '   Ca t   l i n e   { 0 }   p o s i t i o n   { 1 }   p a t h   { 2 }  a s s e m b l y N a m e  f a l l b a c k s  +r u n t i m e A s s e m b l y G r o u p s  'n a t i v e L i b r a r y G r o u p s  %r e s o u r c e A s s e m b l i e s  f r a m e w o r k  p r o j e c t  m s b u i l d p r o j e c t  p a c k a g e  #r e f e r e n c e a s s e m b l y  OC a n   n o t   f i n d   a s s e m b l y   f i l e   { 0 }   a t   ' { 1 } ' ,  	r e f s  Äù/ L i b r a r y / F r a m e w o r k s / M o n o . f r a m e w o r k / V e r s i o n s / C u r r e n t / l i b / m o n o / x b u i l d - f r a m e w o r k s K/ u s r / l o c a l / l i b / m o n o / x b u i l d - f r a m e w o r k s ?/ u s r / l i b / m o n o / x b u i l d - f r a m e w o r k s AD O T N E T _ R E F E R E N C E _ A S S E M B L I E S _ P A T H  UI n v a l i d   h a s h   e n t r y   ' { 0 } '   f o r   p a c k a g e   ' { 1 } ' #{ 0 } . { 1 } . n u p k g . { 2 }  +D O T N E T _ P A C K A G E S _ C A C H E  N U G E T _ P A C K A G E S  U S E R P R O F I L E  	H O M E  . n u g e t  p a c k a g e s  uC a n   n o t   f i n d   r e f e r e n c e   a s s e m b l y   ' { 0 } '   f i l e   f o r   p a c k a g e   { 1 } W I N D I R  M i c r o s o f t . N E T  F r a m e w o r k  v 2 . 0 . 5 0 7 2 7  #P r o g r a m F i l e s ( x 8 6 )  P r o g r a m F i l e s  )R e f e r e n c e   A s s e m b l i e s  M i c r o s o f t  _ . _  gC a n   n o t   f i n d   a s s e m b l y   f i l e   f o r   p a c k a g e   { 0 }   a t   ' { 1 } '   ¢÷Mx öG≠’CµVÎC*       Y  Ä¡  a     9  a   Ä… 9 
== E	 9 E  M  M  

l
hQÄú9 9 9 Y Äúl9 9 9   UÄÖ 
 ÄÖ Ä†ÄÅl999 ÄÅ 9
lÄ§Ä®ÄÅl9]
l]Ä¨ÄÅ]99 ÄÅ 
]   Ä∞h9ÄÅh 9 ÄÅ aÄ¥d9ÄÅd
dqu m ÄÌÄÒÄı/=Ä∏yÄƒ=hÄ∏Ä∏Ä∏9h  Ä˝  	ÄÅÄ∏
Ä∏9 ÄÕÄ»Ä∏=Ä∏9  
09EEEEEEE	    E	=Ä∏  	=Äº=Äº.
9====Ä¿=\E	Äº

====Ä¿Ä¿=Ä¿=\=\yÄƒyÄƒ  EÄƒ   =h=hÄÃ
X
ÄÅÄºX
ÄºXÄÅX9 9 ÄÅ CÄƒ=d=dEa}Ä¿}Ä¿9\99  =d	ÄÅÄ¿9} 9 ÄÅ 
Ä¿9}Ä¿a}Ä¿	ÄÅÄ¿
Ä¿
9 }Ä¿ÄÅ
\iyÄÖ@  m@ UUm	mm  ]   Å 	 ÅÄâÄç Å Å
 ÅÅÄë    
ÄÅhÄô
hÄô Å!
E 
ÄÅXÄô
XÄôylyÄëalXÄÅl  Å- y 9 ÄÅ YÄÅ
yl  Å1 y9 9 
ÄÅÄô
Äô
ÄÅ\Äô
\ÄôlÄëÄëÄëÄïÄëÄï	 9  Å!add9dad a	ÄÅÄô
ÄôÄÅX
XÄÅ}XÄô
}XÄô }X 9  Ä≠ ÄùÄ°Ä•Ä©Ä≠      =aÄπ ÅQ  	  Äπ Äπ	 9ÄÄÄΩ  ÄΩ	a Ä‡Ä‰ÄÅd9
d	      Ä‹∑z\V4‡â≠πy8)›Æ`0≠OÊ≤¶ÆÌÄ† $  Ä  î      $  RSA1     Û:)O©◊@…≥!:ìÂ|Ñ¥r»Nä‰ég©¯ˆﬁù_=R¨#‰ä≈Ò‹ï
æê£M*û;™€«~Û≈e›^ÂKëœcª<j∏?r´:ØÈ=√¬4ãvOØ∞±¿s=ÂYÆ´FXÑøùtƒ‚Åd∑Õ‚G¯ë∫âùá*“ª. n i . d e p s . j s o n / c o m p i l e r u n t i m e n a t i v e r u n t i m e T a r g e t l i b r a r i e s t a r g e t s d e p e n d e n c i e s s h a 5 1 2 p a t h h a s h P a t h t y p e s e r v i c e a b l e $c o m p i l a t i o n O p t i o n s d e f i n e s l a n g u a g e V e r s i o n p l a t f o r m a l l o w U n s a f e  w a r n i n g s A s E r r o r s o p t i m i z e k e y F i l e d e l a y S i g n p u b l i c S i g n d e b u g T y p e e m i t E n t r y P o i n t x m l D o c p o r t a b l e n a m e s i g n a t u r e r u n t i m e s r u n t i m e T a r g e t s r i d a s s e t T y p e r e s o u r c e s l o c a l e c o m p i l e O n l y 5ÄÄEQp55l5hiPÄÖ@ $HLD55`5d5\ÄÄ9Äº9==Ä¿=\	yÄƒÄ–	ÄÅX
ÄÅÄ¿
ÄÅÄ¿ÄÅÄ‘ÄÿÄÅhÄô	ÄÅl	ÄÅÄÅÄô	ÄÅd	ÄÅXaÄËÄÅd9 99 	99  5  ÄÄ  9    / 9EEEEEEE  p99l9h    p    5  5l  5h  U	 9
 9 9l 9l
 9] 9] 9]l 9]l ] 99d 999d m  u Ä∏=Ä∏	 u u =Ä∏u Ä∏u Äºu
 9u	 =u =Ä¿u
 =\u yÄƒu Äƒu
 =hu 9X9ÄºyÄƒ XÄºyÄƒ  Ä∏ PÄÖ@    U mU U @ U@  $ m Äë Äë
0Äë  Äë5X Äë5l5 Äë9	 Äëd Äë9 Äë9\ ÄëX	 Äël Äë9d Äë9
 Äë9 ÄôX Äô\ Äô Äô}X  P  L  D mÄùÄ°Ä•Ä©	 u u u Ä±u 9 9  5 ` 	 9 5  	5d5d9\9" 5d5d9\9  5`  5d  5\  P P$
 = ÄÄ HP P PH P H HP ÄΩH P  PÄΩH
 PÄΩH
 P 9P	 P
 d9d d9d 99d 99d 	     	 9l
 9]l h d XÄº X Ä¿ Ä¿  @ Äôh l  Äô X  a	 9d( 5 ÄÄ( ( E  ( p( ( 5( 5l( 5h   $ P( L( D( 5( ( ]( 5`( 5d( 5\(            TWrapNonExceptionThrows      , 'Abstractions for reading `.deps` files.   1.1.2.0  
 1.1.2  ! .NETFramework,Version=v4.5.1   ServiceableTrue  Å| ÅvMicrosoft.Extensions.DependencyModel.Tests, PublicKey=0024000004800000940000000602000000240000525341310004000001000100f33a29044fa9d740c9b3213a93e57c84b472c84e0b8a0e1ae48e67a9f8f6de9d5f7f3d52ac23e48ac51801f1dc950abe901da34d2a9e3baadb141a17c77ef3c565dd5ee5054b91cf63bb3c6ab83f72ab3aafe93d0fc3c2348b764fafb0b1c0733de51459aeab46580384bf9d74c4e28164b7cde247f891ba07891c9d872ad2bb  _ ZMicrosoft.Extensions.DependencyModel.Resolution.ResolverUtils+<ResolveFromPackagePath>d__1  º)Dè"p§AÀÃvåï”M£∞‰⁄≈_v£“˛#Ebøw≥å0$}h°Ñ˜»FnÙ‹7„∂ﬂÌù®ÁÌã¶.…ıÖ-à8 Û¯¸êò&›™!;∆ëÍ<ƒ`ãRÅ¡Lnù«ªnsˆ–æz>=öÖEúÕ≤∆Y˚L”È}u ¸è    ≈ìY         ‘  ∂  RSDSJp∞c÷SGE∫õ†.%   E:\A\_work\32\s\artifacts\win10-x64\intermediate\forPackaging\src\Microsoft.Extensions.DependencyModel\bin\Release\net451\Microsoft.Extensions.DependencyModel.pdb                                                                                                  4÷          N÷                          @÷            _CorDllMain mscoree.dll     ˇ%                                                                                                                                                                                                                                                                                                                                                                                                                                                   Ä                  0  Ä                   H   X‡              4   V S _ V E R S I O N _ I N F O     ΩÔ˛             ?                         D    V a r F i l e I n f o     $    T r a n s l a t i o n       ∞Ä   S t r i n g F i l e I n f o   \   0 0 0 0 0 4 b 0   h (  C o m m e n t s   A b s t r a c t i o n s   f o r   r e a d i n g   ` . d e p s `   f i l e s .   ,   F i l e D e s c r i p t i o n         0   F i l e V e r s i o n     1 . 1 . 2 . 0   r )  I n t e r n a l N a m e   M i c r o s o f t . E x t e n s i o n s . D e p e n d e n c y M o d e l . d l l     (   L e g a l C o p y r i g h t       z )  O r i g i n a l F i l e n a m e   M i c r o s o f t . E x t e n s i o n s . D e p e n d e n c y M o d e l . d l l     0   P r o d u c t V e r s i o n   1 . 1 . 2   8   A s s e m b l y   V e r s i o n   1 . 1 . 2 . 0                                                                                                                                            –     `6                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      ($    0Ç$	*ÜHÜ˜†Ç$0Ç$10	`ÜHe 0\
+Ç7†N0L0
+Ç70	 †¢Ä 010	`ÜHe  {‘ùpP0ÚO1≤…Â¡˜–Z+∏û≤Û™AáÆ©ßÈ†Çì0Ç0Ç˘†3   éáë§W_ >     é0	*ÜHÜ˜ 0~10	UUS10U
Washington10URedmond10U
Microsoft Corporation1(0&UMicrosoft Code Signing PCA 20110161117220921Z180217220921Z0ÅÉ10	UUS10U
Washington10URedmond10U
Microsoft Corporation10UMOPR10UMicrosoft Corporation0Ç"0	*ÜHÜ˜ Ç 0Ç
Ç –á‘B+~ùŸ∆z‘¢√„í“Sùï…R6˙Tø´ØÈ…ÁÃ&S√¬søm÷ Â ‹Èjg40ˆ¥•ï|ãπ§,Êã;yˆ#yèÛRﬂ@¬∆ùÎYœsÈÿq9õŒ%Y-“…[
Ô~÷2]tÏûS¶kg¯MYãw‡+!‡Ô¿§Eœ{∆9√‘"‹U\wBˇú≤ÂUgh∫-vjfSG’G
Ã8ﬁç{ó}Ç–&¯•éÂ°^d‰˘Î'∆Ú‡–Úg¿ÿÚ/˚â⁄˘Æ> ó—>p‘w´rxAò∏Ã¢±_ÏΩÛPg£◊î“ãUèS¶ïìÊ≤fœ…7h‰c«œ £ÇÄ0Ç|0U%0
+Ç7L+0U´»÷Ì≤“™éÒÃÌl8˜EJ–äª0RUK0I§G0E10UMOPR1402U+230012+b050c6e7-7641-441f-bc4a-43481e415d080U#0ÄHndÂP”Ç™77"µm® uï0TUM0K0I†G†EÜChttp://www.microsoft.com/pkiops/crl/MicCodSigPCA2011_2011-07-08.crl0a+U0S0Q+0ÜEhttp://www.microsoft.com/pkiops/certs/MicCodSigPCA2011_2011-07-08.crt0Uˇ0 0	*ÜHÜ˜ Ç Dâ¨iSÛƒ∂ª‘å`SÁ l®Iifæ•öAô:ÿù“WQj˙øõñ€¶&}	VË‹Ì%uz•GR®KSÛÓö√ï)¡ÇÑ§V1¸†äëïµøZŒ©dF°Ê Ò◊t{øíQ^|3^Q;õÂÿ._L	úC⁄qÌ‰ŸÁ¢⁄t,≠ÂµıT	‘æsÕ {§˙»€ÿ€:Æ˙ê≈£ΩïeÆF-W)X÷íl⁄cÒè3¢~8v^›Û5Ì¨ö;bÅ–N|H|∞è8Ã-º’9e©ï¡‚í…π´“W
™‹R.V'£‚òóWéº©Yn$íéÇ‚	sÇŸ5ÉÃü—éà∏‚öÉX∞‘öÊ1˙îGé}¶‚NyÛÿ”j3PpÒBªò	ÈˇÃïU[øíR®ƒÒËÒˇ@◊˘ö6ù˝∫êÖ“U>P≠FÔ%∏û:HcÔxò¢]ÿ‹ ´ÊVµﬁÔf√◊UÇOÇx…ûT`∑´@ëÆ∞¡ö3ùÓ2rÕeÃOFò-Q`|˚˛€Ëy˜°38˛	ö€è{∂:ΩÖÜ∏Ãº}0∑{©]ΩÃM˜nG3’@ﬂj .Q∏µπœ√”;Â„ÈåÎß∫ﬁ§.3j)/JÍ¡"85ÖÔ¬ k¡ÿñHØ~R∞∏`ƒRµJÇ∑Ö* I*&É'ZAﬁΩ’fIºúxp	º0Çz0Çb†
aê“     0	*ÜHÜ˜ 0Åà10	UUS10U
Washington10URedmond10U
Microsoft Corporation1200U)Microsoft Root Certificate Authority 20110110708205909Z260708210909Z0~10	UUS10U
Washington10URedmond10U
Microsoft Corporation1(0&UMicrosoft Code Signing PCA 20110Ç"0	*ÜHÜ˜ Ç 0Ç
Ç ´˙r.≠ÿn™ÇM4∫Ú∂X!üB*kÈZP™∏8I∫√›7k∆ÿ8¬ô∞»9’1B”âydá~î`$lØûIúÈh^“ﬂõS≤
,√ØŸ©+Æz	Ø◊ñY `ÈfvË2R&/Á´Pœ≥D∑]ÿƒ.u´hÛÀmÛ:\°ÙF∫‡8d¨nd5x¶†c-”@ì¯„ﬁ’\y•I)Áæ†wæî=Ô˚„+ZMV(¢zr‡:∑I^ÿÌÌCëÉŸ{≤{ÜŸ>±å]ËâOÑÚ°/Y‰ê;-Æ3X≈∑>˛2”≥=±≤Øí8~“ùÄ,ıNVë!5%√9ndS∫ú≠#ÑÀÙ∫Üç˜_–Røåîáº¿!t%_(∂Ã'(8%ò9J6œ|±íÆ#ß©fÏaj·(Iù_à‚%]”!K>RƒµW?$—z[/’#„p]QFw≥¯ ·º¨Ç_€¿≥Ω‘UKÁ9°È#Iº∏D|E‰¡√rz‡rÁ$ﬂøFô≈Ô¬W€ÉçÏMI0ß´éﬂÏ[üØ¸›∞f‚¡óÅ{Ì÷ÌKÁI)ß(¶ß}gÄÊäbx_≤/Ñ◊Wú\øw((ÒÌm√(è,è@7O¡·ÖDâƒ	L≈‘•C/tï˜n¯x X,]`ïö>O3Ñ⁄∞àﬁûNÙñ∞ºF†lò“‡÷àå £ÇÌ0ÇÈ0	+Ç7 0UHndÂP”Ç™77"µm® uï0	+Ç7
 S u b C A0UÜ0Uˇ0ˇ0U#0Är-:1êCπN·Íß«1—#â40ZUS0Q0O†M†KÜIhttp://crl.microsoft.com/pki/crl/products/MicRooCerAut2011_2011_03_22.crl0^+R0P0N+0ÜBhttp://www.microsoft.com/pki/certs/MicRooCerAut2011_2011_03_22.crt0ÅüU Åó0Åî0Åë	+Ç7.0ÅÉ0?+3http://www.microsoft.com/pkiops/docs/primarycps.htm0@+042  L e g a l _ p o l i c y _ s t a t e m e n t . 0	*ÜHÜ˜ Ç gÚÜ•ò‡Ty.”ÿtg"õñ·cíôBñ}“yê¡e_.,>¯√r—mÉ˛æ?Ë
 ;øG©£Ûi€cø"5•ó]eÑê}ãFPUÿí|“KÛ<BãR–∞˝k„>.)õÊ=•‘µwî9‚Èd…D=xz#Û}¶êtÉçÙÀ&F*¬äª§©õÌh˙h.ï†*?*kXIc	inZòñ‰ÉÙ¿èÛF+ﬁ¸;–Ω5Ôn%ÆÂØ'Ì–›ÛØô(óòM=Úâ÷√2‚≈-Œ[û¥I9
∆
¬∆≠ÆÂ≤Ÿ€àQEX82q'±Ù'¯ﬁ,: iò≤Yâhnoß∑t√@¶*(>Ç?Mf¿≥Mı·èo}EßvÂ@*e£√]RbÜ√c6óÜﬂ⁄Û¯Ú°ö'·Õ•ó–Ó]cA„[úá>w—±uæaaµ‹∆æﬂA«(Óﬁe/Ïóˆ°\ñÿ ÷°FΩYÛó•	KHôÄ– )≈±õ•?Ew5∆“¢¢üzz"˙Hï´˚G#Äıû¯øk∑Kó‚ÎuxÏÍ7ôyKˇ÷≥#huÊØ˙¸ãÎÄÍi;Ø¸0ÌLéﬂﬂumcë=—ùVNOøÄW"°x2!zÔA
±?˚®Ã§]¡°àõWqVNHE¿B…õv[
ÄHk˝yü¡Ωmmj…RszPÕ1Ç˙0Çˆ0Åï0~10	UUS10U
Washington10URedmond10U
Microsoft Corporation1(0&UMicrosoft Code Signing PCA 20113   éáë§W_ >     é0	`ÜHe †ÅË0	*ÜHÜ˜	1
+Ç70
+Ç710
+Ç70/	*ÜHÜ˜	1" ·WÅº`«¶p|,E¡á)ÓlÅ¡Ñ≈ŒnêHent0|
+Ç71n0l†RÄP M i c r o s o f t . E x t e n s i o n s . D e p e n d e n c y M o d e l . d l l°Ähttp://microsoft.com0	*ÜHÜ˜ Ç I∞¥NBÙ˚GΩZ*@“/ œ≈F≤óPíÎQPƒ-NhmÛ92É·hr7{ODÂàIÂ∫◊k*ùñÁç'Ó∆'Üñk∞ ≠ûL¿ht1*Ûƒ§Èñ√ºziÒÒ0pÏâ´V/
˚}‚ÉÈÿƒ1áRø|å¬?∂w+ÀoπS° ¿dJ¬"YrcÀûsKäÀ9øù)‰àÉ^ãkÑUpÓÇ£õTk÷	˛Õ<0¯Èì˝ìØº˙Õ¥◊ePF˘YÓ˛˘N¥I‹•z®fÃñ|E"z›se/HáPhœr>ÓëtyA#≠≠ö¨€so“Ïï-∆Y¿ïΩˆ√ª0*BÂ°ÇJ0ÇF
+Ç71Ç60Ç2	*ÜHÜ˜†Ç#0Ç10	`ÜHe 0Ç=*ÜHÜ˜	†Ç,Ç(0Ç$
+ÑY
010	`ÜHe  úÕm›˛$ÚSé®…4:V6§£¡ªIwƒ˝í´ö%aYf+Æ{20170428191557.614Z0ÄÙ†Åπ§Å∂0Å≥10	UUS10U
Washington10URedmond10U
Microsoft Corporation10UMOPR1'0%UnCipher DSE ESN:728D-C45F-F9EB1%0#UMicrosoft Time-Stamp Service†ÇÕ0Çq0ÇY†
a	Å*     0	*ÜHÜ˜ 0Åà10	UUS10U
Washington10URedmond10U
Microsoft Corporation1200U)Microsoft Root Certificate Authority 20100100701213655Z250701214655Z0|10	UUS10U
Washington10URedmond10U
Microsoft Corporation1&0$UMicrosoft Time-Stamp PCA 20100Ç"0	*ÜHÜ˜ Ç 0Ç
Ç ©ºwä: Ï¸óı˙iîktT’•
 ÇÖ˚Ì|hK,_≈√Âa¬v∑>f+[S'1AïŒ	é|a0Y±0DÒ`àÑTC◊M∏8≥B›ì¨÷s0W&Ç£E–ÍıGÅÕø$`2X`FÚXGÜ2Ñtagë_ÅT±œìLí¡ƒ¶]—an(∆˘ÜÄªﬂa¸F¡'$gr!äØKdâPb±]˝w=Wu¨ΩäBM@Q—ú>gıf¿ñD~Ô–K˝nÂö ±®Úz*
1⁄Në∂à5Ëx∞ÈôÕ<Á/D∫ßÙ‹dΩ§¡ 	ìxÕ¸º¿…D]^úO"M £ÇÊ0Ç‚0	+Ç7 0U’c:\ä1êÛC{|F≈3hZÖmU0	+Ç7
 S u b C A0UÜ0Uˇ0ˇ0U#0Ä’ˆVÀèË¢\bh—=îê[◊Œöƒ0VUO0M0K†I†GÜEhttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z+N0L0J+0Ü>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0Å†U ˇÅï0Åí0Åè	+Ç7.0ÅÅ0=+1http://www.microsoft.com/PKI/docs/CPS/default.htm0@+042  L e g a l _ P o l i c y _ S t a t e m e n t . 0	*ÜHÜ˜ Ç ÊàQ‚∆‡ò?Åq=ù£°!o≥Î¶Ãı1æœ‚©˛˙Wm0≥¬≈f…jﬂıÁxΩ«®û%„˘ºÌkTW+QÇD˚πSåÃÙ`ävÃ@@Aõ‹\ˇ\˘^5ò$VKtÔB»Øø∆Ú7}Z?ÚôyJëR Ø8ı/yÅeŸ©µk‰«Œˆ z oK0D$"<œÌ•ñèY)º∂˝·pü2J'˝UØ/˛∂Âé3ªb_ö€W@ÈÒŒôfêåˇjb›≈Jë&‚9ÏJqcù{!m√ú£¢<˙}ñjêx¶m“·ú˘¸8ÿîÙ∆•
ñÜ§ΩûÆBÉ∏µÄõ"8 µ%ÂdÏ˜Ùø~cY%z.9Wv¢q™äâ∫aßÀöÿGöÄ≈–Õß–Ô}É·;q	ﬂ]tò"a⁄∞PoΩÒ· ﬂÁ1§ì:˜eGxË¯®H´˜ﬁr~akow©ÅÀß	¨9ªÏ∆ÀÿÇ¥rÕÙ∏ÖÄ˚â*T9≤[⁄»Uôzás;Êò-Íç‡3.)ı¿/T'!˜»¨N⁄(∏±©€ñ≤ßB¢…œAM‡Ü˘*ö£f0”ªt2Kﬂc{ıôä/«!ØYµÆ‹D<óPq◊°“≈U„iﬁW¡—ﬁ0¿˝ÃÊM˚ø]OÈù8/ºœX.Ô†P5⁄Ô	'’≥~5∫⁄6€”_èﬁtàI0Ç⁄0Ç¬†3   ≤5h7"ß     ≤0	*ÜHÜ˜ 0|10	UUS10U
Washington10URedmond10U
Microsoft Corporation1&0$UMicrosoft Time-Stamp PCA 20100160907175657Z180907175657Z0Å≥10	UUS10U
Washington10URedmond10U
Microsoft Corporation10UMOPR1'0%UnCipher DSE ESN:728D-C45F-F9EB1%0#UMicrosoft Time-Stamp Service0Ç"0	*ÜHÜ˜ Ç 0Ç
Ç òJª—XıtëBÈ°.S]Ú, o.õ”◊ïï‹ùoâ|kp)M∞.5VˆèK¯|UmPÕ?«™xÚ®kª¸+™%ù›¸Òcp$eoÑ˙KD^Œr(}¬≥≈oÜjôáÆ∫˛ÃòæoæÇGe∑/u º⁄zõ;2O⁄Hí"Á±±BmY¬bû,*
57 	Ï·„µ„Ä~TÓ]QìŸöJ3…Ø&Îˆk#ï/?]!7J$œéΩõS?ÓÈÓåp{⁄;ıjπô<∑€|À?UŒÙØ÷π:<ﬂ|'‘rîÕØJ	6∆"Ï]sΩ:‚ÄıΩwpçcp{¿¿ˆÓû4iá∑ £Ç0Ç0U3dægk‹˘cDH‰≈C…êˆÇï0U#0Ä’c:\ä1êÛC{|F≈3hZÖmU0VUO0M0K†I†GÜEhttp://crl.microsoft.com/pki/crl/products/MicTimStaPCA_2010-07-01.crl0Z+N0L0J+0Ü>http://www.microsoft.com/pki/certs/MicTimStaPCA_2010-07-01.crt0Uˇ0 0U%0
+0	*ÜHÜ˜ Ç A‡≤†† Ù(oÃç›˛€Ω Uâl )vv?‘'…^{É˚¡¬G6çˆz!LD:qc´#&øDÆ¢Ô'÷XÜ∫zp˙/¥K‰qH:W“µˇ£ö	√_	Ë0ÕëÎT\¡Y˛ÙÍR/®z5k`∂É8	¶öv€ñ≥◊5á®d:\œL∆"∑ cå∏u±E·©GZ€ˇ¸ªT9€_ÊW‰4ûx/˝¥‹ ﬂ“£Œ=qŸ·∞^eY{élÓï≥ôﬂ®aLOW™÷ƒ1ˆ|bÎlk °
Ñ“|q)'"§ÿ¿z»ù›:9Íﬁ'‹aé<jÑöﬂN∂öÌ∞L·˙QçÄB¶&ˆÉoÊ°Çv0Ç^0Å„°Åπ§Å∂0Å≥10	UUS10U
Washington10URedmond10U
Microsoft Corporation10UMOPR1'0%UnCipher DSE ESN:728D-C45F-F9EB1%0#UMicrosoft Time-Stamp Service¢%
0	+  Ωˇ≈ïcêÒú`÷¿ØÈ∏û †Å¬0Åø§Åº0Åπ10	UUS10U
Washington10URedmond10U
Microsoft Corporation10UMOPR1'0%UnCipher NTS ESN:4DE9-0C5E-3E091+0)U"Microsoft Time Source Master Clock0	*ÜHÜ˜  ‹≠ÚÍ0"20170428165714Z20170429165714Z0t0:
+ÑY
1,0*0
 ‹≠ÚÍ 0 â0 æ0
 ‹ØDj 06
+ÑY
1(0&0
+ÑY
†
0 „`°
0 ° 0	*ÜHÜ˜ Ç 5“/Ü¢•·≤ÖO-	d√†’≤z^·Ø_eúTîPq]ÈÛqÜˆÀ.Y+;°Ã˛ëPõ‡ŒçswπNRéd´‹xòsoÃ•¥¢Ãò©ªQF`÷y,ÄlÓ√ü)ä-Mù˜≥sb≠ã
•‡Î Iñ1z´ë#ﬂd”ßÿ∆Œàaúâ˚ªPâ›ÀhNÃÑÜTD#„êp’E8IÂR∫~+èë ù÷-`fY•9i•`…Ì≈Üï‚[r§ö™ÄÏ¢ºZ2“3[Œù∞(W1§pBÔ≠«§ Ÿ˝c·r“@¬-◊G›Ú‚”¸ù7ƒ*«Ö?o;∫≠}¶[Ò®!ü¥⁄:ú˙+‡ª1Çı0ÇÒ0Åì0|10	UUS10U
Washington10URedmond10U
Microsoft Corporation1&0$UMicrosoft Time-Stamp PCA 20103   ≤5h7"ß     ≤0	`ÜHe †Ç20	*ÜHÜ˜	1*ÜHÜ˜	0/	*ÜHÜ˜	1" †∏WP©Û◊på-Ï¶®A`êÆ€âpyˆÀjóQ◊∑Ûqê0Å‚*ÜHÜ˜	1Å“0Åœ0ÅÃ0Å±Ωˇ≈ïcêÒú`÷¿ØÈ∏û 0Åò0ÅÄ§~0|10	UUS10U
Washington10URedmond10U
Microsoft Corporation1&0$UMicrosoft Time-Stamp PCA 20103   ≤5h7"ß     ≤0˝πê«fg	¬rn#∏ßŒåf{.€0	*ÜHÜ˜ Ç 1àúgÒÂ°5k◊Ü*c‘*\øí∞¥g|ÑhÏØp‘B˝#ØK∂◊ä(rÿ+‚ıÃ/Ns∫°+eñdü√*i–»«*iØn.m¬Q¿Àj*Û7œ~+p∑£Ïlßm∞tÚPˇ¨ÓàavÂã«è·ÒÌôMnüÏÉ4±øÇê«MNÉÖ¶ˆ<ï]ÊËˆå[[∫f9Ω+3_îI‰áòxπmÏ”™Ω<¥TJÄî©˝∆ÑıÈ_QÔƒ¸|n÷‡ø0Ÿöﬂeæ[ƒ ÑckŸÁÄ¡nÖ%1^D()Ê≈/I%õﬂ¶bnµ£º6Ã9$k$ÀÆnúÆ—X~˜QTUí°iÕÔçYô:&                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          """
Tests for Timestamp timezone-related methods
"""
from datetime import (
    date,
    datetime,
    timedelta,
)

import dateutil
from dateutil.tz import (
    gettz,
    tzoffset,
)
import pytest
import pytz
from pytz.exceptions import (
    AmbiguousTimeError,
    NonExistentTimeError,
)

from pandas._libs.tslibs import timezones
from pandas.errors import OutOfBoundsDatetime
import pandas.util._test_decorators as td

from pandas import (
    NaT,
    Timestamp,
)


class TestTimestampTZOperations:
    # --------------------------------------------------------------
    # Timestamp.tz_localize

    def test_tz_localize_pushes_out_of_bounds(self):
        # GH#12677
        # tz_localize that pushes away from the boundary is OK
        msg = (
            f"Converting {Timestamp.min.strftime('%Y-%m-%d %H:%M:%S')} "
            f"underflows past {Timestamp.min}"
        )
        pac = Timestamp.min.tz_localize("US/Pacific")
        assert pac.value > Timestamp.min.value
        pac.tz_convert("Asia/Tokyo")  # tz_convert doesn't change value
        with pytest.raises(OutOfBoundsDatetime, match=msg):
            Timestamp.min.tz_localize("Asia/Tokyo")

        # tz_localize that pushes away from the boundary is OK
        msg = (
            f"Converting {Timestamp.max.strftime('%Y-%m-%d %H:%M:%S')} "
            f"overflows past {Timestamp.max}"
        )
        tokyo = Timestamp.max.tz_localize("Asia/Tokyo")
        assert tokyo.value < Timestamp.max.value
        tokyo.tz_convert("US/Pacific")  # tz_convert doesn't change value
        with pytest.raises(OutOfBoundsDatetime, match=msg):
            Timestamp.max.tz_localize("US/Pacific")

    def test_tz_localize_ambiguous_bool(self):
        # make sure that we are correctly accepting bool values as ambiguous
        # GH#14402
        ts = Timestamp("2015-11-01 01:00:03")
        expected0 = Timestamp("2015-11-01 01:00:03-0500", tz="US/Central")
        expected1 = Timestamp("2015-11-01 01:00:03-0600", tz="US/Central")

        msg = "Cannot infer dst time from 2015-11-01 01:00:03"
        with pytest.raises(pytz.AmbiguousTimeError, match=msg):
            ts.tz_localize("US/Central")

        result = ts.tz_localize("US/Central", ambiguous=True)
        assert result == expected0

        result = ts.tz_localize("US/Central", ambiguous=False)
        assert result == expected1

    def test_tz_localize_ambiguous(self):
        ts = Timestamp("2014-11-02 01:00")
        ts_dst = ts.tz_localize("US/Eastern", ambiguous=True)
        ts_no_dst = ts.tz_localize("US/Eastern", ambiguous=False)

        assert (ts_no_dst.value - ts_dst.value) / 1e9 == 3600
        msg = "Cannot infer offset with only one time"
        with pytest.raises(ValueError, match=msg):
            ts.tz_localize("US/Eastern", ambiguous="infer")

        # GH#8025
        msg = "Cannot localize tz-aware Timestamp, use tz_convert for conversions"
        with pytest.raises(TypeError, match=msg):
            Timestamp("2011-01-01", tz="US/Eastern").tz_localize("Asia/Tokyo")

        msg = "Cannot convert tz-naive Timestamp, use tz_localize to localize"
        with pytest.raises(TypeError, match=msg):
            Timestamp("2011-01-01").tz_convert("Asia/Tokyo")

    @pytest.mark.parametrize(
        "stamp, tz",
        [
            ("2015-03-08 02:00", "US/Eastern"),
            ("2015-03-08 02:30", "US/Pacific"),
            ("2015-03-29 02:00", "Europe/Paris"),
            ("2015-03-29 02:30", "Europe/Belgrade"),
        ],
    )
    def test_tz_localize_nonexistent(self, stamp, tz):
        # GH#13057
        ts = Timestamp(stamp)
        with pytest.raises(NonExistentTimeError, match=stamp):
            ts.tz_localize(tz)
        # GH 22644
        with pytest.raises(NonExistentTimeError, match=stamp):
            ts.tz_localize(tz, nonexistent="raise")
        assert ts.tz_localize(tz, nonexistent="NaT") is NaT

    def test_tz_localize_ambiguous_raise(self):
        # GH#13057
        ts = Timestamp("2015-11-1 01:00")
        msg = "Cannot infer dst time from 2015-11-01 01:00:00,"
        with pytest.raises(AmbiguousTimeError, match=msg):
            ts.tz_localize("US/Pacific", ambiguous="raise")

    def test_tz_localize_nonexistent_invalid_arg(self):
        # GH 22644
        tz = "Europe/Warsaw"
        ts = Timestamp("2015-03-29 02:00:00")
        msg = (
            "The nonexistent argument must be one of 'raise', 'NaT', "
            "'shift_forward', 'shift_backward' or a timedelta object"
        )
        with pytest.raises(ValueError, match=msg):
            ts.tz_localize(tz, nonexistent="foo")

    @pytest.mark.parametrize(
        "stamp",
        [
            "2014-02-01 09:00",
            "2014-07-08 09:00",
            "2014-11-01 17:00",
            "2014-11-05 00:00",
        ],
    )
    def test_tz_localize_roundtrip(self, stamp, tz_aware_fixture):
        tz = tz_aware_fixture
        ts = Timestamp(stamp)
        localized = ts.tz_localize(tz)
        assert localized == Timestamp(stamp, tz=tz)

        msg = "Cannot localize tz-aware Timestamp"
        with pytest.raises(TypeError, match=msg):
            localized.tz_localize(tz)

        reset = localized.tz_localize(None)
        assert reset == ts
        assert reset.tzinfo is None

    def test_tz_localize_ambiguous_compat(self):
        # validate that pytz and dateutil are compat for dst
        # when the transition happens
        naive = Timestamp("2013-10-27 01:00:00")

        pytz_zone = "Europe/London"
        dateutil_zone = "dateutil/Europe/London"
        result_pytz = naive.tz_localize(pytz_zone, ambiguous=0)
        result_dateutil = naive.tz_localize(dateutil_zone, ambiguous=0)
        assert result_pytz.value == result_dateutil.value
        assert result_pytz.value == 1382835600000000000

        # fixed ambiguous behavior
        # see gh-14621
        assert result_pytz.to_pydatetime().tzname() == "GMT"
        assert result_dateutil.to_pydatetime().tzname() == "BST"
        assert str(result_pytz) == str(result_dateutil)

        # 1 hour difference
        result_pytz = naive.tz_localize(pytz_zone, ambiguous=1)
        result_dateutil = naive.tz_localize(dateutil_zone, ambiguous=1)
        assert result_pytz.value == result_dateutil.value
        assert result_pytz.value == 1382832000000000000

        # see gh-14621
        assert str(result_pytz) == str(result_dateutil)
        assert (
            result_pytz.to_pydatetime().tzname()
            == result_dateutil.to_pydatetime().tzname()
        )

    @pytest.mark.parametrize(
        "tz",
        [
            pytz.timezone("US/Eastern"),
            gettz("US/Eastern"),
            "US/Eastern",
            "dateutil/US/Eastern",
        ],
    )
    def test_timestamp_tz_localize(self, tz):
        stamp = Timestamp("3/11/2012 04:00")

        result = stamp.tz_localize(tz)
        expected = Timestamp("3/11/2012 04:00", tz=tz)
        assert result.hour == expected.hour
        assert result == expected

    @pytest.mark.parametrize(
        "start_ts, tz, end_ts, shift",
        [
            ["2015-03-29 02:20:00", "Europe/Warsaw", "2015-03-29 03:00:00", "forward"],
            [
                "2015-03-29 02:20:00",
                "Europe/Warsaw",
                "2015-03-29 01:59:59.999999999",
                "backward",
            ],
            [
                "2015-03-29 02:20:00",
                "Europe/Warsaw",
                "2015-03-29 03:20:00",
                timedelta(hours=1),
            ],
            [
                "2015-03-29 02:20:00",
                "Europe/Warsaw",
                "2015-03-29 01:20:00",
                timedelta(hours=-1),
            ],
            ["2018-03-11 02:33:00", "US/Pacific", "2018-03-11 03:00:00", "forward"],
            [
                "2018-03-11 02:33:00",
                "US/Pacific",
                "2018-03-11 01:59:59.999999999",
                "backward",
            ],
            [
                "2018-03-11 02:33:00",
                "US/Pacific",
                "2018-03-11 03:33:00",
                timedelta(hours=1),
            ],
            [
                "2018-03-11 02:33:00",
                "US/Pacific",
                "2018-03-11 01:33:00",
                timedelta(hours=-1),
            ],
        ],
    )
    @pytest.mark.parametrize("tz_type", ["", "dateutil/"])
    def test_timestamp_tz_localize_nonexistent_shift(
        self, start_ts, tz, end_ts, shift, tz_type
    ):
        # GH 8917, 24466
        tz = tz_type + tz
        if isinstance(shift, str):
            shift = "shift_" + shift
        ts = Timestamp(start_ts)
        result = ts.tz_localize(tz, nonexistent=shift)
        expected = Timestamp(end_ts).tz_localize(tz)
        assert result == expected

    @pytest.mark.parametrize("offset", [-1, 1])
    @pytest.mark.parametrize("tz_type", ["", "dateutil/"])
    def test_timestamp_tz_localize_nonexistent_shift_invalid(self, offset, tz_type):
        # GH 8917, 24466
        tz = tz_type + "Europe/Warsaw"
        ts = Timestamp("2015-03-29 02:20:00")
        msg = "The provided timedelta will relocalize on a nonexistent time"
        with pytest.raises(ValueError, match=msg):
            ts.tz_localize(tz, nonexistent=timedelta(seconds=offset))

    @pytest.mark.parametrize("tz", ["Europe/Warsaw", "dateutil/Europe/Warsaw"])
    def test_timestamp_tz_localize_nonexistent_NaT(self, tz):
        # GH 8917
        ts = Timestamp("2015-03-29 02:20:00")
        result = ts.tz_localize(tz, nonexistent="NaT")
        assert result is NaT

    @pytest.mark.parametrize("tz", ["Europe/Warsaw", "dateutil/Europe/Warsaw"])
    def test_timestamp_tz_localize_nonexistent_raise(self, tz):
        # GH 8917
        ts = Timestamp("2015-03-29 02:20:00")
        msg = "2015-03-29 02:20:00"
        with pytest.raises(pytz.NonExistentTimeError, match=msg):
            ts.tz_localize(tz, nonexistent="raise")
        msg = (
            "The nonexistent argument must be one of 'raise', 'NaT', "
            "'shift_forward', 'shift_backward' or a timedelta object"
        )
        with pytest.raises(ValueError, match=msg):
            ts.tz_localize(tz, nonexistent="foo")

    # ------------------------------------------------------------------
    # Timestamp.tz_convert

    @pytest.mark.parametrize(
        "stamp",
        [
            "2014-02-01 09:00",
            "2014-07-08 09:00",
            "2014-11-01 17:00",
            "2014-11-05 00:00",
        ],
    )
    def test_tz_convert_roundtrip(self, stamp, tz_aware_fixture):
        tz = tz_aware_fixture

        ts = Timestamp(stamp, tz="UTC")
        converted = ts.tz_convert(tz)

        reset = converted.tz_convert(None)
        assert reset == Timestamp(stamp)
        assert reset.tzinfo is None
        assert reset == converted.tz_convert("UTC").tz_localize(None)

    @pytest.mark.parametrize("tzstr", ["US/Eastern", "dateutil/US/Eastern"])
    def test_astimezone(self, tzstr):
        # astimezone is an alias for tz_convert, so keep it with
        # the tz_convert tests
        utcdate = Timestamp("3/11/2012 22:00", tz="UTC")
        expected = utcdate.tz_convert(tzstr)
        result = utcdate.astimezone(tzstr)
        assert expected == result
        assert isinstance(result, Timestamp)

    @td.skip_if_windows
    def test_tz_convert_utc_with_system_utc(self):

        # from system utc to real utc
        ts = Timestamp("2001-01-05 11:56", tz=timezones.maybe_get_tz("dateutil/UTC"))
        # check that the time hasn't changed.
        assert ts == ts.tz_convert(dateutil.tz.tzutc())

        # from system utc to real utc
        ts = Timestamp("2001-01-05 11:56", tz=timezones.maybe_get_tz("dateutil/UTC"))
        # check that the time hasn't changed.
        assert ts == ts.tz_convert(dateutil.tz.tzutc())

    # ------------------------------------------------------------------
    # Timestamp.__init__ with tz str or tzinfo

    def test_timestamp_constructor_tz_utc(self):
        utc_stamp = Timestamp("3/11/2012 05:00", tz="utc")
        assert utc_stamp.tzinfo is pytz.utc
        assert utc_stamp.hour == 5

        utc_stamp = Timestamp("3/11/2012 05:00").tz_localize("utc")
        assert utc_stamp.hour == 5

    def test_timestamp_to_datetime_tzoffset(self):
        tzinfo = tzoffset(None, 7200)
        expected = Timestamp("3/11/2012 04:00", tz=tzinfo)
        result = Timestamp(expected.to_pydatetime())
        assert expected == result

    def test_timestamp_constructor_near_dst_boundary(self):
        # GH#11481 & GH#15777
        # Naive string timestamps were being localized incorrectly
        # with tz_convert_from_utc_single instead of tz_localize_to_utc

        for tz in ["Europe/Brussels", "Europe/Prague"]:
            result = Timestamp("2015-10-25 01:00", tz=tz)
            expected = Timestamp("2015-10-25 01:00").tz_localize(tz)
            assert result == expected

            msg = "Cannot infer dst time from 2015-10-25 02:00:00"
            with pytest.raises(pytz.AmbiguousTimeError, match=msg):
                Timestamp("2015-10-25 02:00", tz=tz)

        result = Timestamp("2017-03-26 01:00", tz="Europe/Paris")
        expected = Timestamp("2017-03-26 01:00").tz_localize("Europe/Paris")
        assert result == expected

        msg = "2017-03-26 02:00"
        with pytest.raises(pytz.NonExistentTimeError, match=msg):
            Timestamp("2017-03-26 02:00", tz="Europe/Paris")

        # GH#11708
        naive = Timestamp("2015-11-18 10:00:00")
        result = naive.tz_localize("UTC").tz_convert("Asia/Kolkata")
        expected = Timestamp("2015-11-18 15:30:00+0530", tz="Asia/Kolkata")
        assert result == expected

        # GH#15823
        result = Timestamp("2017-03-26 00:00", tz="Europe/Paris")
        expected = Timestamp("2017-03-26 00:00:00+0100", tz="Europe/Paris")
        assert result == expected

        result = Timestamp("2017-03-26 01:00", tz="Europe/Paris")
        expected = Timestamp("2017-03-26 01:00:00+0100", tz="Europe/Paris")
        assert result == expected

        msg = "2017-03-26 02:00"
        with pytest.raises(pytz.NonExistentTimeError, match=msg):
            Timestamp("2017-03-26 02:00", tz="Europe/Paris")

        result = Timestamp("2017-03-26 02:00:00+0100", tz="Europe/Paris")
        naive = Timestamp(result.value)
        expected = naive.tz_localize("UTC").tz_convert("Europe/Paris")
        assert result == expected

        result = Timestamp("2017-03-26 03:00", tz="Europe/Paris")
        expected = Timestamp("2017-03-26 03:00:00+0200", tz="Europe/Paris")
        assert result == expected

    @pytest.mark.parametrize(
        "tz",
        [
            pytz.timezone("US/Eastern"),
            gettz("US/Eastern"),
            "US/Eastern",
            "dateutil/US/Eastern",
        ],
    )
    def test_timestamp_constructed_by_date_and_tz(self, tz):
        # GH#2993, Timestamp cannot be constructed by datetime.date
        # and tz correctly

        result = Timestamp(date(2012, 3, 11), tz=tz)

        expected = Timestamp("3/11/2012", tz=tz)
        assert result.hour == expected.hour
        assert result == expected

    @pytest.mark.parametrize(
        "tz",
        [
            pytz.timezone("US/Eastern"),
            gettz("US/Eastern"),
            "US/Eastern",
            "dateutil/US/Eastern",
        ],
    )
    def test_timestamp_add_timedelta_push_over_dst_boundary(self, tz):
        # GH#1389

        # 4 hours before DST transition
        stamp = Timestamp("3/10/2012 22:00", tz=tz)

        result = stamp + timedelta(hours=6)

        # spring forward, + "7" hours
        expected = Timestamp("3/11/2012 05:00", tz=tz)

        assert result == expected

    def test_timestamp_timetz_equivalent_with_datetime_tz(self, tz_naive_fixture):
        # GH21358
        tz = timezones.maybe_get_tz(tz_naive_fixture)

        stamp = Timestamp("2018-06-04 10:20:30", tz=tz)
        _datetime = datetime(2018, 6, 4, hour=10, minute=20, second=30, tzinfo=tz)

        result = stamp.timetz()
        expected = _datetime.timetz()

        assert result == expected
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                MZê       ˇˇ  ∏       @                                   Ä   ∫ ¥	Õ!∏LÕ!This program cannot be run in DOS mode.
$       PE  L öu˛b        ‡ !           Œ2       @    @                       Ä     ^–   @Ö                           Ä2  K    @  Ë             ®'   `                                                                       H           .text   ‘                           `.rsrc   Ë   @                    @  @.reloc      `                    @  B                ∞2      H     ¸/  Ñ  	       P   ,  |/  Ä                                     Œ Ôæ   ë   lSystem.Resources.ResourceReader, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089#System.Resources.RuntimeResourceSet          PADPADP2bä»¿sé£≠Eî©0UîEñƒé	£Tr≥B\t≥¯n¿n©≠≈Ó_°Ã1@›·X_›™ëÿÂËfñÍò„ÖÌïWmÓ@ï∂˝HP
§ìê(É7%¿∫~9$ı<É¯GÖ2À[‡¶jÑhyu¸  \  π  ”  √  é  M  „   _  ñ  À  f   ˛  ;   :  â     Ç  ∞   ˆ  U      S  1  Ü  %      6C a n n o t N a v i g a t e T o D e c l a r a t i o n     &C o l o r E d i t U n d o A c t i o n /   C o m m e n t E l l i p s i s =   "C o m m e n t U n d o A c t i o n D   .D i s p l a y N a m e _ C S S _ C o m m e n t d   .D i s p l a y N a m e _ C S S _ K e y w o r d |   :D i s p l a y N a m e _ C S S _ P r o p e r t y _ N a m e ö   <D i s p l a y N a m e _ C S S _ P r o p e r t y _ V a l u e Ω   0D i s p l a y N a m e _ C S S _ S e l e c t o r ‰   ,D i s p l a y N a m e _ C S S _ S t r i n g ˚   $D r a g D r o p U n d o A c t i o n   E l l i p s i s 3   F o r m a t U n d o A c t i o n 8  O u t l i n i n g R e g i o n @  <S c h e m a E r r o r _ I n v a l i d A t D i r e c t i v e H  6S c h e m a E r r o r _ I n v a l i d P r o p e r t y w  JS c h e m a E r r o r _ I n v a l i d P r o p e r t y F o r C o n t e x t ≠  <S c h e m a E r r o r _ I n v a l i d P s e u d o C l a s s ¸  @S c h e m a E r r o r _ I n v a l i d P s e u d o E l e m e n t +  0S c h e m a E r r o r _ I n v a l i d V a l u e ]  FS c h e m a E r r o r _ I n v a l i d V a l u e F o r P r o p e r t y ã  .S c h e m a L o a d E r r o r T e m p l a t e “  .S c h e m a S y n t a x D e f a u l t E n u m   8T o g g l e B l o c k C o m m e n t U n d o A c t i o n 2  6T o g g l e L i n e C o m m e n t U n d o A c t i o n P  &U n c o m m e n t U n d o A c t i o n n  2V a l i d a t i o n _ D e e p N o t A l l o w e d ç  -Nie mo≈ºna przej≈õƒá do deklaracji ‚Äû{0}‚Äù.Kolor edycji/*...Dodaj komentarz do zaznaczeniaKomentarz w kodzie CSSS≈Çowo kluczowe w kodzie CSS!Nazwa w≈Ça≈õciwo≈õci w kodzie CSS%Warto≈õƒá w≈Ça≈õciwo≈õci w kodzie CSSSelektor w kodzie CSSCiƒÖg w kodzie CSS"Operacja przeciƒÖgania/upuszczania...Formatregion-‚Äû{0}‚Äù nie jest znanƒÖ dyrektywƒÖ ‚Äû@‚Äù.4‚Äû{0}‚Äù nie jest znanƒÖ nazwƒÖ w≈Ça≈õciwo≈õci CSS.M‚Äû{0}‚Äù nie jest znanƒÖ nazwƒÖ w≈Ça≈õciwo≈õci wewnƒÖtrz elementu ‚Äû{1}‚Äù.-‚Äû{0}‚Äù nie jest prawid≈ÇowƒÖ pseudoklasƒÖ.0‚Äû{0}‚Äù nie jest prawid≈Çowym pseudoelementem.,‚Äû{0}‚Äù nie jest prawid≈ÇowƒÖ warto≈õciƒÖ.E‚Äû{0}‚Äù nie jest prawid≈ÇowƒÖ warto≈õciƒÖ w≈Ça≈õciwo≈õci ‚Äû{1}‚Äù.<B≈ÇƒÖd ≈Çadowania schematu CSS:
    {0}
    Z modu≈Çu: {1} Wybierz jednƒÖ z "{0}" warto≈õciPrze≈ÇƒÖcz komentarz blokowyPrze≈ÇƒÖcz komentarz wierszaUsu≈Ñ komentarz z zaznaczeniaUElement ::deep jest dozwolony tylko w nazwach plik√≥w ko≈ÑczƒÖcych siƒô na .razor.css!  Œ Ôæ   ë   lSystem.Resources.ResourceReader, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089#System.Resources.RuntimeResourceSet          PADPADP÷ UÙ    Ô   .r e s o u r c e s / b o o t s t r a p . p n g     !-  âPNG

   IHDR         Ûˇa   sRGB ÆŒÈ   gAMA  ±è¸a   	pHYs  ¬  ¬n–u>   tEXtSoftware paint.net 4.0.3åÊóP  ûIDAT8O≠”[HQy»{^ÒÜÜ+n∫Î%W‹uu’m3«vˆ¢´πK÷‚5•;AÊ""®$◊í¢PÑË¢îPAµƒºıAI“KBÅåŸº¥ª˛;Á∏ÎÙ–StﬁÊ0ﬂoŒ˘ﬂpˇey<„—çÁT£Z¯Œ´≠≤P(»ÕE6πMkó›%π£¨EˆÓr…]:ó‹[πm–Ëy4$ú»ós\]Åu‘êmAMŒ‘ÔÿãÜºF4Â7¡V∞Õ;≠h+≤¡≠µ££ÿo©ùeN6¥?ós\y¶≈ØÀ‹ä∏kΩòûƒµëILç˙pcl
æ°	›◊O)q†GÁZósú&≠N,MØGAŒˆè·o+·|ˇ9âç!áäÎ·réS'õDÇÄ"g˙FY¡´ß~¥Ë€q†Ó ÊÔ,∞=ˇ‚KrnA¥vP%’àÍîZP‰tÔ&l˛ÀƒL2πpÚ"€[∏ıP…DcSÄ‹Ñjë †»©ûˆ≤¥∫ÜOñ˘„2øX˘∫ÇV]ÎV∞≠ÖÇd≈Wâπ€´°J2·x˜0ñóæ`ÓÊ}‹%_}˜ˆ=€{˝ƒø’ß⁄™ q1;ﬁäÈ:«^^|úeBÉ5Ê6`˝«Olll¿^Ïå 
ê≠”c´@ë¡Œ°-†$›årx≠ÏÅ@|°çÃ	O^í¢ÙbjåÈ˜nÙk¡`°Pà=”57}¶ú,∂?Ng|CPƒlË¿‰Â¯ÆÃ‡˙’YLOÃ¬wÈ6∫]«ÿuË∞ôHw,*^§Ãî˙ÒÑmïà ëÎDÇ•›—íóÖ3°à9üWFYØàJK4M'«V}Kå“K©1zâ RVúQ"-ñTâ56IìV+È≤,´’y¸¢P!(?”ø/é˚V’òTÀú«˙    IENDÆB`Ç¡D“:∫Tú‘⁄xSÃâõÃÙ∂Œ$”Ñºj|ÕÅ[ç>ÕÎ πîø±Œﬂj_¡$]Õia'©üzCjiÓ}‘§Î:F`O=±¶¸0⁄Á<,y· ºáÿ°°5b2vtB÷"≈ì≥§1j*no˛≤‚¬yw—c1MBSJB         v4.0.30319     l   p   #~  ‹   Ï   #Strings    »     #US –     #GUID   ‡  §   #Blob               ˙%3                 µ                 Ä             
 <        ?        ~      <Module> Microsoft.WebTools.Languages.Css.Editor.resources pl Microsoft.WebTools.Languages.Css.Editor.Resources.pl.resources Microsoft.WebTools.Languages.Css.Editor.g.pl.resources Microsoft.WebTools.Languages.Css.Editor.resources.dll         Dñü>Ñ¥FóeSû™Ú˚ Ä† $  Ä  î      $  RSA1     —˙WƒÆŸ£.Ñ™Æ˝ÈË˝jÏèá˚vlÉLôí≤;ÁöŸ’‹¡›ö“6!êr<˘Äïƒ·wè∆wO)Ë2íÍÏ‰Ë!¿•ÔËÒd\Lì¡´ô(]b,™e,˙÷=t]o-ÂÒ~^Øƒñ=&äCe m¿ì4MZ“ì ®2          æ2                          ∞2        _CorDllMain mscoree.dll     ˇ%  @                                                                                                                                                                                                                                                                                                                                 Ä                  0  Ä               	  H   X@  å          å4   V S _ V E R S I O N _ I N F O     ΩÔ˛     √x    x                         D    V a r F i l e I n f o     $    T r a n s l a t i o n     ∞Ï   S t r i n g F i l e I n f o   »   0 4 1 5 0 4 b 0   L   C o m p a n y N a m e     M i c r o s o f t   C o r p o r a t i o n   ,   F i l e D e s c r i p t i o n         <   F i l e V e r s i o n     1 7 . 3 . 3 7 6 . 3 0 1 1   å 6  I n t e r n a l N a m e   M i c r o s o f t . W e b T o o l s . L a n g u a g e s . C s s . E d i t o r . r e s o u r c e s . d l l   é 5  L e g a l C o p y r i g h t   ?   M i c r o s o f t   C o r p o r a t i o n .   W s z e l k i e   p r a w a   z a s t r z e |o n e .     î 6  O r i g i n a l F i l e n a m e   M i c r o s o f t . W e b T o o l s . L a n g u a g e s . C s s . E d i t o r . r e s o u r c e s . d l l   L   P r o d u c t V e r s i o n   1 7 . 3 . 3 7 6 + 0 b c 3 1 5 4 b 7 4                                0     –2                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      ®'    0Ç'ö	*ÜHÜ˜†Ç'ã0Ç'á10	`ÜHe 0\
+Ç7†N0L0
+Ç70	 †¢Ä 010	`ÜHe  ã2Û°=|F3≤dO(Çﬁ¯Ènh¯Èˇ˚B
Ï4&®/†ÇÅ0Çˇ0ÇÁ†3  Ãéµñ¶Ω—…N    Ã0	*ÜHÜ˜ 0~10	UUS10U
Washington10URedmond10U
Microsoft Corporation1(0&UMicrosoft Code Signing PCA 20110220512204601Z230511204601Z0t10	UUS10U
Washington10URedmond10U
Microsoft Corporation10UMicrosoft Corporation0Ç"0	*ÜHÜ˜ Ç 0Ç
Ç ¢M±ÏÎ∆¿ÛnwﬁÕÕ«O”8tô¯VêÔÎ¬®n4…µ@πX" ◊˝hm≥B’ä6éæŸ}à«ÆJ¿WπúÑãJP úáπ;öøcB#—l»≈öUßvMÓ+‘Hú‹uáQ¯¢61t1 ÉzöÏ0≤R¨,G⁄πI•ÓV¿œ¶Á”eﬁ2ßbrã-¸·ó]"e}_Ô†ëäË(s“:Ñqv0$–af–·ı‡Ã®`Œ>3y¶÷Å˚ædê¢π(Ç˜4EVÙ«pÌÀó˝ﬁ„ë.˙…ˇ«°¡≤YV˚Pa…ù]ràm¯ôÕôl ƒøÄs3ƒG(cT5&€-âç˛ª{•À· £Ç~0Çz0U%0
+Ç7L+0Uà∏Gç2ñÃäï"ü¨3jŒ}u≠Ù0PUI0G§E0C1)0'U Microsoft Operations Puerto Rico10U230012+4705290U#0ÄHndÂP”Ç™77"µm® uï0TUM0K0I†G†EÜChttp://www.microsoft.com/pkiops/crl/MicCodSigPCA2011_2011-07-08.crl0a+U0S0Q+0ÜEhttp://www.microsoft.com/pkiops/certs/MicCodSigPCA2011_2011-07-08.crt0Uˇ0 0	*ÜHÜ˜ Ç x∞‡KùÃLÅÿª∆€^≥∫…Q¢_»≈û]¢Ó‹◊<<9≈sWübØ≈‹¡±˝®∞5∑,'cÏçY3˘%Aaç!‰wô'™s¨øUÍ\˚ŸxÑÉUb⁄‹xã]#(Ëwødë&ºØv0ÔıΩSÖ§‰Ø—È»˘ä®®∑±ï]f•ÁÚÔoE)•ìÌÁAwr8˙]1è,uœçdm'8Ãçvl„Sî;Gq√⁄Œ8¬Ï©›ŒˆG«˝Xø'–‘ˇ„N/~Ÿ◊*'ÃfD∏ßkﬁÇæÍ@ú≥%¨Å/˜yÅ∞‘W∏0È‚üTaÇµµ¨sŒî∆C¶[å›ä*Ω≥ΩÓÏ06^ˆ◊Úñâœ¬=ÔZ◊Ú°∞Ëπ+[˜‘Ç^%'øiF∆u@œë∫¿µo<I`¢>^?tD´cu˘√ªNui!üH√RÆAÈ˝ÿ˜FBr‰tK	T≈Ö%Ÿ;¯√:QÕ≤lo§UÛØı™ı°ï›≠DiÃöy‹Àh?ßú'@ØÉ´ñ≥yZ§Â†sæ≈˝‰›"—”•S-Tı∏´çWˆ≈ôCıü™Ê∑Mv¥ÃèÒ◊15(),kU∆çÍøÌwp+§hÄ/∑íÔí»Yê6H?ˇÙzª6uûaÛ‚Åb√”vüv€ı∂êZÂè≥¥ØXOŸ¯+8®Ç0Çz0Çb†
aê“     0	*ÜHÜ˜ 0Åà10	UUS10U
Washington10URedmond10U
Microsoft Corporation1200U)Microsoft Root Certificate Authority 20110110708205909Z260708210909Z0~10	UUS10U
Washington10URedmond10U
Microsoft Corporation1(0&UMicrosoft Code Signing PCA 20110Ç"0	*ÜHÜ˜ Ç 0Ç
Ç ´˙r.≠ÿn™ÇM4∫Ú∂X!üB*kÈZP™∏8I∫√›7k∆ÿ8¬ô∞»9’1B”âydá~î`$lØûIúÈh^“ﬂõS≤
,√ØŸ©+Æz	Ø◊ñY `ÈfvË2R&/Á´Pœ≥D∑]ÿƒ.u´hÛÀmÛ:\°ÙF∫‡8d¨nd5x¶†c-”@ì¯„ﬁ’\y•I)Áæ†wæî=Ô˚„+ZMV(¢zr‡:∑I^ÿÌÌCëÉŸ{≤{ÜŸ>±å]ËâOÑÚ°/Y‰ê;-Æ3X≈∑>˛2”≥=±≤Øí8~“ùÄ,ıNVë!5%√9ndS∫ú≠#ÑÀÙ∫Üç˜_–Røåîáº¿!t%_(∂Ã'(8%ò9J6œ|±íÆ#ß©fÏaj·(Iù_à‚%]”!K>RƒµW?$—z[/’#„p]QFw≥¯ ·º¨Ç_€¿≥Ω‘UKÁ9°È#Iº∏D|E‰¡√rz‡rÁ$ﬂøFô≈Ô¬W€ÉçÏMI0ß´éﬂÏ[üØ¸›∞f‚¡óÅ{Ì÷ÌKÁI)ß(¶ß}gÄÊäbx_≤/Ñ◊Wú\øw((ÒÌm√(è,è@7O¡·ÖDâƒ	L≈‘•C/tï˜n¯x X,]`ïö>O3Ñ⁄∞àﬁûNÙñ∞ºF†lò“‡÷àå £ÇÌ0ÇÈ0	+Ç7 0UHndÂP”Ç™77"µm® uï0	+Ç7
 S u b C A0UÜ0Uˇ0ˇ0U#0Är-:1êCπN·Íß«1—#â40ZUS0Q0O†M†KÜIhttp://crl.microsoft.com/pki/crl/products/MicRooCerAut2011_2011_03_22.crl0^+R0P0N+0ÜBhttp://www.microsoft.com/pki/certs/MicRooCerAut2011_2011_03_22.crt0ÅüU Åó0Åî0Åë	+Ç7.0ÅÉ0?+3http://www.microsoft.com/pkiops/docs/primarycps.htm0@+042  L e g a l _ p o l i c y _ s t a t e m e n t . 0	*ÜHÜ˜ Ç gÚÜ•ò‡Ty.”ÿtg"õñ·cíôBñ}“yê¡e_.,>¯√r—mÉ˛æ?Ë
 ;øG©£Ûi€cø"5•ó]eÑê}ãFPUÿí|“KÛ<BãR–∞˝k„>.)õÊ=•‘µwî9‚Èd…D=xz#Û}¶êtÉçÙÀ&F*¬äª§©õÌh˙h.ï†*?*kXIc	inZòñ‰ÉÙ¿èÛF+ﬁ¸;–Ω5Ôn%ÆÂØ'Ì–›ÛØô(óòM=Úâ÷√2‚≈-Œ[û¥I9
∆
¬∆≠ÆÂ≤Ÿ€àQEX82q'±Ù'¯ﬁ,: iò≤Yâhnoß∑t√@¶*(>Ç?Mf¿≥Mı·èo}EßvÂ@*e£√]RbÜ√c6óÜﬂ⁄Û¯Ú°ö'·Õ•ó–Ó]cA„[úá>w—±uæaaµ‹∆æﬂA«(Óﬁe/Ïóˆ°\ñÿ ÷°FΩYÛó•	KHôÄ– )≈±õ•?Ew5∆“¢¢üzz"˙Hï´˚G#Äıû¯øk∑Kó‚ÎuxÏÍ7ôyKˇ÷≥#huÊØ˙¸ãÎÄÍi;Ø¸0ÌLéﬂﬂumcë=—ùVNOøÄW"°x2!zÔA
±?˚®Ã§]¡°àõWqVNHE¿B…õv[
ÄHk˝yü¡Ωmmj…RszPÕ1Çå0Çà0Åï0~10	UUS10U
Washington10URedmond10U
Microsoft Corporation1(0&UMicrosoft Code Signing PCA 20113  Ãéµñ¶Ω—…N    Ã0	`ÜHe †ÅÆ0	*ÜHÜ˜	1
+Ç70
+Ç710
+Ç70/	*ÜHÜ˜	1" 1âƒƒQ[ª±TwàcÕrb•Wê®ò◊üµ∫œ:0B
+Ç71402†Ä M i c r o s o f t°Ähttp://www.microsoft.com0	*ÜHÜ˜ Ç N$™•Lg´Ë)Q»‡6$j∏¨anB=ü…Û)∑Êcº«V\¿©£*·:â˜:≈I≥=ı"Íªµó¥Ä‰jÕ∆g¬`ïsÀπ˘‚ÙE‹˘π@©óàùFè.»¿t??—€Y5°∂=‹ü7çrf’1ﬂ!††ßWhµ£é/∑®ºJkìÿÁ1¯≈Q˛DÑ)“]»Ó=€”ÂQΩ‹6Sgä9–¨7ÈŒ„©æÃK0Á›ªíı´™oìe˘\˜!là+ˇﬂ†™rü¬gøΩ%Îﬂ¥"x-ƒ‚Û¶D’Îñíù3oÀÌ∂=ä.ÖüVî;„
{∫ΩF(mñ}R°Ç0Ç
+Ç71Ç0Ç˛	*ÜHÜ˜†ÇÔ0ÇÎ10	`ÜHe 0ÇY*ÜHÜ˜	†ÇHÇD0Ç@
+ÑY
010	`ÜHe  ˘ ÅÅìæ≥‚w'Å[˝—&xXÏ¿Ù$Sõªç ã∏bﬁç!K˘20220818180201.332Z0ÄÙ†Åÿ§Å’0Å“10	UUS10U
Washington10URedmond10U
Microsoft Corporation1-0+U$Microsoft Ireland Operations Limited1&0$UThales TSS ESN:179E-4BB0-82461%0#UMicrosoft Time-Stamp Service†Çe0Ç0Ç¸†3  ä>8ç“˙Ë   ä0	*ÜHÜ˜ 0|10	UUS10U
Washington10URedmond10U
Microsoft Corporation1&0$UMicrosoft Time-Stamp PCA 20100211028192742Z230126192742Z0Å“10	UUS10U
Washington10URedmond10U
Microsoft Corporation1-0+U$Microsoft Ireland Operations Limited1&0$UThales TSS ESN:179E-4BB0-82461%0#UMicrosoft Time-Stamp Service0Ç"0	*ÜHÜ˜ Ç 0Ç
Ç ∑ˇÆ∑°É ΩËÖ®wA®©?%s¶Öç8≥œJª&∏_y˛+^æVpb∞©™zÓÑêÑ“éGúM zA8í+›''e.Ú´ÉÀù¥∫Ï≤≤ç
∞G0–MDTﬂK]O¿{#˝ÊNÍùÿHªÛ©OÑ»bTà¿Âôê"ˆ9ô"µHø
 '?T@EùXÄQ…‚@CâN©•ª¯<è{˙Ù!¶ C+Ô7Å¨öâ∑Ä‘∆ÀxéâÓè≤]7rˆàW %¯;DdxYo˝$(¢l˜&€w⁄(KıŒ“ÙçˆÉT£ç26Ö:	ÕÂ9à*∞ö~™≤gæÖ™˝:¬-3^5ÏY8$ñ5∂›{P÷Ò˛Ù≥p›»œ'¡F	L5pò,ŒÜÃ ◊Ò=OˇÏˇ§’œ8∂j"d6A®+˝+À˙l;=ƒ†6P€™ìkVƒü˘Èƒ…ór⁄IÔD:†+BTZ ^	Úh‡ÖµÚ"˙7\PñÈ>–‚EØU$Jäïo¡.aﬁ≈qæWã_(
YÑN kJ~@(ö¿r¡d⁄#›DÃŒPVaöãs'@VŸíõP<©£€⁄XGïxÌ˘%˜KZ<ÇÛ›Rô/û›Ó9ëé%eñÂ„dRÒ˙∏I/≤XVõN>—u0LbZz:Ë':ëæ·nz£ÌÜ?E £Ç60Ç20U#⁄Cÿ˝l‘óÆßIGÑ>1êi$0U#0Äüß] ^b]ÉÙÂ“eßS5Èr0_UX0V0T†R†PÜNhttp://www.microsoft.com/pkiops/crl/Microsoft%20Time-Stamp%20PCA%202010(1).crl0l+`0^0\+0ÜPhttp://www.microsoft.com/pkiops/certs/Microsoft%20Time-Stamp%20PCA%202010(1).crt0Uˇ0 0U%0
+0	*ÜHÜ˜ Ç ≈Ù¡∞ı√y_ç_Áæb=Ò}õzÎç|Œ|‹á”≈¸Ÿgo˛g∑ÿø)√MtuL¶Ÿ¥nÀ≤À˙J D$müa•∞ Çò¬ÏÉ$çê‚EbÊl€W˝ÁÎ–Bƒ
˜Ï3¬π_gﬂâÚbÓ⁄ûJ˘(‡¡ÓÒã‡∏˘£P‹pMkƒçí~ò’RÜè
^™™ÕF˚m¬·Õ1`¿è√6è‰Ç]‡˙yîZáN⁄^sÆÿaÆ;˚àÙ„<‹¥ŒdPèÆÕ¸°ˇ"¥3mêå˛{¸f]!aâ“‡cFÜ–e^ú˚DÕ∂ÙM-¨î‚ÓƒzG{9†◊ÕtFÂÜi(∞¥ﬁósÛË4˝+{1∫:˜2£j2Ö$PD;™†ÙBØ¥†ùe"m»åò‘`)ÕQñÿΩ4÷õÄ◊+îXÅ˝∑mPI[ÖËÁ=–qË·8÷6¨ıÏ˙è»¿ìúœp
ìú˜åGObˆ›√0ÃÅª¶…÷…jØÙËR&êû ^œc∆†‚c”yâ⁄èÕßÈˇ>¶«ªIõ·¸›:j I’pÊ¶ïJ[˙…ƒw#ïØ§ı»Xÿ∆kF€ "6vı>Gd	îN@éÉ
ÀØ#Zf=…(Îi rËu#ªU˚˝TÁfÎ¨IBï\πø>Qïô.ü6r‡≥¥ìJ•æê˛s…PRº≥>‡0Çq0ÇY†3   ≈ÁkûõIô     0	*ÜHÜ˜ 0Åà10	UUS10U
Washington10URedmond10U
Microsoft Corporation1200U)Microsoft Root Certificate Authority 20100210930182225Z300930183225Z0|10	UUS10U
Washington10URedmond10U
Microsoft Corporation1&0$UMicrosoft Time-Stamp PCA 20100Ç"0	*ÜHÜ˜ Ç 0Ç
Ç ‰·¶LÁ¥r!y¢À◊$yΩ’Ç”˝Óú“©lNu» 5WˆlJ‡‚Ωπ>`3ˇ\O«f˜ïSqZ‚~JZ˛∏6gÖF#µçœw2¿Ë`}jRÉD∑¶éFkÛ≈vıÜP‹¡D»q\Q17†
8nçÌ◊ÿ&S|9azƒ™˝riØ´¨ˆ6æ5&d⁄ò;∫{3≠Ä[~åùR˛∂Ëb%‹jœ]Ù˛éSœ÷ÏÖVMÔ›ºç§„ëè≤9,QúÈpi 6-pé1»5(Ω„¥á$√‡…è~µTè‹˙Uòmh;öFΩÌ§Æz)7¨ÀÎÉEÁFn 2’¿Ü0\O,‚b≤Õπ‚çà‰ñ¨Jªæq©[g`ﬁ¯íë=˝ œs}AöFuÕƒ_4›â÷˝• }~¸ŸûEﬂ∂r/€}_Ä∫€™~6Ï6Lˆ+n®QËø£—s¶M7tî4ÇÚ∑GÌßËô|?L€Ø^¬Û’ÿs=CN¡39LéºBh.ÍÑQF‚—ΩjZas g¢^◊(v‚3r◊ß ¬˙
◊co…6dã[†¶É!]_0tëîîÿπP˘âaÛ65ÑG€‹—˝≤‘≈kˆ\RQ]€%∫ØPzl≈rÔç˘RƒÖì¿<€7«?x´E∂ıá^⁄èûri∆Æ{∑∑>j‚.≠ £Ç›0ÇŸ0	+Ç7 0#	+Ç7*ßR˛dƒöæÇë<F5)œˇ/Ó0Uüß] ^b]ÉÙÂ“eßS5Èr0\U U0S0Q+Ç7LÉ}0A0?+3http://www.microsoft.com/pkiops/Docs/Repository.htm0U%0
+0	+Ç7
 S u b C A0UÜ0Uˇ0ˇ0U#0Ä’ˆVÀèË¢\bh—=îê[◊Œöƒ0VUO0M0K†I†GÜEhttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z+N0L0J+0Ü>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0	*ÜHÜ˜ Ç ùU}¸*≠·,g1$[·ûrK¸©oÍ\∂>NGdx±ìó=13µ9◊¬q6?⁄dl|–u9mª1‰¬è˚l—°î"ÓÈfg:SM›ò∫∂xÿ6.ú©ÇV ∞æâËi‡∫	Ó{ﬂjoæ)Ànÿ?HuŸﬁmÇım#T‰xSu$Wπ›üÛé=∆Ûhﬂeˆ§V™˜ï∂(U'–$Ω@†ø∂]='‡@ñ8¨˜˘)â√º∞TÖB≥¸ûãâÁjÅ¬ÅBRuä6¬√as.,k{n?,	xÈë≤©[ﬂI£tºÏëÄ“=ÊJ>f;OªÜ˙2ŸñÙèˆëˆŒ∆t˝ˆLro´u0≈4∞zÿP˛
X›@<«TmùctH,±NG-¡qød˘$æsm é	Ω≥WITdŸs◊[DéZëkü§(‹g($∫8Kön˚!TkjEG©Ò∑Æ»Ëâ^Où“–LvµWT	±iD~|°als˛
ªÏAf=i˝À¡AI~~ìæÀ¯;‰∑ø¥Œ>•1QÑºø¡Ç¢{âçp˛Áµ–(âè6⁄∫L˘õˇ
È4¯$5g+‡∏Êåô÷·"Í'B=%îÊtt[j—û>Ì~†13}ºÀÈ{ø8pD—êÒ»´:ä:bŸpcSMçÓÇm•¡qj¥U3X≥°pfÚ°Ç‘0Ç=0Ç °Åÿ§Å’0Å“10	UUS10U
Washington10URedmond10U
Microsoft Corporation1-0+U$Microsoft Ireland Operations Limited1&0$UThales TSS ESN:179E-4BB0-82461%0#UMicrosoft Time-Stamp Service¢#
0+ ÄÛcØSßˇåV™sWƒ°†ÅÉ0ÅÄ§~0|10	UUS10U
Washington10URedmond10U
Microsoft Corporation1&0$UMicrosoft Time-Stamp PCA 20100	*ÜHÜ˜  Ê®ÆW0"20220818202559Z20220819202559Z0t0:
+ÑY
1,0*0
 Ê®ÆW 0 U0 L0
 Ê©ˇ◊ 06
+ÑY
1(0&0
+ÑY
†
0 ° °
0 Ü†0	*ÜHÜ˜ ÅÅ 9#/ﬂÔ≈	&ãç!…CMt7j	RÅCÆzIÚ=·qã Ò][*ºÕ◊Û9JøŸ¥ì^J¬•¨=v*(<|ôEl°>∆c√è≈‰ÎG&ı≈£i}Å1√b &n!∏éæÈ¶¢nû56æ$åÑ:C∂j˛üÃf˘»›51Ç0Ç	0Åì0|10	UUS10U
Washington10URedmond10U
Microsoft Corporation1&0$UMicrosoft Time-Stamp PCA 20103  ä>8ç“˙Ë   ä0	`ÜHe †ÇJ0	*ÜHÜ˜	1*ÜHÜ˜	0/	*ÜHÜ˜	1" PG˜		'eœ¬
˚"ó`ÊZ{ÍÃ¬±¢ílgÖ0Å˙*ÜHÜ˜	/1ÅÍ0ÅÁ0Å‰0ÅΩ ÙΩ‡´uﬂJæ~Ûø0¯1µêÖÑÌ‰8~Äí9MT)Ω0Åò0ÅÄ§~0|10	UUS10U
Washington10URedmond10U
Microsoft Corporation1&0$UMicrosoft Time-Stamp PCA 20103  ä>8ç“˙Ë   ä0" üOBT£ô%Á≈°à±Q¢≠‘È˛f=Syƒ
K…P2Ñ0	*ÜHÜ˜ Ç @ﬂV ‰&•˝GÚƒLï”æ%¡Å)1-"ªÑç¿∆?B´$œÄµïœ±ó”∞U&Väò‰ã ‘ﬁäOÌ’g—'%Ê8Î“È+’~Tc¥ù„É—À8.ë≈/Ó
ªìŸ¥˘†í	UØd≈úlÁ%áÍÀôç‘˛ŒÿÊN∑>ÃŒ0Ω	-œ§∂q,˙$§%ë˙∏Ü!EÓ7ÔŸ=˙a =ŸÂ3º0^á€ì?%€8ŒGÑKéîp>ÃÎ∑*#KöÌøtâ!5!Ù”Î…à~π6»Òô¶6dıGëYM5h@s˚Î´æsÚ˚æÙÜ}˝;‘¸Ÿë9£üæ¯ÀÛ©+~9ø∏xM"ªN¥¥8 ≈‡zÈö∫"ÿw"”›áŸºΩrR‰¶ˇ±ìúflw+`	
Å ü`|H3ù4"Âƒ}gP˝‹ÅZ≠ˇ@tuô8dø¨‡?û@ä*füßé»rH¯\<3¥`áBrÏ#2>√'≠^ÈÒ qK¸O…¨å©{°Ë¬àiX6KeGÓ˙a‡d˛ùâûÖ≤!„U@J{Æ2ïD|?O˙y˚ˆ≠æ\Ì4z1v2˝∫Yì0[”0ŸRûä–¡ÒFs:CI∞kZ+8®“i}GvÊ™úq\≤–(Ô&ßkäáI‚LËäxäG»Çıÿ¡≠                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          import numpy as np
import pytest

from pandas.core.dtypes.common import ensure_platform_int

import pandas as pd
from pandas import (
    Float64Index,
    Index,
    Int64Index,
    RangeIndex,
)
import pandas._testing as tm
from pandas.tests.indexes.common import NumericBase

# aliases to make some tests easier to read
RI = RangeIndex
I64 = Int64Index
F64 = Float64Index
OI = Index


class TestRangeIndex(NumericBase):
    _index_cls = RangeIndex

    @pytest.fixture
    def dtype(self):
        return np.int64

    @pytest.fixture(
        params=["uint64", "float64", "category", "datetime64", "object"],
    )
    def invalid_dtype(self, request):
        return request.param

    @pytest.fixture
    def simple_index(self) -> Index:
        return self._index_cls(start=0, stop=20, step=2)

    @pytest.fixture(
        params=[
            RangeIndex(start=0, stop=20, step=2, name="foo"),
            RangeIndex(start=18, stop=-1, step=-2, name="bar"),
        ],
        ids=["index_inc", "index_dec"],
    )
    def index(self, request):
        return request.param

    def test_constructor_unwraps_index(self, dtype):
        result = self._index_cls(1, 3)
        expected = np.array([1, 2], dtype=dtype)
        tm.assert_numpy_array_equal(result._data, expected)

    def test_can_hold_identifiers(self, simple_index):
        idx = simple_index
        key = idx[0]
        assert idx._can_hold_identifiers_and_holds_name(key) is False

    def test_too_many_names(self, simple_index):
        index = simple_index
        with pytest.raises(ValueError, match="^Length"):
            index.names = ["roger", "harold"]

    @pytest.mark.parametrize(
        "index, start, stop, step",
        [
            (RangeIndex(5), 0, 5, 1),
            (RangeIndex(0, 5), 0, 5, 1),
            (RangeIndex(5, step=2), 0, 5, 2),
            (RangeIndex(1, 5, 2), 1, 5, 2),
        ],
    )
    def test_start_stop_step_attrs(self, index, start, stop, step):
        # GH 25710
        assert index.start == start
        assert index.stop == stop
        assert index.step == step

    @pytest.mark.parametrize("attr_name", ["_start", "_stop", "_step"])
    def test_deprecated_start_stop_step_attrs(self, attr_name, simple_index):
        # GH 26581
        idx = simple_index
        with tm.assert_produces_warning(FutureWarning):
            getattr(idx, attr_name)

    def test_copy(self):
        i = RangeIndex(5, name="Foo")
        i_copy = i.copy()
        assert i_copy is not i
        assert i_copy.identical(i)
        assert i_copy._range == range(0, 5, 1)
        assert i_copy.name == "Foo"

    def test_repr(self):
        i = RangeIndex(5, name="Foo")
        result = repr(i)
        expected = "RangeIndex(start=0, stop=5, step=1, name='Foo')"
        assert result == expected

        result = eval(result)
        tm.assert_index_equal(result, i, exact=True)

        i = RangeIndex(5, 0, -1)
        result = repr(i)
        expected = "RangeIndex(start=5, stop=0, step=-1)"
        assert result == expected

        result = eval(result)
        tm.assert_index_equal(result, i, exact=True)

    def test_insert(self):

        idx = RangeIndex(5, name="Foo")
        result = idx[1:4]

        # test 0th element
        tm.assert_index_equal(idx[0:4], result.insert(0, idx[0]))

        # GH 18295 (test missing)
        expected = Float64Index([0, np.nan, 1, 2, 3, 4])
        for na in [np.nan, None, pd.NA]:
            result = RangeIndex(5).insert(1, na)
            tm.assert_index_equal(result, expected)

        result = RangeIndex(5).insert(1, pd.NaT)
        expected = Index([0, pd.NaT, 1, 2, 3, 4], dtype=object)
        tm.assert_index_equal(result, expected)

    def test_delete(self):

        idx = RangeIndex(5, name="Foo")
        expected = idx[1:].astype(int)
        result = idx.delete(0)
        tm.assert_index_equal(result, expected)
        assert result.name == expected.name

        expected = idx[:-1].astype(int)
        result = idx.delete(-1)
        tm.assert_index_equal(result, expected)
        assert result.name == expected.name

        msg = "index 5 is out of bounds for axis 0 with size 5"
        with pytest.raises((IndexError, ValueError), match=msg):
            # either depending on numpy version
            result = idx.delete(len(idx))

    def test_view(self):
        i = RangeIndex(0, name="Foo")
        i_view = i.view()
        assert i_view.name == "Foo"

        i_view = i.view("i8")
        tm.assert_numpy_array_equal(i.values, i_view)

        i_view = i.view(RangeIndex)
        tm.assert_index_equal(i, i_view)

    def test_dtype(self, simple_index):
        index = simple_index
        assert index.dtype == np.int64

    def test_cache(self):
        # GH 26565, GH26617, GH35432
        # This test checks whether _cache has been set.
        # Calling RangeIndex._cache["_data"] creates an int64 array of the same length
        # as the RangeIndex and stores it in _cache.
        idx = RangeIndex(0, 100, 10)

        assert idx._cache == {}

        repr(idx)
        assert idx._cache == {}

        str(idx)
        assert idx._cache == {}

        idx.get_loc(20)
        assert idx._cache == {}

        90 in idx  # True
        assert idx._cache == {}

        91 in idx  # False
        assert idx._cache == {}

        idx.all()
        assert idx._cache == {}

        idx.any()
        assert idx._cache == {}

        for _ in idx:
            pass
        assert idx._cache == {}

        idx.format()
        assert idx._cache == {}

        df = pd.DataFrame({"a": range(10)}, index=idx)

        str(df)
        assert idx._cache == {}

        df.loc[50]
        assert idx._cache == {}

        with pytest.raises(KeyError, match="51"):
            df.loc[51]
        assert idx._cache == {}

        df.loc[10:50]
        assert idx._cache == {}

        df.iloc[5:10]
        assert idx._cache == {}

        # idx._cache should contain a _data entry after call to idx._data
        idx._data
        assert isinstance(idx._data, np.ndarray)
        assert idx._data is idx._data  # check cached value is reused
        assert len(idx._cache) == 1
        expected = np.arange(0, 100, 10, dtype="int64")
        tm.assert_numpy_array_equal(idx._cache["_data"], expected)

    def test_is_monotonic(self):
        index = RangeIndex(0, 20, 2)
        assert index.is_monotonic is True
        assert index.is_monotonic_increasing is True
        assert index.is_monotonic_decreasing is False
        assert index._is_strictly_monotonic_increasing is True
        assert index._is_strictly_monotonic_decreasing is False

        index = RangeIndex(4, 0, -1)
        assert index.is_monotonic is False
        assert index._is_strictly_monotonic_increasing is False
        assert index.is_monotonic_decreasing is True
        assert index._is_strictly_monotonic_decreasing is True

        index = RangeIndex(1, 2)
        assert index.is_monotonic is True
        assert index.is_monotonic_increasing is True
        assert index.is_monotonic_decreasing is True
        assert index._is_strictly_monotonic_increasing is True
        assert index._is_strictly_monotonic_decreasing is True

        index = RangeIndex(2, 1)
        assert index.is_monotonic is True
        assert index.is_monotonic_increasing is True
        assert index.is_monotonic_decreasing is True
        assert index._is_strictly_monotonic_increasing is True
        assert index._is_strictly_monotonic_decreasing is True

        index = RangeIndex(1, 1)
        assert index.is_monotonic is True
        assert index.is_monotonic_increasing is True
        assert index.is_monotonic_decreasing is True
        assert index._is_strictly_monotonic_increasing is True
        assert index._is_strictly_monotonic_decreasing is True

    def test_equals_range(self):
        equiv_pairs = [
            (RangeIndex(0, 9, 2), RangeIndex(0, 10, 2)),
            (RangeIndex(0), RangeIndex(1, -1, 3)),
            (RangeIndex(1, 2, 3), RangeIndex(1, 3, 4)),
            (RangeIndex(0, -9, -2), RangeIndex(0, -10, -2)),
        ]
        for left, right in equiv_pairs:
            assert left.equals(right)
            assert right.equals(left)

    def test_logical_compat(self, simple_index):
        idx = simple_index
        assert idx.all() == idx.values.all()
        assert idx.any() == idx.values.any()

    def test_identical(self, simple_index):
        index = simple_index
        i = Index(index.copy())
        assert i.identical(index)

        # we don't allow object dtype for RangeIndex
        if isinstance(index, RangeIndex):
            return

        same_values_different_type = Index(i, dtype=object)
        assert not i.identical(same_values_different_type)

        i = index.copy(dtype=object)
        i = i.rename("foo")
        same_values = Index(i, dtype=object)
        assert same_values.identical(index.copy(dtype=object))

        assert not i.identical(index)
        assert Index(same_values, name="foo", dtype=object).identical(i)

        assert not index.copy(dtype=object).identical(index.copy(dtype="int64"))

    def test_nbytes(self):

        # memory savings vs int index
        i = RangeIndex(0, 1000)
        assert i.nbytes < i._int64index.nbytes / 10

        # constant memory usage
        i2 = RangeIndex(0, 10)
        assert i.nbytes == i2.nbytes

    @pytest.mark.parametrize(
        "start,stop,step",
        [
            # can't
            ("foo", "bar", "baz"),
            # shouldn't
            ("0", "1", "2"),
        ],
    )
    def test_cant_or_shouldnt_cast(self, start, stop, step):
        msg = f"Wrong type {type(start)} for value {start}"
        with pytest.raises(TypeError, match=msg):
            RangeIndex(start, stop, step)

    def test_view_index(self, simple_index):
        index = simple_index
        index.view(Index)

    def test_prevent_casting(self, simple_index):
        index = simple_index
        result = index.astype("O")
        assert result.dtype == np.object_

    def test_repr_roundtrip(self, simple_index):
        index = simple_index
        tm.assert_index_equal(eval(repr(index)), index)

    def test_slice_keep_name(self):
        idx = RangeIndex(1, 2, name="asdf")
        assert idx.name == idx[1:].name

    def test_has_duplicates(self, index):
        assert index.is_unique
        assert not index.has_duplicates

    def test_extended_gcd(self, simple_index):
        index = simple_index
        result = index._extended_gcd(6, 10)
        assert result[0] == result[1] * 6 + result[2] * 10
        assert 2 == result[0]

        result = index._extended_gcd(10, 6)
        assert 2 == result[1] * 10 + result[2] * 6
        assert 2 == result[0]

    def test_min_fitting_element(self):
        result = RangeIndex(0, 20, 2)._min_fitting_element(1)
        assert 2 == result

        result = RangeIndex(1, 6)._min_fitting_element(1)
        assert 1 == result

        result = RangeIndex(18, -2, -2)._min_fitting_element(1)
        assert 2 == result

        result = RangeIndex(5, 0, -1)._min_fitting_element(1)
        assert 1 == result

        big_num = 500000000000000000000000

        result = RangeIndex(5, big_num * 2, 1)._min_fitting_element(big_num)
        assert big_num == result

    def test_pickle_compat_construction(self):
        # RangeIndex() is a valid constructor
        pass

    def test_slice_specialised(self, simple_index):
        index = simple_index
        index.name = "foo"

        # scalar indexing
        res = index[1]
        expected = 2
        assert res == expected

        res = index[-1]
        expected = 18
        assert res == expected

        # slicing
        # slice value completion
        index_slice = index[:]
        expected = index
        tm.assert_index_equal(index_slice, expected)

        # positive slice values
        index_slice = index[7:10:2]
        expected = Index(np.array([14, 18]), name="foo")
        tm.assert_index_equal(index_slice, expected)

        # negative slice values
        index_slice = index[-1:-5:-2]
        expected = Index(np.array([18, 14]), name="foo")
        tm.assert_index_equal(index_slice, expected)

        # stop overshoot
        index_slice = index[2:100:4]
        expected = Index(np.array([4, 12]), name="foo")
        tm.assert_index_equal(index_slice, expected)

        # reverse
        index_slice = index[::-1]
        expected = Index(index.values[::-1], name="foo")
        tm.assert_index_equal(index_slice, expected)

        index_slice = index[-8::-1]
        expected = Index(np.array([4, 2, 0]), name="foo")
        tm.assert_index_equal(index_slice, expected)

        index_slice = index[-40::-1]
        expected = Index(np.array([], dtype=np.int64), name="foo")
        tm.assert_index_equal(index_slice, expected)

        index_slice = index[40::-1]
        expected = Index(index.values[40::-1], name="foo")
        tm.assert_index_equal(index_slice, expected)

        index_slice = index[10::-1]
        expected = Index(index.values[::-1], name="foo")
        tm.assert_index_equal(index_slice, expected)

    @pytest.mark.parametrize("step", set(range(-5, 6)) - {0})
    def test_len_specialised(self, step):
        # make sure that our len is the same as np.arange calc
        start, stop = (0, 5) if step > 0 else (5, 0)

        arr = np.arange(start, stop, step)
        index = RangeIndex(start, stop, step)
        assert len(index) == len(arr)

        index = RangeIndex(stop, start, step)
        assert len(index) == 0

    @pytest.fixture(
        params=[
            ([RI(1, 12, 5)], RI(1, 12, 5)),
            ([RI(0, 6, 4)], RI(0, 6, 4)),
            ([RI(1, 3), RI(3, 7)], RI(1, 7)),
            ([RI(1, 5, 2), RI(5, 6)], RI(1, 6, 2)),
            ([RI(1, 3, 2), RI(4, 7, 3)], RI(1, 7, 3)),
            ([RI(-4, 3, 2), RI(4, 7, 2)], RI(-4, 7, 2)),
            ([RI(-4, -8), RI(-8, -12)], RI(0, 0)),
            ([RI(-4, -8), RI(3, -4)], RI(0, 0)),
            ([RI(-4, -8), RI(3, 5)], RI(3, 5)),
            ([RI(-4, -2), RI(3, 5)], I64([-4, -3, 3, 4])),
            ([RI(-2), RI(3, 5)], RI(3, 5)),
            ([RI(2), RI(2)], I64([0, 1, 0, 1])),
            ([RI(2), RI(2, 5), RI(5, 8, 4)], RI(0, 6)),
            ([RI(2), RI(3, 5), RI(5, 8, 4)], I64([0, 1, 3, 4, 5])),
            ([RI(-2, 2), RI(2, 5), RI(5, 8, 4)], RI(-2, 6)),
            ([RI(3), I64([-1, 3, 15])], I64([0, 1, 2, -1, 3, 15])),
            ([RI(3), F64([-1, 3.1, 15.0])], F64([0, 1, 2, -1, 3.1, 15.0])),
            ([RI(3), OI(["a", None, 14])], OI([0, 1, 2, "a", None, 14])),
            ([RI(3, 1), OI(["a", None, 14])], OI(["a", None, 14])),
        ]
    )
    def appends(self, request):
        """Inputs and expected outputs for RangeIndex.append test"""
        return request.param

    def test_append(self, appends):
        # GH16212

        indices, expected = appends

        result = indices[0].append(indices[1:])
        tm.assert_index_equal(result, expected, exact=True)

        if len(indices) == 2:
            # Append single item rather than list
            result2 = indices[0].append(indices[1])
            tm.assert_index_equal(result2, expected, exact=True)

    def test_engineless_lookup(self):
        # GH 16685
        # Standard lookup on RangeIndex should not require the engine to be
        # created
        idx = RangeIndex(2, 10, 3)

        assert idx.get_loc(5) == 1
        tm.assert_numpy_array_equal(
            idx.get_indexer([2, 8]), ensure_platform_int(np.array([0, 2]))
        )
        with pytest.raises(KeyError, match="3"):
            idx.get_loc(3)

        assert "_engine" not in idx._cache

        # Different types of scalars can be excluded immediately, no need to
        #  use the _engine
        with pytest.raises(KeyError, match="'a'"):
            idx.get_loc("a")

        assert "_engine" not in idx._cache

    def test_format_empty(self):
        # GH35712
        empty_idx = self._index_cls(0)
        assert empty_idx.format() == []
        assert empty_idx.format(name=True) == [""]

    @pytest.mark.parametrize(
        "RI",
        [
            RangeIndex(0, -1, -1),
            RangeIndex(0, 1, 1),
            RangeIndex(1, 3, 2),
            RangeIndex(0, -1, -2),
            RangeIndex(-3, -5, -2),
        ],
    )
    def test_append_len_one(self, RI):
        # GH39401
        result = RI.append([])
        tm.assert_index_equal(result, RI, exact=True)

    @pytest.mark.parametrize("base", [RangeIndex(0, 2), Index([0, 1])])
    def test_isin_range(self, base):
        # GH#41151
        values = RangeIndex(0, 1)
        result = base.isin(values)
        expected = np.array([True, False])
        tm.assert_numpy_array_equal(result, expected)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  import os
from os.path import join
import sys

import numpy as np
from numpy.testing import (assert_equal, assert_allclose, assert_array_equal,
                           assert_raises)
import pytest

from numpy.random import (
    Generator, MT19937, PCG64, PCG64DXSM, Philox, RandomState, SeedSequence,
    SFC64, default_rng
)
from numpy.random._common import interface

try:
    import cffi  # noqa: F401

    MISSING_CFFI = False
except ImportError:
    MISSING_CFFI = True

try:
    import ctypes  # noqa: F401

    MISSING_CTYPES = False
except ImportError:
    MISSING_CTYPES = False

if sys.flags.optimize > 1:
    # no docstrings present to inspect when PYTHONOPTIMIZE/Py_OptimizeFlag > 1
    # cffi cannot succeed
    MISSING_CFFI = True


pwd = os.path.dirname(os.path.abspath(__file__))


def assert_state_equal(actual, target):
    for key in actual:
        if isinstance(actual[key], dict):
            assert_state_equal(actual[key], target[key])
        elif isinstance(actual[key], np.ndarray):
            assert_array_equal(actual[key], target[key])
        else:
            assert actual[key] == target[key]


def uint32_to_float32(u):
    return ((u >> np.uint32(8)) * (1.0 / 2**24)).astype(np.float32)


def uniform32_from_uint64(x):
    x = np.uint64(x)
    upper = np.array(x >> np.uint64(32), dtype=np.uint32)
    lower = np.uint64(0xffffffff)
    lower = np.array(x & lower, dtype=np.uint32)
    joined = np.column_stack([lower, upper]).ravel()
    return uint32_to_float32(joined)


def uniform32_from_uint53(x):
    x = np.uint64(x) >> np.uint64(16)
    x = np.uint32(x & np.uint64(0xffffffff))
    return uint32_to_float32(x)


def uniform32_from_uint32(x):
    return uint32_to_float32(x)


def uniform32_from_uint(x, bits):
    if bits == 64:
        return uniform32_from_uint64(x)
    elif bits == 53:
        return uniform32_from_uint53(x)
    elif bits == 32:
        return uniform32_from_uint32(x)
    else:
        raise NotImplementedError


def uniform_from_uint(x, bits):
    if bits in (64, 63, 53):
        return uniform_from_uint64(x)
    elif bits == 32:
        return uniform_from_uint32(x)


def uniform_from_uint64(x):
    return (x >> np.uint64(11)) * (1.0 / 9007199254740992.0)


def uniform_from_uint32(x):
    out = np.empty(len(x) // 2)
    for i in range(0, len(x), 2):
        a = x[i] >> 5
        b = x[i + 1] >> 6
        out[i // 2] = (a * 67108864.0 + b) / 9007199254740992.0
    return out


def uniform_from_dsfmt(x):
    return x.view(np.double) - 1.0


def gauss_from_uint(x, n, bits):
    if bits in (64, 63):
        doubles = uniform_from_uint64(x)
    elif bits == 32:
        doubles = uniform_from_uint32(x)
    else:  # bits == 'dsfmt'
        doubles = uniform_from_dsfmt(x)
    gauss = []
    loc = 0
    x1 = x2 = 0.0
    while len(gauss) < n:
        r2 = 2
        while r2 >= 1.0 or r2 == 0.0:
            x1 = 2.0 * doubles[loc] - 1.0
            x2 = 2.0 * doubles[loc + 1] - 1.0
            r2 = x1 * x1 + x2 * x2
            loc += 2

        f = np.sqrt(-2.0 * np.log(r2) / r2)
        gauss.append(f * x2)
        gauss.append(f * x1)

    return gauss[:n]


def test_seedsequence():
    from numpy.random.bit_generator import (ISeedSequence,
                                            ISpawnableSeedSequence,
                                            SeedlessSeedSequence)

    s1 = SeedSequence(range(10), spawn_key=(1, 2), pool_size=6)
    s1.spawn(10)
    s2 = SeedSequence(**s1.state)
    assert_equal(s1.state, s2.state)
    assert_equal(s1.n_children_spawned, s2.n_children_spawned)

    # The interfaces cannot be instantiated themselves.
    assert_raises(TypeError, ISeedSequence)
    assert_raises(TypeError, ISpawnableSeedSequence)
    dummy = SeedlessSeedSequence()
    assert_raises(NotImplementedError, dummy.generate_state, 10)
    assert len(dummy.spawn(10)) == 10


class Base:
    dtype = np.uint64
    data2 = data1 = {}

    @classmethod
    def setup_class(cls):
        cls.bit_generator = PCG64
        cls.bits = 64
        cls.dtype = np.uint64
        cls.seed_error_type = TypeError
        cls.invalid_init_types = []
        cls.invalid_init_values = []

    @classmethod
    def _read_csv(cls, filename):
        with open(filename) as csv:
            seed = csv.readline()
            seed = seed.split(',')
            seed = [int(s.strip(), 0) for s in seed[1:]]
            data = []
            for line in csv:
                data.append(int(line.split(',')[-1].strip(), 0))
            return {'seed': seed, 'data': np.array(data, dtype=cls.dtype)}

    def test_raw(self):
        bit_generator = self.bit_generator(*self.data1['seed'])
        uints = bit_generator.random_raw(1000)
        assert_equal(uints, self.data1['data'])

        bit_generator = self.bit_generator(*self.data1['seed'])
        uints = bit_generator.random_raw()
        assert_equal(uints, self.data1['data'][0])

        bit_generator = self.bit_generator(*self.data2['seed'])
        uints = bit_generator.random_raw(1000)
        assert_equal(uints, self.data2['data'])

    def test_random_raw(self):
        bit_generator = self.bit_generator(*self.data1['seed'])
        uints = bit_generator.random_raw(output=False)
        assert uints is None
        uints = bit_generator.random_raw(1000, output=False)
        assert uints is None

    def test_gauss_inv(self):
        n = 25
        rs = RandomState(self.bit_generator(*self.data1['seed']))
        gauss = rs.standard_normal(n)
        assert_allclose(gauss,
                        gauss_from_uint(self.data1['data'], n, self.bits))

        rs = RandomState(self.bit_generator(*self.data2['seed']))
        gauss = rs.standard_normal(25)
        assert_allclose(gauss,
                        gauss_from_uint(self.data2['data'], n, self.bits))

    def test_uniform_double(self):
        rs = Generator(self.bit_generator(*self.data1['seed']))
        vals = uniform_from_uint(self.data1['data'], self.bits)
        uniforms = rs.random(len(vals))
        assert_allclose(uniforms, vals)
        assert_equal(uniforms.dtype, np.float64)

        rs = Generator(self.bit_generator(*self.data2['seed']))
        vals = uniform_from_uint(self.data2['data'], self.bits)
        uniforms = rs.random(len(vals))
        assert_allclose(uniforms, vals)
        assert_equal(uniforms.dtype, np.float64)

    def test_uniform_float(self):
        rs = Generator(self.bit_generator(*self.data1['seed']))
        vals = uniform32_from_uint(self.data1['data'], self.bits)
        uniforms = rs.random(len(vals), dtype=np.float32)
        assert_allclose(uniforms, vals)
        assert_equal(uniforms.dtype, np.float32)

        rs = Generator(self.bit_generator(*self.data2['seed']))
        vals = uniform32_from_uint(self.data2['data'], self.bits)
        uniforms = rs.random(len(vals), dtype=np.float32)
        assert_allclose(uniforms, vals)
        assert_equal(uniforms.dtype, np.float32)

    def test_repr(self):
        rs = Generator(self.bit_generator(*self.data1['seed']))
        assert 'Generator' in repr(rs)
        assert f'{id(rs):#x}'.upper().replace('X', 'x') in repr(rs)

    def test_str(self):
        rs = Generator(self.bit_generator(*self.data1['seed']))
        assert 'Generator' in str(rs)
        assert str(self.bit_generator.__name__) in str(rs)
        assert f'{id(rs):#x}'.upper().replace('X', 'x') not in str(rs)

    def test_pickle(self):
        import pickle

        bit_generator = self.bit_generator(*self.data1['seed'])
        state = bit_generator.state
        bitgen_pkl = pickle.dumps(bit_generator)
        reloaded = pickle.loads(bitgen_pkl)
        reloaded_state = reloaded.state
        assert_array_equal(Generator(bit_generator).standard_normal(1000),
                           Generator(reloaded).standard_normal(1000))
        assert bit_generator is not reloaded
        assert_state_equal(reloaded_state, state)

        ss = SeedSequence(100)
        aa = pickle.loads(pickle.dumps(ss))
        assert_equal(ss.state, aa.state)

    def test_invalid_state_type(self):
        bit_generator = self.bit_generator(*self.data1['seed'])
        with pytest.raises(TypeError):
            bit_generator.state = {'1'}

    def test_invalid_state_value(self):
        bit_generator = self.bit_generator(*self.data1['seed'])
        state = bit_generator.state
        state['bit_generator'] = 'otherBitGenerator'
        with pytest.raises(ValueError):
            bit_generator.state = state

    def test_invalid_init_type(self):
        bit_generator = self.bit_generator
        for st in self.invalid_init_types:
            with pytest.raises(TypeError):
                bit_generator(*st)

    def test_invalid_init_values(self):
        bit_generator = self.bit_generator
        for st in self.invalid_init_values:
            with pytest.raises((ValueError, OverflowError)):
                bit_generator(*st)

    def test_benchmark(self):
        bit_generator = self.bit_generator(*self.data1['seed'])
        bit_generator._benchmark(1)
        bit_generator._benchmark(1, 'double')
        with pytest.raises(ValueError):
            bit_generator._benchmark(1, 'int32')

    @pytest.mark.skipif(MISSING_CFFI, reason='cffi not available')
    def test_cffi(self):
        bit_generator = self.bit_generator(*self.data1['seed'])
        cffi_interface = bit_generator.cffi
        assert isinstance(cffi_interface, interface)
        other_cffi_interface = bit_generator.cffi
        assert other_cffi_interface is cffi_interface

    @pytest.mark.skipif(MISSING_CTYPES, reason='ctypes not available')
    def test_ctypes(self):
        bit_generator = self.bit_generator(*self.data1['seed'])
        ctypes_interface = bit_generator.ctypes
        assert isinstance(ctypes_interface, interface)
        other_ctypes_interface = bit_generator.ctypes
        assert other_ctypes_interface is ctypes_interface

    def test_getstate(self):
        bit_generator = self.bit_generator(*self.data1['seed'])
        state = bit_generator.state
        alt_state = bit_generator.__getstate__()
        assert_state_equal(state, alt_state)


class TestPhilox(Base):
    @classmethod
    def setup_class(cls):
        cls.bit_generator = Philox
        cls.bits = 64
        cls.dtype = np.uint64
        cls.data1 = cls._read_csv(
            join(pwd, './data/philox-testset-1.csv'))
        cls.data2 = cls._read_csv(
            join(pwd, './data/philox-testset-2.csv'))
        cls.seed_error_type = TypeError
        cls.invalid_init_types = []
        cls.invalid_init_values = [(1, None, 1), (-1,), (None, None, 2 ** 257 + 1)]

    def test_set_key(self):
        bit_generator = self.bit_generator(*self.data1['seed'])
        state = bit_generator.state
        keyed = self.bit_generator(counter=state['state']['counter'],
                                   key=state['state']['key'])
        assert_state_equal(bit_generator.state, keyed.state)


class TestPCG64(Base):
    @classmethod
    def setup_class(cls):
        cls.bit_generator = PCG64
        cls.bits = 64
        cls.dtype = np.uint64
        cls.data1 = cls._read_csv(join(pwd, './data/pcg64-testset-1.csv'))
        cls.data2 = cls._read_csv(join(pwd, './data/pcg64-testset-2.csv'))
        cls.seed_error_type = (ValueError, TypeError)
        cls.invalid_init_types = [(3.2,), ([None],), (1, None)]
        cls.invalid_init_values = [(-1,)]

    def test_advance_symmetry(self):
        rs = Generator(self.bit_generator(*self.data1['seed']))
        state = rs.bit_generator.state
        step = -0x9e3779b97f4a7c150000000000000000
        rs.bit_generator.advance(step)
        val_neg = rs.integers(10)
        rs.bit_generator.state = state
        rs.bit_generator.advance(2**128 + step)
        val_pos = rs.integers(10)
        rs.bit_generator.state = state
        rs.bit_generator.advance(10 * 2**128 + step)
        val_big = rs.integers(10)
        assert val_neg == val_pos
        assert val_big == val_pos

    def test_advange_large(self):
        rs = Generator(self.bit_generator(38219308213743))
        pcg = rs.bit_generator
        state = pcg.state["state"]
        initial_state = 287608843259529770491897792873167516365
        assert state["state"] == initial_state
        pcg.advance(sum(2**i for i in (96, 64, 32, 16, 8, 4, 2, 1)))
        state = pcg.state["state"]
        advanced_state = 135275564607035429730177404003164635391
        assert state["state"] == advanced_state


class TestPCG64DXSM(Base):
    @classmethod
    def setup_class(cls):
        cls.bit_generator = PCG64DXSM
        cls.bits = 64
        cls.dtype = np.uint64
        cls.data1 = cls._read_csv(join(pwd, './data/pcg64dxsm-testset-1.csv'))
        cls.data2 = cls._read_csv(join(pwd, './data/pcg64dxsm-testset-2.csv'))
        cls.seed_error_type = (ValueError, TypeError)
        cls.invalid_init_types = [(3.2,), ([None],), (1, None)]
        cls.invalid_init_values = [(-1,)]

    def test_advance_symmetry(self):
        rs = Generator(self.bit_generator(*self.data1['seed']))
        state = rs.bit_generator.state
        step = -0x9e3779b97f4a7c150000000000000000
        rs.bit_generator.advance(step)
        val_neg = rs.integers(10)
        rs.bit_generator.state = state
        rs.bit_generator.advance(2**128 + step)
        val_pos = rs.integers(10)
        rs.bit_generator.state = state
        rs.bit_generator.advance(10 * 2**128 + step)
        val_big = rs.integers(10)
        assert val_neg == val_pos
        assert val_big == val_pos

    def test_advange_large(self):
        rs = Generator(self.bit_generator(38219308213743))
        pcg = rs.bit_generator
        state = pcg.state
        initial_state = 287608843259529770491897792873167516365
        assert state["state"]["state"] == initial_state
        pcg.advance(sum(2**i for i in (96, 64, 32, 16, 8, 4, 2, 1)))
        state = pcg.state["state"]
        advanced_state = 277778083536782149546677086420637664879
        assert state["state"] == advanced_state


class TestMT19937(Base):
    @classmethod
    def setup_class(cls):
        cls.bit_generator = MT19937
        cls.bits = 32
        cls.dtype = np.uint32
        cls.data1 = cls._read_csv(join(pwd, './data/mt19937-testset-1.csv'))
        cls.data2 = cls._read_csv(join(pwd, './data/mt19937-testset-2.csv'))
        cls.seed_error_type = ValueError
        cls.invalid_init_types = []
        cls.invalid_init_values = [(-1,)]

    def test_seed_float_array(self):
        assert_raises(TypeError, self.bit_generator, np.array([np.pi]))
        assert_raises(TypeError, self.bit_generator, np.array([-np.pi]))
        assert_raises(TypeError, self.bit_generator, np.array([np.pi, -np.pi]))
        assert_raises(TypeError, self.bit_generator, np.array([0, np.pi]))
        assert_raises(TypeError, self.bit_generator, [np.pi])
        assert_raises(TypeError, self.bit_generator, [0, np.pi])

    def test_state_tuple(self):
        rs = Generator(self.bit_generator(*self.data1['seed']))
        bit_generator = rs.bit_generator
        state = bit_generator.state
        desired = rs.integers(2 ** 16)
        tup = (state['bit_generator'], state['state']['key'],
               state['state']['pos'])
        bit_generator.state = tup
        actual = rs.integers(2 ** 16)
        assert_equal(actual, desired)
        tup = tup + (0, 0.0)
        bit_generator.state = tup
        actual = rs.integers(2 ** 16)
        assert_equal(actual, desired)


class TestSFC64(Base):
    @classmethod
    def setup_class(cls):
        cls.bit_generator = SFC64
        cls.bits = 64
        cls.dtype = np.uint64
        cls.data1 = cls._read_csv(
            join(pwd, './data/sfc64-testset-1.csv'))
        cls.data2 = cls._read_csv(
            join(pwd, './data/sfc64-testset-2.csv'))
        cls.seed_error_type = (ValueError, TypeError)
        cls.invalid_init_types = [(3.2,), ([None],), (1, None)]
        cls.invalid_init_values = [(-1,)]


class TestDefaultRNG:
    def test_seed(self):
        for args in [(), (None,), (1234,), ([1234, 5678],)]:
            rg = default_rng(*args)
            assert isinstance(rg.bit_generator, PCG64)

    def test_passthrough(self):
        bg = Philox()
        rg = default_rng(bg)
        assert rg.bit_generator is bg
        rg2 = default_rng(rg)
        assert rg2 is rg
        assert rg2.bit_generator is bg
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     import re

import numpy as np
import pytest

from pandas.core.dtypes.common import is_categorical_dtype

import pandas as pd
from pandas import (
    Categorical,
    CategoricalIndex,
    DataFrame,
    Index,
    Interval,
    Series,
    Timedelta,
    Timestamp,
)
import pandas._testing as tm
from pandas.api.types import CategoricalDtype as CDT


class TestCategoricalIndex:
    def setup_method(self, method):

        self.df = DataFrame(
            {
                "A": np.arange(6, dtype="int64"),
            },
            index=CategoricalIndex(list("aabbca"), dtype=CDT(list("cab")), name="B"),
        )
        self.df2 = DataFrame(
            {
                "A": np.arange(6, dtype="int64"),
            },
            index=CategoricalIndex(list("aabbca"), dtype=CDT(list("cabe")), name="B"),
        )

    def test_loc_scalar(self):
        dtype = CDT(list("cab"))
        result = self.df.loc["a"]
        bidx = Series(list("aaa"), name="B").astype(dtype)
        assert bidx.dtype == dtype

        expected = DataFrame({"A": [0, 1, 5]}, index=Index(bidx))
        tm.assert_frame_equal(result, expected)

        df = self.df.copy()
        df.loc["a"] = 20
        bidx2 = Series(list("aabbca"), name="B").astype(dtype)
        assert bidx2.dtype == dtype
        expected = DataFrame(
            {
                "A": [20, 20, 2, 3, 4, 20],
            },
            index=Index(bidx2),
        )
        tm.assert_frame_equal(df, expected)

        # value not in the categories
        with pytest.raises(KeyError, match=r"^'d'$"):
            df.loc["d"]

        df2 = df.copy()
        expected = df2.copy()
        expected.index = expected.index.astype(object)
        expected.loc["d"] = 10
        df2.loc["d"] = 10
        tm.assert_frame_equal(df2, expected)

    def test_loc_setitem_with_expansion_non_category(self):
        # Setting-with-expansion with a new key "d" that is not among caegories
        df = self.df
        df.loc["a"] = 20

        # Setting a new row on an existing column
        df3 = df.copy()
        df3.loc["d", "A"] = 10
        bidx3 = Index(list("aabbcad"), name="B")
        expected3 = DataFrame(
            {
                "A": [20, 20, 2, 3, 4, 20, 10.0],
            },
            index=Index(bidx3),
        )
        tm.assert_frame_equal(df3, expected3)

        # Settig a new row _and_ new column
        df4 = df.copy()
        df4.loc["d", "C"] = 10
        expected3 = DataFrame(
            {
                "A": [20, 20, 2, 3, 4, 20, np.nan],
                "C": [np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, 10],
            },
            index=Index(bidx3),
        )
        tm.assert_frame_equal(df4, expected3)

    def test_loc_getitem_scalar_non_category(self):
        with pytest.raises(KeyError, match="^1$"):
            self.df.loc[1]

    def test_slicing(self):
        cat = Series(Categorical([1, 2, 3, 4]))
        reverse = cat[::-1]
        exp = np.array([4, 3, 2, 1], dtype=np.int64)
        tm.assert_numpy_array_equal(reverse.__array__(), exp)

        df = DataFrame({"value": (np.arange(100) + 1).astype("int64")})
        df["D"] = pd.cut(df.value, bins=[0, 25, 50, 75, 100])

        expected = Series([11, Interval(0, 25)], index=["value", "D"], name=10)
        result = df.iloc[10]
        tm.assert_series_equal(result, expected)

        expected = DataFrame(
            {"value": np.arange(11, 21).astype("int64")},
            index=np.arange(10, 20).astype("int64"),
        )
        expected["D"] = pd.cut(expected.value, bins=[0, 25, 50, 75, 100])
        result = df.iloc[10:20]
        tm.assert_frame_equal(result, expected)

        expected = Series([9, Interval(0, 25)], index=["value", "D"], name=8)
        result = df.loc[8]
        tm.assert_series_equal(result, expected)

    def test_slicing_and_getting_ops(self):

        # systematically test the slicing operations:
        #  for all slicing ops:
        #   - returning a dataframe
        #   - returning a column
        #   - returning a row
        #   - returning a single value

        cats = Categorical(
            ["a", "c", "b", "c", "c", "c", "c"], categories=["a", "b", "c"]
        )
        idx = Index(["h", "i", "j", "k", "l", "m", "n"])
        values = [1, 2, 3, 4, 5, 6, 7]
        df = DataFrame({"cats": cats, "values": values}, index=idx)

        # the expected values
        cats2 = Categorical(["b", "c"], categories=["a", "b", "c"])
        idx2 = Index(["j", "k"])
        values2 = [3, 4]

        # 2:4,: | "j":"k",:
        exp_df = DataFrame({"cats": cats2, "values": values2}, index=idx2)

        # :,"cats" | :,0
        exp_col = Series(cats, index=idx, name="cats")

        # "j",: | 2,:
        exp_row = Series(["b", 3], index=["cats", "values"], dtype="object", name="j")

        # "j","cats | 2,0
        exp_val = "b"

        # iloc
        # frame
        res_df = df.iloc[2:4, :]
        tm.assert_frame_equal(res_df, exp_df)
        assert is_categorical_dtype(res_df["cats"].dtype)

        # row
        res_row = df.iloc[2, :]
        tm.assert_series_equal(res_row, exp_row)
        assert isinstance(res_row["cats"], str)

        # col
        res_col = df.iloc[:, 0]
        tm.assert_series_equal(res_col, exp_col)
        assert is_categorical_dtype(res_col.dtype)

        # single value
        res_val = df.iloc[2, 0]
        assert res_val == exp_val

        # loc
        # frame
        res_df = df.loc["j":"k", :]
        tm.assert_frame_equal(res_df, exp_df)
        assert is_categorical_dtype(res_df["cats"].dtype)

        # row
        res_row = df.loc["j", :]
        tm.assert_series_equal(res_row, exp_row)
        assert isinstance(res_row["cats"], str)

        # col
        res_col = df.loc[:, "cats"]
        tm.assert_series_equal(res_col, exp_col)
        assert is_categorical_dtype(res_col.dtype)

        # single value
        res_val = df.loc["j", "cats"]
        assert res_val == exp_val

        # single value
        res_val = df.loc["j", df.columns[0]]
        assert res_val == exp_val

        # iat
        res_val = df.iat[2, 0]
        assert res_val == exp_val

        # at
        res_val = df.at["j", "cats"]
        assert res_val == exp_val

        # fancy indexing
        exp_fancy = df.iloc[[2]]

        res_fancy = df[df["cats"] == "b"]
        tm.assert_frame_equal(res_fancy, exp_fancy)
        res_fancy = df[df["values"] == 3]
        tm.assert_frame_equal(res_fancy, exp_fancy)

        # get_value
        res_val = df.at["j", "cats"]
        assert res_val == exp_val

        # i : int, slice, or sequence of integers
        res_row = df.iloc[2]
        tm.assert_series_equal(res_row, exp_row)
        assert isinstance(res_row["cats"], str)

        res_df = df.iloc[slice(2, 4)]
        tm.assert_frame_equal(res_df, exp_df)
        assert is_categorical_dtype(res_df["cats"].dtype)

        res_df = df.iloc[[2, 3]]
        tm.assert_frame_equal(res_df, exp_df)
        assert is_categorical_dtype(res_df["cats"].dtype)

        res_col = df.iloc[:, 0]
        tm.assert_series_equal(res_col, exp_col)
        assert is_categorical_dtype(res_col.dtype)

        res_df = df.iloc[:, slice(0, 2)]
        tm.assert_frame_equal(res_df, df)
        assert is_categorical_dtype(res_df["cats"].dtype)

        res_df = df.iloc[:, [0, 1]]
        tm.assert_frame_equal(res_df, df)
        assert is_categorical_dtype(res_df["cats"].dtype)

    def test_slicing_doc_examples(self):

        # GH 7918
        cats = Categorical(
            ["a", "b", "b", "b", "c", "c", "c"], categories=["a", "b", "c"]
        )
        idx = Index(["h", "i", "j", "k", "l", "m", "n"])
        values = [1, 2, 2, 2, 3, 4, 5]
        df = DataFrame({"cats": cats, "values": values}, index=idx)

        result = df.iloc[2:4, :]
        expected = DataFrame(
            {
                "cats": Categorical(["b", "b"], categories=["a", "b", "c"]),
                "values": [2, 2],
            },
            index=["j", "k"],
        )
        tm.assert_frame_equal(result, expected)

        result = df.iloc[2:4, :].dtypes
        expected = Series(["category", "int64"], ["cats", "values"])
        tm.assert_series_equal(result, expected)

        result = df.loc["h":"j", "cats"]
        expected = Series(
            Categorical(["a", "b", "b"], categories=["a", "b", "c"]),
            index=["h", "i", "j"],
            name="cats",
        )
        tm.assert_series_equal(result, expected)

        result = df.loc["h":"j", df.columns[0:1]]
        expected = DataFrame(
            {"cats": Categorical(["a", "b", "b"], categories=["a", "b", "c"])},
            index=["h", "i", "j"],
        )
        tm.assert_frame_equal(result, expected)

    def test_loc_getitem_listlike_labels(self):
        # list of labels
        result = self.df.loc[["c", "a"]]
        expected = self.df.iloc[[4, 0, 1, 5]]
        tm.assert_frame_equal(result, expected, check_index_type=True)

    def test_loc_getitem_listlike_unused_category(self):
        # GH#37901 a label that is in index.categories but not in index
        # listlike containing an element in the categories but not in the values
        with pytest.raises(KeyError, match=re.escape("['e'] not in index")):
            self.df2.loc[["a", "b", "e"]]

    def test_loc_getitem_label_unused_category(self):
        # element in the categories but not in the values
        with pytest.raises(KeyError, match=r"^'e'$"):
            self.df2.loc["e"]

    def test_loc_getitem_non_category(self):
        # not all labels in the categories
        with pytest.raises(KeyError, match=re.escape("['d'] not in index")):
            self.df2.loc[["a", "d"]]

    def test_loc_setitem_expansion_label_unused_category(self):
        # assigning with a label that is in the categories but not in the index
        df = self.df2.copy()
        df.loc["e"] = 20
        result = df.loc[["a", "b", "e"]]
        exp_index = CategoricalIndex(list("aaabbe"), categories=list("cabe"), name="B")
        expected = DataFrame({"A": [0, 1, 5, 2, 3, 20]}, index=exp_index)
        tm.assert_frame_equal(result, expected)

    def test_loc_listlike_dtypes(self):
        # GH 11586

        # unique categories and codes
        index = CategoricalIndex(["a", "b", "c"])
        df = DataFrame({"A": [1, 2, 3], "B": [4, 5, 6]}, index=index)

        # unique slice
        res = df.loc[["a", "b"]]
        exp_index = CategoricalIndex(["a", "b"], categories=index.categories)
        exp = DataFrame({"A": [1, 2], "B": [4, 5]}, index=exp_index)
        tm.assert_frame_equal(res, exp, check_index_type=True)

        # duplicated slice
        res = df.loc[["a", "a", "b"]]

        exp_index = CategoricalIndex(["a", "a", "b"], categories=index.categories)
        exp = DataFrame({"A": [1, 1, 2], "B": [4, 4, 5]}, index=exp_index)
        tm.assert_frame_equal(res, exp, check_index_type=True)

        with pytest.raises(KeyError, match=re.escape("['x'] not in index")):
            df.loc[["a", "x"]]

    def test_loc_listlike_dtypes_duplicated_categories_and_codes(self):
        # duplicated categories and codes
        index = CategoricalIndex(["a", "b", "a"])
        df = DataFrame({"A": [1, 2, 3], "B": [4, 5, 6]}, index=index)

        # unique slice
        res = df.loc[["a", "b"]]
        exp = DataFrame(
            {"A": [1, 3, 2], "B": [4, 6, 5]}, index=CategoricalIndex(["a", "a", "b"])
        )
        tm.assert_frame_equal(res, exp, check_index_type=True)

        # duplicated slice
        res = df.loc[["a", "a", "b"]]
        exp = DataFrame(
            {"A": [1, 3, 1, 3, 2], "B": [4, 6, 4, 6, 5]},
            index=CategoricalIndex(["a", "a", "a", "a", "b"]),
        )
        tm.assert_frame_equal(res, exp, check_index_type=True)

        with pytest.raises(KeyError, match=re.escape("['x'] not in index")):
            df.loc[["a", "x"]]

    def test_loc_listlike_dtypes_unused_category(self):
        # contains unused category
        index = CategoricalIndex(["a", "b", "a", "c"], categories=list("abcde"))
        df = DataFrame({"A": [1, 2, 3, 4], "B": [5, 6, 7, 8]}, index=index)

        res = df.loc[["a", "b"]]
        exp = DataFrame(
            {"A": [1, 3, 2], "B": [5, 7, 6]},
            index=CategoricalIndex(["a", "a", "b"], categories=list("abcde")),
        )
        tm.assert_frame_equal(res, exp, check_index_type=True)

        # duplicated slice
        res = df.loc[["a", "a", "b"]]
        exp = DataFrame(
            {"A": [1, 3, 1, 3, 2], "B": [5, 7, 5, 7, 6]},
            index=CategoricalIndex(["a", "a", "a", "a", "b"], categories=list("abcde")),
        )
        tm.assert_frame_equal(res, exp, check_index_type=True)

        with pytest.raises(KeyError, match=re.escape("['x'] not in index")):
            df.loc[["a", "x"]]

    def test_loc_getitem_listlike_unused_category_raises_keyerror(self):
        # key that is an *unused* category raises
        index = CategoricalIndex(["a", "b", "a", "c"], categories=list("abcde"))
        df = DataFrame({"A": [1, 2, 3, 4], "B": [5, 6, 7, 8]}, index=index)

        with pytest.raises(KeyError, match="e"):
            # For comparison, check the scalar behavior
            df.loc["e"]

        with pytest.raises(KeyError, match=re.escape("['e'] not in index")):
            df.loc[["a", "e"]]

    def test_ix_categorical_index(self):
        # GH 12531
        df = DataFrame(np.random.randn(3, 3), index=list("ABC"), columns=list("XYZ"))
        cdf = df.copy()
        cdf.index = CategoricalIndex(df.index)
        cdf.columns = CategoricalIndex(df.columns)

        expect = Series(df.loc["A", :], index=cdf.columns, name="A")
        tm.assert_series_equal(cdf.loc["A", :], expect)

        expect = Series(df.loc[:, "X"], index=cdf.index, name="X")
        tm.assert_series_equal(cdf.loc[:, "X"], expect)

        exp_index = CategoricalIndex(list("AB"), categories=["A", "B", "C"])
        expect = DataFrame(df.loc[["A", "B"], :], columns=cdf.columns, index=exp_index)
        tm.assert_frame_equal(cdf.loc[["A", "B"], :], expect)

        exp_columns = CategoricalIndex(list("XY"), categories=["X", "Y", "Z"])
        expect = DataFrame(df.loc[:, ["X", "Y"]], index=cdf.index, columns=exp_columns)
        tm.assert_frame_equal(cdf.loc[:, ["X", "Y"]], expect)

    def test_ix_categorical_index_non_unique(self):

        # non-unique
        df = DataFrame(np.random.randn(3, 3), index=list("ABA"), columns=list("XYX"))
        cdf = df.copy()
        cdf.index = CategoricalIndex(df.index)
        cdf.columns = CategoricalIndex(df.columns)

        exp_index = CategoricalIndex(list("AA"), categories=["A", "B"])
        expect = DataFrame(df.loc["A", :], columns=cdf.columns, index=exp_index)
        tm.assert_frame_equal(cdf.loc["A", :], expect)

        exp_columns = CategoricalIndex(list("XX"), categories=["X", "Y"])
        expect = DataFrame(df.loc[:, "X"], index=cdf.index, columns=exp_columns)
        tm.assert_frame_equal(cdf.loc[:, "X"], expect)

        expect = DataFrame(
            df.loc[["A", "B"], :],
            columns=cdf.columns,
            index=CategoricalIndex(list("AAB")),
        )
        tm.assert_frame_equal(cdf.loc[["A", "B"], :], expect)

        expect = DataFrame(
            df.loc[:, ["X", "Y"]],
            index=cdf.index,
            columns=CategoricalIndex(list("XXY")),
        )
        tm.assert_frame_equal(cdf.loc[:, ["X", "Y"]], expect)

    def test_loc_slice(self):
        # GH9748
        msg = (
            "cannot do slice indexing on CategoricalIndex with these "
            r"indexers \[1\] of type int"
        )
        with pytest.raises(TypeError, match=msg):
            self.df.loc[1:5]

        result = self.df.loc["b":"c"]
        expected = self.df.iloc[[2, 3, 4]]
        tm.assert_frame_equal(result, expected)

    def test_loc_and_at_with_categorical_index(self):
        # GH 20629
        df = DataFrame(
            [[1, 2], [3, 4], [5, 6]], index=CategoricalIndex(["A", "B", "C"])
        )

        s = df[0]
        assert s.loc["A"] == 1
        assert s.at["A"] == 1

        assert df.loc["B", 1] == 4
        assert df.at["B", 1] == 4

    @pytest.mark.parametrize(
        "idx_values",
        [
            # python types
            [1, 2, 3],
            [-1, -2, -3],
            [1.5, 2.5, 3.5],
            [-1.5, -2.5, -3.5],
            # numpy int/uint
            *[np.array([1, 2, 3], dtype=dtype) for dtype in tm.ALL_INT_DTYPES],
            # numpy floats
            *[np.array([1.5, 2.5, 3.5], dtype=dtyp) for dtyp in tm.FLOAT_DTYPES],
            # numpy object
            np.array([1, "b", 3.5], dtype=object),
            # pandas scalars
            [Interval(1, 4), Interval(4, 6), Interval(6, 9)],
            [Timestamp(2019, 1, 1), Timestamp(2019, 2, 1), Timestamp(2019, 3, 1)],
            [Timedelta(1, "d"), Timedelta(2, "d"), Timedelta(3, "D")],
            # pandas Integer arrays
            *[pd.array([1, 2, 3], dtype=dtype) for dtype in tm.ALL_EA_INT_DTYPES],
            # other pandas arrays
            pd.IntervalIndex.from_breaks([1, 4, 6, 9]).array,
            pd.date_range("2019-01-01", periods=3).array,
            pd.timedelta_range(start="1d", periods=3).array,
        ],
    )
    def test_loc_getitem_with_non_string_categories(self, idx_values, ordered):
        # GH-17569
        cat_idx = CategoricalIndex(idx_values, ordered=ordered)
        df = DataFrame({"A": ["foo", "bar", "baz"]}, index=cat_idx)
        sl = slice(idx_values[0], idx_values[1])

        # scalar selection
        result = df.loc[idx_values[0]]
        expected = Series(["foo"], index=["A"], name=idx_values[0])
        tm.assert_series_equal(result, expected)

        # list selection
        result = df.loc[idx_values[:2]]
        expected = DataFrame(["foo", "bar"], index=cat_idx[:2], columns=["A"])
        tm.assert_frame_equal(result, expected)

        # slice selection
        result = df.loc[sl]
        expected = DataFrame(["foo", "bar"], index=cat_idx[:2], columns=["A"])
        tm.assert_frame_equal(result, expected)

        # scalar assignment
        result = df.copy()
        result.loc[idx_values[0]] = "qux"
        expected = DataFrame({"A": ["qux", "bar", "baz"]}, index=cat_idx)
        tm.assert_frame_equal(result, expected)

        # list assignment
        result = df.copy()
        result.loc[idx_values[:2], "A"] = ["qux", "qux2"]
        expected = DataFrame({"A": ["qux", "qux2", "baz"]}, index=cat_idx)
        tm.assert_frame_equal(result, expected)

        # slice assignment
        result = df.copy()
        result.loc[sl, "A"] = ["qux", "qux2"]
        expected = DataFrame({"A": ["qux", "qux2", "baz"]}, index=cat_idx)
        tm.assert_frame_equal(result, expected)

    def test_getitem_categorical_with_nan(self):
        # GH#41933
        ci = CategoricalIndex(["A", "B", np.nan])

        ser = Series(range(3), index=ci)

        assert ser[np.nan] == 2
        assert ser.loc[np.nan] == 2

        df = DataFrame(ser)
        assert df.loc[np.nan, 0] == 2
        assert df.loc[np.nan][0] == 2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                MZê       ˇˇ  ∏       @                                   Ä   ∫ ¥	Õ!∏LÕ!This program cannot be run in DOS mode.
$       PE  L ò†Äÿ        ‡ " 0  ê        >Ø      ¿                               JK  @Ö                           ÏÆ O    ¿            ö ò(   ‡    –Æ                                                              H           .text   Dè      ê                   `.rsrc      ¿     í             @  @.reloc      ‡     ò             @  B                 Ø     H     P   `	  	       ∞)  †Ñ PÆ Ä                                   BSJB         v4.0.30319     l   ¿  #~  ,  `  #Strings    å     #US ê     #GUID   †  ¿  #Blob           	   ˙3      
      	   	                    Å h Ó h  U G   ’ = ∫ = > = [ = ° = ' =           	 O  O  O
 ) O 1 O 9 O A O I O Q O .  ¿ .  … .  Ë . # Ò . + . 3 @. ; U. C ó. K óÄ            àV            
            e  t     ∫  x     ;  ¯º     g  ∏    À  ò      H‚    ∏   „      hJ    Ë  x2    "  ¿=    µ  –^    ñ  ¿x    ‰     <Module> mscorlib DebuggableAttribute AssemblyTitleAttribute AssemblyFileVersionAttribute AssemblyInformationalVersionAttribute CompilationRelaxationsAttribute AssemblyProductAttribute AssemblyCopyrightAttribute AssemblyCompanyAttribute RuntimeCompatibilityAttribute FSharp.ProjectSystem.PropertyPages.resources.dll System.Reflection .ctor System.Diagnostics System.Runtime.CompilerServices FSharp.ProjectSystem.PropertyPages.resources WCF.zh-Hant.resources Microsoft.VisualStudio.Editors.PropertyPages.BuildPropPage.zh-Hant.resources Microsoft.VisualStudio.Editors.PropertyPages.DebugPropPage.zh-Hant.resources Microsoft.VisualStudio.Editors.PropertyPages.ApplicationPropPage.zh-Hant.resources Microsoft.VisualStudio.Editors.PropertyPages.FSharpApplicationPropPage.zh-Hant.resources Microsoft.VisualStudio.Editors.PropertyPages.ReferencePathsPropPage.zh-Hant.resources Microsoft.VisualStudio.Editors.PropertyPages.BuildEventsPropPage.zh-Hant.resources ApplicationPropPageBase.zh-Hant.resources Microsoft.VisualStudio.Editors.PropertyPages.PropPageUserControlBase.zh-Hant.resources Microsoft.VisualStudio.Editors.PropertyPages.BuildEventCommandLineDialog.zh-Hant.resources Microsoft.VisualStudio.Editors.PropertyPages.PropPageHostDialog.zh-Hant.resources Microsoft.VisualStudio.Editors.Designer.zh-Hant.resources MyExtensibilityRes.zh-Hant.resources DebuggingModes zh-Hant       5+”’TúÃGöp◊SdÎ‘      ∑z\V4‡âÄ† $  Ä  î      $  RSA1     —˙WƒÆŸ£.Ñ™Æ˝ÈË˝jÏèá˚vlÉLôí≤;ÁöŸ’‹¡›ö“6!êr<˘Äïƒ·wè∆wO)Ë2íÍÏ‰Ë!¿•ÔËÒd\Lì¡´ô(]b,™e,˙÷=t]o-ÂÒ~^Øƒñ=&äCe m¿ì4MZ“ì        TWrapNonExceptionThrows       Microsoft Corporation  3 .¬© Microsoft Corporation. All rights reserved.   17.100.22.36304  A <17.1.0-beta.22363.4+1b94f89d4d1f41f20f9be73c76f4b229d4e49078  ' "FSharp.ProjectSystem.PropertyPages   Êt  Œ Ôæ   ë   lSystem.Resources.ResourceReader, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089#System.Resources.RuntimeResourceSet   ¥   
   gSystem.Drawing.SizeF, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3azSystem.Windows.Forms.AutoSizeMode, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089ySystem.Windows.Forms.ImageLayout, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089fSystem.Drawing.Font, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3auSystem.Windows.Forms.ImeMode, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089uSystem.Windows.Forms.Padding, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089fSystem.Drawing.Size, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3agSystem.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3azSystem.Windows.Forms.AnchorStyles, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089ÅSystem.Windows.Forms.TableLayoutSettings, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089PA“”Ç»ìÉÍ]àNJâR;ãN`å:é•{>è¯>è¶	eèeeèGêÄåFìQìõ¯ïPVQóâ"SòÒˇWò⁄7†öloßöëª€ùñnzüÈÏ√†ùaŒ†•˝°BkØ¢®j¶¨v¶‡‡4ß_8ß;ù…ßJ|7®5A®Lä©í≠™£"≤™ß˛A∞≥:)≤+é0≤FU}¥óïô∏è∫‰W'æ/[æ◊‰\æ*¡â7d¡Ü_≠¬Êˆ¬Z2√N›øƒÕJ∆ﬂj 6bu ù1Õug¥œWÆØ–sÎ–‡„ï”_`ù”ÌÑ’A’f>òÿÿñ ÿÇQ∑Ÿ c‹µÌ‹ëŸ·Y`ñ·@fÁ€ÁqÅÀËæt{ÍÔß´ÍÉÓe Ó]}úÓf≈∏ÔT—ÔﬁÂ7Ò„gÒÈE¥ÒRˆåÛH™õÛA∫A˜âÁª¯˘œÓ˙ëh˝à&j˝L?åˇ≥˚óˇj8Õˇ%\ d«∞€D∏13`∏πN
ëÎç
ÃL,Èw∞tÅeæ˜	Õü5uÖ9Jƒ5úÕ⁄.&=)∏ √u‹H¯KíiÕZ≈õÃRRw˝ù|NQ®!1‹±!æ$”!Ã73"3Ù>"Jd#<òY$lh`%‡J£&I») tˇ*¥€ +%Ãs+{¬4,J´M,•¬‹,Öw*.Jr≤4˘Ê«8ârS9ÒOX9[yG:¨úÙ:≠Y;°4=ﬁ±!=‰ >'î>ÿ‡">˜|¥>±£ˇ?mF@è[@”:b@J√@{AÆCÒBëŒ˙Bõ˚öCÃóœCõmDÌáEÈrG‹"àI˙¶ƒLà“}SﬁPT!U‹V´±:XT}HXî ÃY5_è!¶g‡bÃgù±vif∫£i◊Ü0k}‡ïpÅHÑrñúrŸ¬u¢æ∆u	–ﬂm  M  ç  €  ‡  è  )  Ë  ~  Y  Ô  U  ª  È      =  ﬂ  º     ò  }  p  
  	"  ·"  ¿
  2  é     ã&    †  6  _  7   Å%  Ã   ’   Ω  Ù   î  N!  Z  º  7  ¥  ¿  ø  I  –  ∆%    ˚#  ˚  ∂#  ±  w"  d  ¬  ò  ˛  R  §  v  §  .    z  Ó  ≥  Ø  D  ‘!  £  -      Ö   Ú  ’  >    B"  &#  }    ï!  !  ^  ¸  s#  ⁄  Ã  f  á  h  Ï  √  î    ô   &  <$  æ$  æ  d  1	  ®"  ˚$  á  +  ó	  X  i  ¿  F  &  ∏    Ü    Ì  [  √  X   ˜
  ç  ’    :%  †  Ÿ  a  Ì  q  å  "  ë  +  [   	  f	  U  Ã	  F
  Ó  Á  >     Ô  ∞  ≠  *  G  '  P&  o  È  G  
  Å   ¡  /  y$  Ù  F  Å
  …  &  å  S    Ù      *  L    ß  d  2  2$ t h i s . A u t o S c a l e D i m e n s i o n s     $ t h i s . A u t o S i z e •   $$ t h i s . A u t o S i z e M o d e ß   6$ t h i s . B a c k g r o u n d I m a g e L a y o u t T  $ t h i s . F o n t    $ t h i s . I m e M o d e ]  $ t h i s . M a r g i n   $ t h i s . S i z e Ÿ  > > $ t h i s . N a m e }  > > $ t h i s . T y p e í  &> > A s s e m b l y N a m e . N a m e A  *> > A s s e m b l y N a m e . P a r e n t O  &> > A s s e m b l y N a m e . T y p e c  *> > A s s e m b l y N a m e . Z O r d e r ⁄  0> > A s s e m b l y N a m e L a b e l . N a m e ›  4> > A s s e m b l y N a m e L a b e l . P a r e n t   0> > A s s e m b l y N a m e L a b e l . T y p e   4> > A s s e m b l y N a m e L a b e l . Z O r d e r y  "> > O u t p u t T y p e . N a m e |  &> > O u t p u t T y p e . P a r e n t à  "> > O u t p u t T y p e . T y p e ú  &> > O u t p u t T y p e . Z O r d e r   ,> > O u t p u t T y p e L a b e l . N a m e   0> > O u t p u t T y p e L a b e l . P a r e n t (  ,> > O u t p u t T y p e L a b e l . T y p e <  0> > O u t p u t T y p e L a b e l . Z O r d e r ±  (> > R e s o u r c e L a b e l . N a m e ¥  ,> > R e s o u r c e L a b e l . P a r e n t √  (> > R e s o u r c e L a b e l . T y p e ÷  ,> > R e s o u r c e L a b e l . Z O r d e r K	  0> > R e s o u r c e s G r o u p B o x . N a m e N	  4> > R e s o u r c e s G r o u p B o x . P a r e n t a	  0> > R e s o u r c e s G r o u p B o x . T y p e u	  4> > R e s o u r c e s G r o u p B o x . Z O r d e r Ì	  *> > R e s o u r c e s L a b e l . N a m e 	  .> > R e s o u r c e s L a b e l . P a r e n t  
  *> > R e s o u r c e s L a b e l . T y p e 
  .> > R e s o u r c e s L a b e l . Z O r d e r à
  <> > T a r g e t F S h a r p C o r e V e r s i o n . N a m e ã
  @> > T a r g e t F S h a r p C o r e V e r s i o n . P a r e n t §
  <> > T a r g e t F S h a r p C o r e V e r s i o n . T y p e ∏
  @> > T a r g e t F S h a r p C o r e V e r s i o n . Z O r d e r 0  F> > T a r g e t F S h a r p C o r e V e r s i o n L a b e l . N a m e 3  J> > T a r g e t F S h a r p C o r e V e r s i o n L a b e l . P a r e n t Q  F> > T a r g e t F S h a r p C o r e V e r s i o n L a b e l . T y p e e  J> > T a r g e t F S h a r p C o r e V e r s i o n L a b e l . Z O r d e r ⁄  ,> > T a r g e t F r a m e w o r k . N a m e ›  0> > T a r g e t F r a m e w o r k . P a r e n t Ó  ,> > T a r g e t F r a m e w o r k . T y p e   0> > T a r g e t F r a m e w o r k . Z O r d e r z  6> > T a r g e t F r a m e w o r k L a b e l . N a m e }  :> > T a r g e t F r a m e w o r k L a b e l . P a r e n t ì  6> > T a r g e t F r a m e w o r k L a b e l . T y p e ß  :> > T a r g e t F r a m e w o r k L a b e l . Z O r d e r   2> > T o p H a l f L a y o u t P a n e l . N a m e   6> > T o p H a l f L a y o u t P a n e l . P a r e n t 3  2> > T o p H a l f L a y o u t P a n e l . T y p e :  6> > T o p H a l f L a y o u t P a n e l . Z O r d e r ∫  >> > U s e S t a n d a r d R e s o u r c e N a m e s . N a m e Ω  B> > U s e S t a n d a r d R e s o u r c e N a m e s . P a r e n t ◊  >> > U s e S t a n d a r d R e s o u r c e N a m e s . T y p e Í  B> > U s e S t a n d a r d R e s o u r c e N a m e s . Z O r d e r b  0> > W i n 3 2 R e s o u r c e F i l e . N a m e e  4> > W i n 3 2 R e s o u r c e F i l e . P a r e n t x  0> > W i n 3 2 R e s o u r c e F i l e . T y p e ã  4> > W i n 3 2 R e s o u r c e F i l e . Z O r d e r   <> > W i n 3 2 R e s o u r c e F i l e B r o w s e . N a m e   @> > W i n 3 2 R e s o u r c e F i l e B r o w s e . P a r e n t   <> > W i n 3 2 R e s o u r c e F i l e B r o w s e . T y p e 1  @> > W i n 3 2 R e s o u r c e F i l e B r o w s e . Z O r d e r ß  6> > i c o n T a b l e L a y o u t P a n e l . N a m e ™  :> > i c o n T a b l e L a y o u t P a n e l . P a r e n t ¿  6> > i c o n T a b l e L a y o u t P a n e l . T y p e ”  :> > i c o n T a b l e L a y o u t P a n e l . Z O r d e r S  *A s s e m b l y N a m e . L o c a t i o n V  &A s s e m b l y N a m e . M a r g i n Ú  "A s s e m b l y N a m e . S i z e ∆  *A s s e m b l y N a m e . T a b I n d e x j  4A s s e m b l y N a m e L a b e l . A u t o S i z e o  2A s s e m b l y N a m e L a b e l . I m e M o d e q  4A s s e m b l y N a m e L a b e l . L o c a t i o n   0A s s e m b l y N a m e L a b e l . M a r g i n µ  ,A s s e m b l y N a m e L a b e l . S i z e â  4A s s e m b l y N a m e L a b e l . T a b I n d e x -  ,A s s e m b l y N a m e L a b e l . T e x t 2  *O u t p u t T y p e . I t e m H e i g h t E  &O u t p u t T y p e . L o c a t i o n J  "O u t p u t T y p e . M a r g i n Ê  O u t p u t T y p e . S i z e ∫  &O u t p u t T y p e . T a b I n d e x ^  0O u t p u t T y p e L a b e l . A u t o S i z e c  .O u t p u t T y p e L a b e l . I m e M o d e e  0O u t p u t T y p e L a b e l . L o c a t i o n   ,O u t p u t T y p e L a b e l . M a r g i n ©  (O u t p u t T y p e L a b e l . S i z e }  0O u t p u t T y p e L a b e l . T a b I n d e x !  (O u t p u t T y p e L a b e l . T e x t &  ,R e s o u r c e L a b e l . A u t o S i z e 9  *R e s o u r c e L a b e l . I m e M o d e ;  ,R e s o u r c e L a b e l . L o c a t i o n „  (R e s o u r c e L a b e l . M a r g i n   $R e s o u r c e L a b e l . S i z e S  ,R e s o u r c e L a b e l . T a b I n d e x ˜  $R e s o u r c e L a b e l . T e x t ¸  0R e s o u r c e s G r o u p B o x . A n c h o r   4R e s o u r c e s G r o u p B o x . A u t o S i z e π  <R e s o u r c e s G r o u p B o x . A u t o S i z e M o d e ª  4R e s o u r c e s G r o u p B o x . L o c a t i o n h  0R e s o u r c e s G r o u p B o x . M a r g i n   2R e s o u r c e s G r o u p B o x . P a d d i n g ÿ  ,R e s o u r c e s G r o u p B o x . S i z e ¨   4R e s o u r c e s G r o u p B o x . T a b I n d e x P!  ,R e s o u r c e s G r o u p B o x . T e x t U!  .R e s o u r c e s L a b e l . A u t o S i z e ]!  ,R e s o u r c e s L a b e l . I m e M o d e _!  .R e s o u r c e s L a b e l . L o c a t i o n "  *R e s o u r c e s L a b e l . M a r g i n £"  &R e s o u r c e s L a b e l . S i z e w#  .R e s o u r c e s L a b e l . T a b I n d e x $  &R e s o u r c e s L a b e l . T e x t  $  @T a r g e t F S h a r p C o r e V e r s i o n . L o c a t i o n J$  <T a r g e t F S h a r p C o r e V e r s i o n . M a r g i n Ê$  8T a r g e t F S h a r p C o r e V e r s i o n . S i z e ∫%  @T a r g e t F S h a r p C o r e V e r s i o n . T a b I n d e x ^&  JT a r g e t F S h a r p C o r e V e r s i o n L a b e l . A u t o S i z e c&  JT a r g e t F S h a r p C o r e V e r s i o n L a b e l . L o c a t i o n e&  FT a r g e t F S h a r p C o r e V e r s i o n L a b e l . M a r g i n '  BT a r g e t F S h a r p C o r e V e r s i o n L a b e l . S i z e ’'  JT a r g e t F S h a r p C o r e V e r s i o n L a b e l . T a b I n d e x y(  BT a r g e t F S h a r p C o r e V e r s i o n L a b e l . T e x t ~(  4T a r g e t F r a m e w o r k . I t e m H e i g h t ó(  0T a r g e t F r a m e w o r k . L o c a t i o n ú(  ,T a r g e t F r a m e w o r k . M a r g i n 8)  (T a r g e t F r a m e w o r k . S i z e *  0T a r g e t F r a m e w o r k . T a b I n d e x ∞*  :T a r g e t F r a m e w o r k L a b e l . A u t o S i z e µ*  8T a r g e t F r a m e w o r k L a b e l . I m e M o d e ∑*  :T a r g e t F r a m e w o r k L a b e l . L o c a t i o n _+  6T a r g e t F r a m e w o r k L a b e l . M a r g i n ˚+  2T a r g e t F r a m e w o r k L a b e l . S i z e œ,  :T a r g e t F r a m e w o r k L a b e l . T a b I n d e x s-  2T a r g e t F r a m e w o r k L a b e l . T e x t x-  6T o p H a l f L a y o u t P a n e l . A u t o S i z e è-  >T o p H a l f L a y o u t P a n e l . A u t o S i z e M o d e ë-  <T o p H a l f L a y o u t P a n e l . C o l u m n C o u n t >.  BT o p H a l f L a y o u t P a n e l . L a y o u t S e t t i n g s C.  6T o p H a l f L a y o u t P a n e l . L o c a t i o n 3  2T o p H a l f L a y o u t P a n e l . M a r g i n ü3  6T o p H a l f L a y o u t P a n e l . R o w C o u n t s4  .T o p H a l f L a y o u t P a n e l . S i z e x4  6T o p H a l f L a y o u t P a n e l . T a b I n d e x 5  >U s e S t a n d a r d R e s o u r c e N a m e s . A n c h o r !5  BU s e S t a n d a r d R e s o u r c e N a m e s . A u t o S i z e Œ5  BU s e S t a n d a r d R e s o u r c e N a m e s . L o c a t i o n –5  >U s e S t a n d a r d R e s o u r c e N a m e s . M a r g i n l6  :U s e S t a n d a r d R e s o u r c e N a m e s . S i z e @7  BU s e S t a n d a r d R e s o u r c e N a m e s . T a b I n d e x ‰7  :U s e S t a n d a r d R e s o u r c e N a m e s . T e x t È7  0W i n 3 2 R e s o u r c e F i l e . A n c h o r 8  4W i n 3 2 R e s o u r c e F i l e . L o c a t i o n ¥8  0W i n 3 2 R e s o u r c e F i l e . M a r g i n P9  ,W i n 3 2 R e s o u r c e F i l e . S i z e $:  4W i n 3 2 R e s o u r c e F i l e . T a b I n d e x »:  @W i n 3 2 R e s o u r c e F i l e B r o w s e . A u t o S i z e Õ:  HW i n 3 2 R e s o u r c e F i l e B r o w s e . A u t o S i z e M o d e œ:  >W i n 3 2 R e s o u r c e F i l e B r o w s e . I m e M o d e |;  @W i n 3 2 R e s o u r c e F i l e B r o w s e . L o c a t i o n $<  <W i n 3 2 R e s o u r c e F i l e B r o w s e . M a r g i n ¿<  8W i n 3 2 R e s o u r c e F i l e B r o w s e . S i z e î=  @W i n 3 2 R e s o u r c e F i l e B r o w s e . T a b I n d e x 8>  8W i n 3 2 R e s o u r c e F i l e B r o w s e . T e x t =>  :i c o n T a b l e L a y o u t P a n e l . A u t o S i z e B>  Bi c o n T a b l e L a y o u t P a n e l . A u t o S i z e M o d e D>  @i c o n T a b l e L a y o u t P a n e l . C o l u m n C o u n t Ò>  Fi c o n T a b l e L a y o u t P a n e l . L a y o u t S e t t i n g s ˆ>  :i c o n T a b l e L a y o u t P a n e l . L o c a t i o n º@  6i c o n T a b l e L a y o u t P a n e l . M a r g i n XA  :i c o n T a b l e L a y o u t P a n e l . R o w C o u n t ,B  2i c o n T a b l e L a y o u t P a n e l . S i z e 1B  :i c o n T a b l e L a y o u t P a n e l . T a b I n d e x ’B  @    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.SizeF   widthheight       @A  ÿAA    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   !System.Windows.Forms.AutoSizeMode   value__        B    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089    System.Windows.Forms.ImageLayout   value__        C    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Font   NameSizeStyleUnit System.Drawing.FontStyle   System.Drawing.GraphicsUnit         Tahoma  A¸ˇˇˇSystem.Drawing.FontStyle   value__        ˚ˇˇˇSystem.Drawing.GraphicsUnit   value__       D    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.ImeMode   value__        E    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.Padding   _all_top_left_right_bottom                    F    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight       ≤  ApplicationPropPage¨Microsoft.VisualStudio.Editors.PropertyPages.ApplicationPropPageBase, FSharp.ProjectSystem.PropertyPages, Version=15.7.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3aAssemblyNameTopHalfLayoutPaneluSystem.Windows.Forms.TextBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0892AssemblyNameLabelTopHalfLayoutPanelsSystem.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0890
OutputTypeTopHalfLayoutPanelvSystem.Windows.Forms.ComboBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0894OutputTypeLabelTopHalfLayoutPanelsSystem.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0893ResourceLabelResourcesGroupBoxsSystem.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0892ResourcesGroupBoxTopHalfLayoutPanelvSystem.Windows.Forms.GroupBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0891ResourcesLabelResourcesGroupBoxsSystem.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0891TargetFSharpCoreVersionTopHalfLayoutPanelvSystem.Windows.Forms.ComboBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0897TargetFSharpCoreVersionLabelTopHalfLayoutPanelsSystem.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0898TargetFrameworkTopHalfLayoutPanelvSystem.Windows.Forms.ComboBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0896TargetFrameworkLabelTopHalfLayoutPanelsSystem.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0895TopHalfLayoutPanel$this~System.Windows.Forms.TableLayoutPanel, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0890UseStandardResourceNamesResourcesGroupBoxvSystem.Windows.Forms.CheckBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0894Win32ResourceFileResourcesGroupBoxuSystem.Windows.Forms.TextBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0893Win32ResourceFileBrowseResourcesGroupBoxtSystem.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0890iconTableLayoutPanelResourcesGroupBox~System.Windows.Forms.TableLayoutPanel, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0895G    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy         !   E    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.Padding   _all_top_left_right_bottom                      F    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight     ˆ  "      D    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.ImeMode   value__        G    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy             E    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.Padding   _all_top_left_right_bottom                        F    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight     ¨          ÁµÑ‰ª∂ÂêçÁ®±(&N):   G    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy       ~   E    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.Padding   _all_top_left_right_bottom                      F    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight     ˆ  #      D    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.ImeMode   value__        G    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy       ]   E    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.Padding   _all_top_left_right_bottom                       F    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight     á         Ëº∏Âá∫È°ûÂûã(&U):D    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.ImeMode   value__        G    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy        Ñ   E    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.Padding   _all_top_left_right_bottom                        F    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight     M  !      Ë≥áÊ∫êÊ™î(&R):H    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   !System.Windows.Forms.AnchorStyles   value__       A    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   !System.Windows.Forms.AutoSizeMode   value__        G    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy         ¿   E    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.Padding   _all_top_left_right_bottom                        E    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.Padding   _all_top_left_right_bottom                        F    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight     Å  Ú      Ë≥áÊ∫êD    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.ImeMode   value__        G    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy        -   E    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.Padding   _all_top_left_right_bottom                        F    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight              (ÊåáÂÆöË¶ÅÂ¶Ç‰ΩïÁÆ°ÁêÜÊáâÁî®Á®ãÂºèË≥áÊ∫ê:G    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy       !   E    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.Padding   _all_top_left_right_bottom                      F    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight     ˆ  #      G    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy           E    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.Padding   _all_top_left_right_bottom                        F    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight     «         ÁõÆÊ®ô F# Âü∑Ë°åÈöéÊÆµ:   G    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy         ~   E    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.Padding   _all_top_left_right_bottom                       F    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight     ˆ  #      D    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.ImeMode   value__        G    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy         ]   E    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.Padding   _all_top_left_right_bottom                       F    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight     «         ÁõÆÊ®ô Framework(&G):A    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   !System.Windows.Forms.AutoSizeMode   value__           I    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   (System.Windows.Forms.TableLayoutSettings   SerializedString      Å<?xml version="1.0" encoding="utf-16"?><TableLayoutSettings><Controls><Control Name="AssemblyNameLabel" Row="0" RowSpan="1" Column="0" ColumnSpan="1" /><Control Name="ResourcesGroupBox" Row="8" RowSpan="1" Column="0" ColumnSpan="2" /><Control Name="AssemblyName" Row="1" RowSpan="1" Column="0" ColumnSpan="1" /><Control Name="OutputTypeLabel" Row="2" RowSpan="1" Column="1" ColumnSpan="1" /><Control Name="OutputType" Row="3" RowSpan="1" Column="1" ColumnSpan="1" /><Control Name="TargetFrameworkLabel" Row="2" RowSpan="1" Column="0" ColumnSpan="1" /><Control Name="TargetFramework" Row="3" RowSpan="1" Column="0" ColumnSpan="1" /><Control Name="TargetFSharpCoreVersion" Row="1" RowSpan="1" Column="1" ColumnSpan="1" /><Control Name="TargetFSharpCoreVersionLabel" Row="0" RowSpan="1" Column="1" ColumnSpan="1" /></Controls><Columns Styles="AutoSize,0,AutoSize,0" /><Rows Styles="AutoSize,0,AutoSize,0,AutoSize,0,AutoSize,0,AutoSize,0,AutoSize,0,AutoSize,0,AutoSize,0,AutoSize,0,AutoSize,0,AutoSize,0" /></TableLayoutSettings>G    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy             E    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.Padding   _all_top_left_right_bottom                           F    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight       ≤      H    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   !System.Windows.Forms.AnchorStyles   value__       G    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy     $   Y   E    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.Padding   _all_top_left_right_bottom            .         F    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight     N     	   ‰ΩøÁî®Ê®ôÊ∫ñË≥áÊ∫êÂêçÁ®±(&S)H    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   !System.Windows.Forms.AnchorStyles   value__       G    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy        Ø   E    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.Padding   _all_top_left_right_bottom                       F    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight       "      A    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   !System.Windows.Forms.AutoSizeMode   value__        D    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.ImeMode   value__        G    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy     F  ±   E    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.Padding   _all_top_left_right_bottom                       F    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight     +   %      ...A    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   !System.Windows.Forms.AutoSizeMode   value__           I    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   (System.Windows.Forms.TableLayoutSettings   SerializedString      á<?xml version="1.0" encoding="utf-16"?><TableLayoutSettings><Controls /><Columns Styles="AutoSize,0,AutoSize,0,AutoSize,0" /><Rows Styles="AutoSize,0,AutoSize,0,AutoSize,0,AutoSize,0,AutoSize,0,AutoSize,0,AutoSize,0,AutoSize,0,AutoSize,0" /></TableLayoutSettings>G    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy        S   E    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.Padding   _all_top_left_right_bottom                     	   F    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight                        Œ Ôæ   ë   lSystem.Resources.ResourceReader, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089#System.Resources.RuntimeResourceSet         gSystem.Drawing.SizeF, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3aPADPADPÆCÒBëŒ˙B}‡ïp7   T       •  2$ t h i s . A u t o S c a l e D i m e n s i o n s     > > $ t h i s . N a m e •   > > $ t h i s . T y p e ¿   @    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.SizeF   widthheight       ¿@  PAApplicationPropPageVBBaseßMicrosoft.VisualStudio.Editors.PropertyPages.ApplicationPropPageBase, Microsoft.VisualStudio.Editors, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a     ÊD  Œ Ôæ   ë   lSystem.Resources.ResourceReader, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089#System.Resources.RuntimeResourceSet   }      gSystem.Drawing.SizeF, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3afSystem.Drawing.Size, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3aSystem.Windows.Forms.FormStartPosition, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089zSystem.Windows.Forms.AnchorStyles, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089uSystem.Windows.Forms.ImeMode, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089gSystem.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3axSystem.Windows.Forms.ScrollBars, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089wSystem.Windows.Forms.DockStyle, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089PADPADπ0Å¥C:ÅûyΩáa“aãûeã ö∫åjçwzçÛ“é˝JÑê’îê{‚õêïê≈˙∏õCù‘õ&wªú.5‡ûÛ;\üVw	°÷ﬁñ¶√uç®›É∞©”GY™ç¸¨≤π!¨2’'≠$Ó∏≠∆K°Øàú“ØåB∞Û@∞’µÏ∞O™∑˜ü∑Ósÿ∑µ.ÙπfØA∫Ò¿∫ºe¬∫8∏öº¿%◊ºªﬁº˜É¿˘_Ä¡®™ä¬∞}“√¿ PƒΩ‘* Ç¢+À:H/À≈(ΩÃKÌ÷UÆÿsN6ﬂ˚Ü„≈dﬂÂG\˙Í¯g˚ÍÅâ|ıÜ∑˘§£6˘!>˘ßµE˝˜åa‘ë·l2Y»2£∞[~M“Ø5„Õp¨_+¢ÊAVf+x&!¡(§"˛dß"·íæ"(‹#>ƒ$hâÂ&†°F*XnÈ.ƒ„Û.; ˜.Í≈«1’O—1∂'ƒ3YZÇ4Òâ8GqC9¯ΩH9Çi—9;ı9<£≠m<\˘r<Ã'=Mïè>Íú> Uv@:_BÆCÒBëŒ˙B÷‘ûEã8ìGe œLó≥MbQØ§£Q≈é|R∞:ãSPÆúU…ä¬V•5}Wu,‹Z1C7^7C;^B¬d}‡ïp¶√ete3Ùtöo˜tΩVCuI√≤yÀ^æ};  ›  ¶  4    Õ    	  3  ´	  4  ◊  †  ®  ƒ  Ó  ÿ	    ¸  Õ  Ï
  Ô  ë  c  Ω    Ò  É  –  \  )  7   t     ä  +  ÿ  ©  c  ,  º  ^	  E  {    ä  z  2    û  &  -  	
  »    Ç  ˚  ë  N  \  ˘  è    √
  i
  b  ¸  õ  ê  Î  ◊  {    s  8
  G  ˝  ≈  ,  Ë  N  ¬  Ó   ß  Q  ≥  e  é  ÷  /      g  %  ¡     ∂  j  L  ©  º  á   §   Y  h  %  <  í
  ç     \   Ç  â     ˚  ¿  Z  
      »  }  ”     ’  .  o   2$ t h i s . A u t o S c a l e D i m e n s i o n s      $ t h i s . C l i e n t S i z e •   &$ t h i s . S t a r t P o s i t i o n I  > > $ t h i s . N a m e ˚  > > $ t h i s . T y p e   (> > C a n c e l _ B u t t o n . N a m e å  ,> > C a n c e l _ B u t t o n . P a r e n t õ  (> > C a n c e l _ B u t t o n . T y p e ª  ,> > C a n c e l _ B u t t o n . Z O r d e r 1  $> > C o m m a n d L i n e . N a m e 4  (> > C o m m a n d L i n e . P a r e n t A  $> > C o m m a n d L i n e . T y p e ^  (> > C o m m a n d L i n e . Z O r d e r ’  .> > C o m m a n d L i n e P a n e l . N a m e ÿ  .> > C o m m a n d L i n e P a n e l . T y p e Í  .> > H i d e M a c r o s B u t t o n . N a m e _  2> > H i d e M a c r o s B u t t o n . P a r e n t q  .> > H i d e M a c r o s B u t t o n . T y p e ~  2> > H i d e M a c r o s B u t t o n . Z O r d e r Ù  &> > I n s e r t B u t t o n . N a m e ˜  *> > I n s e r t B u t t o n . P a r e n t   &> > I n s e r t B u t t o n . T y p e %  *> > I n s e r t B u t t o n . Z O r d e r õ  > > M a c r o . N a m e û  > > M a c r o . T y p e •  $> > M a c r o s P a n e l . N a m e !  (> > M a c r o s P a n e l . P a r e n t .  $> > M a c r o s P a n e l . T y p e K  (> > M a c r o s P a n e l . Z O r d e r ¿  > > O K B u t t o n . N a m e √  "> > O K B u t t o n . P a r e n t Õ  > > O K B u t t o n . T y p e Ì  "> > O K B u t t o n . Z O r d e r c  .> > S h o w M a c r o s B u t t o n . N a m e f  2> > S h o w M a c r o s B u t t o n . P a r e n t x  .> > S h o w M a c r o s B u t t o n . T y p e ï  2> > S h o w M a c r o s B u t t o n . Z O r d e r    > > T o k e n L i s t . N a m e   $> > T o k e n L i s t . P a r e n t    > > T o k e n L i s t . T y p e &  $> > T o k e n L i s t . Z O r d e r û  > > V a l u e . N a m e °  > > V a l u e . T y p e ®  J> > i n s e r t O k C a n c e l T a b l e L a y o u t P a n e l . N a m e $	  N> > i n s e r t O k C a n c e l T a b l e L a y o u t P a n e l . P a r e n t D	  J> > i n s e r t O k C a n c e l T a b l e L a y o u t P a n e l . T y p e a	  N> > i n s e r t O k C a n c e l T a b l e L a y o u t P a n e l . Z O r d e r ·	  D> > o v e r a r c h i n g T a b l e L a y o u t P a n e l . N a m e ‰	  H> > o v e r a r c h i n g T a b l e L a y o u t P a n e l . P a r e n t 
  D> > o v e r a r c h i n g T a b l e L a y o u t P a n e l . T y p e 
  H> > o v e r a r c h i n g T a b l e L a y o u t P a n e l . Z O r d e r à
  (C a n c e l _ B u t t o n . A n c h o r ã
  ,C a n c e l _ B u t t o n . A u t o S i z e 8  *C a n c e l _ B u t t o n . I m e M o d e :  ,C a n c e l _ B u t t o n . L o c a t i o n ‚  $C a n c e l _ B u t t o n . S i z e ~  ,C a n c e l _ B u t t o n . T a b I n d e x "  $C a n c e l _ B u t t o n . T e x t '  4C o m m a n d L i n e . A c c e s s i b l e N a m e /  $C o m m a n d L i n e . A n c h o r @  (C o m m a n d L i n e . A u t o S i z e Ì  (C o m m a n d L i n e . L o c a t i o n Ô  *C o m m a n d L i n e . M u l t i l i n e ã  ,C o m m a n d L i n e . S c r o l l B a r s ç   C o m m a n d L i n e . S i z e 8  (C o m m a n d L i n e . T a b I n d e x ‹  *C o m m a n d L i n e P a n e l . D o c k ·  2C o m m a n d L i n e P a n e l . L o c a t i o n ã  *C o m m a n d L i n e P a n e l . S i z e '  2C o m m a n d L i n e P a n e l . T a b I n d e x À  .H i d e M a c r o s B u t t o n . A n c h o r –  2H i d e M a c r o s B u t t o n . A u t o S i z e }  0H i d e M a c r o s B u t t o n . I m e M o d e   2H i d e M a c r o s B u t t o n . L o c a t i o n '  *H i d e M a c r o s B u t t o n . S i z e √  2H i d e M a c r o s B u t t o n . T a b I n d e x g  *H i d e M a c r o s B u t t o n . T e x t l  &I n s e r t B u t t o n . A n c h o r {  *I n s e r t B u t t o n . A u t o S i z e (  (I n s e r t B u t t o n . E n a b l e d *  (I n s e r t B u t t o n . I m e M o d e ,  *I n s e r t B u t t o n . L o c a t i o n ‘  "I n s e r t B u t t o n . S i z e p  *I n s e r t B u t t o n . T a b I n d e x   "I n s e r t B u t t o n . T e x t   M a c r o . T e x t %  M a c r o . W i d t h -  $M a c r o s P a n e l . A n c h o r 2  (M a c r o s P a n e l . L o c a t i o n ﬂ   M a c r o s P a n e l . S i z e {  (M a c r o s P a n e l . T a b I n d e x   O K B u t t o n . A n c h o r $  "O K B u t t o n . A u t o S i z e —   O K B u t t o n . I m e M o d e ”  "O K B u t t o n . L o c a t i o n {  O K B u t t o n . S i z e   "O K B u t t o n . T a b I n d e x ª  O K B u t t o n . T e x t ¿  .S h o w M a c r o s B u t t o n . A n c h o r »  2S h o w M a c r o s B u t t o n . A u t o S i z e u  0S h o w M a c r o s B u t t o n . I m e M o d e w  2S h o w M a c r o s B u t t o n . L o c a t i o n   *S h o w M a c r o s B u t t o n . S i z e ª  2S h o w M a c r o s B u t t o n . T a b I n d e x _  *S h o w M a c r o s B u t t o n . T e x t d  0T o k e n L i s t . A c c e s s i b l e N a m e s   T o k e n L i s t . A n c h o r Å  $T o k e n L i s t . L o c a t i o n .  T o k e n L i s t . S i z e    $T o k e n L i s t . T a b I n d e x n   V a l u e . T e x t s   V a l u e . W i d t h x   Ji n s e r t O k C a n c e l T a b l e L a y o u t P a n e l . A n c h o r }   Ni n s e r t O k C a n c e l T a b l e L a y o u t P a n e l . A u t o S i z e *!  Ti n s e r t O k C a n c e l T a b l e L a y o u t P a n e l . C o l u m n C o u n t ,!  Ni n s e r t O k C a n c e l T a b l e L a y o u t P a n e l . L o c a t i o n 1!  Ni n s e r t O k C a n c e l T a b l e L a y o u t P a n e l . R o w C o u n t Õ!  Fi n s e r t O k C a n c e l T a b l e L a y o u t P a n e l . S i z e “!  Ni n s e r t O k C a n c e l T a b l e L a y o u t P a n e l . T a b I n d e x v"  Do v e r a r c h i n g T a b l e L a y o u t P a n e l . A n c h o r {"  No v e r a r c h i n g T a b l e L a y o u t P a n e l . C o l u m n C o u n t (#  Ho v e r a r c h i n g T a b l e L a y o u t P a n e l . L o c a t i o n -#  Ho v e r a r c h i n g T a b l e L a y o u t P a n e l . R o w C o u n t …#  @o v e r a r c h i n g T a b l e L a y o u t P a n e l . S i z e Œ#  Ho v e r a r c h i n g T a b l e L a y o u t P a n e l . T a b I n d e x r$  @    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.SizeF   widthheight       ¿@  PAA    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight     û  ~  B    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   &System.Windows.Forms.FormStartPosition   value__       BuildEventCommandLineDialogrSystem.Windows.Forms.Form, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089Cancel_ButtoninsertOkCancelTableLayoutPaneltSystem.Windows.Forms.Button, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0892CommandLineoverarchingTableLayoutPaneluSystem.Windows.Forms.TextBox, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0890CommandLinePanelsSystem.Windows.Forms.Panel, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089HideMacrosButtonMacrosPaneltSystem.Windows.Forms.Button, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0890InsertButtoninsertOkCancelTableLayoutPaneltSystem.Windows.Forms.Button, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0890MacrozSystem.Windows.Forms.ColumnHeader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089MacrosPaneloverarchingTableLayoutPanelsSystem.Windows.Forms.Panel, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0892OKButtoninsertOkCancelTableLayoutPaneltSystem.Windows.Forms.Button, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0891ShowMacrosButtonoverarchingTableLayoutPaneltSystem.Windows.Forms.Button, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0893	TokenListMacrosPanelvSystem.Windows.Forms.ListView, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0891ValuezSystem.Windows.Forms.ColumnHeader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089insertOkCancelTableLayoutPaneloverarchingTableLayoutPanel~System.Windows.Forms.TableLayoutPanel, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0891overarchingTableLayoutPanel$this~System.Windows.Forms.TableLayoutPanel, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0890C    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   !System.Windows.Forms.AnchorStyles   value__       D    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.ImeMode   value__        E    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy     ¢       A    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight     K         ÂèñÊ∂àÂª∫ÁΩÆÂëΩ‰ª§ÂàóC    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   !System.Windows.Forms.AnchorStyles   value__        E    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy             F    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.ScrollBars   value__       A    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight     Ü  u       G    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.DockStyle   value__       E    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy             A    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight     M  È      C    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   !System.Windows.Forms.AnchorStyles   value__    
   D    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.ImeMode   value__        E    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy     ;  ó   A    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight     K         << Â∑®ÈõÜ(&M)C    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   !System.Windows.Forms.AnchorStyles   value__        D    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.ImeMode   value__        E    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy             A    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight     K          
ÊèíÂÖ•(&N)Â∑®ÈõÜù   C    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   !System.Windows.Forms.AnchorStyles   value__       E    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy         {   A    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight     Ü  Æ      C    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   !System.Windows.Forms.AnchorStyles   value__       D    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.ImeMode   value__        E    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy     Q       A    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight     K         Á¢∫ÂÆöC    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   !System.Windows.Forms.AnchorStyles   value__       D    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.ImeMode   value__        E    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy     ;  /  A    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight     K         Â∑®ÈõÜ(&M) >>Â∑®ÈõÜÊ∏ÖÂñÆC    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   !System.Windows.Forms.AnchorStyles   value__       E    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy             A    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight     Ü  ë       ÂÄºù   C    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   !System.Windows.Forms.AnchorStyles   value__          E    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy     ô   O     A    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight     Ì         C    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   !System.Windows.Forms.AnchorStyles   value__          E    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy              A    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight     Ü  f            ªW  Œ Ôæ   ë   lSystem.Resources.ResourceReader, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089#System.Resources.RuntimeResourceSet   {   	   gSystem.Drawing.SizeF, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3azSystem.Windows.Forms.AutoSizeMode, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089uSystem.Windows.Forms.Padding, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089fSystem.Drawing.Size, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3azSystem.Windows.Forms.AnchorStyles, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089uSystem.Windows.Forms.ImeMode, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089gSystem.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3awSystem.Windows.Forms.DockStyle, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089xSystem.Windows.Forms.ScrollBars, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089PADPA<:bÉˇ¬†Ü 0˘áô∏√àö∏√à$(Câõ•JâF=˙â0÷çjçwzç∆ìˇç>0é’à5é»ÊêΩ¿ê≈eIë'^î	a∆ò6“òWMôloßö&wªúùyü*t¨†±9É°~“≠°Â[Ñ¢bMè¢ˆ§s*Ê®£"≤™2’'≠†jQ±õëô±óïô∏æ´∑ºªﬁºŸõ$∆¸Ä≥Ãµ´É“¡/´‘·iã’Y≈ã’®C[›sN6ﬂ¶ÚÀ‚]–ª„´ÌÄÊ®ÄNË 
ﬁÈ∏ø„È§FÍÜΩÍ¡‚8Ï√”ÔÌ FÜÔ“\.…ÌÛZ8ïÙÜ∑˘"ê,X`öu=Œ¯ Aiì"o$$¬		§õ
}GæÜ4∫òÄE˙zM˝IÃπ€k”÷7Ü 2~ƒ ˇ“˛ €“|"6#≤$‡âÀ$‡J£&G´Á&ˇ`Ì&T(Sîó(E  ,zH“,J`?4·N;>í∞<é=†pπ?Ì¿?Ãn@ Uv@:_BÆCÒBëŒ˙BÀQŒD±ÙJøFˆJ-‰ÉQøÖµVÑMKW˚ÀRW÷Q.^àl™`Öcd∫ºfd€Íªg~*Êlˇ1]n†Øp}‡ïp7u∆p`›¶sﬂYÆs¢ƒu˜í)~∞ ©~)  Í  ∆  !  \  g  Ò     ˛  	  ü    z  T  n  ï
  ﬁ
  H  ¡  ;  ≠  û   6  ∂  ?  Æ     )  ,  ö  ó  7   W  ≠  á  Å   •  Ë  ;  Ω  ∫  (  ˜  Ö  Ë  R  x  g  õ  †  Ó  \  {  L  ﬁ    *  ”  »  s  §  $  	  Ó  i  2  ˝  Â  Ä  ú  P  v    È  ™  É  O    ¸  √  ≤	     !  X   d  ⁄  °  H
  µ  O  Â  ‘  a  ”  œ  5  π  Ò  f  ∑   ‘       û  J  n  ›  O    “    è  3  ô    Ñ      Ü  i	  ˇ	    .  ÷  ó(  2$ t h i s . A u t o S c a l e D i m e n s i o n s     $ t h i s . A u t o S i z e •   $$ t h i s . A u t o S i z e M o d e ß   $ t h i s . M a r g i n T  $ t h i s . S i z e (  > > $ t h i s . N a m e Ã  > > $ t h i s . T y p e ·  4> > b t n P o s t B u i l d B u i l d e r . N a m e å  8> > b t n P o s t B u i l d B u i l d e r . P a r e n t °  4> > b t n P o s t B u i l d B u i l d e r . T y p e æ  8> > b t n P o s t B u i l d B u i l d e r . Z O r d e r 4  2> > b t n P r e B u i l d B u i l d e r . N a m e 7  6> > b t n P r e B u i l d B u i l d e r . P a r e n t K  2> > b t n P r e B u i l d B u i l d e r . T y p e h  6> > b t n P r e B u i l d B u i l d e r . Z O r d e r ﬁ  6> > c b o R u n P o s t B u i l d E v e n t . N a m e ·  :> > c b o R u n P o s t B u i l d E v e n t . P a r e n t ˜  6> > c b o R u n P o s t B u i l d E v e n t . T y p e   :> > c b o R u n P o s t B u i l d E v e n t . Z O r d e r å  F> > l b l P o s t B u i l d E v e n t C o m m a n d L i n e . N a m e è  J> > l b l P o s t B u i l d E v e n t C o m m a n d L i n e . P a r e n t ≠  F> > l b l P o s t B u i l d E v e n t C o m m a n d L i n e . T y p e    J> > l b l P o s t B u i l d E v e n t C o m m a n d L i n e . Z O r d e r ?  D> > l b l P r e B u i l d E v e n t C o m m a n d L i n e . N a m e B  H> > l b l P r e B u i l d E v e n t C o m m a n d L i n e . P a r e n t _  D> > l b l P r e B u i l d E v e n t C o m m a n d L i n e . T y p e |  H> > l b l P r e B u i l d E v e n t C o m m a n d L i n e . Z O r d e r Ò  6> > l b l R u n P o s t B u i l d E v e n t . N a m e Ù  :> > l b l R u n P o s t B u i l d E v e n t . P a r e n t 
  6> > l b l R u n P o s t B u i l d E v e n t . T y p e '  :> > l b l R u n P o s t B u i l d E v e n t . Z O r d e r ú  D> > o v e r a r c h i n g T a b l e L a y o u t P a n e l . N a m e ü  H> > o v e r a r c h i n g T a b l e L a y o u t P a n e l . P a r e n t º  D> > o v e r a r c h i n g T a b l e L a y o u t P a n e l . T y p e √  H> > o v e r a r c h i n g T a b l e L a y o u t P a n e l . Z O r d e r C  F> > t x t P o s t B u i l d E v e n t C o m m a n d L i n e . N a m e F  J> > t x t P o s t B u i l d E v e n t C o m m a n d L i n e . P a r e n t d  F> > t x t P o s t B u i l d E v e n t C o m m a n d L i n e . T y p e Å  J> > t x t P o s t B u i l d E v e n t C o m m a n d L i n e . Z O r d e r ¯  D> > t x t P r e B u i l d E v e n t C o m m a n d L i n e . N a m e ˚  H> > t x t P r e B u i l d E v e n t C o m m a n d L i n e . P a r e n t 	  D> > t x t P r e B u i l d E v e n t C o m m a n d L i n e . T y p e 5	  H> > t x t P r e B u i l d E v e n t C o m m a n d L i n e . Z O r d e r ¨	  Db t n P o s t B u i l d B u i l d e r . A c c e s s i b l e N a m e Ø	  4b t n P o s t B u i l d B u i l d e r . A n c h o r …	  8b t n P o s t B u i l d B u i l d e r . A u t o S i z e v
  @b t n P o s t B u i l d B u i l d e r . A u t o S i z e M o d e x
  6b t n P o s t B u i l d B u i l d e r . I m e M o d e %  8b t n P o s t B u i l d B u i l d e r . L o c a t i o n Õ  4b t n P o s t B u i l d B u i l d e r . M a r g i n i  6b t n P o s t B u i l d B u i l d e r . P a d d i n g =  0b t n P o s t B u i l d B u i l d e r . S i z e   8b t n P o s t B u i l d B u i l d e r . T a b I n d e x µ  0b t n P o s t B u i l d B u i l d e r . T e x t ∫  Bb t n P r e B u i l d B u i l d e r . A c c e s s i b l e N a m e ÿ  2b t n P r e B u i l d B u i l d e r . A n c h o r Ú  6b t n P r e B u i l d B u i l d e r . A u t o S i z e ü  >b t n P r e B u i l d B u i l d e r . A u t o S i z e M o d e °  4b t n P r e B u i l d B u i l d e r . I m e M o d e N  6b t n P r e B u i l d B u i l d e r . L o c a t i o n ˆ  2b t n P r e B u i l d B u i l d e r . M a r g i n í  4b t n P r e B u i l d B u i l d e r . P a d d i n g f  .b t n P r e B u i l d B u i l d e r . S i z e :  6b t n P r e B u i l d B u i l d e r . T a b I n d e x ﬁ  .b t n P r e B u i l d B u i l d e r . T e x t „  6c b o R u n P o s t B u i l d E v e n t . A n c h o r   4c b o R u n P o s t B u i l d E v e n t . I t e m s Æ  6c b o R u n P o s t B u i l d E v e n t . I t e m s 1 ∂  6c b o R u n P o s t B u i l d E v e n t . I t e m s 2 «  :c b o R u n P o s t B u i l d E v e n t . L o c a t i o n Á  6c b o R u n P o s t B u i l d E v e n t . M a r g i n É  2c b o R u n P o s t B u i l d E v e n t . S i z e W  :c b o R u n P o s t B u i l d E v e n t . T a b I n d e x ˚  Fl b l P o s t B u i l d E v e n t C o m m a n d L i n e . A n c h o r    Jl b l P o s t B u i l d E v e n t C o m m a n d L i n e . A u t o S i z e ≠  Hl b l P o s t B u i l d E v e n t C o m m a n d L i n e . I m e M o d e Ø  Jl b l P o s t B u i l d E v e n t C o m m a n d L i n e . L o c a t i o n W  Fl b l P o s t B u i l d E v e n t C o m m a n d L i n e . M a r g i n Û  Bl b l P o s t B u i l d E v e n t C o m m a n d L i n e . S i z e «  Jl b l P o s t B u i l d E v e n t C o m m a n d L i n e . T a b I n d e x k  Bl b l P o s t B u i l d E v e n t C o m m a n d L i n e . T e x t p  Dl b l P r e B u i l d E v e n t C o m m a n d L i n e . A n c h o r è  Hl b l P r e B u i l d E v e n t C o m m a n d L i n e . A u t o S i z e <  Fl b l P r e B u i l d E v e n t C o m m a n d L i n e . I m e M o d e >  Hl b l P r e B u i l d E v e n t C o m m a n d L i n e . L o c a t i o n Ê  Dl b l P r e B u i l d E v e n t C o m m a n d L i n e . M a r g i n Ç  @l b l P r e B u i l d E v e n t C o m m a n d L i n e . S i z e V  Hl b l P r e B u i l d E v e n t C o m m a n d L i n e . T a b I n d e x ˙  @l b l P r e B u i l d E v e n t C o m m a n d L i n e . T e x t ˇ  6l b l R u n P o s t B u i l d E v e n t . A n c h o r   :l b l R u n P o s t B u i l d E v e n t . A u t o S i z e À  8l b l R u n P o s t B u i l d E v e n t . I m e M o d e Õ  :l b l R u n P o s t B u i l d E v e n t . L o c a t i o n u  6l b l R u n P o s t B u i l d E v e n t . M a r g i n    2l b l R u n P o s t B u i l d E v e n t . S i z e Â   :l b l R u n P o s t B u i l d E v e n t . T a b I n d e x â!  2l b l R u n P o s t B u i l d E v e n t . T e x t é!  Po v e r a r c h i n g T a b l e L a y o u t P a n e l . A u t o S i z e M o d e ™!  No v e r a r c h i n g T a b l e L a y o u t P a n e l . C o l u m n C o u n t W"  @o v e r a r c h i n g T a b l e L a y o u t P a n e l . D o c k \"  To v e r a r c h i n g T a b l e L a y o u t P a n e l . L a y o u t S e t t i n g s #  Ho v e r a r c h i n g T a b l e L a y o u t P a n e l . L o c a t i o n º&  Ho v e r a r c h i n g T a b l e L a y o u t P a n e l . R o w C o u n t X'  @o v e r a r c h i n g T a b l e L a y o u t P a n e l . S i z e ]'  Ho v e r a r c h i n g T a b l e L a y o u t P a n e l . T a b I n d e x (  Vt x t P o s t B u i l d E v e n t C o m m a n d L i n e . A c c e s s i b l e N a m e (  Ft x t P o s t B u i l d E v e n t C o m m a n d L i n e . A n c h o r  (  Jt x t P o s t B u i l d E v e n t C o m m a n d L i n e . L o c a t i o n Õ(  Ft x t P o s t B u i l d E v e n t C o m m a n d L i n e . M a r g i n i)  Lt x t P o s t B u i l d E v e n t C o m m a n d L i n e . M u l t i l i n e =*  Nt x t P o s t B u i l d E v e n t C o m m a n d L i n e . S c r o l l B a r s ?*  Bt x t P o s t B u i l d E v e n t C o m m a n d L i n e . S i z e Í*  Jt x t P o s t B u i l d E v e n t C o m m a n d L i n e . T a b I n d e x é+  Jt x t P o s t B u i l d E v e n t C o m m a n d L i n e . W o r d W r a p ì+  Tt x t P r e B u i l d E v e n t C o m m a n d L i n e . A c c e s s i b l e N a m e ï+  Dt x t P r e B u i l d E v e n t C o m m a n d L i n e . A n c h o r Ø+  Ht x t P r e B u i l d E v e n t C o m m a n d L i n e . L o c a t i o n \,  Dt x t P r e B u i l d E v e n t C o m m a n d L i n e . M a r g i n ¯,  Jt x t P r e B u i l d E v e n t C o m m a n d L i n e . M u l t i l i n e Ã-  Lt x t P r e B u i l d E v e n t C o m m a n d L i n e . S c r o l l B a r s Œ-  @t x t P r e B u i l d E v e n t C o m m a n d L i n e . S i z e y.  Ht x t P r e B u i l d E v e n t C o m m a n d L i n e . T a b I n d e x /  Ht x t P r e B u i l d E v e n t C o m m a n d L i n e . W o r d W r a p "/  @    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.SizeF   widthheight       A  †AA    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   !System.Windows.Forms.AutoSizeMode   value__        B    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.Padding   _all_top_left_right_bottom                    C    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight     Ô  ê  BuildEventsPropPage®Microsoft.VisualStudio.Editors.PropertyPages.PropPageUserControlBase, Microsoft.VisualStudio.Editors, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3abtnPostBuildBuilderoverarchingTableLayoutPaneltSystem.Windows.Forms.Button, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0896btnPreBuildBuilderoverarchingTableLayoutPaneltSystem.Windows.Forms.Button, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0897cboRunPostBuildEventoverarchingTableLayoutPanelvSystem.Windows.Forms.ComboBox, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0892lblPostBuildEventCommandLineoverarchingTableLayoutPanelsSystem.Windows.Forms.Label, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0895lblPreBuildEventCommandLineoverarchingTableLayoutPanelsSystem.Windows.Forms.Label, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0890lblRunPostBuildEventoverarchingTableLayoutPanelsSystem.Windows.Forms.Label, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0894overarchingTableLayoutPanel$this~System.Windows.Forms.TableLayoutPanel, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0890txtPostBuildEventCommandLineoverarchingTableLayoutPaneluSystem.Windows.Forms.TextBox, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0891txtPreBuildEventCommandLineoverarchingTableLayoutPaneluSystem.Windows.Forms.TextBox, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0893Âª∫ÁΩÆÂæåÈÄ≤Ë°åÁ∑®ËºØ...D    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   !System.Windows.Forms.AnchorStyles   value__       A    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   !System.Windows.Forms.AutoSizeMode   value__        E    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.ImeMode   value__        F    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy     y  ˝   B    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.Padding   _all_top_left_right_bottom                       B    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.Padding   _all_top_left_right_bottom                       C    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight     v         Âª∫ÁΩÆÂæåÈÄ≤Ë°åÁ∑®ËºØ(&U)...Âª∫ÁΩÆÂâçÈÄ≤Ë°åÁ∑®ËºØ...D    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   !System.Windows.Forms.AnchorStyles   value__       A    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   !System.Windows.Forms.AutoSizeMode   value__        E    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.ImeMode   value__        F    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy     Ñ  p   B    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.Padding   _all_top_left_right_bottom                       B    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.Padding   _all_top_left_right_bottom                       C    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight     k         Âª∫ÁΩÆÂâçÈÄ≤Ë°åÁ∑®ËºØ(&I)...D    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   !System.Windows.Forms.AnchorStyles   value__       Ê∞∏ÈÅ†Âª∫ÁΩÆÊàêÂäüÊôÇÁï∂ÁµÑÂª∫Êõ¥Êñ∞Â∞àÊ°àËº∏Âá∫ÊôÇF    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy         )  B    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.Padding   _all_top_left_right_bottom                    
   C    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight     Ô        D    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   !System.Windows.Forms.AnchorStyles   value__       E    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.ImeMode   value__        F    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy         ç   B    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.Padding   _all_top_left_right_bottom                        C    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight     ñ         Âª∫ÁΩÆÂæå‰∫ã‰ª∂ÂëΩ‰ª§Âàó(&O):D    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   !System.Windows.Forms.AnchorStyles   value__       E    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.ImeMode   value__        F    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy             B    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.Padding   _all_top_left_right_bottom                        C    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight     ë          Âª∫ÁΩÆÂâç‰∫ã‰ª∂ÂëΩ‰ª§Âàó(&R):D    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   !System.Windows.Forms.AnchorStyles   value__       E    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.ImeMode   value__        F    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy           B    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.Padding   _all_top_left_right_bottom                        C    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight     z         Âü∑Ë°åÂª∫ÁΩÆÂæå‰∫ã‰ª∂(&N):A    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   !System.Windows.Forms.AutoSizeMode   value__           G    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.DockStyle   value__       ≥<?xml version="1.0" encoding="utf-16"?><TableLayoutSettings><Controls><Control Name="lblPreBuildEventCommandLine" Row="0" RowSpan="1" Column="0" ColumnSpan="1" /><Control Name="txtPostBuildEventCommandLine" Row="4" RowSpan="1" Column="0" ColumnSpan="1" /><Control Name="cboRunPostBuildEvent" Row="7" RowSpan="1" Column="0" ColumnSpan="1" /><Control Name="txtPreBuildEventCommandLine" Row="1" RowSpan="1" Column="0" ColumnSpan="1" /><Control Name="lblRunPostBuildEvent" Row="6" RowSpan="1" Column="0" ColumnSpan="1" /><Control Name="lblPostBuildEventCommandLine" Row="3" RowSpan="1" Column="0" ColumnSpan="1" /><Control Name="btnPostBuildBuilder" Row="5" RowSpan="1" Column="0" ColumnSpan="1" /><Control Name="btnPreBuildBuilder" Row="2" RowSpan="1" Column="0" ColumnSpan="1" /></Controls><Columns Styles="Percent,100" /><Rows Styles="AutoSize,0,Percent,50,AutoSize,0,AutoSize,0,Percent,50,AutoSize,0,AutoSize,0,AutoSize,0" /></TableLayoutSettings>F    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy                C    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight     Ô  ê      Âª∫ÁΩÆÂæå‰∫ã‰ª∂ÂëΩ‰ª§ÂàóD    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   !System.Windows.Forms.AnchorStyles   value__       F    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy         ú   B    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.Padding   _all_top_left_right_bottom                       H    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.ScrollBars   value__       C    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight     Ô  [       Âª∫ÁΩÆÂâç‰∫ã‰ª∂ÂëΩ‰ª§ÂàóD    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   !System.Windows.Forms.AnchorStyles   value__       F    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy            B    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.Padding   _all_top_left_right_bottom                       H    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.ScrollBars   value__       C    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight     Ô  [        €	 Œ Ôæ   ë   lSystem.Resources.ResourceReader, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089#System.Resources.RuntimeResourceSet   ö     fSystem.Drawing.Size, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3azSystem.Windows.Forms.AnchorStyles, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089uSystem.Windows.Forms.ImeMode, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089gSystem.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3auSystem.Windows.Forms.Padding, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089ÅSystem.Windows.Forms.TableLayoutSettings, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089PADPAD€£ÓÄ%–•Çèˆ É7Ã"ÉÅE¥ÉsœÉHŸÑ∑◊‰Ñ±Õ%ÜcÿπÜ‚∫ÜË¯ÜáV∞âﬁgäÿ”%ä˝Åää6 Ëä/Ö]ã0÷çjçwzç®ıwè¥üÖè”¯òèÈÃ~êBÃ5ë≤E‘ë–ËkíŸ›íñì"8ì˙‹_ìBô`ì7 ñÏÀÂó„ÓÎòú¯Ïò°Ùò¥Uˆòloßöˆ’ÍöAè5õ~À8õ¡+ú&wªútÇÕúpf^ùf$äûS‚üò@—üoFx†—Å†ã˝†w0$°§%°¡™°q÷§Nƒ∫•’‰•&∆/¶OD⁄¶ÊbßŸmß™v™£"≤™Mˇ™r‘
´ŒC´}¨˚kG¨ 0q¨2’'≠Î}NÆEàêÆ~e∞∆b∞ÿ•Y±5N¥±ÄEL≥ˇ¬S≥˙hı∂B%ˆ∂œ¯∏ãﬂ}∏— Kπ¨[{ª»ÉªYãª®˜çª^@º¶›DººøΩºªﬁº‹±æëæ˘›ıæÿâ¿Â#ö¡¶q†¬\Û√uÿ≈a“Á∆ñìå«(Ï≤«≠ô»ÈáX…Cd…B-Ä…=7Å…;¢…∏áß…,p ^Ì– ¶…’ ©Ñ0ÀˇëqÀ03ÖÃMÆ>ÕrkJÕáô…Õ8ÊŒÕhì¶ŒÃpœ3ÿ{œZ‹Z–±≠Â—7?s“œ‘t“á‰⁄“Çùà”,#ﬂÿåÿŸ8Ö^⁄û≥©⁄ä°Æ⁄Ê±Æ⁄Ú^Ø⁄Q¡Y‹oäb‹∂D¯›HY9ﬁES•ﬁz”¿ﬁ˙øﬂsN6ﬂµiﬂ2ruﬂw„≥ﬂ‡ÕﬂbÊ“ﬂry‹‡˚˚ ·Àvˆ·œü‚‚3Ω˘‚BÏæ„î\‰“&÷ÁÍZŸÁÎZŸÁÏZŸÁÌZŸÁÓZŸÁ≥ó¸Áü?_ËÿnœË€’?ÈF÷ÈâÆ«Î∂´◊ÎÂúÏÏ‚ÌØ…Úçq{Ò«ÂÚÒLÌ˝Ò
∞ÚıÂΩÚ:DÛ‹Ù~Û˜t
Ù¬[ÆıÂ∞pˆ6˜Ôjÿ¯Ü∑˘ù"F˙ tÙ˙Õ˘e˚1ﬂ»˚Ÿª˝Úü◊˝Ω=Q˛¬o2ˇN:oˇÊˆ©ÅŸLÕ	pÚÄÛjò\p5n=q”baWoïfOªørkuN—èòu˜¶ÅöÑ	ˇz©	„U
≤Y≠rY˚eG?ü†¨b5É FìZgÜ∫Zø)6G	_∞˛d£Â#ÙãLáçåßXÛ•h í¯®°æôŸB`C˙–¨wﬁ…w78iãL‚ˇf∏"hÄoâÉ·äq"Õø I#V„sFüi :@ª Õõ!Eé#"§Æù",•"Ô°¶"KÀı"º“#dr/#çÌ8$≤ÎH$Jl€%5ˆ‰%Ë(d&W%t&Ú.ó&?3´)!•ˇ*^"+å#á+ÊÔß,^≠¨,‡C-¡ß	/E∆/ÒÀ1ßºÕ1vûº2VM4Eï5Èˇ&5Qõ'5…}*5ˆ965¢(U5B¡Ø5∫∞5O±6˝òi7™Éæ7πΩÁ73îó85‚¡8˝mﬂ8Pµ9w‚◊9¶Öy=—Ïq>∆? Uv@ñˇ~@,óû@Ff€@rrvA:_B(ßdBÆCÒBëŒ˙BÊ•$C%√˚Cƒ&Dæ/Em÷ZEà!¿F(”FóÏ„FÕ;G£°KGdH§[:Hò=HﬁvH†lúI˝¸K˜ÔrK·ÏK˚X∏L¢EMcHME˜MêØN)¥àO™ÁODfQP;S⁄P9≤¯P˘¬ﬁQjÅ_Sà*Tˇ˙ôTI·¶U∆ÈÓUá	HV8VMV5‚W/ÄX˘À‡Xì2Y¡Y˛ÇÜYÈ£|Z≥ıo\Ó◊^5n^§S(^µŒ0^ó√{^Åeua 2>bXZbáÙãc8 çcﬁˆc7ÕdèÌıd’LfmÚfvüföCPfí!igõE°h’Œhkä!l¯÷æl_m∆Övm¨Û~m∞äm£mNn\πSnH¸Ön∑∑ënIÃ‘nÉZlo.3kp<„˚q^ÓGrYŸsuºPu\ÄXu»∂yu‚«∑uÆ^ıuÌÍ£v-àáxNêx~#yZ'yŸG®y∫æ¬yÁ<Ãyæú4{ˇŸä{‘øî{˙H¸{B˝{fDK|ª~
}’∫â}¡Pà~˜  U  J.  †.  Ó#  ÔQ  Ã  .  :Z  ˙  †  %  c3  1  ÚZ  √*  ]   ˇI  `K  ¸  í      ◊[  ¶7  ±#  SA  QV  .I  ≤(  –G  \+  æ+  {  ùS  ñ  8  ØD  AD  !   K  ¢  <  ¯8  ·L  .  éT   #  9  >Q  ¨  
  ?T  ÛF  EG  ¡Z  P[  <%  i-  |W  õ8  z"  Ù!  	>  Ø>      æ  T  I9  0:  [C  °  πK  pF  jG  wO  —O  3  9#  Ù  b  á(  Â(  ^?  ô  ¨:  b  ŸT  ‡  ¶[  5;  ã;  a'  €  7  h  ∆  Ÿ  âU  Ã@  7  Á9  õG  â+  $C  {E    X  v	  ‰  j    ÍX  *A  ÑA  M7  E  O<    ¥  ˆ  ê  ˙O  (  “  YM  πN  º?  @  ÷]  õ]  ‚D  \^  „Y  ÃR  ‘)  ZS  2*  W  S0  %  óX  ¸6  Î+    E  $   ö   ô^  cH  X>  õ  )  ∞E  
D  ó  %(  JO  Œ$   &  ô&  h&  7&  &  hP  π!  ¿I  Â?  ÿP    ò  ˝@  åN  %  Õ  0'  üP  ⁄  |  G!  ~<  \  ?@  
;  ,U  AY  OL  ±,  ¶%  ‚A  •)  É4  r)  U2  Å:  ©  :R  ++     z  ñC  Ω	  Ú'  L  M,  1]  ò0  0  #  g  ˇ  =  ı3  BJ  \;  ø\  D8  «.  ¢H  ≠   	  À  7  ;  CF  ·E  ^  Q  wQ  `  Œ  ÿ4  )  ’/  N6  ˆ*  π  ≤;  £6  ôF  ±  ]*  √-  Á  -    Â  q.  +	  Û7  ”  ¿J  í  ,  M  <  [  M/  :  ò  ÷  Ä  ‹  ö  S    ¯  z  /  ‡,  >-  O  K  y  ˚&  ª  _=  ˆ\  m  ò2  2  B  –  m%  âB  ÛB  M\  ı5  ›W  ñ9  ÂH  é*  v#  é'  HE  €:  l@  â  úL  \$  S  6X  àM  K  √  :   W   ˇ)  ÖR  Æ3  ã  µM  Â;  Ç  (  ’0  Ç\  G  \  æ  ≠A  ]  ï  ï  æV  ]  ®Q  ”2  œC  /?  ,  €1  }[  /P  6N  TB  ª"  ©  ◊%  .M  O  Í   t   Û  √  ÍN  84  ‘  Z  ò1  ˚  h]  .H  ≠  ∂=  Ì  X(  î-  tD  
  ∂
  '  -  }J  N  eN  W1  ÍU  µ<  }I  gZ  ∆F  ˛>  †O    !  Ç!    t    d  á  ¡  ‰M  ]
  ~,  ù@  :  ‹  F  ÏS  5"  ∫B  ´  òZ  è?  •  ?)  H  B  e  ”   ê5  îY  '$  ô$  √'  ê/  15  Ò  o  $ t h i s . A u t o S i z e     $ t h i s . S i z e    > > $ t h i s . N a m e ¶   > > $ t h i s . T y p e µ   4> > b t n O u t p u t P a t h B r o w s e . N a m e d  8> > b t n O u t p u t P a t h B r o w s e . P a r e n t y  4> > b t n O u t p u t P a t h B r o w s e . T y p e ñ  8> > b t n O u t p u t P a t h B r o w s e . Z O r d e r   0> > c b o P l a t f o r m T a r g e t . N a m e   4> > c b o P l a t f o r m T a r g e t . P a r e n t "  0> > c b o P l a t f o r m T a r g e t . T y p e ?  4> > c b o P l a t f o r m T a r g e t . Z O r d e r ∑  ,> > c b o W a r n i n g L e v e l . N a m e ª  0> > c b o W a r n i n g L e v e l . P a r e n t Ã  ,> > c b o W a r n i n g L e v e l . T y p e È  0> > c b o W a r n i n g L e v e l . Z O r d e r a  *> > c h k D e f i n e D e b u g . N a m e e  .> > c h k D e f i n e D e b u g . P a r e n t u  *> > c h k D e f i n e D e b u g . T y p e í  .> > c h k D e f i n e D e b u g . Z O r d e r 
  *> > c h k D e f i n e T r a c e . N a m e   .> > c h k D e f i n e T r a c e . P a r e n t   *> > c h k D e f i n e T r a c e . T y p e ;  .> > c h k D e f i n e T r a c e . Z O r d e r ≥  ,> > c h k O p t i m i z e C o d e . N a m e ∑  0> > c h k O p t i m i z e C o d e . P a r e n t »  ,> > c h k O p t i m i z e C o d e . T y p e Â  0> > c h k O p t i m i z e C o d e . Z O r d e r ]  *> > c h k P r e f e r 3 2 B i t . N a m e a  .> > c h k P r e f e r 3 2 B i t . P a r e n t q  *> > c h k P r e f e r 3 2 B i t . T y p e é  .> > c h k P r e f e r 3 2 B i t . Z O r d e r   &> > c h k T a i l c a l l s . N a m e 	  *> > c h k T a i l c a l l s . P a r e n t   &> > c h k T a i l c a l l s . T y p e 4  *> > c h k T a i l c a l l s . Z O r d e r ¨  <> > c h k X M L D o c u m e n t a t i o n F i l e . N a m e ∞  @> > c h k X M L D o c u m e n t a t i o n F i l e . P a r e n t …  <> > c h k X M L D o c u m e n t a t i o n F i l e . T y p e Ê  @> > c h k X M L D o c u m e n t a t i o n F i l e . Z O r d e r ^  :> > e r r o r s A n d W a r n i n g s L a b e l . N a m e a  >> > e r r o r s A n d W a r n i n g s L a b e l . P a r e n t y  :> > e r r o r s A n d W a r n i n g s L a b e l . T y p e ú  >> > e r r o r s A n d W a r n i n g s L a b e l . Z O r d e r   B> > e r r o r s A n d W a r n i n g s L i n e L a b e l . N a m e   F> > e r r o r s A n d W a r n i n g s L i n e L a b e l . P a r e n t 0  B> > e r r o r s A n d W a r n i n g s L i n e L a b e l . T y p e S  F> > e r r o r s A n d W a r n i n g s L i n e L a b e l . Z O r d e r »  P> > e r r o r s A n d W a r n i n g s T a b l e L a y o u t P a n e l . N a m e À  T> > e r r o r s A n d W a r n i n g s T a b l e L a y o u t P a n e l . P a r e n t Ó  P> > e r r o r s A n d W a r n i n g s T a b l e L a y o u t P a n e l . T y p e 	  T> > e r r o r s A n d W a r n i n g s T a b l e L a y o u t P a n e l . Z O r d e r ã	  H> > g e n e r a l H e a d e r T a b l e L a y o u t P a n e l . N a m e é	  L> > g e n e r a l H e a d e r T a b l e L a y o u t P a n e l . P a r e n t ≠	  H> > g e n e r a l H e a d e r T a b l e L a y o u t P a n e l . T y p e  	  L> > g e n e r a l H e a d e r T a b l e L a y o u t P a n e l . Z O r d e r J
  &> > g e n e r a l L a b e l . N a m e M
  *> > g e n e r a l L a b e l . P a r e n t [
  &> > g e n e r a l L a b e l . T y p e z
  *> > g e n e r a l L a b e l . Z O r d e r Ô
  .> > g e n e r a l L i n e L a b e l . N a m e Ú
  2> > g e n e r a l L i n e L a b e l . P a r e n t   .> > g e n e r a l L i n e L a b e l . T y p e #  2> > g e n e r a l L i n e L a b e l . Z O r d e r ò  N> > l b l C o n d i t i o n a l C o m p i l a t i o n S y m b o l s . N a m e õ  R> > l b l C o n d i t i o n a l C o m p i l a t i o n S y m b o l s . P a r e n t Ω  N> > l b l C o n d i t i o n a l C o m p i l a t i o n S y m b o l s . T y p e ⁄  R> > l b l C o n d i t i o n a l C o m p i l a t i o n S y m b o l s . Z O r d e r O  (> > l b l O t h e r F l a g s . N a m e S  ,> > l b l O t h e r F l a g s . P a r e n t b  (> > l b l O t h e r F l a g s . T y p e   ,> > l b l O t h e r F l a g s . Z O r d e r Ù  (> > l b l O u t p u t P a t h . N a m e ¯  ,> > l b l O u t p u t P a t h . P a r e n t   (> > l b l O u t p u t P a t h . T y p e $  ,> > l b l O u t p u t P a t h . Z O r d e r ô  0> > l b l P l a t f o r m T a r g e t . N a m e ú  4> > l b l P l a t f o r m T a r g e t . P a r e n t Ø  0> > l b l P l a t f o r m T a r g e t . T y p e Ã  4> > l b l P l a t f o r m T a r g e t . Z O r d e r A  2> > l b l S u p r e s s W a r n i n g s . N a m e E  6> > l b l S u p r e s s W a r n i n g s . P a r e n t Y  2> > l b l S u p r e s s W a r n i n g s . T y p e v  6> > l b l S u p r e s s W a r n i n g s . Z O r d e r Î  ,> > l b l W a r n i n g L e v e l . N a m e Ô  0> > l b l W a r n i n g L e v e l . P a r e n t    ,> > l b l W a r n i n g L e v e l . T y p e   0> > l b l W a r n i n g L e v e l . Z O r d e r í  $> > o u t p u t L a b e l . N a m e ñ  (> > o u t p u t L a b e l . P a r e n t £  $> > o u t p u t L a b e l . T y p e ª  (> > o u t p u t L a b e l . Z O r d e r 0  ,> > o u t p u t L i n e L a b e l . N a m e 3  0> > o u t p u t L i n e L a b e l . P a r e n t D  ,> > o u t p u t L i n e L a b e l . T y p e \  0> > o u t p u t L i n e L a b e l . Z O r d e r —  :> > o u t p u t T a b l e L a y o u t P a n e l . N a m e ‘  >> > o u t p u t T a b l e L a y o u t P a n e l . P a r e n t Ï  :> > o u t p u t T a b l e L a y o u t P a n e l . T y p e 	  >> > o u t p u t T a b l e L a y o u t P a n e l . Z O r d e r â  D> > o v e r a r c h i n g T a b l e L a y o u t P a n e l . N a m e å  H> > o v e r a r c h i n g T a b l e L a y o u t P a n e l . P a r e n t ©  D> > o v e r a r c h i n g T a b l e L a y o u t P a n e l . T y p e ∞  H> > o v e r a r c h i n g T a b l e L a y o u t P a n e l . Z O r d e r 0  &> > r b W a r n i n g A l l . N a m e 3  *> > r b W a r n i n g A l l . P a r e n t A  &> > r b W a r n i n g A l l . T y p e ^  *> > r b W a r n i n g A l l . Z O r d e r Ÿ  (> > r b W a r n i n g N o n e . N a m e ›  ,> > r b W a r n i n g N o n e . P a r e n t Ï  (> > r b W a r n i n g N o n e . T y p e 	  ,> > r b W a r n i n g N o n e . Z O r d e r Ñ  0> > r b W a r n i n g S p e c i f i c . N a m e à  4> > r b W a r n i n g S p e c i f i c . P a r e n t õ  0> > r b W a r n i n g S p e c i f i c . T y p e ∏  4> > r b W a r n i n g S p e c i f i c . Z O r d e r 3  B> > t r e a t W a r n i n g s A s E r r o r s L a b e l . N a m e 7  F> > t r e a t W a r n i n g s A s E r r o r s L a b e l . P a r e n t S  B> > t r e a t W a r n i n g s A s E r r o r s L a b e l . T y p e z  F> > t r e a t W a r n i n g s A s E r r o r s L a b e l . Z O r d e r Ô  J> > t r e a t W a r n i n g s A s E r r o r s L i n e L a b e l . N a m e Ú  N> > t r e a t W a r n i n g s A s E r r o r s L i n e L a b e l . P a r e n t   J> > t r e a t W a r n i n g s A s E r r o r s L i n e L a b e l . T y p e 9  N> > t r e a t W a r n i n g s A s E r r o r s L i n e L a b e l . Z O r d e r Æ  X> > t r e a t W a r n i n g s A s E r r o r s T a b l e L a y o u t P a n e l . N a m e ±  \> > t r e a t W a r n i n g s A s E r r o r s T a b l e L a y o u t P a n e l . P a r e n t ÿ  X> > t r e a t W a r n i n g s A s E r r o r s T a b l e L a y o u t P a n e l . T y p e ı  \> > t r e a t W a r n i n g s A s E r r o r s T a b l e L a y o u t P a n e l . Z O r d e r u  N> > t x t C o n d i t i o n a l C o m p i l a t i o n S y m b o l s . N a m e x  R> > t x t C o n d i t i o n a l C o m p i l a t i o n S y m b o l s . P a r e n t ö  N> > t x t C o n d i t i o n a l C o m p i l a t i o n S y m b o l s . T y p e ∑  R> > t x t C o n d i t i o n a l C o m p i l a t i o n S y m b o l s . Z O r d e r .  (> > t x t O t h e r F l a g s . N a m e 2  ,> > t x t O t h e r F l a g s . P a r e n t A  (> > t x t O t h e r F l a g s . T y p e ^  ,> > t x t O t h e r F l a g s . Z O r d e r ’  (> > t x t O u t p u t P a t h . N a m e Ÿ  ,> > t x t O u t p u t P a t h . P a r e n t Ë  (> > t x t O u t p u t P a t h . T y p e   ,> > t x t O u t p u t P a t h . Z O r d e r |  4> > t x t S p e c i f i c W a r n i n g s . N a m e   8> > t x t S p e c i f i c W a r n i n g s . P a r e n t î  4> > t x t S p e c i f i c W a r n i n g s . T y p e ±  8> > t x t S p e c i f i c W a r n i n g s . Z O r d e r (  2> > t x t S u p r e s s W a r n i n g s . N a m e ,  6> > t x t S u p r e s s W a r n i n g s . P a r e n t @  2> > t x t S u p r e s s W a r n i n g s . T y p e ]  6> > t x t S u p r e s s W a r n i n g s . Z O r d e r ‘  <> > t x t X M L D o c u m e n t a t i o n F i l e . N a m e ÿ  @> > t x t X M L D o c u m e n t a t i o n F i l e . P a r e n t Ò  <> > t x t X M L D o c u m e n t a t i o n F i l e . T y p e   @> > t x t X M L D o c u m e n t a t i o n F i l e . Z O r d e r Ö  4b t n O u t p u t P a t h B r o w s e . A n c h o r à  8b t n O u t p u t P a t h B r o w s e . A u t o S i z e 5  6b t n O u t p u t P a t h B r o w s e . I m e M o d e 7  8b t n O u t p u t P a t h B r o w s e . L o c a t i o n ﬂ  4b t n O u t p u t P a t h B r o w s e . M a r g i n {  0b t n O u t p u t P a t h B r o w s e . S i z e O  8b t n O u t p u t P a t h B r o w s e . T a b I n d e x Û  0b t n O u t p u t P a t h B r o w s e . T e x t ¯  0c b o P l a t f o r m T a r g e t . A n c h o r   4c b o P l a t f o r m T a r g e t . L o c a t i o n ¥  ,c b o P l a t f o r m T a r g e t . S i z e P  4c b o P l a t f o r m T a r g e t . T a b I n d e x Ù  ,c b o W a r n i n g L e v e l . A n c h o r ˘  *c b o W a r n i n g L e v e l . I t e m s ¶   ,c b o W a r n i n g L e v e l . I t e m s 1 ©   ,c b o W a r n i n g L e v e l . I t e m s 2 ¨   ,c b o W a r n i n g L e v e l . I t e m s 3 Ø   ,c b o W a r n i n g L e v e l . I t e m s 4 ≤   ,c b o W a r n i n g L e v e l . I t e m s 5 µ   0c b o W a r n i n g L e v e l . L o c a t i o n ∏   ,c b o W a r n i n g L e v e l . M a r g i n T!  (c b o W a r n i n g L e v e l . S i z e ("  0c b o W a r n i n g L e v e l . T a b I n d e x Ã"  *c h k D e f i n e D e b u g . A n c h o r —"  .c h k D e f i n e D e b u g . A u t o S i z e ~#  .c h k D e f i n e D e b u g . L o c a t i o n Ä#  *c h k D e f i n e D e b u g . M a r g i n $  &c h k D e f i n e D e b u g . S i z e $  .c h k D e f i n e D e b u g . T a b I n d e x î%  &c h k D e f i n e D e b u g . T e x t ô%  *c h k D e f i n e T r a c e . A n c h o r ≤%  .c h k D e f i n e T r a c e . A u t o S i z e _&  .c h k D e f i n e T r a c e . L o c a t i o n a&  *c h k D e f i n e T r a c e . M a r g i n ˝&  &c h k D e f i n e T r a c e . S i z e —'  .c h k D e f i n e T r a c e . T a b I n d e x u(  &c h k D e f i n e T r a c e . T e x t z(  ,c h k O p t i m i z e C o d e . A n c h o r ì(  0c h k O p t i m i z e C o d e . A u t o S i z e @)  .c h k O p t i m i z e C o d e . I m e M o d e B)  0c h k O p t i m i z e C o d e . L o c a t i o n Í)  ,c h k O p t i m i z e C o d e . M a r g i n Ü*  (c h k O p t i m i z e C o d e . S i z e Z+  0c h k O p t i m i z e C o d e . T a b I n d e x ˛+  (c h k O p t i m i z e C o d e . T e x t ,  *c h k P r e f e r 3 2 B i t . A n c h o r ,  .c h k P r e f e r 3 2 B i t . A u t o S i z e »,  ,c h k P r e f e r 3 2 B i t . I m e M o d e  ,  .c h k P r e f e r 3 2 B i t . L o c a t i o n r-  *c h k P r e f e r 3 2 B i t . M a r g i n .  &c h k P r e f e r 3 2 B i t . S i z e ‚.  .c h k P r e f e r 3 2 B i t . T a b I n d e x Ü/  &c h k P r e f e r 3 2 B i t . T e x t ã/  &c h k T a i l c a l l s . A n c h o r ß/  *c h k T a i l c a l l s . A u t o S i z e T0  (c h k T a i l c a l l s . I m e M o d e V0  *c h k T a i l c a l l s . L o c a t i o n ˛0  &c h k T a i l c a l l s . M a r g i n ö1  "c h k T a i l c a l l s . S i z e n2  *c h k T a i l c a l l s . T a b I n d e x 3  "c h k T a i l c a l l s . T e x t 3  <c h k X M L D o c u m e n t a t i o n F i l e . A n c h o r /3  @c h k X M L D o c u m e n t a t i o n F i l e . A u t o S i z e ‹3  >c h k X M L D o c u m e n t a t i o n F i l e . I m e M o d e ﬁ3  @c h k X M L D o c u m e n t a t i o n F i l e . L o c a t i o n Ü4  <c h k X M L D o c u m e n t a t i o n F i l e . M a r g i n "5  8c h k X M L D o c u m e n t a t i o n F i l e . S i z e ˆ5  @c h k X M L D o c u m e n t a t i o n F i l e . T a b I n d e x ö6  8c h k X M L D o c u m e n t a t i o n F i l e . T e x t ü6  :e r r o r s A n d W a r n i n g s L a b e l . A n c h o r ∂6  >e r r o r s A n d W a r n i n g s L a b e l . A u t o S i z e c7  <e r r o r s A n d W a r n i n g s L a b e l . I m e M o d e e7  >e r r o r s A n d W a r n i n g s L a b e l . L o c a t i o n 8  :e r r o r s A n d W a r n i n g s L a b e l . M a r g i n ©8  6e r r o r s A n d W a r n i n g s L a b e l . S i z e }9  >e r r o r s A n d W a r n i n g s L a b e l . T a b I n d e x !:  6e r r o r s A n d W a r n i n g s L a b e l . T e x t &:  Be r r o r s A n d W a r n i n g s L i n e L a b e l . A n c h o r 7:  De r r o r s A n d W a r n i n g s L i n e L a b e l . I m e M o d e ‰:  Fe r r o r s A n d W a r n i n g s L i n e L a b e l . L o c a t i o n å;  Be r r o r s A n d W a r n i n g s L i n e L a b e l . M a r g i n (<  >e r r o r s A n d W a r n i n g s L i n e L a b e l . S i z e ¸<  Fe r r o r s A n d W a r n i n g s L i n e L a b e l . T a b I n d e x †=  Pe r r o r s A n d W a r n i n g s T a b l e L a y o u t P a n e l . A n c h o r •=  Te r r o r s A n d W a r n i n g s T a b l e L a y o u t P a n e l . A u t o S i z e R>  Ze r r o r s A n d W a r n i n g s T a b l e L a y o u t P a n e l . C o l u m n C o u n t T>  `e r r o r s A n d W a r n i n g s T a b l e L a y o u t P a n e l . L a y o u t S e t t i n g s Y>  Te r r o r s A n d W a r n i n g s T a b l e L a y o u t P a n e l . L o c a t i o n x@  Pe r r o r s A n d W a r n i n g s T a b l e L a y o u t P a n e l . M a r g i n A  Te r r o r s A n d W a r n i n g s T a b l e L a y o u t P a n e l . R o w C o u n t ËA  Le r r o r s A n d W a r n i n g s T a b l e L a y o u t P a n e l . S i z e ÌA  Te r r o r s A n d W a r n i n g s T a b l e L a y o u t P a n e l . T a b I n d e x ëB  Hg e n e r a l H e a d e r T a b l e L a y o u t P a n e l . A n c h o r ñB  Lg e n e r a l H e a d e r T a b l e L a y o u t P a n e l . A u t o S i z e CC  Rg e n e r a l H e a d e r T a b l e L a y o u t P a n e l . C o l u m n C o u n t EC  Xg e n e r a l H e a d e r T a b l e L a y o u t P a n e l . L a y o u t S e t t i n g s JC  Lg e n e r a l H e a d e r T a b l e L a y o u t P a n e l . L o c a t i o n UE  Hg e n e r a l H e a d e r T a b l e L a y o u t P a n e l . M a r g i n ÒE  Lg e n e r a l H e a d e r T a b l e L a y o u t P a n e l . R o w C o u n t ≈F  Dg e n e r a l H e a d e r T a b l e L a y o u t P a n e l . S i z e  F  Lg e n e r a l H e a d e r T a b l e L a y o u t P a n e l . T a b I n d e x nG  &g e n e r a l L a b e l . A n c h o r sG  *g e n e r a l L a b e l . A u t o S i z e  H  *g e n e r a l L a b e l . L o c a t i o n "H  &g e n e r a l L a b e l . M a r g i n æH  "g e n e r a l L a b e l . S i z e íI  *g e n e r a l L a b e l . T a b I n d e x 6J  "g e n e r a l L a b e l . T e x t ;J  .g e n e r a l L i n e L a b e l . A n c h o r CJ  2g e n e r a l L i n e L a b e l . L o c a t i o n J  .g e n e r a l L i n e L a b e l . M a r g i n åK  *g e n e r a l L i n e L a b e l . S i z e `L  2g e n e r a l L i n e L a b e l . T a b I n d e x M  Nl b l C o n d i t i o n a l C o m p i l a t i o n S y m b o l s . A n c h o r 	M  Rl b l C o n d i t i o n a l C o m p i l a t i o n S y m b o l s . A u t o S i z e ∂M  Rl b l C o n d i t i o n a l C o m p i l a t i o n S y m b o l s . L o c a t i o n ∏M  Nl b l C o n d i t i o n a l C o m p i l a t i o n S y m b o l s . M a r g i n TN  Jl b l C o n d i t i o n a l C o m p i l a t i o n S y m b o l s . S i z e (O  Rl b l C o n d i t i o n a l C o m p i l a t i o n S y m b o l s . T a b I n d e x ÃO  Jl b l C o n d i t i o n a l C o m p i l a t i o n S y m b o l s . T e x t —O  ,l b l O t h e r F l a g s . A u t o S i z e O  *l b l O t h e r F l a g s . I m e M o d e ÚO  ,l b l O t h e r F l a g s . L o c a t i o n öP  (l b l O t h e r F l a g s . M a r g i n 6Q  $l b l O t h e r F l a g s . S i z e 
R  ,l b l O t h e r F l a g s . T a b I n d e x ÆR  $l b l O t h e r F l a g s . T e x t ≥R  (l b l O u t p u t P a t h . A n c h o r ∆R  ,l b l O u t p u t P a t h . A u t o S i z e sS  *l b l O u t p u t P a t h . I m e M o d e uS  ,l b l O u t p u t P a t h . L o c a t i o n T  (l b l O u t p u t P a t h . M a r g i n πT  $l b l O u t p u t P a t h . S i z e çU  ,l b l O u t p u t P a t h . T a b I n d e x 1V  $l b l O u t p u t P a t h . T e x t 6V  0l b l P l a t f o r m T a r g e t . A n c h o r IV  4l b l P l a t f o r m T a r g e t . A u t o S i z e ˆV  4l b l P l a t f o r m T a r g e t . L o c a t i o n ¯V  0l b l P l a t f o r m T a r g e t . M a r g i n îW  ,l b l P l a t f o r m T a r g e t . S i z e hX  4l b l P l a t f o r m T a r g e t . T a b I n d e x Y  ,l b l P l a t f o r m T a r g e t . T e x t Y  2l b l S u p r e s s W a r n i n g s . A n c h o r $Y  6l b l S u p r e s s W a r n i n g s . A u t o S i z e —Y  4l b l S u p r e s s W a r n i n g s . I m e M o d e ”Y  6l b l S u p r e s s W a r n i n g s . L o c a t i o n {Z  2l b l S u p r e s s W a r n i n g s . M a r g i n [  .l b l S u p r e s s W a r n i n g s . S i z e Î[  6l b l S u p r e s s W a r n i n g s . T a b I n d e x è\  .l b l S u p r e s s W a r n i n g s . T e x t î\  ,l b l W a r n i n g L e v e l . A n c h o r ß\  0l b l W a r n i n g L e v e l . A u t o S i z e T]  .l b l W a r n i n g L e v e l . I m e M o d e V]  0l b l W a r n i n g L e v e l . L o c a t i o n ˛]  ,l b l W a r n i n g L e v e l . M a r g i n ö^  (l b l W a r n i n g L e v e l . S i z e n_  0l b l W a r n i n g L e v e l . T a b I n d e x `  (l b l W a r n i n g L e v e l . T e x t `  $o u t p u t L a b e l . A n c h o r *`  (o u t p u t L a b e l . A u t o S i z e ◊`  (o u t p u t L a b e l . L o c a t i o n Ÿ`   o u t p u t L a b e l . S i z e ua  (o u t p u t L a b e l . T a b I n d e x b   o u t p u t L a b e l . T e x t b  ,o u t p u t L i n e L a b e l . A n c h o r &b  0o u t p u t L i n e L a b e l . L o c a t i o n ”b  ,o u t p u t L i n e L a b e l . M a r g i n oc  (o u t p u t L i n e L a b e l . S i z e Cd  0o u t p u t L i n e L a b e l . T a b I n d e x Ád  :o u t p u t T a b l e L a y o u t P a n e l . A n c h o r Ïd  >o u t p u t T a b l e L a y o u t P a n e l . A u t o S i z e ôe  Do u t p u t T a b l e L a y o u t P a n e l . C o l u m n C o u n t õe  Jo u t p u t T a b l e L a y o u t P a n e l . L a y o u t S e t t i n g s †e  >o u t p u t T a b l e L a y o u t P a n e l . L o c a t i o n ©g  :o u t p u t T a b l e L a y o u t P a n e l . M a r g i n Eh  >o u t p u t T a b l e L a y o u t P a n e l . R o w C o u n t i  6o u t p u t T a b l e L a y o u t P a n e l . S i z e i  >o u t p u t T a b l e L a y o u t P a n e l . T a b I n d e x ¬i  Ho v e r a r c h i n g T a b l e L a y o u t P a n e l . A u t o S i z e «i  No v e r a r c h i n g T a b l e L a y o u t P a n e l . C o l u m n C o u n t …i  To v e r a r c h i n g T a b l e L a y o u t P a n e l . L a y o u t S e t t i n g s Œi  Ho v e r a r c h i n g T a b l e L a y o u t P a n e l . L o c a t i o n eu  Do v e r a r c h i n g T a b l e L a y o u t P a n e l . M a r g i n v  Ho v e r a r c h i n g T a b l e L a y o u t P a n e l . R o w C o u n t ’v  @o v e r a r c h i n g T a b l e L a y o u t P a n e l . S i z e ⁄v  Ho v e r a r c h i n g T a b l e L a y o u t P a n e l . T a b I n d e x ~w  &r b W a r n i n g A l l . A n c h o r Éw  *r b W a r n i n g A l l . A u t o S i z e 0x  (r b W a r n i n g A l l . I m e M o d e 2x  *r b W a r n i n g A l l . L o c a t i o n ⁄x  &r b W a r n i n g A l l . M a r g i n vy  "r b W a r n i n g A l l . S i z e Jz  *r b W a r n i n g A l l . T a b I n d e x Óz  "r b W a r n i n g A l l . T e x t Ûz  (r b W a r n i n g N o n e . A n c h o r ˇz  ,r b W a r n i n g N o n e . A u t o S i z e ¨{  *r b W a r n i n g N o n e . I m e M o d e Æ{  ,r b W a r n i n g N o n e . L o c a t i o n V|  (r b W a r n i n g N o n e . M a r g i n Ú|  $r b W a r n i n g N o n e . S i z e ∆}  ,r b W a r n i n g N o n e . T a b I n d e x j~  $r b W a r n i n g N o n e . T e x t o~  0r b W a r n i n g S p e c i f i c . A n c h o r x~  4r b W a r n i n g S p e c i f i c . A u t o S i z e %  2r b W a r n i n g S p e c i f i c . I m e M o d e '  4r b W a r n i n g S p e c i f i c . L o c a t i o n œ  0r b W a r n i n g S p e c i f i c . M a r g i n kÄ  ,r b W a r n i n g S p e c i f i c . S i z e ?Å  4r b W a r n i n g S p e c i f i c . T a b I n d e x „Å  ,r b W a r n i n g S p e c i f i c . T e x t ËÅ  Bt r e a t W a r n i n g s A s E r r o r s L a b e l . A n c h o r ˚Å  Ft r e a t W a r n i n g s A s E r r o r s L a b e l . A u t o S i z e ®Ç  Ft r e a t W a r n i n g s A s E r r o r s L a b e l . L o c a t i o n ™Ç  Bt r e a t W a r n i n g s A s E r r o r s L a b e l . M a r g i n FÉ  >t r e a t W a r n i n g s A s E r r o r s L a b e l . S i z e Ñ  Ft r e a t W a r n i n g s A s E r r o r s L a b e l . T a b I n d e x æÑ  >t r e a t W a r n i n g s A s E r r o r s L a b e l . T e x t √Ñ  Jt r e a t W a r n i n g s A s E r r o r s L i n e L a b e l . A n c h o r ⁄Ñ  Nt r e a t W a r n i n g s A s E r r o r s L i n e L a b e l . L o c a t i o n áÖ  Jt r e a t W a r n i n g s A s E r r o r s L i n e L a b e l . M a r g i n #Ü  Ft r e a t W a r n i n g s A s E r r o r s L i n e L a b e l . S i z e ˜Ü  Nt r e a t W a r n i n g s A s E r r o r s L i n e L a b e l . T a b I n d e x õá  Xt r e a t W a r n i n g s A s E r r o r s T a b l e L a y o u t P a n e l . A n c h o r †á  \t r e a t W a r n i n g s A s E r r o r s T a b l e L a y o u t P a n e l . A u t o S i z e Mà  bt r e a t W a r n i n g s A s E r r o r s T a b l e L a y o u t P a n e l . C o l u m n C o u n t Oà  ht r e a t W a r n i n g s A s E r r o r s T a b l e L a y o u t P a n e l . L a y o u t S e t t i n g s Tà  \t r e a t W a r n i n g s A s E r r o r s T a b l e L a y o u t P a n e l . L o c a t i o n {ä  Xt r e a t W a r n i n g s A s E r r o r s T a b l e L a y o u t P a n e l . M a r g i n ã  \t r e a t W a r n i n g s A s E r r o r s T a b l e L a y o u t P a n e l . R o w C o u n t Îã  Tt r e a t W a r n i n g s A s E r r o r s T a b l e L a y o u t P a n e l . S i z e ã  \t r e a t W a r n i n g s A s E r r o r s T a b l e L a y o u t P a n e l . T a b I n d e x îå  Nt x t C o n d i t i o n a l C o m p i l a t i o n S y m b o l s . A n c h o r ôå  Rt x t C o n d i t i o n a l C o m p i l a t i o n S y m b o l s . L o c a t i o n Fç  Nt x t C o n d i t i o n a l C o m p i l a t i o n S y m b o l s . M a r g i n ‚ç  Jt x t C o n d i t i o n a l C o m p i l a t i o n S y m b o l s . S i z e ∂é  Rt x t C o n d i t i o n a l C o m p i l a t i o n S y m b o l s . T a b I n d e x Zè  (t x t O t h e r F l a g s . A n c h o r _è  ,t x t O t h e r F l a g s . L o c a t i o n ê  $t x t O t h e r F l a g s . S i z e ®ê  ,t x t O t h e r F l a g s . T a b I n d e x Lë  (t x t O u t p u t P a t h . A n c h o r Që  ,t x t O u t p u t P a t h . L o c a t i o n ˛ë  (t x t O u t p u t P a t h . M a r g i n öí  $t x t O u t p u t P a t h . S i z e nì  ,t x t O u t p u t P a t h . T a b I n d e x î  4t x t S p e c i f i c W a r n i n g s . A n c h o r î  8t x t S p e c i f i c W a r n i n g s . L o c a t i o n ƒî  0t x t S p e c i f i c W a r n i n g s . S i z e `ï  8t x t S p e c i f i c W a r n i n g s . T a b I n d e x ñ  2t x t S u p r e s s W a r n i n g s . A n c h o r 	ñ  6t x t S u p r e s s W a r n i n g s . L o c a t i o n ∂ñ  2t x t S u p r e s s W a r n i n g s . M a r g i n Ró  .t x t S u p r e s s W a r n i n g s . S i z e &ò  6t x t S u p r e s s W a r n i n g s . T a b I n d e x  ò  <t x t X M L D o c u m e n t a t i o n F i l e . A n c h o r œò  @t x t X M L D o c u m e n t a t i o n F i l e . L o c a t i o n |ô  8t x t X M L D o c u m e n t a t i o n F i l e . S i z e ö  @t x t X M L D o c u m e n t a t i o n F i l e . T a b I n d e x ºö  @    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight     Á  °  BuildPropPage¨Microsoft.VisualStudio.Editors.PropertyPages.PropPageUserControlBase, FSharp.ProjectSystem.PropertyPages, Version=15.7.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3abtnOutputPathBrowseoverarchingTableLayoutPaneltSystem.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0897cboPlatformTargetoverarchingTableLayoutPanelvSystem.Windows.Forms.ComboBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e08918cboWarningLeveloverarchingTableLayoutPanelvSystem.Windows.Forms.ComboBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e08916chkDefineDebugoverarchingTableLayoutPanelvSystem.Windows.Forms.CheckBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e08922chkDefineTraceoverarchingTableLayoutPanelvSystem.Windows.Forms.CheckBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e08921chkOptimizeCodeoverarchingTableLayoutPanelvSystem.Windows.Forms.CheckBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e08919chkPrefer32BitoverarchingTableLayoutPanelvSystem.Windows.Forms.CheckBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0890chkTailcallsoverarchingTableLayoutPanelvSystem.Windows.Forms.CheckBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e08920chkXMLDocumentationFileoverarchingTableLayoutPanelvSystem.Windows.Forms.CheckBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0895errorsAndWarningsLabel!errorsAndWarningsTableLayoutPanelsSystem.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0891errorsAndWarningsLineLabel!errorsAndWarningsTableLayoutPanelsSystem.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0890!errorsAndWarningsTableLayoutPaneloverarchingTableLayoutPanel~System.Windows.Forms.TableLayoutPanel, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0894generalHeaderTableLayoutPaneloverarchingTableLayoutPanel~System.Windows.Forms.TableLayoutPanel, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0892generalLabelgeneralHeaderTableLayoutPanelsSystem.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0891generalLineLabelgeneralHeaderTableLayoutPanelsSystem.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0890 lblConditionalCompilationSymbolsoverarchingTableLayoutPanelsSystem.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e08924lblOtherFlagsoverarchingTableLayoutPanelsSystem.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e08927lblOutputPathoverarchingTableLayoutPanelsSystem.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0899lblPlatformTargetoverarchingTableLayoutPanelsSystem.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e08925lblSupressWarningsoverarchingTableLayoutPanelsSystem.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e08915lblWarningLeveloverarchingTableLayoutPanelsSystem.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e08917outputLabeloutputTableLayoutPanelsSystem.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0891outputLineLabeloutputTableLayoutPanelsSystem.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0890outputTableLayoutPaneloverarchingTableLayoutPanel~System.Windows.Forms.TableLayoutPanel, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0891overarchingTableLayoutPanel$this~System.Windows.Forms.TableLayoutPanel, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0890rbWarningAlloverarchingTableLayoutPanelySystem.Windows.Forms.RadioButton, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e08910rbWarningNoneoverarchingTableLayoutPanelySystem.Windows.Forms.RadioButton, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e08913rbWarningSpecificoverarchingTableLayoutPanelySystem.Windows.Forms.RadioButton, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e08911treatWarningsAsErrorsLabel%treatWarningsAsErrorsTableLayoutPanelsSystem.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0891treatWarningsAsErrorsLineLabel%treatWarningsAsErrorsTableLayoutPanelsSystem.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0890%treatWarningsAsErrorsTableLayoutPaneloverarchingTableLayoutPanel~System.Windows.Forms.TableLayoutPanel, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0893 txtConditionalCompilationSymbolsoverarchingTableLayoutPaneluSystem.Windows.Forms.TextBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e08923txtOtherFlagsoverarchingTableLayoutPaneluSystem.Windows.Forms.TextBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e08926txtOutputPathoverarchingTableLayoutPaneluSystem.Windows.Forms.TextBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0898txtSpecificWarningsoverarchingTableLayoutPaneluSystem.Windows.Forms.TextBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e08912txtSupressWarningsoverarchingTableLayoutPaneluSystem.Windows.Forms.TextBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e08914txtXMLDocumentationFileoverarchingTableLayoutPaneluSystem.Windows.Forms.TextBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e0896A    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   !System.Windows.Forms.AnchorStyles   value__       B    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.ImeMode   value__        C    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy     x  k  D    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.Padding   _all_top_left_right_bottom                      @    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight     o   #      ÁÄèË¶Ω(&R)...A    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   !System.Windows.Forms.AnchorStyles   value__       C    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy     c  è   @    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight     }   !      A    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   !System.Windows.Forms.AnchorStyles   value__       012345C    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy     c  b  D    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.Padding   _all_top_left_right_bottom                     @    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight     }   !      A    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   !System.Windows.Forms.AnchorStyles   value__       C    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy        I   D    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.Padding   _all_top_left_right_bottom                     @    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight             ÂÆöÁæ© DEBUG Â∏∏Êï∏(&U)A    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   !System.Windows.Forms.AnchorStyles   value__       C    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy        l   D    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.Padding   _all_top_left_right_bottom                     @    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight             ÂÆöÁæ© TRACE Â∏∏Êï∏(&A)A    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   !System.Windows.Forms.AnchorStyles   value__       B    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.ImeMode   value__        C    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy        Û   D    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.Padding   _all_top_left_right_bottom                     @    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight     µ      	   ÊúÄ‰Ω≥ÂåñÁ®ãÂºèÁ¢º(&Z)A    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   !System.Windows.Forms.AnchorStyles   value__       B    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.ImeMode   value__        C    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy        ÿ   D    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.Padding   _all_top_left_right_bottom                      @    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight     ¢      	   Âª∫Ë≠∞‰ΩøÁî® 32 ‰ΩçÂÖÉ(&P)A    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   !System.Windows.Forms.AnchorStyles   value__       B    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.ImeMode   value__        C    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy          D    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.Padding   _all_top_left_right_bottom                     @    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight     Ÿ      	   Áî¢Áîü Tail ÂëºÂè´(&E)A    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   !System.Windows.Forms.AnchorStyles   value__       B    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.ImeMode   value__        C    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy        î  D    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.Padding   _all_top_left_right_bottom                     @    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight       
      XML Êñá‰ª∂Ê™îÊ°à(&X):A    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   !System.Windows.Forms.AnchorStyles   value__       B    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.ImeMode   value__        C    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy             D    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.Padding   _all_top_left_right_bottom                        @    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight     Ã          ÈåØË™§ÂíåË≠¶ÂëäA    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   !System.Windows.Forms.AnchorStyles   value__       B    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.ImeMode   value__        C    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy     “      D    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.Padding   _all_top_left_right_bottom                        @    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight             A    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   !System.Windows.Forms.AnchorStyles   value__          E    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   (System.Windows.Forms.TableLayoutSettings   SerializedString      ‡<?xml version="1.0" encoding="utf-16"?><TableLayoutSettings><Controls><Control Name="errorsAndWarningsLineLabel" Row="0" RowSpan="1" Column="1" ColumnSpan="1" /><Control Name="errorsAndWarningsLabel" Row="0" RowSpan="1" Column="0" ColumnSpan="1" /></Controls><Columns Styles="AutoSize,0,Percent,100" /><Rows Styles="AutoSize,0" /></TableLayoutSettings>C    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy         >  D    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.Padding   _all_top_left_right_bottom                           @    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight     Á     	   A    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   !System.Windows.Forms.AnchorStyles   value__          E    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   (System.Windows.Forms.TableLayoutSettings   SerializedString      Ã<?xml version="1.0" encoding="utf-16"?><TableLayoutSettings><Controls><Control Name="generalLineLabel" Row="0" RowSpan="1" Column="1" ColumnSpan="1" /><Control Name="generalLabel" Row="0" RowSpan="1" Column="0" ColumnSpan="1" /></Controls><Columns Styles="AutoSize,0,Percent,100" /><Rows Styles="AutoSize,0" /></TableLayoutSettings>C    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy             D    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.Padding   _all_top_left_right_bottom                           @    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight     Á         A    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   !System.Windows.Forms.AnchorStyles   value__       C    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy             D    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.Padding   _all_top_left_right_bottom                        @    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight     X          ‰∏ÄËà¨A    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   !System.Windows.Forms.AnchorStyles   value__       C    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy     ^      D    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.Padding   _all_top_left_right_bottom                        @    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight     â        A    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   !System.Windows.Forms.AnchorStyles   value__       C    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Point   xy        '   D    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.Forms.Padding   _all_top_left_right_bottom                     @    ˇˇˇˇ          QSystem.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a   System.Drawing.Size   widthheight     F        Ê¢ù‰ª∂ÂºèÁ∑®Ë≠ØÁöÑÁ¨¶Ëôü(&Y):B    ˇˇˇˇ          WSystem.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089   System.Windows.FormMZê       ˇˇ  ∏       @                                   Ä   ∫ ¥	Õ!∏LÕ!This program cannot be run in DOS mode.
$       PE  L >yªb        ‡ !           é:       @    @                       Ä     –ó   @Ö                           8:  S    @  (           &  †'   `                                                                       H           .text   î                           `.rsrc   (   @                    @  @.reloc      `      $              @  B                p:      H     º7  |  	       P   Ï  <7  Ä                                   0  Œ Ôæ   ë   lSystem.Resources.ResourceReader, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089#System.Resources.RuntimeResourceSet          PADPADP0YÇÅ’ƒé•Æüƒk*µ-o	∫¶Û—[åõ›7rY =¡WÎËI	#†∑
8ßád∂á±∏á–áåà£˛Óª6·<Îÿ%ì@6RÅ FW™ZˇÈ∆cã}Je=ùÿk’üo~	psD~| €Å|TÒÑ|Ù  ‡   i  å  Œ  Ä  ﬂ     J   ì   s  ’          {   Y  Ã  d  ©     #  6  N  €  º   "  Ò   A  Ü   ¡  ñ  A D D     A R G Ê   A S Æ  &A r g W i t h D e f a u l t V a l u e ’  ,A r g W i t h o u t D e f a u l t V a l u e Ô  C M D 	  C O P Y ™  $D i s a b l e H e a l t h C h e c k m  E N T R Y P O I N T ∆  E N V 0  E X P O S E    ,E r r o r T a g U n k n o w n K e y w o r d ∫  E x a m p l e F o r m a t   F R O M   H E A L T H C H E C K ª  I m a g e N a m e -	  $I m a g e N a m e A n d D i g e s t D	  I m a g e N a m e A n d T a g j	  
L A B E L Ñ	  M A I N T A I N E R â
  *M u l t i p l e P o r t s T o E x p o s e Û
  O N B U I L D   O n e P o r t T o E x p o s e …  R U N Ê  
S H E L L À  S T O P S I G N A L    0T r a n s a c t i o n I n s e r t N e w L i n e à  U S E R ´  V O L U M E ^  W O R K D I R v  „ADD ÂëΩ‰ª§„ÅØ„ÄÅÊñ∞„Åó„ÅÑ„Éï„Ç°„Ç§„É´„ÄÅ„Éá„Ç£„É¨„ÇØ„Éà„É™„ÄÅ„Åæ„Åü„ÅØ„É™„É¢„Éº„Éà „Éï„Ç°„Ç§„É´ URL „Çí <src> „Åã„Çâ„Ç≥„Éî„Éº„Åó„Å¶„ÄÅ„Åù„Çå„Çâ„Çí„Éë„Çπ <dest> „ÅÆ„Ç≥„É≥„ÉÜ„Éä„Éº„ÅÆ„Éï„Ç°„Ç§„É´ „Ç∑„Çπ„ÉÜ„É†„Å´ËøΩÂä†„Åó„Åæ„Åô„ÄÇ≈ARG ÂëΩ‰ª§„ÅØ„ÄÅ„É¶„Éº„Ç∂„Éº„Åå„Éì„É´„ÉâÊôÇ„Å´ --build-arg <varname>=<value> „Éï„É©„Ç∞„Çí‰Ωø„Å£„Å¶ Docker „Éì„É´„Éâ „Ç≥„Éû„É≥„Éâ„Åß„Éì„É´„ÉÄ„Éº„Å´Ê∏°„Åô„Åì„Å®„ÅÆ„Åß„Åç„ÇãÂ§âÊï∞„ÇíÂÆöÁæ©„Åó„Åæ„Åô„ÄÇ§„Ç™„Éó„Ç∑„Éß„É≥„Åß„ÄÅFROM ÂëΩ‰ª§„Å´ AS <name> „ÇíËøΩÂä†„Åó„Å¶„ÄÅÊñ∞„Åó„ÅÑ„Éì„É´„Éâ „Çπ„ÉÜ„Éº„Ç∏„Å´ÂêçÂâç„ÇíÊåáÂÆö„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Åæ„Åô„ÄÇÂêçÂâç„ÇíÂæåÁ∂ö„ÅÆ FROM „Åä„Çà„Å≥ COPY --from=<name|index> ÂëΩ‰ª§„ÅßÊåáÂÆö„Åó„Å¶„ÄÅ„Åì„ÅÆÊÆµÈöé„Åß‰ΩúÊàê„Åï„Çå„Åü„Ç§„É°„Éº„Ç∏„ÇíÂèÇÁÖß„Åß„Åç„Åæ„Åô„ÄÇÊó¢ÂÆöÂÄ§„ÇíÊåÅ„Å§ÂºïÊï∞Êó¢ÂÆöÂÄ§„ÅÆ„Å™„ÅÑÂºïÊï∞ûDockerfile „Å´„ÅØ CMD ÂëΩ‰ª§„ÅØ 1 „Å§„Åó„ÅãÂ≠òÂú®„Åß„Åç„Åæ„Åõ„Çì„ÄÇË§áÊï∞„ÅÆ CMD „Çí„É™„Çπ„Éà„Å´ÂÖ•„Çå„Çã„Å®„ÄÅÊúÄÂæå„ÅÆ CMD „Å†„Åë„ÅåÊúâÂäπ„Å´„Å™„Çä„Åæ„Åô„ÄÇ¿COPY ÂëΩ‰ª§„ÅØ„ÄÅÊñ∞„Åó„ÅÑ„Éï„Ç°„Ç§„É´„Åæ„Åü„ÅØ„Éá„Ç£„É¨„ÇØ„Éà„É™„Çí <src> „Åã„Çâ„Ç≥„Éî„Éº„Åó„Å¶„ÄÅ„Åù„Çå„Çâ„Çí„Éë„Çπ <dest> „ÅÆ„Ç≥„É≥„ÉÜ„Éä„Éº„ÅÆ„Éï„Ç°„Ç§„É´ „Ç∑„Çπ„ÉÜ„É†„Å´ËøΩÂä†„Åó„Åæ„Åô„ÄÇWÂü∫Êú¨„Ç§„É°„Éº„Ç∏„Åã„ÇâÁ∂ôÊâø„Åó„Åü„Åô„Åπ„Å¶„ÅÆÊ≠£Â∏∏ÊÄß„ÉÅ„Çß„ÉÉ„ÇØ„ÇíÁÑ°Âäπ„Å´„Åô„ÇãhENTRYPOINT „Åß„ÅØ„ÄÅÂÆüË°åÂèØËÉΩ„Éï„Ç°„Ç§„É´„Å®„Åó„Å¶ÂÆüË°å„Åô„Çã„Ç≥„É≥„ÉÜ„Éä„Éº„ÇíÊßãÊàê„Åß„Åç„Åæ„Åô„ÄÇÌENV ÂëΩ‰ª§„ÅØ„ÄÅÁí∞Â¢ÉÂ§âÊï∞ <key> „ÇíÂÄ§ <value> „Å´Ë®≠ÂÆö„Åó„Åæ„Åô„ÄÇ„Åì„ÅÆÂÄ§„ÅØ„ÄÅ„Åô„Åπ„Å¶„ÅÆ "Â≠êÂ≠´" „ÅÆ Dockerfile „Ç≥„Éû„É≥„Éâ„ÅÆÁí∞Â¢É„Å´ÂÖ•„Çå„Çâ„Çå„ÄÅÂ§ö„Åè„ÅÆÂ†¥Âêà„ÄÅ„Ç§„É≥„É©„Ç§„É≥„ÅßÁΩÆ„ÅçÊèõ„Åà„Çã„Åì„Å®„ÇÇ„Åß„Åç„Åæ„Åô„ÄÇóEXPOSE ÂëΩ‰ª§„ÅØ„ÄÅ„Ç≥„É≥„ÉÜ„Éä„Éº„ÅåÂÆüË°åÊôÇ„Å´ÊåáÂÆö„Åï„Çå„Åü„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØ „Éù„Éº„Éà„Åß„É™„ÉÉ„Çπ„É≥„Åô„Çã„Åì„Å®„Çí Docker „Å´ÈÄöÁü•„Åó„Åæ„Åô„ÄÇH"{0}" „ÅØ„ÄÅÊó¢Áü•„ÅÆ Dockerfile „Ç≠„Éº„ÉØ„Éº„Éâ„Åß„ÅØ„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇ‰æã: {0}™FROM ÂëΩ‰ª§„ÅØ„ÄÅÂæåÁ∂ö„ÅÆÂëΩ‰ª§„ÅÆÂü∫Êú¨„Ç§„É°„Éº„Ç∏„ÇíË®≠ÂÆö„Åó„Åæ„Åô„ÄÇ„Åù„ÅÆ„Åü„ÇÅ„ÄÅÊúâÂäπ„Å™ Dockerfile „ÅÆÊúÄÂàù„ÅÆÂëΩ‰ª§„ÅØ FROM „Åß„ÅÇ„ÇãÂøÖË¶Å„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇÔHEALTHCHECK ÂëΩ‰ª§„ÅØ„ÄÅDocker „Å´„Ç≥„É≥„ÉÜ„Éä„Éº„Åå„Åæ„Å†Âãï‰Ωú„Åó„Å¶„ÅÑ„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç„Åô„Çã„Åü„ÇÅ„ÅÆ„ÉÜ„Çπ„ÉàÊñπÊ≥ï„ÇíÊåáÁ§∫„Åó„Åæ„Åô„ÄÇ„Åì„Çå„Å´„Çà„Çä„ÄÅ„Çµ„Éº„Éê„Éº „Éó„É≠„Çª„Çπ„Åå„Åæ„Å†ÂÆüË°å‰∏≠„Åß„ÅÇ„Å£„Å¶„ÇÇ„ÄÅÁÑ°Èôê„É´„Éº„Éó„Åß„Çπ„Çø„ÉÉ„ÇØ„Åó„ÄÅÊñ∞„Åó„ÅÑÊé•Á∂ö„ÇíÂá¶ÁêÜ„Åß„Åç„Å™„Åè„Å™„Å£„Å¶„ÅÑ„Çã Web „Çµ„Éº„Éê„Éº„Å™„Å©„ÅÆ„Ç±„Éº„Çπ„ÇíÊ§úÂá∫„Åß„Åç„Åæ„Åô„ÄÇ„Ç§„É°„Éº„Ç∏„ÅÆÂêçÂâç$„Ç§„É°„Éº„Ç∏Âêç„Å®„ÉÄ„Ç§„Ç∏„Çß„Çπ„Éà„Ç§„É°„Éº„Ç∏Âêç„Å®„Çø„Ç∞ÇLABEL ÂëΩ‰ª§„ÅØ„Ç§„É°„Éº„Ç∏„Å´„É°„Çø„Éá„Éº„Çø„ÇíËøΩÂä†„Åó„Åæ„Åô„ÄÇLABEL „ÅØ„Ç≠„Éº„Å®ÂÄ§„ÅÆ„Éö„Ç¢„Åß„Åô„ÄÇLABEL ÂÄ§ÂÜÖ„Å´„Çπ„Éö„Éº„Çπ„ÇíÂê´„ÇÅ„Çã„Å´„ÅØ„ÄÅ„Ç≥„Éû„É≥„Éâ„É©„Ç§„É≥Ëß£Êûê„ÅÆÂ†¥Âêà„Å®ÂêåÊßò„Å´ÂºïÁî®Á¨¶„Å®„Éê„ÉÉ„ÇØ„Çπ„É©„ÉÉ„Ç∑„É•„Çí‰ΩøÁî®„Åó„Åæ„Åô„ÄÇhMAINTAINER ÂëΩ‰ª§„Åß„ÅØ„ÄÅÁîüÊàê„Åï„Çå„Åü„Ç§„É°„Éº„Ç∏„ÅÆ‰ΩúÊàêËÄÖ„Éï„Ç£„Éº„É´„Éâ„ÇíË®≠ÂÆö„Åß„Åç„Åæ„Åô„ÄÇ$ÂÖ¨Èñã„Åô„ÇãË§áÊï∞„ÅÆ„Éù„Éº„ÉàÁï™Âè∑≠ONBUILD ÂëΩ‰ª§„ÅØ„ÄÅ„Ç§„É°„Éº„Ç∏„ÅåÂà•„ÅÆ„Éì„É´„Éâ„ÅÆ„Éô„Éº„Çπ„Å®„Åó„Å¶‰ΩøÁî®„Åï„Çå„ÇãÂ†¥Âêà„Å´„ÄÅÂæå„ÅßÂÆüË°å„Åï„Çå„Çã„Éà„É™„Ç¨„ÉºÂëΩ‰ª§„Çí„Ç§„É°„Éº„Ç∏„Å´ËøΩÂä†„Åó„Åæ„Åô„ÄÇÂÖ¨Èñã„Åô„Çã„Éù„Éº„ÉàÁï™Âè∑‚RUN ÂëΩ‰ª§„ÅØ„ÄÅÁèæÂú®„ÅÆ„Ç§„É°„Éº„Ç∏„ÅÆ‰∏ä„ÅÆÊñ∞„Åó„ÅÑ„É¨„Ç§„É§„Éº„Åß„Ç≥„Éû„É≥„Éâ„ÇíÂÆüË°å„Åó„ÄÅÁµêÊûú„Çí„Ç≥„Éü„ÉÉ„Éà„Åó„Åæ„Åô„ÄÇÁµêÊûú„ÅÆ„Ç≥„Éü„ÉÉ„Éà„Åï„Çå„Åü„Ç§„É°„Éº„Ç∏„ÅØ Dockerfile „ÅÆÊ¨°„ÅÆÊâãÈ†Ü„Åß‰ΩøÁî®„Åï„Çå„Åæ„Åô„ÄÇ≤SHELL ÂëΩ‰ª§„Åß„ÅØ„ÄÅ„Ç≥„Éû„É≥„Éâ„ÅÆ„Ç∑„Çß„É´ÂΩ¢Âºè„Å´‰ΩøÁî®„Åï„Çå„ÇãÊó¢ÂÆö„ÅÆ„Ç∑„Çß„É´„Çí„Ç™„Éº„Éê„Éº„É©„Ç§„Éâ„Åß„Åç„Åæ„Åô„ÄÇLinux „ÅÆÊó¢ÂÆö„ÅÆ„Ç∑„Çß„É´„ÅØ ["/bin/sh", "-c"]„ÄÅWindows „Åß„ÅØ ["cmd", "/S", "/C"] „Åß„Åô„ÄÇSHELL ÂëΩ‰ª§„ÅØ„ÄÅDockerfile ÂÜÖ„Å´ JSONÂΩ¢Âºè„ÅßË®òËø∞„Åô„ÇãÂøÖË¶Å„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇÖSTOPSIGNAL ÂëΩ‰ª§„ÅØ„ÄÅÁµÇ‰∫Ü„Åô„Çã„Åü„ÇÅ„Å´„Ç≥„É≥„ÉÜ„Éä„Éº„Å´ÈÄÅ‰ø°„Åï„Çå„Çã„Ç∑„Çπ„ÉÜ„É† „Ç≥„Éº„É´ „Ç∑„Ç∞„Éä„É´„ÇíË®≠ÂÆö„Åó„Åæ„Åô„ÄÇ!Êñ∞„Åó„ÅÑË°å„ÇíÊåøÂÖ•„Åó„Åæ„Åô„ÄÇ∞USER ÂëΩ‰ª§„ÅØ„ÄÅ„Ç§„É°„Éº„Ç∏„ÅÆÂÆüË°åÊôÇ„Å® Dockerfile ÂÜÖ„ÅÆÂæåÁ∂ö„ÅÆ RUN„ÄÅCMD„ÄÅ„Åä„Çà„Å≥ ENTRYPOINT ÂëΩ‰ª§„Åß‰ΩøÁî®„Åô„Çã„É¶„Éº„Ç∂„ÉºÂêç„Åæ„Åü„ÅØ UID „ÇíË®≠ÂÆö„Åó„Åæ„Åô„ÄÇïVOLUME ÂëΩ‰ª§„ÅØ„ÄÅÊåáÂÆö„Åï„Çå„ÅüÂêçÂâç„ÅÆ„Éû„Ç¶„É≥„Éà „Éù„Ç§„É≥„Éà„Çí‰ΩúÊàê„Åó„ÄÅ‰ΩúÊàê„Åó„Åü„Éû„Ç¶„É≥„Éà „Éù„Ç§„É≥„Éà„Çí„Éç„Ç§„ÉÜ„Ç£„Éñ „Éõ„Çπ„Éà„Åæ„Åü„ÅØ‰ªñ„ÅÆ„Ç≥„É≥„ÉÜ„Éä„Éº„ÅÆÂ§ñÈÉ®„Åß„Éû„Ç¶„É≥„Éà„Åï„Çå„Åü„Éú„É™„É•„Éº„É†„Çí‰øùÊåÅ„Åô„Çã„ÇÇ„ÅÆ„Å®„Åó„Å¶„Éû„Éº„ÇØ„Åó„Åæ„Åô„ÄÇ°WORKDIR ÂëΩ‰ª§„ÅØ„ÄÅDockerfile ÂÜÖ„ÅÆÂæåÁ∂ö„ÅÆ RUN„ÄÅCMD„ÄÅENTRYPOINT„ÄÅCOPY„ÄÅ„Åä„Çà„Å≥ ADD ÂëΩ‰ª§„Å´ÂØæ„Åó„Å¶‰ΩúÊ•≠„Éá„Ç£„É¨„ÇØ„Éà„É™„ÇíË®≠ÂÆö„Åó„Åæ„Åô„ÄÇWORKDIR „ÅåÂ≠òÂú®„Åó„Å™„ÅÑÂ†¥Âêà„ÅØ„ÄÅÂæåÁ∂ö„ÅÆ Dockerfile ÂëΩ‰ª§„Åß‰ΩøÁî®„Åï„Çå„Å¶„ÅÑ„Å™„Åè„Å¶„ÇÇ„ÄÅWORKDIR „Åå‰ΩúÊàê„Åï„Çå„Åæ„Åô„ÄÇ¥   Œ Ôæ   ë   lSystem.Resources.ResourceReader, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089#System.Resources.RuntimeResourceSet           PADPADP¥   PWıs‚ìÁñ˘—ì`˙EòÅÌÏ5Ó¬¨‡©’=\/¬‡%ŸÀgMß&=èúQøçyYçÙˆõˇÌõ√∫æœ˜˘K[X}í‹k ¸MWvâ^◊ùc‹ë„Ë`¥Ä"è+1∞+¶èù¨#è±iÚgåwc	e9ß¶°≈ 7?BSJB         v4.0.30319     l   p   #~  ‹   ‰   #Strings    ¿     #US »     #GUID   ÿ  §   #Blob               ˙%3                 ¶                 Ä            
 B        E   4     ä      <Module> Microsoft.VisualStudio.Docker.LanguageService.resources ja Microsoft.VisualStudio.Docker.LanguageService.Resources.ja.resources _EmptyResource.ja.resources Microsoft.VisualStudio.Docker.LanguageService.resources.dll          àq(≤?,B≥x¸Eh·CÕ Ä† $  Ä  î      $  RSA1     —˙WƒÆŸ£.Ñ™Æ˝ÈË˝jÏèá˚vlÉLôí≤;ÁöŸ’‹¡›ö“6!êr<˘Äïƒ·wè∆wO)Ë2íÍÏ‰Ë!¿•ÔËÒd\Lì¡´ô(]b,™e,˙÷=t]o-ÂÒ~^Øƒñ=&äCe m¿ì4MZ“ì `:          ~:                          p:                _CorDllMain mscoree.dll     ˇ%  @                                                                                                                                                                                                                                                                                                                                                                                                 Ä                  0  Ä               	  H   X@  Ã          Ã4   V S _ V E R S I O N _ I N F O     ΩÔ˛                                        D    V a r F i l e I n f o     $    T r a n s l a t i o n     ∞,   S t r i n g F i l e I n f o      0 4 1 1 0 4 b 0   t .  C o m m e n t s   M i c r o s o f t . V i s u a l S t u d i o . D o c k e r . L a n g u a g e S e r v i c e   L   C o m p a n y N a m e     M i c r o s o f t   C o r p o r a t i o n   Ñ .  F i l e D e s c r i p t i o n     M i c r o s o f t . V i s u a l S t u d i o . D o c k e r . L a n g u a g e S e r v i c e   0   F i l e V e r s i o n     1 . 1 . 0 . 0   ò <  I n t e r n a l N a m e   M i c r o s o f t . V i s u a l S t u d i o . D o c k e r . L a n g u a g e S e r v i c e . r e s o u r c e s . d l l   î 8  L e g a l C o p y r i g h t   C o p y r i g h t   ©   M i c r o s o f t   C o r p o r a t i o n .   A l l   r i g h t s   r e s e r v e d .   † <  O r i g i n a l F i l e n a m e   M i c r o s o f t . V i s u a l S t u d i o . D o c k e r . L a n g u a g e S e r v i c e . r e s o u r c e s . d l l   z -  P r o d u c t N a m e     M i c r o s o f t   V i s u a l   S t u d i o   T o o l s   f o r   C o n t a i n e r s     4   P r o d u c t V e r s i o n   1 . 1 . 0 . 0                                                                                                                                                                                                                                0     ê:                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      †'    0Ç'ê	*ÜHÜ˜†Ç'Å0Ç'}10	`ÜHe 0\
+Ç7†N0L0
+Ç70	 †¢Ä 010	`ÜHe  á>OÏgtƒSè˙ÔïÕ\	3ísÖºÕ∂ìºKDß†ÇÅ0Çˇ0ÇÁ†3  Rã3™¯ïÛ9€    R0	*ÜHÜ˜ 0~10	UUS10U
Washington10URedmond10U
Microsoft Corporation1(0&UMicrosoft Code Signing PCA 20110210902183259Z220901183259Z0t10	UUS10U
Washington10URedmond10U
Microsoft Corporation10UMicrosoft Corporation0Ç"0	*ÜHÜ˜ Ç 0Ç
Ç –‰œè≥ı˚€Ø‰Ù#´®Ù4ì®‘™’B£ªÇWq…%…:÷/åLJ»¢Ìà±∂'Æ_5@´ì¶‚áæ-¸“Ï„qæ¶≥M çA™∞CPbè"{6ﬂÛB5}oN/æä∑E©slÎ‹÷˚∫ìÎø“4’/ƒ≠ÏÉÿN›ı„]/§J|…Dó¯]Òú¿øé√
yè\Ê€ﬁl’Y⁄z2àêSÑ
n ¿≠•€»æ`Du$Ó¶T«„ãØÕhFrGhÀ÷Õë)£3Ú‚3Nÿ0Ím√l„8{c!S÷P>r?~g+¬ºπÆG˚|´Ü‹Òt|@ÜIA*~ŸN¶⁄WM £Ç~0Çz0U%0
+Ç7L+0U5íZAãÿk∞∑∂NÓ|Fy—0PUI0G§E0C1)0'U Microsoft Operations Puerto Rico10U230012+4675970U#0ÄHndÂP”Ç™77"µm® uï0TUM0K0I†G†EÜChttp://www.microsoft.com/pkiops/crl/MicCodSigPCA2011_2011-07-08.crl0a+U0S0Q+0ÜEhttp://www.microsoft.com/pkiops/certs/MicCodSigPCA2011_2011-07-08.crt0Uˇ0 0	*ÜHÜ˜ Ç I7π,dL@a‘€@ó∞bºÅ,g`_Zô¯GY1Ü–)´ËàR-tLƒ]A‹‚ùG“øë«)íÛ\_ÌåòKâ°	CGÂKÆﬂı#ﬂ¿=Wñ¢co…¢N÷dSÄö3—4—ß…Ë;óISâ8E®O∂hÎ:˙ûÇ†zQ†4íëµë∫ä∏≤0ÊY «“≤˘ŸÆ√v/.Là*üåo1c£¡æ¯‡∑ÿ–Jg>∂wQèø∫Ø)·\ï—]LΩ ﬁáÚµ£√"jª∫≥˛≈ £ãyD∏Ω1·ı8/êÌƒ&.≠v“[K‘X¯„„ùˇß&Ÿ¶æªb»nÙıç—wv&=ü‹bjÌé uj¥AàZ¥®Az∆8`”+≠⁄ö3Y±å”Îè3ËuÇ4kΩÄ¬πfÁeu8kéY”†(í⁄–*é…1+æ≠éÅ8^ñ¥˚Œ”¸ıT\⁄üÌè™IN˛ÙªKB„Gå7q#„∏€¨º∑˝Ä‹áîj3π÷ÚçÑ~Ã^2¨
[ >MX¥µë©Ù±⁄â[û°%¡$23í+=ÏFÎ©%˜R∫2a˛v/Ì¢U:›k≈÷z√∆Îc'üt¸‚ﬂÕ‚E∏ﬂ9!«≤dÔvP˙[Ñåælí]rMêw2Ê‡8™6‚OÈ∆Òœ."∆ŸyΩ<IÊ2®’i0Çz0Çb†
aê“     0	*ÜHÜ˜ 0Åà10	UUS10U
Washington10URedmond10U
Microsoft Corporation1200U)Microsoft Root Certificate Authority 20110110708205909Z260708210909Z0~10	UUS10U
Washington10URedmond10U
Microsoft Corporation1(0&UMicrosoft Code Signing PCA 20110Ç"0	*ÜHÜ˜ Ç 0Ç
Ç ´˙r.≠ÿn™ÇM4∫Ú∂X!üB*kÈZP™∏8I∫√›7k∆ÿ8¬ô∞»9’1B”âydá~î`$lØûIúÈh^“ﬂõS≤
,√ØŸ©+Æz	Ø◊ñY `ÈfvË2R&/Á´Pœ≥D∑]ÿƒ.u´hÛÀmÛ:\°ÙF∫‡8d¨nd5x¶†c-”@ì¯„ﬁ’\y•I)Áæ†wæî=Ô˚„+ZMV(¢zr‡:∑I^ÿÌÌCëÉŸ{≤{ÜŸ>±å]ËâOÑÚ°/Y‰ê;-Æ3X≈∑>˛2”≥=±≤Øí8~“ùÄ,ıNVë!5%√9ndS∫ú≠#ÑÀÙ∫Üç˜_–Røåîáº¿!t%_(∂Ã'(8%ò9J6œ|±íÆ#ß©fÏaj·(Iù_à‚%]”!K>RƒµW?$—z[/’#„p]QFw≥¯ ·º¨Ç_€¿≥Ω‘UKÁ9°È#Iº∏D|E‰¡√rz‡rÁ$ﬂøFô≈Ô¬W€ÉçÏMI0ß´éﬂÏ[üØ¸›∞f‚¡óÅ{Ì÷ÌKÁI)ß(¶ß}gÄÊäbx_≤/Ñ◊Wú\øw((ÒÌm√(è,è@7O¡·ÖDâƒ	L≈‘•C/tï˜n¯x X,]`ïö>O3Ñ⁄∞àﬁûNÙñ∞ºF†lò“‡÷àå £ÇÌ0ÇÈ0	+Ç7 0UHndÂP”Ç™77"µm® uï0	+Ç7
 S u b C A0UÜ0Uˇ0ˇ0U#0Är-:1êCπN·Íß«1—#â40ZUS0Q0O†M†KÜIhttp://crl.microsoft.com/pki/crl/products/MicRooCerAut2011_2011_03_22.crl0^+R0P0N+0ÜBhttp://www.microsoft.com/pki/certs/MicRooCerAut2011_2011_03_22.crt0ÅüU Åó0Åî0Åë	+Ç7.0ÅÉ0?+3http://www.microsoft.com/pkiops/docs/primarycps.htm0@+042  L e g a l _ p o l i c y _ s t a t e m e n t . 0	*ÜHÜ˜ Ç gÚÜ•ò‡Ty.”ÿtg"õñ·cíôBñ}“yê¡e_.,>¯√r—mÉ˛æ?Ë
 ;øG©£Ûi€cø"5•ó]eÑê}ãFPUÿí|“KÛ<BãR–∞˝k„>.)õÊ=•‘µwî9‚Èd…D=xz#Û}¶êtÉçÙÀ&F*¬äª§©õÌh˙h.ï†*?*kXIc	inZòñ‰ÉÙ¿èÛF+ﬁ¸;–Ω5Ôn%ÆÂØ'Ì–›ÛØô(óòM=Úâ÷√2‚≈-Œ[û¥I9
∆
¬∆≠ÆÂ≤Ÿ€àQEX82q'±Ù'¯ﬁ,: iò≤Yâhnoß∑t√@¶*(>Ç?Mf¿≥Mı·èo}EßvÂ@*e£√]RbÜ√c6óÜﬂ⁄Û¯Ú°ö'·Õ•ó–Ó]cA„[úá>w—±uæaaµ‹∆æﬂA«(Óﬁe/Ïóˆ°\ñÿ ÷°FΩYÛó•	KHôÄ– )≈±õ•?Ew5∆“¢¢üzz"˙Hï´˚G#Äıû¯øk∑Kó‚ÎuxÏÍ7ôyKˇ÷≥#huÊØ˙¸ãÎÄÍi;Ø¸0ÌLéﬂﬂumcë=—ùVNOøÄW"°x2!zÔA
±?˚®Ã§]¡°àõWqVNHE¿B…õv[
ÄHk˝yü¡Ωmmj…RszPÕ1ÇÇ0Ç~0Åï0~10	UUS10U
Washington10URedmond10U
Microsoft Corporation1(0&UMicrosoft Code Signing PCA 20113  Rã3™¯ïÛ9€    R0	`ÜHe †ÅÆ0	*ÜHÜ˜	1
+Ç70
+Ç710
+Ç70/	*ÜHÜ˜	1" f √Ë¬q»V·Ñ˝ú˝ ˆf»o[	‘¬çæiJí≤µGc0B
+Ç71402†Ä M i c r o s o f t°Ähttp://www.microsoft.com0	*ÜHÜ˜ Ç }ôAÃ*ª°Œk£x¯Œ%Åôii¶⁄tC√ÅåP≥ßZÇ›‘–ÌoBl≠A }A<?@J:I1≥"Úï’…¥LOäêfîêË’Öö·RÂô*FTU%èãM$ÂT	ù«”ﬂ˘√^æúßÒ;„ïJ⁄])i2‹k˛~Üß)*¸‡Í,Jz5æ˜W£“f {ù·g»çXåu¬»ŸÊU‰v=Ë…N,®œ˝ÿv∞$ñ	mc6Ÿkøk˘#cèTıN^∞D£˘ÌBò’·9ÉÓœQÜo(≥Y.:ƒ[0¬‰ΩpÃL/`2»E~‹Øï◊Òì4˘?E°Ç0Ç
+Ç71Ç¯0ÇÙ	*ÜHÜ˜†ÇÂ0Ç·10	`ÜHe 0ÇU*ÜHÜ˜	†ÇDÇ@0Ç<
+ÑY
010	`ÜHe  à†‹†Nﬂ®PàÖòﬁ|ôﬂ)[§d%üBÓñ¸◊ìÂ¡∑b±ÿöf÷20220628215737.555Z0ÄÙ†Å‘§Å—0ÅŒ10	UUS10U
Washington10URedmond10U
Microsoft Corporation1)0'U Microsoft Operations Puerto Rico1&0$UThales TSS ESN:7880-E390-80141%0#UMicrosoft Time-Stamp Service†Ç_0Ç0Ç¯†3  ®Ua©Ã0\   ®0	*ÜHÜ˜ 0|10	UUS10U
Washington10URedmond10U
Microsoft Corporation1&0$UMicrosoft Time-Stamp PCA 20100220302185123Z230511185123Z0ÅŒ10	UUS10U
Washington10URedmond10U
Microsoft Corporation1)0'U Microsoft Operations Puerto Rico1&0$UThales TSS ESN:7880-E390-80141%0#UMicrosoft Time-Stamp Service0Ç"0	*ÜHÜ˜ Ç 0Ç
Ç £⁄m ¿.%◊ÚòÚ^ó7œJN˜&îÉ√äT¯w£fõQÍ?Læ?’qZóÓàx£…Îæ˛-Â]=—πÖ;∆Æ£|>…≥qvv@!îÅD^-Bõö∫ÙÈ∞t∆Ìg
ñm>H…∆”‘≠˘^ƒ·P£=÷*Aü‚7@+]y†lG’»,˙Æ¢Äa3ïl˙ ∂æU¶smC8˛µÆ¶aUåuj…˜˚˚häÚ?PPöËcåµ¶fRDÆ≈òÌ…∂r˙€vn◊ïŸc©G[‡ê ™#™ÇÈüGÊí¶éSÔíÜ”ÈÏHÂ+‘µÊû+?œ)ft®ßΩ∆zoFXÌÜDº◊ñú´œFcÊ|4F¥CâYd±”‘Ïûj+ÿ1Œ':àHú·#¥BÍÄö¬Jì≈È∑Ç∂;∞ŒÕÁBíñ†ΩYJ®ã⁄∏Ω^SÔ˙Áºˆ?^Ì˘Å‚xuÜÈsú◊Èı1…2VŒËÍœ‹”D(ïºé*Bü/’˚ØJ·_∏Ì˚‚äˆúÿ“Æ‰L“≥Y 6´e‡£∑S<ó-k”D3∏ì’@ÁZ“⁄£K°JÒ(.Y>YÊ±.F¯O’
 öÇÚõ4ÆTüˇnÆÑπ ß•— äËàF%ˇúñ“d°é˘¿D˙ÙâRõB´©,ç\ëdı∞¶ÑoÃ7 £Ç60Ç20U6«€„‚¯RÎe6Ã∆1§èI"’0U#0Äüß] ^b]ÉÙÂ“eßS5Èr0_UX0V0T†R†PÜNhttp://www.microsoft.com/pkiops/crl/Microsoft%20Time-Stamp%20PCA%202010(1).crl0l+`0^0\+0ÜPhttp://www.microsoft.com/pkiops/certs/Microsoft%20Time-Stamp%20PCA%202010(1).crt0Uˇ0 0U%0
+0	*ÜHÜ˜ Ç q;ÇKdj™gˆò˙˙9LùÜe1˙nØ§CÏÕh®%vÁ±ÁÀ≠ß÷L´í5aı@WÚs˝ç›ÑƒßàDÒãa`®3Ò‘ÖDD_uì¿kbÎÉy,VDïÇ¢∞Y0C2
Çµ‹oÆW &Ò‘B—8~‹tﬂÁ÷âõ≥ßÇ}%M$¢)GÆåÀ™ãı|<s˘ÊÂΩ j[IÄgÈ¶Âóa>#äƒ
;Ë&0oÁÅJÓ‡ßåFcúÓou˛áx©ﬁ ª=f¸ZHB-ôzå€∆	FÂå∆à±zLkE0Ÿ¿ $!åWô«,q1^h~#{ËÓ}d¬ìk”⁄œôﬁ·«<9‹5OÓ∂‚`tY•Ω5Üà¡Ë&ﬂ∫wmW¯∆gJá^iîïÁ7\åÏ‚˝€ÅÍ"b∞vß§·	·IΩoxEQq6∏BKı¶."	,UÇ*‘˝Ω≠Ó\˜∏BGË#§†NæQ∆Æ7¢XMÙè	DÄÑu¯Âû~’ã. Ÿ3)ÂÅôŒF€É}sÉﬂÆÿ¡…j5éÇf‡ œµ⁄‰X¨`v
÷s…;n#6«¯s:_XﬂŸﬂnÎËKê˚mﬂ˛MR◊§Èyâúëîªà5‰X÷∑é·ü,w! Ú6Úª·¯…2FœÃV∞§YBlÙHØ,´'`"3kJ÷0Çq0ÇY†3   ≈ÁkûõIô     0	*ÜHÜ˜ 0Åà10	UUS10U
Washington10URedmond10U
Microsoft Corporation1200U)Microsoft Root Certificate Authority 20100210930182225Z300930183225Z0|10	UUS10U
Washington10URedmond10U
Microsoft Corporation1&0$UMicrosoft Time-Stamp PCA 20100Ç"0	*ÜHÜ˜ Ç 0Ç
Ç ‰·¶LÁ¥r!y¢À◊$yΩ’Ç”˝Óú“©lNu» 5WˆlJ‡‚Ωπ>`3ˇ\O«f˜ïSqZ‚~JZ˛∏6gÖF#µçœw2¿Ë`}jRÉD∑¶éFkÛ≈vıÜP‹¡D»q\Q17†
8nçÌ◊ÿ&S|9azƒ™˝riØ´¨ˆ6æ5&d⁄ò;∫{3≠Ä[~åùR˛∂Ëb%‹jœ]Ù˛éSœ÷ÏÖVMÔ›ºç§„ëè≤9,QúÈpi 6-pé1»5(Ω„¥á$√‡…è~µTè‹˙Uòmh;öFΩÌ§Æz)7¨ÀÎÉEÁFn 2’¿Ü0\O,‚b≤Õπ‚çà‰ñ¨Jªæq©[g`ﬁ¯íë=˝ œs}AöFuÕƒ_4›â÷˝• }~¸ŸûEﬂ∂r/€}_Ä∫€™~6Ï6Lˆ+n®QËø£—s¶M7tî4ÇÚ∑GÌßËô|?L€Ø^¬Û’ÿs=CN¡39LéºBh.ÍÑQF‚—ΩjZas g¢^◊(v‚3r◊ß ¬˙
◊co…6dã[†¶É!]_0tëîîÿπP˘âaÛ65ÑG€‹—˝≤‘≈kˆ\RQ]€%∫ØPzl≈rÔç˘RƒÖì¿<€7«?x´E∂ıá^⁄èûri∆Æ{∑∑>j‚.≠ £Ç›0ÇŸ0	+Ç7 0#	+Ç7*ßR˛dƒöæÇë<F5)œˇ/Ó0Uüß] ^b]ÉÙÂ“eßS5Èr0\U U0S0Q+Ç7LÉ}0A0?+3http://www.microsoft.com/pkiops/Docs/Repository.htm0U%0
+0	+Ç7
 S u b C A0UÜ0Uˇ0ˇ0U#0Ä’ˆVÀèË¢\bh—=îê[◊Œöƒ0VUO0M0K†I†GÜEhttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z+N0L0J+0Ü>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0	*ÜHÜ˜ Ç ùU}¸*≠·,g1$[·ûrK¸©oÍ\∂>NGdx±ìó=13µ9◊¬q6?⁄dl|–u9mª1‰¬è˚l—°î"ÓÈfg:SM›ò∫∂xÿ6.ú©ÇV ∞æâËi‡∫	Ó{ﬂjoæ)Ànÿ?HuŸﬁmÇım#T‰xSu$Wπ›üÛé=∆Ûhﬂeˆ§V™˜ï∂(U'–$Ω@†ø∂]='‡@ñ8¨˜˘)â√º∞TÖB≥¸ûãâÁjÅ¬ÅBRuä6¬√as.,k{n?,	xÈë≤©[ﬂI£tºÏëÄ“=ÊJ>f;OªÜ˙2ŸñÙèˆëˆŒ∆t˝ˆLro´u0≈4∞zÿP˛
X›@<«TmùctH,±NG-¡qød˘$æsm é	Ω≥WITdŸs◊[DéZëkü§(‹g($∫8Kön˚!TkjEG©Ò∑Æ»Ëâ^Où“–LvµWT	±iD~|°als˛
ªÏAf=i˝À¡AI~~ìæÀ¯;‰∑ø¥Œ>•1QÑºø¡Ç¢{âçp˛Áµ–(âè6⁄∫L˘õˇ
È4¯$5g+‡∏Êåô÷·"Í'B=%îÊtt[j—û>Ì~†13}ºÀÈ{ø8pD—êÒ»´:ä:bŸpcSMçÓÇm•¡qj¥U3X≥°pfÚ°Ç“0Ç;0Å¸°Å‘§Å—0ÅŒ10	UUS10U
Washington10URedmond10U
Microsoft Corporation1)0'U Microsoft Operations Puerto Rico1&0$UThales TSS ESN:7880-E390-80141%0#UMicrosoft Time-Stamp Service¢#
0+ l∫¸ƒüAäÀ·à9Ò}Kgòêw,†ÅÉ0ÅÄ§~0|10	UUS10U
Washington10URedmond10U
Microsoft Corporation1&0$UMicrosoft Time-Stamp PCA 20100	*ÜHÜ˜  Êeëe0"20220628184037Z20220629184037Z0w0=
+ÑY
1/0-0
 Êeëe 0
 xˇ0 °0
 Êf‚Â 06
+ÑY
1(0&0
+ÑY
†
0 ° °
0 Ü†0	*ÜHÜ˜ ÅÅ Üw\¬ã.rcù>\≤ÊØ|úAs–øÔqD–ÏRµsjÊï~mÃÓNÌÌ´0≈Ü•Ã˛KN≈ÿRŒˇKìgï5é|îI˚¢%ÆiÇ◊ì√„GÎÊ'Ñ-—Û°1fqöVSºÆ†ynsy‚HptÅˇgó„ABo“MSà…dò÷πB≤p1Ç0Ç	0Åì0|10	UUS10U
Washington10URedmond10U
Microsoft Corporation1&0$UMicrosoft Time-Stamp PCA 20103  ®Ua©Ã0\   ®0	`ÜHe †ÇJ0	*ÜHÜ˜	1*ÜHÜ˜	0/	*ÜHÜ˜	1" ]!Â√ã˙Woì‘ıhÜe˚6ÏQÖ∂J°ÏzŒ@Ü0Å˙*ÜHÜ˜	/1ÅÍ0ÅÁ0Å‰0ÅΩ t˛À À¬spÖÒA\˘Eù÷Ñzí_÷SCó\e¶0Åò0ÅÄ§~0|10	UUS10U
Washington10URedmond10U
Microsoft Corporation1&0$UMicrosoft Time-Stamp PCA 20103  ®Ua©Ã0\   ®0" £ùbNıo·Ebd£°ÍkÆ]ı%ÊÁÛ1Ó8¯®Ü0	*ÜHÜ˜ Ç å'9å@ê∆¨©^∞”ˆ'.÷ÉäGı≥`í§›éŒF”&ím?*bßù/åe.·§}ÂÊ}Ü	ºp˘m…+◊qS—z+≥Ñ µD,m…i§rÚ—Ë›à˘ı@!4bÅ∑9dŸF[™åjüaäV±Ö∫˘ÀÁ≥®	**€§ikqŒµ	q´¶„%|O ∆L_2¶Í‹FŸ QSÕ»URıé¬“q˜˙œ$LÅ0‚Õ †vA—Â√í CÜ=Î?çøπG(2W…®¡'”˚ëÏòÛöÆ«`ËTØJÆe	Ée‡„UöTTd‚"°)¯Ü¿€‘4LtywÒÔP]¨¡{{·<†<OüÙ›14™√*öhô3ºe˘opó^∂ë⁄§9Äm	]ƒÕÀ∫Å@lèXpıL¥x◊„¸&™;·±∫9Ê≈⁄ÂBhÏô8ßoÈ÷-Ÿ3i§ŒÿŸ∫ìDF¸∑¬π?é˘?+≥”ÕJD+≈ÿ˛≥^Õ$*=-Ä⁄íë+û6À2≤ÑNö3]≠9gsJ3`6◊‚l∞G∫HO®∫]ÍR˚7ÜΩ≤|&9 Vz≤JYΩ,S;ü‡ë∞™Ω»õç3y)†„ŸCû¨˚–»W–r/ı™+ñóU{·ôX‚ÔÚSI-˜eËp∆N4ÚÎY‰≥f                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Timedelta(28767471428571405)
        df = DataFrame({"col": Series([td1, td2])})
        df_copy = df.copy()
        ser = Series([td1])

        expected = df["col"].iloc[1].value
        df.loc[[True, False]] = ser
        result = df["col"].iloc[1].value

        assert expected == result
        tm.assert_frame_equal(df, df_copy)

    @td.skip_array_manager_invalid_test  # TODO(ArrayManager) rewrite not using .values
    def test_loc_setitem_boolean_and_column(self, float_frame):
        expected = float_frame.copy()
        mask = float_frame["A"] > 0

        float_frame.loc[mask, "B"] = 0
        expected.values[mask.values, 1] = 0

        tm.assert_frame_equal(float_frame, expected)


class TestLocListlike:
    @pytest.mark.parametrize("box", [lambda x: x, np.asarray, list])
    def test_loc_getitem_list_of_labels_categoricalindex_with_na(self, box):
        # passing a list can include valid categories _or_ NA values
        ci = CategoricalIndex(["A", "B", np.nan])
        ser = Series(range(3), index=ci)

        result = ser.loc[box(ci)]
        tm.assert_series_equal(result, ser)

        result = ser[box(ci)]
        tm.assert_series_equal(result, ser)

        result = ser.to_frame().loc[box(ci)]
        tm.assert_frame_equal(result, ser.to_frame())

        ser2 = ser[:-1]
        ci2 = ci[1:]
        # but if there are no NAs present, this should raise KeyError
        msg = "not in index"
        with pytest.raises(KeyError, match=msg):
            ser2.loc[box(ci2)]

        with pytest.raises(KeyError, match=msg):
            ser2[box(ci2)]

        with pytest.raises(KeyError, match=msg):
            ser2.to_frame().loc[box(ci2)]

    def test_loc_getitem_series_label_list_missing_values(self):
        # gh-11428
        key = np.array(
            ["2001-01-04", "2001-01-02", "2001-01-04", "2001-01-14"], dtype="datetime64"
        )
        ser = Series([2, 5, 8, 11], date_range("2001-01-01", freq="D", periods=4))
        with pytest.raises(KeyError, match="not in index"):
            ser.loc[key]

    def test_loc_getitem_series_label_list_missing_integer_values(self):
        # GH: 25927
        ser = Series(
            index=np.array([9730701000001104, 10049011000001109]),
            data=np.array([999000011000001104, 999000011000001104]),
        )
        with pytest.raises(KeyError, match="not in index"):
            ser.loc[np.array([9730701000001104, 10047311000001102])]

    @pytest.mark.parametrize("to_period", [True, False])
    def test_loc_getitem_listlike_of_datetimelike_keys(self, to_period):
        # GH#11497

        idx = date_range("2011-01-01", "2011-01-02", freq="D", name="idx")
        if to_period:
            idx = idx.to_period("D")
        ser = Series([0.1, 0.2], index=idx, name="s")

        keys = [Timestamp("2011-01-01"), Timestamp("2011-01-02")]
        if to_period:
            keys = [x.to_period("D") for x in keys]
        result = ser.loc[keys]
        exp = Series([0.1, 0.2], index=idx, name="s")
        if not to_period:
            exp.index = exp.index._with_freq(None)
        tm.assert_series_equal(result, exp, check_index_type=True)

        keys = [
            Timestamp("2011-01-02"),
            Timestamp("2011-01-02"),
            Timestamp("2011-01-01"),
        ]
        if to_period:
            keys = [x.to_period("D") for x in keys]
        exp = Series(
            [0.2, 0.2, 0.1], index=Index(keys, name="idx", dtype=idx.dtype), name="s"
        )
        result = ser.loc[keys]
        tm.assert_series_equal(result, exp, check_index_type=True)

        keys = [
            Timestamp("2011-01-03"),
            Timestamp("2011-01-02"),
            Timestamp("2011-01-03"),
        ]
        if to_period:
            keys = [x.to_period("D") for x in keys]

        with pytest.raises(KeyError, match="not in index"):
            ser.loc[keys]


@pytest.mark.parametrize(
    "columns, column_key, expected_columns",
    [
        ([2011, 2012, 2013], [2011, 2012], [0, 1]),
        ([2011, 2012, "All"], [2011, 2012], [0, 1]),
        ([2011, 2012, "All"], [2011, "All"], [0, 2]),
    ],
)
def test_loc_getitem_label_list_integer_labels(columns, column_key, expected_columns):
    # gh-14836
    df = DataFrame(np.random.rand(3, 3), columns=columns, index=list("ABC"))
    expected = df.iloc[:, expected_columns]
    result = df.loc[["A", "B", "C"], column_key]

    if df.columns.is_object() and all(isinstance(x, int) for x in column_key):
        expected.columns = expected.columns.astype(int)

    tm.assert_frame_equal(result, expected, check_column_type=True)


def test_loc_setitem_float_intindex():
    # GH 8720
    rand_data = np.random.randn(8, 4)
    result = DataFrame(rand_data)
    result.loc[:, 0.5] = np.nan
    expected_data = np.hstack((rand_data, np.array([np.nan] * 8).reshape(8, 1)))
    expected = DataFrame(expected_data, columns=[0.0, 1.0, 2.0, 3.0, 0.5])
    tm.assert_frame_equal(result, expected)

    result = DataFrame(rand_data)
    result.loc[:, 0.5] = np.nan
    tm.assert_frame_equal(result, expected)


def test_loc_axis_1_slice():
    # GH 10586
    cols = [(yr, m) for yr in [2014, 2015] for m in [7, 8, 9, 10]]
    df = DataFrame(
        np.ones((10, 8)),
        index=tuple("ABCDEFGHIJ"),
        columns=MultiIndex.from_tuples(cols),
    )
    result = df.loc(axis=1)[(2014, 9):(2015, 8)]
    expected = DataFrame(
        np.ones((10, 4)),
        index=tuple("ABCDEFGHIJ"),
        columns=MultiIndex.from_tuples([(2014, 9), (2014, 10), (2015, 7), (2015, 8)]),
    )
    tm.assert_frame_equal(result, expected)


def test_loc_set_dataframe_multiindex():
    # GH 14592
    expected = DataFrame(
        "a", index=range(2), columns=MultiIndex.from_product([range(2), range(2)])
    )
    result = expected.copy()
    result.loc[0, [(0, 1)]] = result.loc[0, [(0, 1)]]
    tm.assert_frame_equal(result, expected)


def test_loc_mixed_int_float():
    # GH#19456
    ser = Series(range(2), Index([1, 2.0], dtype=object))

    result = ser.loc[1]
    assert result == 0


def test_loc_with_positional_slice_deprecation():
    # GH#31840
    ser = Series(range(4), index=["A", "B", "C", "D"])

    with tm.assert_produces_warning(FutureWarning):
        ser.loc[:3] = 2

    expected = Series([2, 2, 2, 3], index=["A", "B", "C", "D"])
    tm.assert_series_equal(ser, expected)


def test_loc_slice_disallows_positional():
    # GH#16121, GH#24612, GH#31810
    dti = date_range("2016-01-01", periods=3)
    df = DataFrame(np.random.random((3, 2)), index=dti)

    ser = df[0]

    msg = (
        "cannot do slice indexing on DatetimeIndex with these "
        r"indexers \[1\] of type int"
    )

    for obj in [df, ser]:
        with pytest.raises(TypeError, match=msg):
            obj.loc[1:3]

        with tm.assert_produces_warning(FutureWarning):
            # GH#31840 deprecated incorrect behavior
            obj.loc[1:3] = 1

    with pytest.raises(TypeError, match=msg):
        df.loc[1:3, 1]

    with tm.assert_produces_warning(FutureWarning, check_stacklevel=False):
        # GH#31840 deprecated incorrect behavior
        df.loc[1:3, 1] = 2


def test_loc_datetimelike_mismatched_dtypes():
    # GH#32650 dont mix and match datetime/timedelta/period dtypes

    df = DataFrame(
        np.random.randn(5, 3),
        columns=["a", "b", "c"],
        index=date_range("2012", freq="H", periods=5),
    )
    # create dataframe with non-unique DatetimeIndex
    df = df.iloc[[0, 2, 2, 3]].copy()

    dti = df.index
    tdi = pd.TimedeltaIndex(dti.asi8)  # matching i8 values

    msg = r"None of \[TimedeltaIndex.* are in the \[index\]"
    with pytest.raises(KeyError, match=msg):
        df.loc[tdi]

    with pytest.raises(KeyError, match=msg):
        df["a"].loc[tdi]


def test_loc_with_period_index_indexer():
    # GH#4125
    idx = pd.period_range("2002-01", "2003-12", freq="M")
    df = DataFrame(np.random.randn(24, 10), index=idx)
    tm.assert_frame_equal(df, df.loc[idx])
    tm.assert_frame_equal(df, df.loc[list(idx)])
    tm.assert_frame_equal(df, df.loc[list(idx)])
    tm.assert_frame_equal(df.iloc[0:5], df.loc[idx[0:5]])
    tm.assert_frame_equal(df, df.loc[list(idx)])


class TestLocSeries:
    @pytest.mark.parametrize("val,expected", [(2 ** 63 - 1, 3), (2 ** 63, 4)])
    def test_loc_uint64(self, val, expected):
        # see GH#19399
        ser = Series({2 ** 63 - 1: 3, 2 ** 63: 4})
        assert ser.loc[val] == expected

    def test_loc_getitem(self, string_series, datetime_series):
        inds = string_series.index[[3, 4, 7]]
        tm.assert_series_equal(string_series.loc[inds], string_series.reindex(inds))
        tm.assert_series_equal(string_series.iloc[5::2], string_series[5::2])

        # slice with indices
        d1, d2 = datetime_series.index[[5, 15]]
        result = datetime_series.loc[d1:d2]
        expected = datetime_series.truncate(d1, d2)
        tm.assert_series_equal(result, expected)

        # boolean
        mask = string_series > string_series.median()
        tm.assert_series_equal(string_series.loc[mask], string_series[mask])

        # ask for index value
        assert datetime_series.loc[d1] == datetime_series[d1]
        assert datetime_series.loc[d2] == datetime_series[d2]

    def test_loc_getitem_not_monotonic(self, datetime_series):
        d1, d2 = datetime_series.index[[5, 15]]

        ts2 = datetime_series[::2][[1, 2, 0]]

        msg = r"Timestamp\('2000-01-10 00:00:00'\)"
        with pytest.raises(KeyError, match=msg):
            ts2.loc[d1:d2]
        with pytest.raises(KeyError, match=msg):
            ts2.loc[d1:d2] = 0

    def test_loc_getitem_setitem_integer_slice_keyerrors(self):
        ser = Series(np.random.randn(10), index=list(range(0, 20, 2)))

        # this is OK
        cp = ser.copy()
        cp.iloc[4:10] = 0
        assert (cp.iloc[4:10] == 0).all()

        # so is this
        cp = ser.copy()
        cp.iloc[3:11] = 0
        assert (cp.iloc[3:11] == 0).values.all()

        result = ser.iloc[2:6]
        result2 = ser.loc[3:11]
        expected = ser.reindex([4, 6, 8, 10])

        tm.assert_series_equal(result, expected)
        tm.assert_series_equal(result2, expected)

        # non-monotonic, raise KeyError
        s2 = ser.iloc[list(range(5)) + list(range(9, 4, -1))]
        with pytest.raises(KeyError, match=r"^3$"):
            s2.loc[3:11]
        with pytest.raises(KeyError, match=r"^3$"):
            s2.loc[3:11] = 0

    def test_loc_getitem_iterator(self, string_series):
        idx = iter(string_series.index[:10])
        result = string_series.loc[idx]
        tm.assert_series_equal(result, string_series[:10])

    def test_loc_setitem_boolean(self, string_series):
        mask = string_series > string_series.median()

        result = string_series.copy()
        result.loc[mask] = 0
        expected = string_series
        expected[mask] = 0
        tm.assert_series_equal(result, expected)

    def test_loc_setitem_corner(self, string_series):
        inds = list(string_series.index[[5, 8, 12]])
        string_series.loc[inds] = 5
        msg = r"\['foo'\] not in index"
        with pytest.raises(KeyError, match=msg):
            string_series.loc[inds + ["foo"]] = 5

    def test_basic_setitem_with_labels(self, datetime_series):
        indices = datetime_series.index[[5, 10, 15]]

        cp = datetime_series.copy()
        exp = datetime_series.copy()
        cp[indices] = 0
        exp.loc[indices] = 0
        tm.assert_series_equal(cp, exp)

        cp = datetime_series.copy()
        exp = datetime_series.copy()
        cp[indices[0] : indices[2]] = 0
        exp.loc[indices[0] : indices[2]] = 0
        tm.assert_series_equal(cp, exp)

    def test_loc_setitem_listlike_of_ints(self):

        # integer indexes, be careful
        ser = Series(np.random.randn(10), index=list(range(0, 20, 2)))
        inds = [0, 4, 6]
        arr_inds = np.array([0, 4, 6])

        cp = ser.copy()
        exp = ser.copy()
        ser[inds] = 0
        ser.loc[inds] = 0
        tm.assert_series_equal(cp, exp)

        cp = ser.copy()
        exp = ser.copy()
        ser[arr_inds] = 0
        ser.loc[arr_inds] = 0
        tm.assert_series_equal(cp, exp)

        inds_notfound = [0, 4, 5, 6]
        arr_inds_notfound = np.array([0, 4, 5, 6])
        msg = r"\[5\] not in index"
        with pytest.raises(KeyError, match=msg):
            ser[inds_notfound] = 0
        with pytest.raises(Exception, match=msg):
            ser[arr_inds_notfound] = 0

    def test_loc_setitem_dt64tz_values(self):
        # GH#12089
        ser = Series(
            date_range("2011-01-01", periods=3, tz="US/Eastern"),
            index=["a", "b", "c"],
        )
        s2 = ser.copy()
        expected = Timestamp("2011-01-03", tz="US/Eastern")
        s2.loc["a"] = expected
        result = s2.loc["a"]
        assert result == expected

        s2 = ser.copy()
        s2.iloc[0] = expected
        result = s2.iloc[0]
        assert result == expected

        s2 = ser.copy()
        s2["a"] = expected
        result = s2["a"]
        assert result == expected

    @pytest.mark.parametrize("array_fn", [np.array, pd.array, list, tuple])
    @pytest.mark.parametrize("size", [0, 4, 5, 6])
    def test_loc_iloc_setitem_with_listlike(self, size, array_fn):
        # GH37748
        # testing insertion, in a Series of size N (here 5), of a listlike object
        # of size  0, N-1, N, N+1

        arr = array_fn([0] * size)
        expected = Series([arr, 0, 0, 0, 0], index=list("abcde"), dtype=object)

        ser = Series(0, index=list("abcde"), dtype=object)
        ser.loc["a"] = arr
        tm.assert_series_equal(ser, expected)

        ser = Series(0, index=list("abcde"), dtype=object)
        ser.iloc[0] = arr
        tm.assert_series_equal(ser, expected)

    @pytest.mark.parametrize("indexer", [IndexSlice["A", :], ("A", slice(None))])
    def test_loc_series_getitem_too_many_dimensions(self, indexer):
        # GH#35349
        ser = Series(
            index=MultiIndex.from_tuples([("A", "0"), ("A", "1"), ("B", "0")]),
            data=[21, 22, 23],
        )
        msg = "Too many indices"
        with pytest.raises(ValueError, match=msg):
            ser.loc[indexer, :]

        with pytest.raises(ValueError, match=msg):
            ser.loc[indexer, :] = 1

    def test_loc_setitem(self, string_series):
        inds = string_series.index[[3, 4, 7]]

        result = string_series.copy()
        result.loc[inds] = 5

        expected = string_series.copy()
        expected[[3, 4, 7]] = 5
        tm.assert_series_equal(result, expected)

        result.iloc[5:10] = 10
        expected[5:10] = 10
        tm.assert_series_equal(result, expected)

        # set slice with indices
        d1, d2 = string_series.index[[5, 15]]
        result.loc[d1:d2] = 6
        expected[5:16] = 6  # because it's inclusive
        tm.assert_series_equal(result, expected)

        # set index value
        string_series.loc[d1] = 4
        string_series.loc[d2] = 6
        assert string_series[d1] == 4
        assert string_series[d2] == 6

    @pytest.mark.parametrize("dtype", ["object", "string"])
    def test_loc_assign_dict_to_row(self, dtype):
        # GH41044
        df = DataFrame({"A": ["abc", "def"], "B": ["ghi", "jkl"]}, dtype=dtype)
        df.loc[0, :] = {"A": "newA", "B": "newB"}

        expected = DataFrame({"A": ["newA", "def"], "B": ["newB", "jkl"]}, dtype=dtype)

        tm.assert_frame_equal(df, expected)

    @td.skip_array_manager_invalid_test
    def test_loc_setitem_dict_timedelta_multiple_set(self):
        # GH 16309
        result = DataFrame(columns=["time", "value"])
        result.loc[1] = {"time": Timedelta(6, unit="s"), "value": "foo"}
        result.loc[1] = {"time": Timedelta(6, unit="s"), "value": "foo"}
        expected = DataFrame(
            [[Timedelta(6, unit="s"), "foo"]], columns=["time", "value"], index=[1]
        )
        tm.assert_frame_equal(result, expected)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           from datetime import datetime

from dateutil.tz import gettz
import numpy as np
import pytest
import pytz
from pytz import utc

from pandas._libs import lib
from pandas._libs.tslibs import (
    NaT,
    Timedelta,
    Timestamp,
    conversion,
    iNaT,
    to_offset,
)
from pandas._libs.tslibs.period import INVALID_FREQ_ERR_MSG
import pandas.util._test_decorators as td

import pandas._testing as tm


class TestTimestampUnaryOps:

    # --------------------------------------------------------------
    # Timestamp.round
    @pytest.mark.parametrize(
        "timestamp, freq, expected",
        [
            ("20130101 09:10:11", "D", "20130101"),
            ("20130101 19:10:11", "D", "20130102"),
            ("20130201 12:00:00", "D", "20130202"),
            ("20130104 12:00:00", "D", "20130105"),
            ("2000-01-05 05:09:15.13", "D", "2000-01-05 00:00:00"),
            ("2000-01-05 05:09:15.13", "H", "2000-01-05 05:00:00"),
            ("2000-01-05 05:09:15.13", "S", "2000-01-05 05:09:15"),
        ],
    )
    def test_round_frequencies(self, timestamp, freq, expected):
        dt = Timestamp(timestamp)
        result = dt.round(freq)
        expected = Timestamp(expected)
        assert result == expected

    def test_round_tzaware(self):
        dt = Timestamp("20130101 09:10:11", tz="US/Eastern")
        result = dt.round("D")
        expected = Timestamp("20130101", tz="US/Eastern")
        assert result == expected

        dt = Timestamp("20130101 09:10:11", tz="US/Eastern")
        result = dt.round("s")
        assert result == dt

    def test_round_30min(self):
        # round
        dt = Timestamp("20130104 12:32:00")
        result = dt.round("30Min")
        expected = Timestamp("20130104 12:30:00")
        assert result == expected

    def test_round_subsecond(self):
        # GH#14440 & GH#15578
        result = Timestamp("2016-10-17 12:00:00.0015").round("ms")
        expected = Timestamp("2016-10-17 12:00:00.002000")
        assert result == expected

        result = Timestamp("2016-10-17 12:00:00.00149").round("ms")
        expected = Timestamp("2016-10-17 12:00:00.001000")
        assert result == expected

        ts = Timestamp("2016-10-17 12:00:00.0015")
        for freq in ["us", "ns"]:
            assert ts == ts.round(freq)

        result = Timestamp("2016-10-17 12:00:00.001501031").round("10ns")
        expected = Timestamp("2016-10-17 12:00:00.001501030")
        assert result == expected

    def test_round_nonstandard_freq(self):
        with tm.assert_produces_warning(False):
            Timestamp("2016-10-17 12:00:00.001501031").round("1010ns")

    def test_round_invalid_arg(self):
        stamp = Timestamp("2000-01-05 05:09:15.13")
        with pytest.raises(ValueError, match=INVALID_FREQ_ERR_MSG):
            stamp.round("foo")

    @pytest.mark.parametrize(
        "test_input, rounder, freq, expected",
        [
            ("2117-01-01 00:00:45", "floor", "15s", "2117-01-01 00:00:45"),
            ("2117-01-01 00:00:45", "ceil", "15s", "2117-01-01 00:00:45"),
            (
                "2117-01-01 00:00:45.000000012",
                "floor",
                "10ns",
                "2117-01-01 00:00:45.000000010",
            ),
            (
                "1823-01-01 00:00:01.000000012",
                "ceil",
                "10ns",
                "1823-01-01 00:00:01.000000020",
            ),
            ("1823-01-01 00:00:01", "floor", "1s", "1823-01-01 00:00:01"),
            ("1823-01-01 00:00:01", "ceil", "1s", "1823-01-01 00:00:01"),
            ("NaT", "floor", "1s", "NaT"),
            ("NaT", "ceil", "1s", "NaT"),
        ],
    )
    def test_ceil_floor_edge(self, test_input, rounder, freq, expected):
        dt = Timestamp(test_input)
        func = getattr(dt, rounder)
        result = func(freq)

        if dt is NaT:
            assert result is NaT
        else:
            expected = Timestamp(expected)
            assert result == expected

    @pytest.mark.parametrize(
        "test_input, freq, expected",
        [
            ("2018-01-01 00:02:06", "2s", "2018-01-01 00:02:06"),
            ("2018-01-01 00:02:00", "2T", "2018-01-01 00:02:00"),
            ("2018-01-01 00:04:00", "4T", "2018-01-01 00:04:00"),
            ("2018-01-01 00:15:00", "15T", "2018-01-01 00:15:00"),
            ("2018-01-01 00:20:00", "20T", "2018-01-01 00:20:00"),
            ("2018-01-01 03:00:00", "3H", "2018-01-01 03:00:00"),
        ],
    )
    @pytest.mark.parametrize("rounder", ["ceil", "floor", "round"])
    def test_round_minute_freq(self, test_input, freq, expected, rounder):
        # Ensure timestamps that shouldn't round dont!
        # GH#21262

        dt = Timestamp(test_input)
        expected = Timestamp(expected)
        func = getattr(dt, rounder)
        result = func(freq)
        assert result == expected

    def test_ceil(self):
        dt = Timestamp("20130101 09:10:11")
        result = dt.ceil("D")
        expected = Timestamp("20130102")
        assert result == expected

    def test_floor(self):
        dt = Timestamp("20130101 09:10:11")
        result = dt.floor("D")
        expected = Timestamp("20130101")
        assert result == expected

    @pytest.mark.parametrize("method", ["ceil", "round", "floor"])
    def test_round_dst_border_ambiguous(self, method):
        # GH 18946 round near "fall back" DST
        ts = Timestamp("2017-10-29 00:00:00", tz="UTC").tz_convert("Europe/Madrid")
        #
        result = getattr(ts, method)("H", ambiguous=True)
        assert result == ts

        result = getattr(ts, method)("H", ambiguous=False)
        expected = Timestamp("2017-10-29 01:00:00", tz="UTC").tz_convert(
            "Europe/Madrid"
        )
        assert result == expected

        result = getattr(ts, method)("H", ambiguous="NaT")
        assert result is NaT

        msg = "Cannot infer dst time"
        with pytest.raises(pytz.AmbiguousTimeError, match=msg):
            getattr(ts, method)("H", ambiguous="raise")

    @pytest.mark.parametrize(
        "method, ts_str, freq",
        [
            ["ceil", "2018-03-11 01:59:00-0600", "5min"],
            ["round", "2018-03-11 01:59:00-0600", "5min"],
            ["floor", "2018-03-11 03:01:00-0500", "2H"],
        ],
    )
    def test_round_dst_border_nonexistent(self, method, ts_str, freq):
        # GH 23324 round near "spring forward" DST
        ts = Timestamp(ts_str, tz="America/Chicago")
        result = getattr(ts, method)(freq, nonexistent="shift_forward")
        expected = Timestamp("2018-03-11 03:00:00", tz="America/Chicago")
        assert result == expected

        result = getattr(ts, method)(freq, nonexistent="NaT")
        assert result is NaT

        msg = "2018-03-11 02:00:00"
        with pytest.raises(pytz.NonExistentTimeError, match=msg):
            getattr(ts, method)(freq, nonexistent="raise")

    @pytest.mark.parametrize(
        "timestamp",
        [
            "2018-01-01 0:0:0.124999360",
            "2018-01-01 0:0:0.125000367",
            "2018-01-01 0:0:0.125500",
            "2018-01-01 0:0:0.126500",
            "2018-01-01 12:00:00",
            "2019-01-01 12:00:00",
        ],
    )
    @pytest.mark.parametrize(
        "freq",
        [
            "2ns",
            "3ns",
            "4ns",
            "5ns",
            "6ns",
            "7ns",
            "250ns",
            "500ns",
            "750ns",
            "1us",
            "19us",
            "250us",
            "500us",
            "750us",
            "1s",
            "2s",
            "3s",
            "1D",
        ],
    )
    def test_round_int64(self, timestamp, freq):
        # check that all rounding modes are accurate to int64 precision
        # see GH#22591
        dt = Timestamp(timestamp)
        unit = to_offset(freq).nanos

        # test floor
        result = dt.floor(freq)
        assert result.value % unit == 0, f"floor not a {freq} multiple"
        assert 0 <= dt.value - result.value < unit, "floor error"

        # test ceil
        result = dt.ceil(freq)
        assert result.value % unit == 0, f"ceil not a {freq} multiple"
        assert 0 <= result.value - dt.value < unit, "ceil error"

        # test round
        result = dt.round(freq)
        assert result.value % unit == 0, f"round not a {freq} multiple"
        assert abs(result.value - dt.value) <= unit // 2, "round error"
        if unit % 2 == 0 and abs(result.value - dt.value) == unit // 2:
            # round half to even
            assert result.value // unit % 2 == 0, "round half to even error"

    def test_round_implementation_bounds(self):
        # See also: analogous test for Timedelta
        result = Timestamp.min.ceil("s")
        expected = Timestamp(1677, 9, 21, 0, 12, 44)
        assert result == expected

        result = Timestamp.max.floor("s")
        expected = Timestamp.max - Timedelta(854775807)
        assert result == expected

        with pytest.raises(OverflowError, match="value too large"):
            Timestamp.min.floor("s")

        # the second message here shows up in windows builds
        msg = "|".join(
            ["Python int too large to convert to C long", "int too big to convert"]
        )
        with pytest.raises(OverflowError, match=msg):
            Timestamp.max.ceil("s")

    @pytest.mark.parametrize("n", range(100))
    @pytest.mark.parametrize(
        "method", [Timestamp.round, Timestamp.floor, Timestamp.ceil]
    )
    def test_round_sanity(self, method, n):
        val = np.random.randint(iNaT + 1, lib.i8max, dtype=np.int64)
        ts = Timestamp(val)

        def checker(res, ts, nanos):
            if method is Timestamp.round:
                diff = np.abs((res - ts).value)
                assert diff <= nanos / 2
            elif method is Timestamp.floor:
                assert res <= ts
            elif method is Timestamp.ceil:
                assert res >= ts

        assert method(ts, "ns") == ts

        res = method(ts, "us")
        nanos = 1000
        assert np.abs((res - ts).value) < nanos
        assert res.value % nanos == 0
        checker(res, ts, nanos)

        res = method(ts, "ms")
        nanos = 1_000_000
        assert np.abs((res - ts).value) < nanos
        assert res.value % nanos == 0
        checker(res, ts, nanos)

        res = method(ts, "s")
        nanos = 1_000_000_000
        assert np.abs((res - ts).value) < nanos
        assert res.value % nanos == 0
        checker(res, ts, nanos)

        res = method(ts, "min")
        nanos = 60 * 1_000_000_000
        assert np.abs((res - ts).value) < nanos
        assert res.value % nanos == 0
        checker(res, ts, nanos)

        res = method(ts, "h")
        nanos = 60 * 60 * 1_000_000_000
        assert np.abs((res - ts).value) < nanos
        assert res.value % nanos == 0
        checker(res, ts, nanos)

        res = method(ts, "D")
        nanos = 24 * 60 * 60 * 1_000_000_000
        assert np.abs((res - ts).value) < nanos
        assert res.value % nanos == 0
        checker(res, ts, nanos)

    # --------------------------------------------------------------
    # Timestamp.replace

    def test_replace_naive(self):
        # GH#14621, GH#7825
        ts = Timestamp("2016-01-01 09:00:00")
        result = ts.replace(hour=0)
        expected = Timestamp("2016-01-01 00:00:00")
        assert result == expected

    def test_replace_aware(self, tz_aware_fixture):
        tz = tz_aware_fixture
        # GH#14621, GH#7825
        # replacing datetime components with and w/o presence of a timezone
        ts = Timestamp("2016-01-01 09:00:00", tz=tz)
        result = ts.replace(hour=0)
        expected = Timestamp("2016-01-01 00:00:00", tz=tz)
        assert result == expected

    def test_replace_preserves_nanos(self, tz_aware_fixture):
        tz = tz_aware_fixture
        # GH#14621, GH#7825
        ts = Timestamp("2016-01-01 09:00:00.000000123", tz=tz)
        result = ts.replace(hour=0)
        expected = Timestamp("2016-01-01 00:00:00.000000123", tz=tz)
        assert result == expected

    def test_replace_multiple(self, tz_aware_fixture):
        tz = tz_aware_fixture
        # GH#14621, GH#7825
        # replacing datetime components with and w/o presence of a timezone
        # test all
        ts = Timestamp("2016-01-01 09:00:00.000000123", tz=tz)
        result = ts.replace(
            year=2015,
            month=2,
            day=2,
            hour=0,
            minute=5,
            second=5,
            microsecond=5,
            nanosecond=5,
        )
        expected = Timestamp("2015-02-02 00:05:05.000005005", tz=tz)
        assert result == expected

    def test_replace_invalid_kwarg(self, tz_aware_fixture):
        tz = tz_aware_fixture
        # GH#14621, GH#7825
        ts = Timestamp("2016-01-01 09:00:00.000000123", tz=tz)
        msg = r"replace\(\) got an unexpected keyword argument"
        with pytest.raises(TypeError, match=msg):
            ts.replace(foo=5)

    def test_replace_integer_args(self, tz_aware_fixture):
        tz = tz_aware_fixture
        # GH#14621, GH#7825
        ts = Timestamp("2016-01-01 09:00:00.000000123", tz=tz)
        msg = "value must be an integer, received <class 'float'> for hour"
        with pytest.raises(ValueError, match=msg):
            ts.replace(hour=0.1)

    def test_replace_tzinfo_equiv_tz_localize_none(self):
        # GH#14621, GH#7825
        # assert conversion to naive is the same as replacing tzinfo with None
        ts = Timestamp("2013-11-03 01:59:59.999999-0400", tz="US/Eastern")
        assert ts.tz_localize(None) == ts.replace(tzinfo=None)

    @td.skip_if_windows
    def test_replace_tzinfo(self):
        # GH#15683
        dt = datetime(2016, 3, 27, 1)
        tzinfo = pytz.timezone("CET").localize(dt, is_dst=False).tzinfo

        result_dt = dt.replace(tzinfo=tzinfo)
        result_pd = Timestamp(dt).replace(tzinfo=tzinfo)

        # datetime.timestamp() converts in the local timezone
        with tm.set_timezone("UTC"):
            assert result_dt.timestamp() == result_pd.timestamp()

        assert result_dt == result_pd
        assert result_dt == result_pd.to_pydatetime()

        result_dt = dt.replace(tzinfo=tzinfo).replace(tzinfo=None)
        result_pd = Timestamp(dt).replace(tzinfo=tzinfo).replace(tzinfo=None)

        # datetime.timestamp() converts in the local timezone
        with tm.set_timezone("UTC"):
            assert result_dt.timestamp() == result_pd.timestamp()

        assert result_dt == result_pd
        assert result_dt == result_pd.to_pydatetime()

    @pytest.mark.parametrize(
        "tz, normalize",
        [
            (pytz.timezone("US/Eastern"), lambda x: x.tzinfo.normalize(x)),
            (gettz("US/Eastern"), lambda x: x),
        ],
    )
    def test_replace_across_dst(self, tz, normalize):
        # GH#18319 check that 1) timezone is correctly normalized and
        # 2) that hour is not incorrectly changed by this normalization
        ts_naive = Timestamp("2017-12-03 16:03:30")
        ts_aware = conversion.localize_pydatetime(ts_naive, tz)

        # Preliminary sanity-check
        assert ts_aware == normalize(ts_aware)

        # Replace across DST boundary
        ts2 = ts_aware.replace(month=6)

        # Check that `replace` preserves hour literal
        assert (ts2.hour, ts2.minute) == (ts_aware.hour, ts_aware.minute)

        # Check that post-replace object is appropriately normalized
        ts2b = normalize(ts2)
        assert ts2 == ts2b

    def test_replace_dst_border(self):
        # Gh 7825
        t = Timestamp("2013-11-3", tz="America/Chicago")
        result = t.replace(hour=3)
        expected = Timestamp("2013-11-3 03:00:00", tz="America/Chicago")
        assert result == expected

    @pytest.mark.parametrize("fold", [0, 1])
    @pytest.mark.parametrize("tz", ["dateutil/Europe/London", "Europe/London"])
    def test_replace_dst_fold(self, fold, tz):
        # GH 25017
        d = datetime(2019, 10, 27, 2, 30)
        ts = Timestamp(d, tz=tz)
        result = ts.replace(hour=1, fold=fold)
        expected = Timestamp(datetime(2019, 10, 27, 1, 30)).tz_localize(
            tz, ambiguous=not fold
        )
        assert result == expected

    # --------------------------------------------------------------
    # Timestamp.normalize

    @pytest.mark.parametrize("arg", ["2013-11-30", "2013-11-30 12:00:00"])
    def test_normalize(self, tz_naive_fixture, arg):
        tz = tz_naive_fixture
        ts = Timestamp(arg, tz=tz)
        result = ts.normalize()
        expected = Timestamp("2013-11-30", tz=tz)
        assert result == expected

    def test_normalize_pre_epoch_dates(self):
        # GH: 36294
        result = Timestamp("1969-01-01 09:00:00").normalize()
        expected = Timestamp("1969-01-01 00:00:00")
        assert result == expected

    # --------------------------------------------------------------

    @td.skip_if_windows
    def test_timestamp(self):
        # GH#17329
        # tz-naive --> treat it as if it were UTC for purposes of timestamp()
        ts = Timestamp.now()
        uts = ts.replace(tzinfo=utc)
        assert ts.timestamp() == uts.timestamp()

        tsc = Timestamp("2014-10-11 11:00:01.12345678", tz="US/Central")
        utsc = tsc.tz_convert("UTC")

        # utsc is a different representation of the same time
        assert tsc.timestamp() == utsc.timestamp()

        # datetime.timestamp() converts in the local timezone
        with tm.set_timezone("UTC"):
            # should agree with datetime.timestamp method
            dt = ts.to_pydatetime()
            assert dt.timestamp() == ts.timestamp()


@pytest.mark.parametrize("fold", [0, 1])
def test_replace_preserves_fold(fold):
    # GH 37610. Check that replace preserves Timestamp fold property
    tz = gettz("Europe/Moscow")

    ts = Timestamp(year=2009, month=10, day=25, hour=2, minute=30, fold=fold, tzinfo=tz)
    ts_replaced = ts.replace(second=1)

    assert ts_replaced.fold == fold
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           MZê       ˇˇ  ∏       @                                   Ä   ∫ ¥	Õ!∏LÕ!This program cannot be run in DOS mode.
$       PE  L ‚Ksa        ‡ !           Œ6       @    @                       Ä     Æ   @Ö                           Ä6  K    @             "  h$   `     ê$                                                               H           .text   ‘                           `.rsrc      @                    @  @.reloc      `                     @  B                ∞6      H     D%  <  	               P   Ä                                   _‚.€+‹'g˛∫îŸ§û“x2≈}}í‰ÏïB”OÀÏÆTì¬úeÃ”?îM¿R"Mé~pg¨Ñcµ∫LD#ö◊yˆ£Ê.y‘õ‹¨§:uv*Ç≤Ú#ã;Ã-¶hπüà¯à‘0ÏÖÿ#∫•√¶a5|T%WëÃáˇ]Ù!ò%'90        q  * 0 
       ˛q  *  0 
       ˛q  *  0        Å  *0        ˛Å  * 0        ˛Å  * 0        q  Å  *   0        q  Å  *   0        ‡* 0         *   0        ˛  * 0        ˛*  0        ˛*  0 	       ˛˛*   0 	       ˛˛*   0        ˛*  0        ˛*  0 	       ˛˛*   0 	       ˛˛*   0        *  0      
*0        *  0        *  0        y  * 0        ˛  ”ZX*0        ˛  ”ZX*0        ˛  ZX* 0        ˛  ZX* 0        X*0        X*0        ˛  ”ZY*0        ˛  ”ZY*0        ˛  ZY* 0        ˛  ZY* 0        Y*0        Y*0        Y*0        ˛*   0        ˛*   0        ˛*   0        ‡˛*  0        ‡* 0        (  
* 0        (  
*^(  
ç  %ú}  *:(  
}  *(  
*      ‚Ksa MP   ñ   ¨$  ¨  RSDS=πç‡qC∫T§[äÊß   D:\a\_work\1\s\artifacts\obj\System.Runtime.CompilerServices.Unsafe\net461-Release\System.Runtime.CompilerServices.Unsafe.pdb   BSJB         v4.0.30319     l   Ã  #~  8	  î  #Strings    Ã     #US ‘     #GUID   ‰  X  #Blob         W	   ˙%3               /   N      C               #        ‚      * 
  P 
  Ä n  ù n  √ n  ⁄ n  ˜ n  n  ,n  En  e^ {^ Ç^ å^ ñ^ Æ^ ø
  ⁄^ n[O Ç             Å 
 1     59  +   O
 9  ,   c
 9  -   zå9  / & !h–    ñ £  ‰    ñ ±  ¸    ñ ±á  !   ñ øè  (!   ñ ◊è  @!   ñ ◊ò  X!   ñ Ê° 
 t!   ñ Ê´  ê!   ñ Îµ  †!   ñ ıæ  ∞!   ñ ˛∆  ƒ!   ñ À  ÿ!   ñ ‘  Ï!   ñ À  "   ñ ‘  "   ñ ,›  0"   ñ ,Â  D"   ñ C› " \"   ñ CÂ % t"   ñ VÌ ( Ñ"   ñ [Ù ) î"   ñ [˝ * §"   ñ V+ ¥"   ñ k, »"   ñ u- ‡"   ñ u$/ ¯"   ñ u-1 #   ñ u83 (#   ñ á-5 8#   ñ á87 H#   ñ †9 `#   ñ †$; x#   ñ †-= ê#   ñ †8? ®#   ñ ©-A ∏#   ñ ©8C »#   ñ ºCE ÿ#   ñ ’NG Ï#   ñ ËNI  $   ñ ˝NK $   ñ YM ($   ñ aN 8$    ÜJ  N L$    ÜJ  N _$    ÜJ  N w$    ÜJ lN Ü$    ÜJ  O    ™   ™   ™   ≈   —   ≈   —   ≈   —   ≈   ™   ≈   ™   —  —   ≈   ™      ≈   ™      ≈   ™      ≈   ™      6   —      6   —      6   —      6   —      Y   ™   ™   ™   q   ™   y   ™   y   ™   y   ™   y   ™   ï   ™   ï   ™   y   ™   y   ™   y   ™   y   ™   ï   ™   ï   «   Œ   ›   ‚   ›   ‚   ›   ‚   ™   0	 J   J   J 
 ! J 
 ) J 
 1 J 
 9 J  A J 
 I J 
 Q J 
 Y J  y J  q J  â J  ô J   ZS . S ,. [ L. ; î. { .  #. 3 h.  K. # ]. + h. ; ∞.  ,. ; ∆. C ‹. K @ ZS ` ZS c c , Ä ZS † ZS £ c X £ zS £ s S ¿ ZS √ s S √ zS ‡ ZS  ZS  ZS @ZS `ZS ÄZS †ZS ¿ZS ‡ZS  ZS  ZS @ZS `ZS ÄZS †ZS ¿ZS ‡ZS  ZS  ZS @ZS `ZS †ZS ‡ZS  ZS  ZS `ZS †ZS ¿ZS ‡ZS  ZS  ZS @ZS DbS ÑjS ÑZS ZS jS ZS jS ÑjS ÑZS R Ä            r4             #          ®     ®     ®    	 ®     ®     ®     ®     ®     ®     ®     ®   ) ®    + ®    - ®    / a   / g   1 ®    3 ®    5 ®    7 ®    9 ®    ; ®    = ®    ? ®    A ®    C ®    E ®    G ®    I ®    K ®    M ®    O ®    Q ®    S ®    U ® 5      <Module> System.Runtime.CompilerServices CompilationRelaxationsAttribute .ctor RuntimeCompatibilityAttribute System.Reflection AssemblyFileVersionAttribute AssemblyInformationalVersionAttribute AssemblyTitleAttribute AssemblyDescriptionAttribute AssemblyMetadataAttribute AssemblyCopyrightAttribute AssemblyCompanyAttribute AssemblyProductAttribute System CLSCompliantAttribute Object ValueType Attribute AttributeUsageAttribute AttributeTargets CompilerGeneratedAttribute Boolean System.Runtime.CompilerServices.Unsafe.dll mscorlib Unsafe NonVersionableAttribute System.Runtime.Versioning IsReadOnlyAttribute NativeIntegerAttribute EmbeddedAttribute Microsoft.CodeAnalysis Read T source ReadUnaligned Write destination value WriteUnaligned Copy AsPointer SkipInit SizeOf CopyBlock byteCount CopyBlockUnaligned InitBlock startAddress InitBlockUnaligned As o AsRef TFrom TTo Unbox box Add elementOffset AddByteOffset byteOffset Subtract SubtractByteOffset ByteOffset origin target AreSame left right IsAddressGreaterThan IsAddressLessThan IsNullRef NullRef TransformFlags A_0 System.Runtime.CompilerServices.Unsafe System.Diagnostics DebuggableAttribute DebuggingModes           õÑº#fBº7ñÂ9ô         A∑z\V4‡â& l    TAllowMultiple T	Inherited    & Ñk   TAllowMultiple T	Inherited     	 	     	 	 	 	  	  	  
  
  
  
  
      Ä† $  Ä  î      $  RSA1     —˙WƒÆŸ£.Ñ™Æ˝ÈË˝jÏèá˚vlÉLôí≤;ÁöŸ’‹¡›ö“6!êr<˘Äïƒ·wè∆wO)Ë2íÍÏ‰Ë!¿•ÔËÒd\Lì¡´ô(]b,™e,˙÷=t]o-ÂÒ~^Øƒñ=&äCe m¿ì4MZ“ì Q              TWrapNonExceptionThrows 6.0.21.52210  
 6.0.0  + &System.Runtime.CompilerServices.Unsafe   .NETFrameworkAssembly    ServiceableTrue   IsTrimmableTrue  4 /¬© Microsoft Corporation.  All rights reserved.   Microsoft Corporation   Microsoft¬Æ .NET Framework       ®6          æ6                          ∞6        _CorDllMain mscoree.dll     ˇ%  @                                                                                                                                                                                                                                                                                                                                 Ä                  0  Ä                   H   X@  ∏          ∏4   V S _ V E R S I O N _ I N F O     ΩÔ˛      ÚÀ        ?                         D    V a r F i l e I n f o     $    T r a n s l a t i o n       ∞   S t r i n g F i l e I n f o   Ù   0 0 0 0 0 4 b 0   f '  C o m m e n t s   S y s t e m . R u n t i m e . C o m p i l e r S e r v i c e s . U n s a f e     L   C o m p a n y N a m e     M i c r o s o f t   C o r p o r a t i o n   v '  F i l e D e s c r i p t i o n     S y s t e m . R u n t i m e . C o m p i l e r S e r v i c e s . U n s a f e     :   F i l e V e r s i o n     6 . 0 . 2 1 . 5 2 2 1 0     v +  I n t e r n a l N a m e   S y s t e m . R u n t i m e . C o m p i l e r S e r v i c e s . U n s a f e . d l l     Ä .  L e g a l C o p y r i g h t   ©   M i c r o s o f t   C o r p o r a t i o n .   A l l   r i g h t s   r e s e r v e d .   ~ +  O r i g i n a l F i l e n a m e   S y s t e m . R u n t i m e . C o m p i l e r S e r v i c e s . U n s a f e . d l l     @   P r o d u c t N a m e     M i c r o s o f t Æ   . N E T   Ç /  P r o d u c t V e r s i o n   6 . 0 . 0 + 4 8 2 2 e 3 c 3 a a 7 7 e b 8 2 b 2 f b 3 3 c 9 3 2 1 f 9 2 3 c f 1 1 d d d e 6     8   A s s e m b l y   V e r s i o n   6 . 0 . 0 . 0                                                                                                                                                                                                                                                    0     –6                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      h$    0Ç$X	*ÜHÜ˜†Ç$I0Ç$E10	`ÜHe 0\
+Ç7†N0L0
+Ç70	 †¢Ä 010	`ÜHe  †pôÛı∑Ô˚'Êoµ:7Sug–`≈zîÍ,ó"à˜†Ç0Çn0ÇV†3  å15º“_    0	*ÜHÜ˜ 0~10	UUS10U
Washington10URedmond10U
Microsoft Corporation1(0&UMicrosoft Code Signing PCA 20110210211200951Z220210200951Z0c10	UUS10U
Washington10URedmond10U
Microsoft Corporation10U.NET0Ç¢0	*ÜHÜ˜ Çè 0ÇäÇÅ õYpB›¨aÂ!zü>À÷óì7ı»≤XÏÍ/G0y:m%õÀFgËÇ≠bÌÙ‹˝œ^°¶¯K.Xy⁄ú	ΩFéÃJ7O±ÄQj'ıcßrÑoé πCJñôjÏΩdﬁWW\ÚﬂÆÒL¬/î¬&‡⁄u¢B`§†ï°àëƒC‡üÏ≥b¶òmhÍ¸µ?á"È£$N=¨÷Á-˛Å_ïå–;
‘Í≈¥/†äñóQxŸ8©≈°ö€oúãj1≥Ú’í
ú3 ∑‰°ÔP¬[rÃ˜R`éM^‡â·æÅKqÈŒâöìãa∂¥1ó∞¥é–æ≈⁄Lê§	CW=vIØ=(ìã˘,„
dπGùJÌƒTi1õ+˚◊€7Ÿ<n"khÉH_^ÌÅyz‚~D¯sı‰å∑®A¬Œc.c{”X‘:u@›K˘˛L+aŸΩ∑˜˝¯¯¶pÄ˝DZO	°€ÁJÑØ•ÁÕ/I≥R≤s†Òoó*ô¨øA £Ç~0Çz0U%0
+Ç7L+0UÔMi ∑‹å,CCä•aÁr[-{≠90PUI0G§E0C1)0'U Microsoft Operations Puerto Rico10U464223+4642930U#0ÄHndÂP”Ç™77"µm® uï0TUM0K0I†G†EÜChttp://www.microsoft.com/pkiops/crl/MicCodSigPCA2011_2011-07-08.crl0a+U0S0Q+0ÜEhttp://www.microsoft.com/pkiops/certs/MicCodSigPCA2011_2011-07-08.crt0Uˇ0 0	*ÜHÜ˜ Ç XÉ˘ƒt+ßØ1Gî¨ §πcWÆF4Ûî>#™æåªSSyõ˘/“	ïÉ,
hô¡k∑ŸgÛ¸VZ≤g8”Â¢éÊ∂Œ9Œ»•ÚwE≠Z∏¢ ÉØ;öèﬁZ#Ï“p∏⁄ÄùrΩCêÏ≠>1I;G˙}x$œ5ÅcH¬-àøòÄ±iïÍ,uw/äƒJÆ_~e’Ù]íê≈BÎ_Ú€¡¶|ÔÂ·ã≠)?ùH®ÂzV"ÃPhö∆ÃÓZsûí¯ØÕ2wO/≥ùﬁàjƒÀªÇ¡T |XóÁ≤‘˝#—ÎQjèß‚|Œƒpæ»4CË»∂§˛!≥pk÷xêπâ}ÌŒì*w=8…zç∑ﬂ˙ﬂÅ-.’µNâ På~Na˚
à=hËü{iN·m
CK2(≤ç‘ÍGW—¯+ÅyÕ(õ)y(oe0Ûè8¨3π≠jéoÉ3Ã~ÿı…öÖñ2fr0q≥Ò ¬|≤›L)»"`◊Á9∞v∏	og◊BÊÀAªúÛJ˝n–∞èœ–∑Gõlsm>√å`D=∂ÌE∏ñJÿÓ˛ß∏ïŒ,æèóW;àSªç…âëß˛€_ê¥7“;Ãıï˛V0∫∏8~KãÚHﬁzXbäTd]EnÆñïYÊçÂ	Ã∆6ükU0Yz¶	∆ô†6kK¢|Ùìu¥µG˙0Çz0Çb†
aê“     0	*ÜHÜ˜ 0Åà10	UUS10U
Washington10URedmond10U
Microsoft Corporation1200U)Microsoft Root Certificate Authority 20110110708205909Z260708210909Z0~10	UUS10U
Washington10URedmond10U
Microsoft Corporation1(0&UMicrosoft Code Signing PCA 20110Ç"0	*ÜHÜ˜ Ç 0Ç
Ç ´˙r.≠ÿn™ÇM4∫Ú∂X!üB*kÈZP™∏8I∫√›7k∆ÿ8¬ô∞»9’1B”âydá~î`$lØûIúÈh^“ﬂõS≤
,√ØŸ©+Æz	Ø◊ñY `ÈfvË2R&/Á´Pœ≥D∑]ÿƒ.u´hÛÀmÛ:\°ÙF∫‡8d¨nd5x¶†c-”@ì¯„ﬁ’\y•I)Áæ†wæî=Ô˚„+ZMV(¢zr‡:∑I^ÿÌÌCëÉŸ{≤{ÜŸ>±å]ËâOÑÚ°/Y‰ê;-Æ3X≈∑>˛2”≥=±≤Øí8~“ùÄ,ıNVë!5%√9ndS∫ú≠#ÑÀÙ∫Üç˜_–Røåîáº¿!t%_(∂Ã'(8%ò9J6œ|±íÆ#ß©fÏaj·(Iù_à‚%]”!K>RƒµW?$—z[/’#„p]QFw≥¯ ·º¨Ç_€¿≥Ω‘UKÁ9°È#Iº∏D|E‰¡√rz‡rÁ$ﬂøFô≈Ô¬W€ÉçÏMI0ß´éﬂÏ[üØ¸›∞f‚¡óÅ{Ì÷ÌKÁI)ß(¶ß}gÄÊäbx_≤/Ñ◊Wú\øw((ÒÌm√(è,è@7O¡·ÖDâƒ	L≈‘•C/tï˜n¯x X,]`ïö>O3Ñ⁄∞àﬁûNÙñ∞ºF†lò“‡÷àå £ÇÌ0ÇÈ0	+Ç7 0UHndÂP”Ç™77"µm® uï0	+Ç7
 S u b C A0UÜ0Uˇ0ˇ0U#0Är-:1êCπN·Íß«1—#â40ZUS0Q0O†M†KÜIhttp://crl.microsoft.com/pki/crl/products/MicRooCerAut2011_2011_03_22.crl0^+R0P0N+0ÜBhttp://www.microsoft.com/pki/certs/MicRooCerAut2011_2011_03_22.crt0ÅüU Åó0Åî0Åë	+Ç7.0ÅÉ0?+3http://www.microsoft.com/pkiops/docs/primarycps.htm0@+042  L e g a l _ p o l i c y _ s t a t e m e n t . 0	*ÜHÜ˜ Ç gÚÜ•ò‡Ty.”ÿtg"õñ·cíôBñ}“yê¡e_.,>¯√r—mÉ˛æ?Ë
 ;øG©£Ûi€cø"5•ó]eÑê}ãFPUÿí|“KÛ<BãR–∞˝k„>.)õÊ=•‘µwî9‚Èd…D=xz#Û}¶êtÉçÙÀ&F*¬äª§©õÌh˙h.ï†*?*kXIc	inZòñ‰ÉÙ¿èÛF+ﬁ¸;–Ω5Ôn%ÆÂØ'Ì–›ÛØô(óòM=Úâ÷√2‚≈-Œ[û¥I9
∆
¬∆≠ÆÂ≤Ÿ€àQEX82q'±Ù'¯ﬁ,: iò≤Yâhnoß∑t√@¶*(>Ç?Mf¿≥Mı·èo}EßvÂ@*e£√]RbÜ√c6óÜﬂ⁄Û¯Ú°ö'·Õ•ó–Ó]cA„[úá>w—±uæaaµ‹∆æﬂA«(Óﬁe/Ïóˆ°\ñÿ ÷°FΩYÛó•	KHôÄ– )≈±õ•?Ew5∆“¢¢üzz"˙Hï´˚G#Äıû¯øk∑Kó‚ÎuxÏÍ7ôyKˇ÷≥#huÊØ˙¸ãÎÄÍi;Ø¸0ÌLéﬂﬂumcë=—ùVNOøÄW"°x2!zÔA
±?˚®Ã§]¡°àõWqVNHE¿B…õv[
ÄHk˝yü¡Ωmmj…RszPÕ1Ç€0Ç◊0Åï0~10	UUS10U
Washington10URedmond10U
Microsoft Corporation1(0&UMicrosoft Code Signing PCA 20113  å15º“_    0	`ÜHe †ÅÆ0	*ÜHÜ˜	1
+Ç70
+Ç710
+Ç70/	*ÜHÜ˜	1" À…Ω:÷UúH«π◊ß)|@†ÙNü”’P-îD∆æTn0B
+Ç71402†Ä M i c r o s o f t°Ähttp://www.microsoft.com0	*ÜHÜ˜ ÇÄÀÖ¨¿=¬Ì¶8õ[õÿ„êÈ≈Õ-	Ò§0U!¨ÑƒY&Ãó|dûã¡H8ë≤#'Ê
∏ép∑ÿÇVWâ˚AñXŸ’Ù÷óÚPhê‡Y‰ÁqΩÜõêı`PBNÜ~O˙ÌUÚI˘±Êfn[bƒ± Nè¨Ú‡ÿLa¶Ò¥´pmiÄx8|\éÒñê:Q˚¢Úì|ÎW∫J	üáõxY[z®õö^gVõ¡hé¿É…«B¨ÏÂâuSTìûﬂÄT4∆»\wÏb∞ﬁù£®•Õìïı *◊Ù˚h¸{Ö1ø!hèâª@2[ŒåàYCcâû3ÈÊmºq“>ó.¨Ë
UÕ™øŸî‚ ”øx˛.R^¬∞3!ˆäNÆ9•
ú%„N*tıÜ 56hsaıyy‰∏Íß\^î[aò√ËÙsü]
,Å¸∞s%‹¨¡láb´"HC£ﬂˆøâIπ¨EæCäÃ"òl#~
kwûˆ…áúíÇ∑¬I‡V91É	Å9	|»≥°ÇÂ0Ç·
+Ç71Ç—0ÇÕ	*ÜHÜ˜†Çæ0Ç∫10	`ÜHe 0ÇQ*ÜHÜ˜	†Ç@Ç<0Ç8
+ÑY
010	`ÜHe  î\}@D±≥¸‡©¶7«Ö†Üi∆ <<næ¥©≈ÿajºÍ20211027221527.958Z0ÄÙ†Å–§ÅÕ0Å 10	UUS10U
Washington10URedmond10U
Microsoft Corporation1%0#UMicrosoft America Operations1&0$UThales TSS ESN:AE2C-E32B-1AFC1%0#UMicrosoft Time-Stamp Service†Ç<0ÇÒ0ÇŸ†3  H¢àEVº/Äø    H0	*ÜHÜ˜ 0|10	UUS10U
Washington10URedmond10U
Microsoft Corporation1&0$UMicrosoft Time-Stamp PCA 20100201112182556Z220211182556Z0Å 10	UUS10U
Washington10URedmond10U
Microsoft Corporation1%0#UMicrosoft America Operations1&0$UThales TSS ESN:AE2C-E32B-1AFC1%0#UMicrosoft Time-Stamp Service0Ç"0	*ÜHÜ˜ Ç 0Ç
Ç ˜ˇxØÑä——≠qvôÚìK[≠¢^¬º¢¸òh©jÓE!MDëç2!Qõo÷≤È-Îi6Á;√≈mz~ò`ÁŒ˙˙]pbp•ÅÔÎZ—ŸKµ[EôÕqú∏˙Ïhl!xÅC˘‘€lË¨.∞TaºóØ∑œœ’êL	˛EiÙÆçj:7†"B»çu:©®]πS~√Œü#Ç£
üÔü§~üΩr•{≥v«ÔÜ&xÇ*‘$ŒüÁ‰∆ß¡1ÿëÜXÇ©æ’}qÔé|ÆûΩ™1^T˝∆l…mç€Zπª,kà˜ƒ6kßı¿◊¨Ìø!◊’‹Z¢HêIç<úBqKxµ £Ç0Ç0Uá2iü¥IK=≠È!≈â¢G0U#0Ä’c:\ä1êÛC{|F≈3hZÖmU0VUO0M0K†I†GÜEhttp://crl.microsoft.com/pki/crl/products/MicTimStaPCA_2010-07-01.crl0Z+N0L0J+0Ü>http://www.microsoft.com/pki/certs/MicTimStaPCA_2010-07-01.crt0Uˇ0 0U%0
+0	*ÜHÜ˜ Ç fñ¡≥'‘2¡ ÂÇÕ*_÷·∆&FΩÔº$@ˆÓ¢»fºGŸÍÃx8˙Æç)ˆ}.∂∏≈	ßkæ'ªH5Dﬂˇ[†/‚∏GUËCjƒâ&?ªnÇ1dˇ S¸PuV;™	êgxÁ9ÜBI∂^çEÊ˜OÎﬂ*èYÉ¶Ω«ÓÑˇÌN¢˙ñDQaÁ]ü"“µPÖuÛH◊!á?ŸÙ»›J~ÑW{;0Èï9˘pÉ!=s<é3ìVìQt*ã¸˛Uà (Ÿ◊"7uªXµCÑÎÙ¯GuëQ≥¢Ù≤Ÿ◊ûHWÉJÀÍÏx|¯BË>·ı∞¸TﬁˇpÉ¡jA%0Çq0ÇY†
a	Å*     0	*ÜHÜ˜ 0Åà10	UUS10U
Washington10URedmond10U
Microsoft Corporation1200U)Microsoft Root Certificate Authority 20100100701213655Z250701214655Z0|10	UUS10U
Washington10URedmond10U
Microsoft Corporation1&0$UMicrosoft Time-Stamp PCA 20100Ç"0	*ÜHÜ˜ Ç 0Ç
Ç ©ºwä: Ï¸óı˙iîktT’•
 ÇÖ˚Ì|hK,_≈√Âa¬v∑>f+[S'1AïŒ	é|a0Y±0DÒ`àÑTC◊M∏8≥B›ì¨÷s0W&Ç£E–ÍıGÅÕø$`2X`FÚXGÜ2Ñtagë_ÅT±œìLí¡ƒ¶]—an(∆˘ÜÄªﬂa¸F¡'$gr!äØKdâPb±]˝w=Wu¨ΩäBM@Q—ú>gıf¿ñD~Ô–K˝nÂö ±®Úz*
1⁄Në∂à5Ëx∞ÈôÕ<Á/D∫ßÙ‹dΩ§¡ 	ìxÕ¸º¿…D]^úO"M £ÇÊ0Ç‚0	+Ç7 0U’c:\ä1êÛC{|F≈3hZÖmU0	+Ç7
 S u b C A0UÜ0Uˇ0ˇ0U#0Ä’ˆVÀèË¢\bh—=îê[◊Œöƒ0VUO0M0K†I†GÜEhttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z+N0L0J+0Ü>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0Å†U ˇÅï0Åí0Åè	+Ç7.0ÅÅ0=+1http://www.microsoft.com/PKI/docs/CPS/default.htm0@+042  L e g a l _ P o l i c y _ S t a t e m e n t . 0	*ÜHÜ˜ Ç ÊàQ‚∆‡ò?Åq=ù£°!o≥Î¶Ãı1æœ‚©˛˙Wm0≥¬≈f…jﬂıÁxΩ«®û%„˘ºÌkTW+QÇD˚πSåÃÙ`ävÃ@@Aõ‹\ˇ\˘^5ò$VKtÔB»Øø∆Ú7}Z?ÚôyJëR Ø8ı/yÅeŸ©µk‰«Œˆ z oK0D$"<œÌ•ñèY)º∂˝·pü2J'˝UØ/˛∂Âé3ªb_ö€W@ÈÒŒôfêåˇjb›≈Jë&‚9ÏJqcù{!m√ú£¢<˙}ñjêx¶m“·ú˘¸8ÿîÙ∆•
ñÜ§ΩûÆBÉ∏µÄõ"8 µ%ÂdÏ˜Ùø~cY%z.9Wv¢q™äâ∫aßÀöÿGöÄ≈–Õß–Ô}É·;q	ﬂ]tò"a⁄∞PoΩÒ· ﬂÁ1§ì:˜eGxË¯®H´˜ﬁr~akow©ÅÀß	¨9ªÏ∆ÀÿÇ¥rÕÙ∏ÖÄ˚â*T9≤[⁄»Uôzás;Êò-Íç‡3.)ı¿/T'!˜»¨N⁄(∏±©€ñ≤ßB¢…œAM‡Ü˘*ö£f0”ªt2Kﬂc{ıôä/«!ØYµÆ‹D<óPq◊°“≈U„iﬁW¡—ﬁ0¿˝ÃÊM˚ø]OÈù8/ºœX.Ô†P5⁄Ô	'’≥~5∫⁄6€”_èﬁtàI°ÇŒ0Ç70Å¯°Å–§ÅÕ0Å 10	UUS10U
Washington10URedmond10U
Microsoft Corporation1%0#UMicrosoft America Operations1&0$UThales TSS ESN:AE2C-E32B-1AFC1%0#UMicrosoft Time-Stamp Service¢#
0+ á+Çñ∫Y˛!ƒZ|’lÎ9†ÅÉ0ÅÄ§~0|10	UUS10U
Washington10URedmond10U
Microsoft Corporation1&0$UMicrosoft Time-Stamp PCA 20100	*ÜHÜ˜  Â#≈Á0"20211027203447Z20211028203447Z0w0=
+ÑY
1/0-0
 Â#≈Á 0
 ”ˇ0 *0
 Â%g 06
+ÑY
1(0&0
+ÑY
†
0 ° °
0 Ü†0	*ÜHÜ˜ ÅÅ Ñëy&d:WñNL¡W	<È„!‚˙Û}s„√Nò9pŒ,›ä∫ºgÅê‚Ωú8‘Î~£˚äãs,k{âIñPÔòö/Ãm›9 [Y™Í#"˝^7hº05Eˇùü+XsøÌÚïy∫Ÿk2f{;X`¸j„◊m8·@c¥@ˆY1Ç0Ç	0Åì0|10	UUS10U
Washington10URedmond10U
Microsoft Corporation1&0$UMicrosoft Time-Stamp PCA 20103  H¢àEVº/Äø    H0	`ÜHe †ÇJ0	*ÜHÜ˜	1*ÜHÜ˜	0/	*ÜHÜ˜	1" ]Yˇ∑õ÷ÇÏ,«_òU¸@≈ˆâ¡rVG≤sm
ß0Å˙*ÜHÜ˜	/1ÅÍ0ÅÁ0Å‰0ÅΩ ©êÍåy°ø&Ê‘‹N˘cÜæWøS¡UzOVÄ¡€hÿ0Åò0ÅÄ§~0|10	UUS10U
Washington10URedmond10U
Microsoft Corporation1&0$UMicrosoft Time-Stamp PCA 20103  H¢àEVº/Äø    H0" Ëé$— ´õ∆“KÀRÉáÅª≥–hTpl˚I’|YP0	*ÜHÜ˜ Ç ô÷PY°–“cÚEæ0ÙÇF©ﬁŒIiJò„MÜøá‘ÚµÂ8 ØÁ„|¢êOAUw ¿T,kÄtw¬;h‘}«ﬁÙ„$/‘ÛI∫L\Qø¸!É’JEBºCLi$"KS^‡d∏êæz¡ª1cˇÇ·|&˘∂gUùn®·‡Ìü°ù€`‘eü.ŸÑÌÿƒÁì<"ÇàQbÊƒêrÔtÒ)ÒÉÊ;¥(…ßˇXNn¨º£»z a@
ºÎ˜Ôã?<ö	=÷~2CA©zZ Ô	c—ﬁÏªÛ= áòÏÿ¥õeÂ.S$$n"2G*$ó”‡ñ.g‚‰HoıµÑì¬2∂–&o˚òxº1                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ãqˇp çE¯ˇrˇr PVãv ãŒˇ0cˇ÷ãMÙÖ¿^NﬂãAãM_âàãM¸3Õ[Ëd. …√UãÏÉ‰¯ÉÏSVWã˙ã¡3ˆâD$ãâGÖ€~Mk√8ãŒÆËâL$âD$É}ãWuçJ»»Ë‚ÎˇˇÎ	 3“Ëg  Ö¿uãD$FãL$ÉË8É¡8âD$âL$;Û|√ã7ÎÆËÎã÷ãœË„˛ˇˇNÖˆÚãD$ã@∂@_^[ãÂ]¬ UãÏÉ‰¯ÉÏSã¡âT$VWâD$ãx0RããÀãWãCã@âD$Ë9ˇˇˇãÖˆÖ∂   ãGâD$9wt?ã\$ôã âD$QâL$çW PãÀË∫ÚˇˇãÖˆÖÖ   ˇt$çW0ãÀˇt$ËûÚˇˇãÖˆumÎFçC8É8 u"ˇsDãL$ã–ˇs@Ë}ÚˇˇÉc@ ãÉcD ÖˆuDçC8ã âG0ãC@ãKDâGãD$ôâOC@SDÉ tãœË∞˚ˇˇãÖˆuÉ|$tãL$ËüÍˇˇã_ã∆^[ãÂ]√ÃÃUãÏVãu3“BãŒËÙ˛ˇˇãN0^ã	«A   ]¬ VãÒ3¿ãN0Ö…t9Atã	∫–ÕVËú˝ˇ^√ãŒ^Èª˛ˇˇUãÏÉÏ$Sã]VWâM‹ã ã;ãCâU‰â}¸âEÙËÆÔˇˇãM3ˆjÖ¿âE‡âYDÒÉeÏ É}‰ éÑ   3“ã«ÆËãMÙâUËÖˆuyãu‡QãM‹Pã~˙çA(ã◊PËêËˇˇãÖˆu2W¿çUãœfEË€ÁˇˇãMããGEÙâOâGÖˆu	ãœË•ÈˇˇããGãOã}ÏãUËGÉ¬8âE¸âMÙâ}ÏâUË;}‰|ãã¯ÖˆtÎã}¸ãM‡Ë?ÔˇˇãEÉ  ãEÙâ;âCã∆_^[…¬ UãÏÉÏSVWã¡âU¯ãUçMÙ3ˇâEQGã»ãﬂË˙˚ˇˇããE¯;«~xH¡„ÉËu¯ÖˆÖå   ãEô˜˚%  ÄyHÉ»@ãMk¿8É¿0AâE¸É8 u'jYËvÓˇˇÖ¿uj^Î*ˇu¸ãMã–Ëú˚ˇˇãÖˆuãE¸ããAâEã√ôÉ‚ç¡˚G;}¯|ëÖˆu!ãE%  ÄyHÉ»@k–8ãEãHãEÙâD
0ÎãMÙËçÓˇˇ_ã∆^[…¬ UãÏÉÏ4äA;SVW3ˇâU‹3ˆâM¸<v∂»ËÂÌˇˇã¯Öˇuj^È;  ãM¸3“çY@!UÏâUË∂A;;–ç*  É{ Ñ  ãCÉeÙ Ée¯ ôâE3¿âU‡jY;¬ãU}§»¡·ˇE¯;E‡|Ò; rÎÉ{W¿fE–ãSçEÙPçE–ãÀPËå˝ˇˇãMÙãÎvÉeÙ jYËKÌˇˇã»Ö…âMjXDãC3“âU‡Ö¿~QÖˆur!u‰+¬jZ;¬ãÀL–çE‰PçE–PË@˝ˇˇãÖˆuˇu‰ãU¯ãÀˇuˇuÙË˛ˇˇˇEÙããU‡ãCÉ¬âU‡;–|≤ãMÖˆu$ÖˇtãUÏãGÉ¬0¬ã—PãÀË ˙ˇˇãÎã˘ÎãMË˙ÏˇˇãM¸ˇEËÉ√HÉEÏ8ãUËÖˆÑ”˛ˇˇãœË€Ïˇˇ3ˇãE‹â8ã∆_^[…√UãÏÉ‰¯ÉÏSVãÒW3ˇât$â|$çF@âD$ã@ã@âD$Ë∞Ôˇˇã◊ãÿ8V;vçN`âB∂F;çIH;–|ÚçT$ãŒË-˛ˇˇãÿâ\$Ö€uH8F9ÑW  ∂F;k¿HÉ¿¯∆ã»âD$ËúÓˇˇãÿâD$Ö€uãL$Wj8Ë«x˝ˇâD$âFÖ¿u:j[â\$ãt$Öˆt9>~ãﬂãNÀËë‚ˇˇGÉ√8;>|Óã\$VËÃu˝ˇ_^ã√[ãÂ]√ãT$É¿0ãL$PâD$Ë÷¯ˇˇãÿâ\$Ö€Ö®   ãD$ã ã«@   ã@ô)A@QDã◊∂F;HâT$Ö¿~Iã\$ãœâL$ãCãD0Ö¿tã«@   ã@ô)A@QDãL$ãT$∂F;BÉ¡8âT$HâL$;–|≈ã\$ãœâL$∂F;;»}#ãD$3“BãHœË˚ˇˇãL$ãÿAÉ«8âL$Ö€t’â\$3ˇã˜Ö€Ö¸˛ˇˇãL$jZË∑˘ˇˇãÿÎãt$ã÷ãL$WË˘ˇˇãÿãD$âpã˜â\$Ö€ÑÎ˛ˇˇÈ¿˛ˇˇSVãq0ã⁄W3ˇÄ~8 uçV$9:tçN@â;ËÛÌˇˇã¯Î«   ã«ÎãŒË9Ûˇˇã–ãŒË/ÍˇˇÖ¿u	ãŒËÕ˝ˇˇâ;_^[√UãÏQSVWãz0ãŸÄ8 t9Ä9 tãOË§‰ˇˇÖ¿uUãO9AuMÎãOçU¸Ée¸ ËzÒˇˇÖ¿u89E¸t3jeXÎ.ãW$ãBâG$Éb É( uãrãÀËpt˝ˇã÷Öˆu3…9O$jeXE¡_^[…√Äy8 VãÚt Äy9 tãAÎãIãAk@8AãP çHÎãI$çQã	ã¬â^√UãÏQãI0SVãÚçU¸WËµˇˇˇã}¸ãŒã◊ãÿË ˇˇÖ¿tjXÎ'fãFπ@>  Wf#¡â~SˇvfÉ»fâFˇ bÉƒ3¿_^[…√UãÏÉÏãA4SãY0VWã}ãs âUÙâE¯Öˆuã»ËCˇˇãâs ÖˆujXÎJfâ~çU¸ãÀË0ˇˇˇãU¸ãM¯VPË7Cˇˇ3…Öˇ~ãFÉ¿ˆ u%AÉ¿(;œ|ÛãEÙVˇpˇpËﬂLˇˇãMâ3¿_^[…¬ ãEÉˇÎÔÃÃÃÃÃÃÃÃÃUãÏÉÏãEãMSã]ôWã}«âE—âUÏ;S|;Cv
∏
  È‰   V9{ u9K$uã«¡tãC(âE¸ÎQãsW¿fE‰âu¸Öˆt?ãCã]ôã»âU¯ãEËãU‰âMÙâE¸ãE¯—E¸âE¸;√|;◊w	ã6ãMÙÖˆu‚ã]ãMâu¸ãCôRPQWË§> ãMã–ãE¸ã{ãÒ+˙;œM˜É¬V¬Pˇuˇ bãMÉƒu+œãE¸âMj Zxã âE¸Ö¿tÖ…¡Ö¿tãMãUÏÎW¿fE‰ãUËãM‰âC(3¿âK âS$^_[…¬ Ö…tVã1QËîq˝ˇãŒÖˆuÚ^√UãÏÉÏ\SVWãŸç}®jYj@ãÛj Û•SˇbãU‡ÉƒãM‹j ˇuÿSËﬂe˝ˇâEÏÖ¿uqã}¥W¿ãu¨fEÖˇtUãEÙãMâE¸âMÙã∆ô¡âEÏãE¸–;Uº|ãUÏ;U∏vãu∏+ÒPQVçWãÀËôd˝ˇâEÏÖ¿uãMÙã∆ã?ô»âMÙU¸Öˇu∑ãM¥ËAˇˇˇÎãÀË,d˝ˇjYçu®ã˚Û•ãEÏ_^[…√ÃÃÃÃÃÃÃUãÏÉ‰¯ÉÏSã]VãuWã}â\$É~ éÃ   ã«ôEã âD$ãFMô; å±   
9D$Ü•   ãŒÆËË‡˛ˇˇÖ¿Öù   ˇuã”ãŒˇuWËËc˝ˇÈà   ãFã^ôRPˇvˇvËÀ< ãVã +»âD$;˘ã«M¡É|$ âD$u$çBPË5o˝ˇÖ¿tSÉ  Ö€tâÎâFâFãÿãD$ãL$Pˇt$É¡ÀQˇ bãD$ ÉƒD$+¯ôFVÖˇèzˇˇˇ3¿_^[ãÂ]¬ ∏
  ÎÃÃÃÃÃÃÃUãÏãMÉÏVãu;NèÅ   Sã]|;^suWã√3ˇ¡uãNË›˝ˇˇ!~ÎFãFôã˙âE¯â}Ùã–â}¸ã~Îã«âEã8ãE¸;¡|;”sU¯EÙâE¸ÖˇuﬂÎãœËò˝ˇˇã}É' ãMÉf( Éf  Éf$ â~â^âN_[3¿^…¬ ÃÃUãÏãMãIËa˝ˇˇ3¿]¬ ÃÃÃÃÃÃÃÃÃÃÃÃUãÏãEãHãPãEââP3¿]¬ UãÏQSVãuã⁄Wã}j@j VâM¸ˇbÉƒÖˇuãM¸ã”WˇuVË*c˝ˇÎ)Öˇã«π¸  N¡âFãEâF0ãE¸âF43¿«àÖâ~â^8_^[…¬ UãÏVWãÚã˘ÎNãVãœËÛ   Ö¿uLãVãœËÂ   Ö¿u>ãV(ãœËÃ   Ö¿u0ãVãœËæ   Ö¿u"ãVãœË∞   Ö¿u9Euãv$ÖˆuÆ3¿_^]¬ jXÎıSVWã˙ãŸÎ(ãG© @Ä uMãWÖ“tãÀËﬂˇˇˇÖ¿uNãGãOÖ…tã˘ãsãŒWSˇ0cˇ÷Ö¿t≈É‡_^[√ãW©   tãÀË  Ö¿u3¿Î„Ö“tãÀË/   Ö¿tjXÎœ˜G   tﬂãW,ãÀjË	ˇˇˇ˜ÿ¿Î±Ö“Öeˇˇˇ3¿√SãŸVWÖ“tã2çzÎããÀË‹ˇˇˇÖ¿uNÉ«ÖˆÎ3¿_^[√jXÎ˜ÃÃÃÃÃÃÃÃÃ¬ VWã˙ãÒãWË∂ˇˇˇÖ¿u}ãW$ãŒËùˇˇˇÖ¿uoãW(ãŒËöˇˇˇÖ¿uaãW,ãŒËÅˇˇˇÖ¿uSãW0ãŒË~ˇˇˇÖ¿uEãW<ãŒËeˇˇˇÖ¿u7ãWHÖ“t,Å~–⁄tãÖ¿t	Ä∏Ã   s	Å~puj ãŒË3˛ˇˇÎ3¿ÎjX_^√UãÏQSVWã˙ãŸÖˇÑï   É{ Ñã   ãsãŒWSˇ0cˇ÷Ö¿ÖÄ   ã◊ãÀË.ˇˇˇÖ¿unãw ÖˆtBãâE¸Ö¿~9É∆0ãVÏÖ“tãÀËûˇˇˇÖ¿uIãE¸ˆtãVãÀË∑˛ˇˇÖ¿u3ãE¸HÉ∆HâE¸Ö¿ ãsÖˆtWSãŒˇ0cˇ÷ã4ÖˇÖuˇˇˇ3¿_^[…√jXÎˆÉ‡ÎÒÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃUãÏãEˇ@3¿]¬ ÃUãÏãEˇH]¬ ÃÃÃUãÏãMÄ9ßu	ãEä@ A3¿]¬ UãÏÉ‰¯ÉÏ$°∞	3ƒâD$ ãEk¿SãVWã}âL$ãTÖ“tj j ãÀË0  ãÎ3ˆÄ{S tÖˆÑπ   ã÷ãÀËú.  È´   É} ~0jçD$j PˇbãEÉƒ«D$P‹âD$(Öˆtã÷çL$Ë˛¸ˇˇÄ?puˇwãL$ã÷Ëå   ãÅO   ã◊ãÀË<.  j4VWˇ bãGÉƒ©   uãWÖ“tãÀË∑o˝ˇÅO   âGãG©   t
ãG,Ö¿tâxHÖˆt	ã÷ãÀËk˝ˇãL$,_^[3ÃË" ãÂ]¬ UãÏQQãAS$âU¯VW<ÖÅ   ãI3ˆâM¸ã˛äÎ<.tGäÑ¿uÙã]Ö€tWSQËkñ˝ˇÖ¿uT8uOãM¸çYﬂäÎ<.tFäÑ¿uÙã}ÖˇtVWSË;ñ˝ˇÖ¿u$8>uãE¯Ö¿tçKã–ŒËÁï˝ˇ˜ÿ¿@Î3¿@Î3¿_^[…¬ ãQ,Vøq WˆB`tAãBãŒ…ˆD»`t3∑B"j@_f;«|É»ˇã–Î?3…ò´¡3“É¯ C—3 ;«C—É»ˇ»–ã¡Îj?Xj@_;˜M3¿3“´É˛ C–3¬;˜C–_^√UãÏÉÏTSãŸâUÏVãu3…Wãã}ÉNˇâ]∏âMâM‡âM¿âE‰âM¯â}ÃâM‹«Eÿ¶   Ö“tˆGtâMÏÎtã˘9H~Aã@âEƒãËï˝ˇÖ¿tãM‰GãEƒãUÏÉ¿âEƒ;y|‡ã¡ÎãU‰ã«¿ãJãUÏãD¡âE‹ãE‰;xu$π|ÊËøî˝ˇã}Ö¿uãE‰ã@ãHã âM‹âEÏÎã}ãGâE∞Ö¿Ñ"  3…çPã˘âUÙâ}Ë9é‹  ãBãJâM–Ö¿tt˜@   tkã@3ˇâ}ƒâEº98~OçXˇuÏãUãÀˇuË”˝ˇˇãUÙÖ¿tˇE3…A«E‡   âU¯fâ~ âMƒÎãMƒãEºGÉ√;8|¬ã]∏Ö…ÖS  ãM–É} ã}ËÑF  É}Ï tãE‹9A<Ö4  É} t7ãzÖˇtãœÎã	ãUË—ì˝ˇÖ¿Ö  ÄªÃ   rÖˇtçF,3“PãÀË%Ü  ãMËKî˝ˇãM–ä–3¿àUˇã¯â}ƒãAøI"âE‘âM»Ö…é¢   8P
Öá   ãUãËpì˝ˇÖ¿upãUÉ˙uCãEÙˆ@$u_ã@4Ö¿t3ãHÉeº âM¥Ö…~%ã8ãUãË:ì˝ˇÖ¿t7ãEºÉ«@âEº;E¥|„ã}ƒãUãE–Bjˇ∑œâUø@ ãUÙ;¯XD»âU¯fâN Î!ã}ƒãE‘ãM»äUˇGÉ¿â}ƒâE‘;˘å^ˇˇˇãUÙÉ} uãE–ã}Ë˜@   uˇE‡âU¯ãUÙÎãUÙã}ËãE∞GÉ¬Hâ}ËâUÙ;8å$˛ˇˇãU¯Ö“tãB,âFãBâF,ˆB$tÅN   ã@<âE‹ãEÖ¿Ö¢  É}Ï Ö|  ãSx3¿ã¯â}ÙÖ“ÑÖ   Äªï    äÉî   àEˇt*ãM˜A   tg9}tããMË)í˝ˇÖ¿uT3¿Ä}ˇï¿Î@<t&9}tãUπÑÊËí˝ˇÖ¿u	«F   Î äEˇ<~t9}tãUπàÊËﬁë˝ˇÖ¿u	âFã{xâ}ÙãM˜A   t3É} t-Éy t'ãUπåÊË¨ë˝ˇÖ¿uãMãAã@ ãxâ}Ù«F   ÖˇÑû   ãMË&í˝ˇãMÙˇE‡àEˇãG<øQ"âE‹3¿âUƒã¯ãAâEºÖ“~?äMˇ8H
uãUãËLë˝ˇÖ¿tãEºãUƒäMˇGÉ¿âEº;˙|ŸÎãMÙøA ;¯Ña  øQ";˙|%ãMËN9  ãMÙÖ¿t˜A   øQ"jˇXD¯ÎãUƒã«;˙å/  É}‡ã}u+É}¯ t%ˆG(uãMË
9  Ö¿tãU¯ãB˜@   Ñ“  ˆGÄtiÉ} ucãO3¿âEƒãâUºÖ“~RçQãMºâU»ˆãz¯u0Öˇu	ãM˜Ÿ…ÎÉ} tãUãœËmê˝ˇãU»ã»ãEƒÖ…Ñá  ãMº@É¬âEƒâU»;¡|∫ã}ãˇE¿â}ÖˇÖñ˚ˇˇ9}ÖE  ˆF@Ñ0  ã}‰Äø±    ÖÒ  ãMÃ˜A   Ñ‘  ãœËMÃ  3…Ö¿tãG %   @¡Öƒ  ãG %    ¡Ñ°  3¿@Èõ  É¯ÑC  Èÿ  É»ˇã¯3“«E   É~âU¯∑¿uAÄªÃ   ã–rfâV âN,«Eÿ¶   È  ËÕ  ã}ø»«EÿØ   ãGH$âNãU¯ÈÊ  âN,8ìï   t-ã–«EÿØ   Ë„Ã  ã}ø»ãEÙø@"@ØF»ãG@¡âFÎ¿fâF «EÿM   Öˇy	∆FDÈì  3¿ãœ@”‡jˇY9VuÉˇ M¡	Éå   Ès  Éˇ M¡	Éê   Èb  É»ˇ«E   fâF Î∂ãMk¿ãQãTã¡ˆ@uˆBtWhòÊSËgç˝ˇÉƒjX_^[…¬ ˜B Ä  t˜@ @  t;EÃtWh∏ÊÎŒã Ë  É¯th‡ÊSË$ç˝ˇYYÎºãE¿ãÀã}PVˇuƒãWË≈ˆˇˇÄªÃ   Ç(  V3“ãÀË≤Ä  È  ã¡Ö¿ÎãG %   @É» t/ˇuhÙÊjËmÇ˝ˇÉƒ∆t3¿çN,jPQˇbÉƒ3¿@ÈLˇˇˇãŒË2  Ö¿uÌÉ} π(Áˇu∏ÁE¡ãMÏÖ…tˇuQPh@ÁSËwå˝ˇÉƒÎ)É} tˇuPhPÁSË]å˝ˇÉƒÎPh\ÁSËLå˝ˇÉƒãEÃ∆Cˇ@ãU¯ã}3¿f9F |Ö“tãŒËú˜ˇˇãM¯	A8	Q<˜F @Ä u(ãVÖ“tãM‰Ë±$  ãV3¿âFÖ“t
ãM‰Ëù$  3¿âFãEÿÅN  Ä àÉ}Ör˛ˇˇã3…9àh  tä<¶t<Muˇwã÷ãÀˇu‹Ëlπ  ãEÃÎã@ˇ@;«uˆÈË˛ˇˇUãÏQSVWj ãÚ∫¶   j Ëå  ã¯ÖˇÑ∞   k]HãUãD3âG,ãL34âE¸âOø@ ;¬uÉ»ˇfâG ÈÑ   ãE¸fâW ˆ@`tOã@ã …ˆD»`tAãE¸j@∑H"Xf;»|É»ˇã–Î!ø¡3“3…´¡É¯ C—3 É¯@C—É»ˇ»–ã¡âD3@âT3DÎ(j?Yj@X;–M—3¿3…´–É˙ C»3¡É˙@C»	D3@	L3Dã«_^[…¬ UãÏQˆB VædÁt∏ÄÁÎˆBt∏îÁÎˆB∏®ÁD∆PˇuhºÁQËÑä˝ˇãEÉƒÖ¿t∆ x^Y]¬ ÃUãÏÉ‰¯ÉÏ\SVãu3…Wã}«D$    ä∂¬ããÉ¯7áI  tqÉ¯2wTÑ†   ÉËtÉËÑB  ÉËtSÉËÖ≤  ˜F   Ñ•  ˆG.ãGâD$@ÑS  Vh\Èã◊ãÀË(ˇˇˇÈJ  ÉË3tMÉËtÉËt	ÉËÖh  ãÄxS Ö\  ãNË•  Ä>0ã¯Ö  ãVãJËè  ;«Ö  ãJÈ  3…ã◊É˘}ãBãRâDåHAÖ“uÏãVÖ“tãMË∂ˇˇãNË2  Ö¿Öp  ÄªÃ   Éc  Ä>3∏–Á∫ÿÁ«D$@    D–∏   ED$@	F3…âV∆©É˘}ãDåHAâGãÖˇuÏãVÖ“tãË≠!  Éf È  =â   woÑ”˛ˇˇÉË8ÑˇˇˇÉËÑˇˇˇHÉËÑy  ÉËÖ`  ãO∆¶ãAâF,ãA4fˇN âF∆FDÈA  ãVãMËTÒˇˇãD$@;GÑ)  ÉN ÉO@È  -å   Ñ!  ÉËÑÛ  ÉËÑÅ  ÉËÖˆ  ãFâD$@Ö¿tãâT$(ÎâL$(ãâL$4âL$<âL$ä@PàD$8çGâD$ã %@  ˜F   âD$DtãF,âD$Äx•uâL$ãFã»âD$Ë≈Ü˝ˇãT$ãj ˇt$<âD$,ˇt$0Ë
 âD$Ö¿u2ãT$ãPˇt$<j˛Ë ãT$ ã»âL$Ö…u	âT$4Èõ  âT$<Èí  3…9Hï¡˜@   âL$Ñó   ÅN   É|$(usãD$@Ú(G	ÚD$(ã@âD$8Ä8òtÉ»ˇÎ7ãHjËÜ˝ˇãL$<çT$,PãIËjâ˝ˇÚD$(f/8F	w–ÚY∏F	Ú,¿âFÖ¿y(h¯ÁSËá˝ˇˇGYYÎã@ π  Ä∫  Ä Ä8uD âNãL$3¿Pˇq ãÀPjZË6µ  Ö¿t(É¯uãD$ˇp h@ËSË√Ü˝ˇÉƒˇG3¿∆x@ÈÒ  ãL$˜A (  tÅN   ˜A   uãD$ˆ *t0j hdËã◊ãÀËπ˚ˇˇãL$ÎãT$ä$.àF˜   tÅN   @˜A   tÄ{ uãˆ@ uãT$ 3…âT$4âL$Î$˜A  ( tÄªÃ   sQã÷ãÀË4  ãL$ãT$ ÄªÃ   É  ãD$Ö…tÉy uÖ¿tˇt$ˇt$(hÄËÈû   ãT$Ö“taãT$ˆt˜A   tÖ¿tÖ¿tC˜ @  u;˜A   u	Ö¿∏¥Ët∏¨Ëˇt$ˇt$(Ph¿ËSËãÖ˝ˇÉƒˇGÉd$ Èù   ãT$É|$4 tãÄ∏±    uˇt$ˇt$(h‡ËÎÉ|$< t7ˇt$ˇt$(h¯ËSË<Ö˝ˇãT$ÉƒˇGÖ“tPãL$3¿9D$ï¿˛øˇˇ!Î:Ö“uÊ˜F   t-ˇt$ˇt$(h(ÈSË¯Ñ˝ˇÉƒˇGÎ˜F   ãD$E¬âD$ãT$@ãMËπÏˇˇÉ|$ Ñ⁄   ãD$Ö¿tmÄªÃ   ãws#ÖˆtãVHÎ3“ˇt$ãÀPËzR ãÄxS Ö*  ã\$ã}ãœãSËfÏˇˇãSãœË\ÏˇˇãS(Ö“tãœË∞Îˇˇã”ãŒË˜_ ãD$Å Ä  Î_˜F   ∆ß∆F tãF,ãP(Ö“tãMËyÎˇˇˇwã÷ãÀËh  Ö¿u
˛FãÖˇuÊÖˇtãD$Ö¿tã@5ˇÔˇˇ%  É»	GãD$ãL$D	ãD$ È#  ãNË
  ã¯ÖˇÑ˙ˇˇä<;t<©Öˆ˘ˇˇWˇuËK˘ˇˇÉ¯ujXÈÌ   Ä?©Ö◊˘ˇˇäàF∆Æ3¿È’   ãNËy  ;¯t$h‡ÊSËÉ˝ˇYYÎˆG.tVhhÈã◊ãÀË£¯ˇˇÉ{$ u™ãÄxS u¢Îπ3¿Ä˙;uãNã–ÎzˆG(ãVâT$4tPh‡Áã◊ãÀËi¯ˇˇãT$43¿ãNÄ9;tãBãQãIâT$4ÄªÃ   ãRâT$<ãQâT$8ãT$<âD$@r Qã÷ãÀË¶v  ˇt$4çV,ãÀËòv  ãD$@ãT$<ãL$8VWQRã–ãÀË©Óˇˇ_^[ãÂ]¬ UãÏQãESVWÄ8;u?ãX3ˆãâE¸Ö¿~1çzˆGu ãÖ…uã√˜ÿ¿ÎÖ€tã”Ë¡É˝ˇÖ¿tãE¸FÉ«;|“3¿_^[…¬ çFÎÙUãÏÉÏ0°∞	3≈âE¯ãESVãÚâE–Wj 3€ã˘ãFâE‘çEÿSPˇbãF çMÿã7ÉƒãU–âE‹ãE‘â}ÿâE‡«EÅ  â]Ïä^W∆FWËF	  à^WÖ¿u'ã}‘3€9~çwã3…jˇˇu–CË‚]  É¯|É∆;|Â3¿ãM¯_^3Õ[Ë≠	 …¬ ã√ÎÎUãÏÉ‰¯ÉÏ,°∞	3ƒâD$(SVWã˙3ˆFã¡âD$$ât$ã_0Ö€Ñ#  ããâL$;ëÄ   ~h¨ÈPËiÅ˝ˇYYã∆È  3ˆãŒÖ“~çCÉ ˚Aç@;|ıâw8Îây8ã8çG4ãÖ…uÚãL$Ö…Ñ¥  çSãGãŒâD$(ã∆âL$âD$ âT$93éá  ÉL$0ˇˆBÖd  ã
Ë!  âD$Ö¿ÑI  çT$0ã»Ë)  Ö¿t>ãD$0Ö¿~ãL$(;é•   ãD$(ˇ0ãD$$h–È@PhtÈˇt$4Ë•Ä˝ˇÉƒ3¿@È;  ˇt$ãT$,Ë’˝ˇˇâD$0Ö¿uhãT$ãL$VVËk  ãL$âD$,ÄyS Öè   ãL$$ã◊PË¸˝ˇˇãL$$âD$0ÄπÃ   rÖ¿~ˇt$ã◊Ë‹˝ˇˇãD$0ãL$ãT$,Ö“t	Ëœ  ãD$0Ö¿é    ãD$$Ä∏Ã   sdãL$∫ö   VË  Ö¿ÑQˇˇˇÅH   ãL$0âHãL$ã;T$uâÎãD$0Îüã—ãJÄ9ptˆâBãT$ãL$Ëa  ãT$fãD$0fâBÎãT$ÉJãL$ãD$ @É¬âD$ âT$;åy˛ˇˇã8ÖˇÖD˛ˇˇãÖ…~çCFˆ t(É¿;Ò|Û3¿ãL$4_^[3ÃËA ãÂ]√ãT$3…AâL$Î¶VhÿÈˇt$,Ë1˝ˇÉƒÈá˛ˇˇUãÏÉÏSVWã}ãÒÖˇtpãÄxS uhÄæÃ   s_ã;àÄ   ~ˇuhÍVËÓ~˝ˇÉƒ3¿@ÎAãRçG3€âU¯âE¸Ö…~-∑HfÖ…t;
)j ˇ0çAˇãŒPËrËˇˇãE¸ãU¯CÉ¿âE¸;|”3¿_^[…¬ ˇ2çCˇuPhtÈVËä~˝ˇÉƒÎöÃÃÃÃÃUãÏãM˜A   tãI,ËW 3¿]¬ UãÏÉÏD°∞	3≈âE¸SVãÚãŸãMãUWãFâ]ƒçyâM¿âUÿã âEºãâE»3¿âE–9é   ãã»âE‘ËB	  ãÿÖ€Ñ≈   Ä:GtãVSËD˚ˇˇã»âM¯Ö…çU¯ãÀË&  Ö¿tãM¯çAˇ=˛ˇ  á¡   fâOÈÉ   ãU‘3¿ãMƒfâGË  Ö¿Ö∫   ãF3€9~a3…âMÃãU‘jˇˇt3…ËûY  Ö¿u79FDt+jPçE‹PˇbãE‘Éƒ«E‡0ÙâuÙÖ¿t
ã–çM‹Ë©‰ˇˇçCfâGãFCãMÃÉ¡âMÃ;|§ãUÿãE–É«ãM¿@âE–;åˇˇˇRQãM»ã÷Ë˚˝ˇˇãM¸_^3Õ[Ë …¬ ˇuºãE–ˇuÿ@PhtÈˇu»Ë˚|˝ˇÉƒ3¿@ÎœÃÃÃUãÏÉ‰¯ÉÏT°∞	3ƒâD$PSVãuWã}ˆFÖ˛  ˆF@ãGã?âD$ãâ\$u"Pã÷ãœËû( É$ u
Ä{S Ñœ  jXÈ   ãN43¿Ö…âL$4ât$8ï¿Éd$  âD$0ÉNçD$<j j PˇbÉƒâ|$<ât$XçL$<ãV<Ëô  Ö¿uØ˜F   çV âT$tããHãF0âA0Éf0 ÎâT$ãÉd$ É; éË   ãD$3“âT$ãLÖ…Ñ¥   ˆAÖ™   ãL$Ö…tãIâL$,ãL$ÎÉd$, Ö…«D$$   çADD$$âD$(ãáÙ   âD$$ãDÖ¿tâáÙ   ãTQãœË∂  É$ ãD$$âáÙ   ÖÚ˛ˇˇãD$ÄxS Ö‰˛ˇˇÉ|$ t%ãT$(3…ãD$,j9ãT$XO»ãD0É‡˜»âL0ÎãT$ãD$ãL$É¬HãAâL$âT$;å&ˇˇˇãT$«D$T@  çL$<ãâD$@ãD$âD$HãVË  Ö¿Öh˛ˇˇãL$TÅ·ˇøˇˇâL$Tã^(â\$(Ö€uˆ¡u	É·˛âL$TÎÅ·  jX»	NãL$TãFÅ…Ä   âD$DâL$TãV,Ö“tÖ€Ñô  çL$<ËÏ  Ö¿Ö˛˝ˇˇãV$çL$<Ëÿ  Ö¿ÖÍ˝ˇˇãT$3…âL$ã9~43€ˆD0tãTHçL$<Ëq  Ö¿Öº˝ˇˇãL$ãT$ãAÉ√HâL$;|ŒÄøÃ   r:ã^HÖ€t3ãSçL$<Ë7  Ö¿ÖÇ˝ˇˇãSçL$<Ë#  Ö¿Ön˝ˇˇã[$Ö€u—ãT$Éd$H ÅL$T@  ˜F   tããHãA0âF0Éa0 É~0 t%ãD$0;D$ h–Èˇv0ã÷çL$DËR˚ˇˇÖ¿Ö˝ˇˇãD$ÄxS Ö˝ˇˇÅd$Tˇøˇˇã\$(Ö€t@hdÍSã÷çL$DË˚ˇˇÖ¿Ö‹¸ˇˇãD$ÄxS ÖŒ¸ˇˇ3“çK9~ãˆ@uYBÉ¡;|ãV8Ö“tãFãJã ;uEãv4ˇD$ ÖˆÖ∂¸ˇˇ9t$4t\ãT$8ãœËg˜ˇˇ3…Ö¿ï¡çAÎHh8ÍWËy˝ˇYYÈd¸ˇˇhlÍÎÏ˜B   th	Î‹∂
Ë5Ê PhH	WË”x˝ˇÉƒÈ1¸ˇˇ3¿@ãL$\_^[3ÃË™  ãÂ]¬ UãÏÉÏ$°∞	3≈âE¸SVãÚãŸWÖˆu3¿Èñ   ãCã»%Ôoˇ˜«E‰@ËÅ·ê âC©   âM‹ã∏¿ıj ZE¬âM‡âEË3ˇãFâ}Ïâ]¯Å‘   ãM‡ãë‘   ËÊ	  Ö¿t3¿@Î9ã÷çM‡ËtﬂˇˇãM‡ãF)Å‘   ãC%Ä  	FãE‹	C9{ãE‡9x$~3ˇGã«ãM¸_^3Õ[Ëﬂˇ …√UãÏÉÏ,°∞	3≈âE¸SVWã˙ãÒÖˇÑŒ   ãF3€ãã–%Ôoˇ˜âM‡Å‚ê âF«E‰@Ë«EË¿ıâ]Ïâu¯âU‹â]ÿ9éè   çGâE‘ãÖ€tnãCÅ‘   ãM‡ãë‘   Ë	  Ö¿u|ã”çM‡Ë™ﬁˇˇãM‡∫ê ãC)Å‘   ãFÖ¬t"%Ä  	CãNã¡#¬ãU‹–Å·Ôoˇ˜âU‹âNÎãU‹ãM‡Éy$ ,ãE‘ã]ÿÉ¿CâE‘â]ÿ;åwˇˇˇ	V3¿ãM¸_^3Õ[Ë·˛ …√jXÎÏUãÏÉÏ °∞	3≈âE¸ãEÉeÏ âM‡çM‡«E‰@Ë«EË¿ıâE¯ËoﬂˇˇãM¸3ÕËù˛ …¬ UãÏÅÏÄ   °∞	3≈âE¯ãESVWã}ãÚj âEÄãŸçEÑj PˇbÉƒçE§jPj PˇbÉƒÖˆt*ãÉMÿˇâE¥ã«E§   âuºãHãF<;At
ãE   ÎãEãUÄçM§âMà   çMÑâ]ÑâEúËc˝ˇˇÖ¿uÖˇt
ã◊çMÑË˛ˇˇãM¯_^3Õ[ËË˝ …¬ Ö“xøA";–}ÆËãA“äD–√∞D√V˜A  tãIÎÚ∂=Ø   u∂A=¶   t=®   uãq,ÖˆuP=â   uãAã@ãHÎΩÉ¯$t.=±   uãAãPøA k»ãBãLÎõ=∞   uãAÎÕäA^√ãI3“^È)Ω  øQ ãŒ^ÈVˇˇˇUãÏãEVãÚÉx vˇuã	PjpZË3  Ö¿tÅH   âpãã∆^]¬ UãÏÉÏVWã˘ãÚãMâMÙËŒs˝ˇâE¯ã÷j çEÙãœPË£ˇˇˇ_^…¬ Î˜A   tãIÖ…uã¡√Î˜A  t˜A   tãAãHÎãIÖ…uﬂã¡√UãÏÉÏSãŸV3ˆâ]¯Wãã˛âM¸È´   ∂=Ø   u∂B=®   t=¶   tÉ¯Mu	9r,Öû   É¯$ty=≠   tr=∞   uãBãPÎfÉ¯ptk˜B   ÑΩ   ãBÖ¿t˜@   tã–ÎïãBãZÖ¿t/ÄyS u)ããŒâUÙÖ“~É¿ã˜B   uAÉ¿;MÙ|ÏÎã⁄ãM¸ã”ÎãRÖ“ÖMˇˇˇÎ_ˇräQPã]¯ãÀVËE Î+øJ Ö…xDÆËãB,¡·HË<Æ  ã]¸ãÀVPäSPËÌ  ã]¯ã¯Öˇt9wuããÀˇ7WäPPË˛  Ö¿u3ˆF3¿ÖˆD«_^[…√Sä˙Ëê˝ˇˇäÿÄ˚@~Äˇ@~Ä˚C}ÄˇC[ù¿çEA   √∞C[√Ä˚@∂√∂œN¡@[√SVãÒä˙ãNËN˝ˇˇãNäÿÖ…u˜F   tãFãHãIä”ËîˇˇˇäÿÎÑ€tÄ˚B|u
3¿ÄˇBî¿Î3¿ÄˇCù¿Î3¿@^[√UãÏQV∏   Wã˘ÖBuãuÖˆtÖFuË˛ˇˇÖ¿u	ãœã÷Ëˇ˝ˇˇ_^Y]¬ Q˜B   tˇrãRÎˇrãRË¨ˇˇˇY√UãÏSVWã˘ã⁄É$ t3¿ÎUãu ã√ãUÖˆDED”PËˇˇˇãMãËx¸ˇˇä–ãÀË◊˛ˇˇãUäÿãO
]j˛VˇuˇuˇuË≠Ú˛ˇãOã∂”Ë„ˆ˛ˇã∆_^[]¬ ä<ØuäA<∞uãAã √<âuãAã@ÎÒ3¿@√VãÒË’ˇˇˇÉ¯~%Ä>âtÄ~âtÆËãFÎ	ÆËãFã@k ^ãD√ã∆ÆË^√UãÏÉ‰¯QVãÚä<âu%j j ∫±   Ë;  Ö¿tIãMâHfãMfâH âpÎ6<∞ukEÄπÃ   ãVãtr	Éd ã∆ÎÖˆtã	ã÷j j ËG  Î3¿^ãÂ]¬ UãÏVãÚWã˘ä<ØuãUãŒË<ˇˇˇãMâãF¬ÎA<âuãFkMã@ãLãEâãEEÎ"<∞ukMãFˇuãTãœãEâËB  Î3¿_^]¬ UãÏÉÏXãBSãZVãÒâE‰Wã»â]‹ã~Ë•˛ˇˇÉe¯ ˇN8âEÏãF8âEÙãB¡Ë	É‡É~$ âE∏Ö5  ãÀËx˛ˇˇ9EÏth‡ÊVË}p˝ˇYYÈ  äUj8Ä˙7∂¬YE»Ä˙9u≥6Îj5Ä˙4∂ŸXDÿãE‰ÉeË Ä8âuã–ãŒËL$  âEËãE‹Ée‡ Ä8âuã–ãŒË4$  âE‡j ˇuãœjjFZË~Ô˛ˇ∂UçOtjZâU¥3¿Ä}ÄZâMÿâMºjFYE âM¨ãMÏIâMâMƒãU¯3…âE¸âMÃâM»âM–âM‘Ö“tãœËE˜˛ˇãUºâUÿã
âHãE¸ãU‰çMÃQçM–QˇuËãŒPË[˛ˇˇãU‹ãŒâE¿çE»PçE‘Pˇu‡ˇu¸Ë@˛ˇˇˇu∏ãU–ã»ˇu¥ãEÿˇuÙâM∞Qˇu¿ã ∂ÀQˇu‘ãŒâE¯Ë◊¸ˇˇãMÃÖ…täF<s∂¿âåÜò   ˛FãM»Ö…täF<s∂¿âåÜò   ˛FÄ˚8tÄ˚6u#ãEƒâE9E¸}3¿ãœPPPj:ZËoÓ˛ˇãMƒâE¯âMÄ}Äu3¿3…ÎãE¿ãM∞ãU¨QˇuãœPËEÓ˛ˇãEãœ9E¸t=j ˇuÙÄ˚5uˇuj3ZË&Ó˛ˇÎj jZËÓ˛ˇãMÏ∂EÉ¡˛9M¸∂€DÿãE¸@È¨˛ˇˇãU¯Ëˆ˛ˇãMºãUÙã	âHãœËnÒ˛ˇÄ}4uj ˇuãœˇujZËÃÌ˛ˇ_^[…¬ ãV3ˆãÄÑ   ;–~Ph®ÍQÆËË:n˝ˇÉƒFã∆^√VãÚÖ…t ãÖ¿~É¡ãÖ“t	ãR;~âÉ¡ÉËuÈ^√VWãÚã˘ÎQãG$Ö¿t	ã@;~âãG,Ö¿t	ã@;~âãG<Ö¿t	ã@;~âãOã÷ËïˇˇˇãO(ã÷ËãˇˇˇãO0ã÷ËÅˇˇˇã4Öˇu´_^√UãÏQVWã˘3ˆã∆ã÷âE¸ãOÖ…tãIÖ…~ã¡ã—âE¸ãOÖ…t
9QOAâE¸˜G   tãOçU¸ËUˇˇˇãE¸Î5Sã_Ö€t,çU¸ãÀËˇˇˇãÖ…~É√ãç[pÉÈuÛãE¸ÅÊ  	w[@âG_^…√QVãÒWã˙É~$ uãœË_ˇˇˇãWãŒË¶˛ˇˇ_^Y√UãÏÉ‰¯ÉÏ°∞	3ƒâD$SV3€ã¬!\$ãÒWã}âD$Öˇt=ö   uãÖ…tçT$Ëàw˝ˇÖ¿uã_CçC4ãŒj PËE˝ˇãÖˆÑô   j4j VˇbãD$ÉƒàÉ»ˇfâF"ÖˇtsÖ€u9\$∏ Ä π ÄE¡	FãD$âFÎRçF4âFÉ tˇwˇ7Pˇ bÉƒÉ} ãNãG∆ t'ãNä∂¬Ä∏êà }∏   Ä˙"çx@D«	FËwl˝ˇ«F   ãL$ã∆_^[3ÃË‡Û ãÂ]¬ UãÏÉÏVWã˘ãÚãMâMÙË¢j˝ˇâE¯ã÷j çEÙãœPË«˛ˇˇ_^…¬ UãÏVãÒÖ“uãUÖ“tËQ  ãUÖ“t9ãŒËC  Î0ãEæ  Ö¿tâBã@#∆	BãEÖ¿tâBã@#∆	Bã Ëº˝ˇˇ^]¬ UãÏÉ‰¯QSVWã˘ã⁄j j4ãË≥C˝ˇãÖˆt2j4j VˇbÉƒàÉ»ˇã÷fâF"ãˇuˇuË`ˇˇˇãVãœËπ¸ˇˇÎãUÖ“tãË≠  ãUÖ“tãËü  _ã∆^[ãÂ]¬ UãÏQÖ“tãEÅJ   âBË≤˝ˇˇÎãUÖ“t	ã	jËSƒ Y]¬ UãÏÉÏSVWã}3€3ˆâUâM¸9éó   çGâEÙã âE¯Ä8∞u
ã@ããE¯Î3…A; uBãP3…Qh   QQQQQãM¸Ëøƒ ãM¯Éa Ö¿tÖˆt∆ Üâp4ããEÙCãUÉ¿âEÙ;|•Î#RÉ˘∫ÿ4	∏ÿÍN¬PQh‹Íˇu¸Ëj˝ˇÉƒÖˆtÉ~4 tÅN   ãE¸ã◊ãËµ  _ã∆^[…¬ UãÏSVãÒWãÖ“uãEÎkã}Öˇuã¬Î`ãBπ   #¡=    tãG#¡=    u7ÄæÃ   s.RãVDãŒËm  Wã–âFDãŒË`  hÎ∫ö   âFDãÀËì˝ˇˇÎWRj,ZãŒË˛ˇˇ_^[]¬ UãÏQSVWãŸã˙jˇu∫´   ãã»âE¸ËM¸ˇˇãÖˆuÖˇt
ãM¸ã◊ËÚ  3¿ÎCÖˇt#ãã;Åê   ~Ä{ uˇuhÎSËi˝ˇÉƒÉNã÷ãÀâ~Ë‹˚ˇˇÉ}uÉNã∆_^[…¬ UãÏQ˜B   @t,ãU˜B   uãã@ %Ä   É» uˇr h0ÎQËØh˝ˇÉƒY]¬ UãÏÉÏSVãÒã¬âEWãâ]¸Ö¿Ñ/  ã@âEÙçHäÑ“ufˇÜ»   ∑û»   ÈÎ   Ä8?Öõ   ãEÉ¯uæ¬ÉË0ôã»ã˙ÎjHçUËPË—o˝ˇ˜ÿ¿É¿t[ã}ÏãMËÖˇ|QÉ˘rJãÉú   ô;˙?|;»w9∑Ÿçæ‹   f;û»   ~«E¯   ãE¯fâé»   ÎWÆËø—ãË†|˝ˇÖ¿uD@ÎCˇ≥ú   hDÎVË…g˝ˇÉƒÎiãMçæ‹   Qãã–Ëí|˝ˇ∑ÿfÖ€ufˇÜ»   ∑û»   Î3¿Ö¿tããM¸ø√PˇuˇuÙËê{˝ˇâãEãM¸fâX ø√;Åú   ~hpÎVË]g˝ˇYY_^[…¬ VãÚWã˘˜F @Ä uZãVÖ“t
Ä>±tË‡ˇˇˇãVÖ“t	ãœË“ˇˇˇÎ9˜F   ãVtÖ“t)jãœË¢¿ ÎÖ“tãœËΩ  ˜F   t
ãV,ãœËπ? ˜F   tãVÖ“tãœËö<˝ˇ˜F   uãœã÷_^ÈÜ<˝ˇ_^√Ö“Öaˇˇˇ√Ö“t&Ä9±t!˜A   uÉy uÉy u∏@  √∏   √j4X√VËÃˇˇˇãÅÊˇ  ˜A   uÉy tˇqˇ‹b%ˇˇˇ?FYçFÉ‡¯^√UãÏQSWãŸã¬3ˇâE¸Ö€t+Ë±ˇˇˇã¯ãE¸®tãKã–VË‘ˇˇˇãU¸ããKË«ˇˇˇ¯˛^ã«_[…√UãÏÉÏ$°∞	3≈âE¸ãESVãÒâE‹ãM3€âuÙâMWã˙Ö¿tã0«EÏ   Îã—â]ÏãœËyˇˇˇôãŒRPË*>˝ˇãMãâu¯ÖˆÑß  ã—ãœËÒ˛ˇˇâE‡%ˇ  ˜G   âE‰uãOÖ…tËTd˝ˇ@âEËãE‰Îâ]Ë9]tPWˇu¯ˇ bÉƒÎNã_˜√ @  tj[ÎÅ„    ˜€€É„ËÉ√4SWˇu¯ˇ bÉƒj4X;ÿs+√PÆËãE¯√j PˇbÉƒ3€ãFãM‡%ˇü˛˜Å· `  »MÏâNãMËÖ…tãE¯E‰QâFˇwPˇ bÉƒãFG© @Ä u!˜G   ãWˇuãMÙtË˚  ÎË«  âF˜F ` tsãUãœË˛ˇˇE¯˜F @Ä u6ãWÖ“tãMÙçE¯PjËr˛ˇˇÎã√âFãWÖ“tãMÙçE¯PjËV˛ˇˇãÿâ^˜G   tˇw,ãMÙã÷ËiS âF,ãM‹Ö…t5ãE¯âÎ.˜G @Ä u%Ä>±ãGtãMÙã–SË  ãMÙâFãWSËˇ   âFãM¸ã∆_^3Õ[ËËÎ …¬ UãÏÉÏSVWãÚ3ˇãŸÖˆÑÖ   kWÉ¿PËﬂ;˝ˇã¯â}ÏÖˇtoãÉeÙ âÉ> ~bçFâE¸çOã∆âM¯+«ã¯ããÀj Ë‹  ãM¯ãU¸j âãÀãRËõ   ãM¯âA¸ãÀãE¸ãË¬=˝ˇãM¯ÉE¸âA¯É¡ãEÙ@âM¯âEÙ;|≥ã}Ïã«_^[…√ÃUãÏãUÄ:´u˜B   tãMãR,ãIË«> 3¿]¬ ÃÃÃÃÃÃÃÃUãÏãM3¿ãU;Qï¿]¬ UãÏÉ‰¯Ö“tj ˇuËÏ¸ˇˇÎ3¿ãÂ]¬ UãÏÉÏ SVWãÚ3ˇâ}ÙãŸâ]ËÖˆÑ#  Ëû7˝ˇôãÀRPË-;˝ˇãÿâ]‡Ö€Ñ  ãâãFâCçCâE¸â}Ï9>éË   ã√çVã]Ë+∆âU¯âEãRÙãÀˇuâUËËnˇˇˇãM¸âE‰âãMËÖ…tBÄ9±u=Ö¿t9ãPÖ“tãyâUÙâPÎ'9ytãyã◊ˇuãÀË0ˇˇˇã»ãE‰âMÙâHÎãMÙâHãU¯ãÀãR¯Ëg<˝ˇãM¯ãU¸âBäA¸àBããEÉ‚ãÉ‡¯–ãEâã	3 É· 3 ãU¯âã3¡É‡3¡ãMâãM¸ãBÉ¬âU¯âAÉ¡ãEÏ@âM¸âEÏ;å+ˇˇˇã]‡ã√Î3¿_^[…¬ UãÏÉÏSVWã˙âM¸ÖˇÑ7  ã3€â]¯Ö¿~Hk¿HÎã√É¿PôRPË‹9˝ˇâEÏÖ¿Ñ  ãâHâ9é  ãœç_+»çpâMãCÙâF¸ã1ãM¸ËÑ;˝ˇãM¸âãS¸Ëw;˝ˇãM¸âFãËj;˝ˇâFãCãKâN$çK4ˆF$âF ãC âF(ãCâFãCâFâMÙtããM¸Ë3;˝ˇãMÙâF<ˆF$ÄãC8âF@tˇ ˆF$tãˇuãM¸Ë”˝ˇˇâF<ãCâFÖ¿tˇ@ˇuãSãM¸Ë‚   ˇuãM¸âFãS$ËÜ˝ˇˇãM¸âF,ãS(Ë5   âF0ãC,ãK0É√HâF4ãE¯âN8@ãMÉ∆HâE¯;åˇˇˇãEÏÎ3¿_^[…¬ UãÏÉÏSVãÚã¡âuÙâE¸WÖˆt93ˇWjâ}¯Ëñ8˝ˇãÿÖ€t&ãNâKãN¡·WQãM¸Ëz8˝ˇâÖ¿uãM¸ã”Ëƒ5˝ˇ3¿_^[…√9~~.ã6ã«ã;ãM¸¡‡¯ãË':˝ˇâãFãuÙâGã}¯Gâ}¯;~|“ã√ÎƒUãÏÉ‰¯ÉÏD°∞	3ƒâD$@ãEÉd$  Éd$ SVWã˙âD$â|$çD$,ãŸÈn  j jLãÀËË7˝ˇãât$$ÖˆÑr  ˇt$ãWãÀËs¸ˇˇˇt$âFãÀãW Ë´˝ˇˇˇt$âF ãÀãW$Ë3¸ˇˇˇt$âF$ãÀãW(Ë@¸ˇˇˇt$âF(ãÀãW,Ë¸ˇˇˇt$âF,ãÀãW0Ë¸ˇˇˇt$âF0ãÀäÉf4 àãD$,âF8ãW<Ë‡˚ˇˇÉf ãÀÉf âF<ãGÉNˇÉ‡ﬂÉNˇâFfãGfâFãW@Ë…˙ˇˇÉfD 3…âF@çD$(âD$ ãGHâL$(âD$Ö¿t,ã|$ ãV3“ãÀË∞M âÖ¿t
ãv$çx$ÖˆuÊãL$(ãt$$ã|$âNHÉD t/Ä{S u)Éd$< çL$0Éd$0 ã÷«D$4`«D$8êât$HËÒ∆ˇˇãGâFÄ{S u"ãD$ât$(â0çF4ã4â|$âD$ÖˇÖÜ˛ˇˇÎÉf8 ã÷jãÀËì∑ ãL$LãD$,_^[3ÃË⁄Â ãÂ]¬ SVWj jlã⁄ãÒË@6˝ˇã–Ö“uÖ€t	ã”ãŒËmˆˇˇ3¿Îj«B   çz«   æÏÇYÛ•âZ_^[√UãÏSVWã˙ãÒj ãG¿âGHk¿É¿PË†6˝ˇãÿÖ€uã◊ãŒË+  ãUÖ“tãŒË
ˆˇˇ3¿Î"ãæÏÇk—jçAâãEYçz˚Û•âDã√_^[]¬ UãÏÉ‰¯QSã⁄VWÖ€uãUã	Ë3ˇˇˇÎ3ãçp9s}ˇuã	ËeˇˇˇÎk–ç{ãEâ3æÏÇjY˙Û•âDã√_^[ãÂ]¬ UãÏÉÏSãŸVãÚWãã}âEÙÖˆtãâE¯ÎÉe¯ ãUÖ“Ñ∞   ÖˇÑ    Ä?ât#ãœËÅÍˇˇãJ;»tPQhàÎSËÇ\˝ˇÉƒÈÑ   ãJ3¿âE¸Ö…~OQPã◊ãÀË™ÍˇˇÖ¿t/Pã÷ãÀË$ˇˇˇãUãÖˆtkãã}¸ã¯âD1¯ãœãã}É$» ÎãUãE¸ãJ@âE¸;¡|±ãEÙÄxS u Ä?âuÖˆtkE¯ãL0âyãBâAÎ"ÖˇtÄªÃ   r	ã◊ãÀËR  ãã◊ËáÙˇˇãUãMÙËâŸ  _ã∆^[…¬ UãÏÖ…t&Vk13¿É˙ˇE¬É}ˇàD¸tÉ ;EtàD¸^]¬ UãÏQSVWã˙ãŸÖˇt>ãEãã7j ˇpãË6˝ˇkˆÉ} âD>¯tã»Ë–[˝ˇÄªÃ   rˇuãT>¯ãÀËªN  _^[Y]¬ UãÏQSã¬ãŸVWâE¸ã8çpããÀËhÙˇˇãVÖ“tãÀË›0˝ˇÉ∆OÖˇ·ãU¸ãÀËÀ0˝ˇ_^[…√UãÏãUÖ“tãMË≠ˇˇˇ]¬ ÃÃÃÃÃÃÃÃÃÃUãÏãE3…jfâHX]¬ V∫–ÁãÒË\˝ˇÖ¿u∏   ^√∫ÿÁãŒËÒ[˝ˇ˜ÿ^¿%   ‡    √VãÒWã~˜«  uãNËµˇˇˇÖ¿t¯∆©3¿â~@Î3¿_^√VãÒä<,t<+ujãNSWËÈˇˇˇãNã¯Ëﬂˇˇˇã–ãZãÀÅ·  Å˘   t7ãOã¡%   =    t&Å·  Å˘   tÅ„   Å˚    uÄ>,D˙ã˜ÎÄ>,D◊ãÚ_[ã∆^√ÃUãÏSã]VãuWjZ∑Nç{f; uˆt3…fâNÎd∂=ß   w>ÑÑ   ÉË;t#ÉËQtDÉËt
ÉËtpÈá   É˘u∆xÎ}É˘ÎeãÀË˛ˇˇÖ¿tN3¿@Î-®   tEÉËtÉËtÉËuR3¿fâFã¬_^[]¬ É˘s˜   t‰ã©   u€É˘u(   @âÎjZˆtf9VuÎΩfÉ~u∂ãC;FuÆ3¿Î≤UãÏÉÏ °∞	3≈âE¸ãEfâUÙ«E‰¿«EË–âE¯Ö…tã—çM‡Ë'¿ˇˇfãUÙãM¸3Õ∑¬ËΩ‡ …¬ ÃÃÃÃÃÃÃÃÃUãÏÉÏSã]VWã}3ˆãGâE90~XçHâM¸ãã”jˇP3…âE¯Ëò4  É¯}+ãU¯ÆËãã»âEÙËÀ„ˇˇÖ¿uãEÙã ã@Ö¿t.Åxê©t%ãEFãM¸É¡âM¸;0|Æ˜C   t3…jfâOXÎ3¿@ÎSWË=˛ˇˇ_^[…¬ UãÏÉÏ °∞	3≈âE¸ÉeË ãEV3ˆ«E‰FâE¯fâuÙâM‡Ö“tçM‡Ë7øˇˇfãuÙãM¸∑∆3Õ^ËÃﬂ …¬ UãÏQQ°∞	3≈âE¸V3ˆWã˙Ö…u3¿ÎL˜A   t
ãAâ3¿@Î9∂-¨   tÉËu(ãIËπˇˇˇãÎãIçU¯âu¯ËßˇˇˇÖ¿t
ãE¯3ˆ˜ÿFâã∆ãM¸_3Õ^ËSﬂ …√ä<≠t<¨uãIÎÒ<ØuäA∂¿ÉËttDÉË$t?ÉËt:ÉËt5ÉËu,˜A   u#ãA,Ö¿t∑Q fÖ“xãHÖ…tø¬¿ˆD¡u3¿@√3¿√SV3€ãÒWã˚Ä˙Au3¿@Îh3…Aä<≠t<¨uã˘ãvÎÔ<ØuäF∂¿ÉËtt8ÉË$t)ÉËtÉËtÉËt3¿Î-Ä˙C|$f9^ | Î3¿Öˇî¿Î3¿Ä˙Cù¿ÎÖˇuÄ˙BtãÀã¡_^[√V∫¿ÎãÒË∏W˝ˇÖ¿t#∫»ÎãŒË®W˝ˇÖ¿t∫–ÎãŒËòW˝ˇ˜ÿ^¿@√3¿@^√UãÏSVW3ˆã˙VˇuãŸVjFZËò’˛ˇVVWj&ZãÀËã’˛ˇˇuãÀãj Wj\ZËy’˛ˇ∫Ä   ãÀË≈⁄˛ˇã÷Ëx›˛ˇãKt_^âH[]¬ UãÏÉÏTSãŸVW3ˇâ]‹ãC(ãÚâEË@âu¯â}ÙâC(Ë@Œ ãMâEÏÖ…tE˜F   t<ãFã˜ã@âEƒ90~#ã¯ç_ãË6˛ˇˇÖ¿uFÉ√;7|Ìã]‹3ˇãEƒãM3“;0D âMãM¯9{$Ö  ˜A   Ñ˚  ˆA ÖÒ  ãA9x4ÖÂ  ˆ@	Ö€  9x<Ö“  9x$Ö…  ãP É:ÖΩ  9zÖ¥  ãRâU‰Äz+Ñ§  ã@âE»â}ÿã0âuÖˆ~"É¿âEƒã Ä8¶ÖÅ  ãEƒˇEÿÉ¿âEƒ9uÿ|‰ãR<ãË?ß É{t ãÀã–âEƒEKtËiŸ  ãE‰ãÀãUƒˇ0WˇpË2Ñ  ãU»É¬âU¿É˛uYãf9x }QãMÏWWWjZËÍ”˛ˇãUËãÀjdˇu‰ãˇuƒË⁄0 3¿@âEÙãE‰ˇ0h‘ÎWSË“’˛ˇãMÏÉƒã÷Ëƒ€˛ˇãItâHÈc  3¿ãœ@âM»âEÿÖˆ~qâU‡Ö¿Ñª  ãE¯ã—ãHË!‚ˇˇãM‰ããE‡ã øP Ëﬁˇˇä–àEˇãŒËÑ‡ˇˇæ¿ÉËAtÉËt3¿Ä}ˇCù¿âEÿÎãEÿãM»ÉE‡AãUâM»; |úÖ¿ÑW  Îã÷ãE‰ãpâuÿÖˆÑB  ãEÙÖ¿Ö»  ∑N4ãŸâ]º;⁄ã]‹å  9~$Ö  É˘?É˚  ˆEt∑F2;¬èÊ  ; ~
Ä~6 Ñÿ  W¿ã«fE∞âEÃÖ“é˛   ãM¥ãu¿âM‡ãM∞âu»âM‰Îãu»ã–ãE¯ãHË+·ˇˇã6ã–VãÀË6‡ˇˇã–ãﬂ∑F ãuÿâE¥ãEã}¥ãNâU‘â]–âMºf99u!Ö“t+ãV ãM‘ãöã	Ë T˝ˇÖ¿tãEãMºãU‘CÉ¡â]–âMº;ÿ|ÃãU;⁄ã]‹j _tyãE–3…«3ˆ´¡É¯ CÒ3Œâu‘É¯@âM¥ã∆ãuÿC¡#M‰âE‘#E‡»uGãE‰E¥âE‰ãE‡E‘âE‡9}tãuãMÃãE–âéãuÿãEÃÉE»@âEÃ;¬åˇˇˇÎãE¥âE‡ãE∞âE‰3…ç´¡3€É¯ CŸ3Àâ]¥É¯@ã√ã]‹C¡É¡ˇÉ–ˇ9M‰Öä   9E‡ÖÅ   ãMÏWWWjZË^—˛ˇˇ6âE¥hÏWSË`”˛ˇãMÏÉƒˇuƒˇv,ˇuËjdZË6—˛ˇã÷ãÀË%Ÿ˛ˇãFãM∂ É¿âEÙÖ…tãC,@É}âC,âuãUËãMÏPËN˚ˇˇãU¥ãMÏËŸ˛ˇãItãUâHãEÙãvâuÿÖˆÖ…˝ˇˇÖ¿Öë   ãM¯ˆEt2˜A   u)ãq3“WBâyË0¯ˇˇãM¯âqÖ¿tãAÉ8jXâEÙÎYˆEã˜ãÉà   jâE¥XâEÙtâªà   ÎãEÖ¿tˇC,ãs,â0ˇuËã—ãÀËK  ÖˆtãUËãMÏVËú˙ˇˇãE¥âÉà   ãEÙãM¯ãUÖ“tÉ¯tÉ¯tãIË£ﬁˇˇÖ¿~â<∫G;¯|¯ãMãEË_^âãEÙ[…¬ UãÏÉÏãBSVãÒâEÙWã»Ëmﬁˇˇ˜B   ãÿtãJâM¯ÎÉe¯ ãçCôRPÖ…tË∆(˝ˇÎËL$˝ˇãÖˆtG3ˇÖ€~=!}¸ÆËãMÙã◊ËEﬁˇˇã»ËX⁄ˇˇä–ãE¯Ö¿tãHãE¸ãLË®‹ˇˇä–ÉE¸à7G;˚|…∆ _ã∆^[…√UãÏQÉy$ uˇuRh$ÏQËÊO˝ˇÉƒY]¬ Q˜B   t Éy$ u'ãBjã@ˇ0h$ÏQËπO˝ˇÉƒY√h‡ÊQË©O˝ˇYYY√UãÏÉÏP°∞	3≈âE¸SVã⁄Wã˘â]∏3…ãCâM»ãwâuº® Ö´   9O4Ö¢   ∫   QÖ¬tgQQjZãŒË√Œ˛ˇ˜C   âEºtãCˇphPÏj WË∑–˛ˇÉƒj ˇs,ãŒˇs0jZËèŒ˛ˇj ˇsãŒˇujpZË}Œ˛ˇãUºãŒËÖ÷˛ˇãNtâHÈ˘  ¬âCãG,@PQjFâG,ãŒZâC0ËMŒ˛ˇ@ãŒâC,3¿PPPjZË:Œ˛ˇâE»ãCã»âE¿Ë®‹ˇˇãMj PQjsâKãŒZâE‘ËŒ˛ˇãU‘ãjâE∞ËÕ∫ ˜C   âEÃÑ'  ãCÉ}» âE–ˇpãH∏hÏâMƒπÿ4	D»QhtÏjWËŸœ˛ˇãMƒÉƒãE‘9Ö  ãEã”âE‡ãœ3¿∆E‹âE‰âEËâEÏËê˝ˇˇãU–j âEÉb ãËWÓˇˇãâE–ÄyS t	«Eÿ   ÎçM‹ã–QãœËäˇ âEÿãE–Ö¿tãã–jËxß ãUÖ“tãËô#˝ˇÉ}ÿ tãMÃËt∫ Èæ  Ée¥ É}‘ ãEÃéZ  ãu¥É¿ã]‘âE–ãEƒÉ¿ÆËâEÿãM¿ã÷Ëõ€ˇˇãMÿã–ˇ1ãœË§⁄ˇˇãM–FÉEÿâÉ¡âM–;Û|‘ã]∏ãuºÈ  ãKâM∏Ö…Ñ˝   ãM¿Ër◊ˇˇä»Ä˘@∆E˚AÎjCÄ˘E∂¡ZD¬àE˚É}Ã tãSãœËrÿˇˇãMÃâAãœË	6  âE‘Ë6  ãM∏âEÿçAã	ÈÅ   É}» ã âE¿t(3“ã»j BËŒÛˇˇÖ¿uãU»ãŒËˆ“˛ˇÅcˇˇˇ˝Ée» ãE¿ˇu‘ã–ãœËS  ˇuÿãŒjˇu‘j_ZËÃ˛ˇjçM˚ã–QãŒË[”˛ˇjˇu‘∫à   ãŒˇuÿˇuË„Œ˛ˇãM–ãEƒIÉ¿âM–âEƒÖ…èqˇˇˇãU‘ãœËw5  ãUÿËo5  ãEÃÖ¿tãU∞ãŒj˜PË”˛ˇãE»Ö¿t;ã–ãŒË≥”˛ˇãNtj j âHãŒˇs0jBZËäÀ˛ˇãvtãS,NãMºJËå”˛ˇâpÉg ∆G ãM¸_^3Õ[ËÂ” …¬ UãÏÉ‰¯ÉÏ4°∞	3ƒâD$0SVãŸWã˙3“âT$ãKâL$9S$Ö¿  ãGãw©   t.ˇvhàÏRSË$Õ˛ˇãL$ Éƒj ˇw,ˇw0jZË˙ ˛ˇãGÈá     âGãC,R@PRjFâC,ZâG0Ë’ ˛ˇ@ˆG âG,uãL$3¿PPPjZË∫ ˛ˇâD$ÎãD$ˇvÖ¿∫hÏπÿ4	D QhúÏjSË£Ã˛ˇÉƒÄ?âuãFãÎ3…AãC,Éd$( Éd$4 Éd$, Éd$0 çP¡âT$$âC,Ä?âuçBˇ∆D$ 
¡âT$,PRj âL$<jIÎj Rj ∆D$,jFãL$ ZË& ˛ˇÉ~< ∫ö   ãã»âD$tfhÎË≤ﬁˇˇã»âL$Ö…t3∆ACãN<ãQÖ“tãL$j j Ël‰ˇˇÎ3¿ãL$QPj4ZãÀËﬂˇˇâD$ãF<ãPÖ“t	ãL$Ë¯‚ˇˇãF<ãL$âHÎh¥ÏËLﬁˇˇj P∫ì   ãÀË«ﬁˇˇâF<Éf çD$ Pã÷ãÀË¶˚ Ö¿t"É{$ täàG∆µ3¿ãL$<_^[3ÃË‡— ãÂ]√ãD$$ãt$âD$âGãD$Ö¿tã–ãŒËK—˛ˇãNtâHj j ˇw0ãŒjBZË"…˛ˇãvtãW,NãL$JË#—˛ˇâpÉc ãD$∆C ÎïQVWã˙ãÒãOËo◊ˇˇ˜G   t!ãÄzS uãOãI;tããŒPË`˘ˇˇ3¿@ÎÉ¯tã—ãŒËn˘ˇˇÎÎ3¿_^Y√UãÏÉÏL°∞	3≈âE¸ãEâEãESãŸâEÿ3¿â]‹VãÚâE¯âEÃâEÙäCàE◊ãFWâu‡âEºËlˇˇˇÖ¿Ö≠  ã÷ãÀËT¯ˇˇãNâEƒËŒ÷ˇˇã¯kœj â}∏AQãËﬂ ˝ˇãâE»ÄyS ÖZ  ãsçMÙQãMÿ3“9MãÀPçE¯âu–D¬ãU‡PjËØÚˇˇãUºãÀâEËçE¿P∆C Ës  äM◊àK3…âE¿Öˇ~ãE»9àuA;œ|ˆãE¿;œuâEÏÎCã◊ãÀËÖ1  3…âEÏâM‰Öˇ~.ÆËãÿãE»j ãà√PãE¿¡ãŒPjNZËñ«˛ˇãM‰AâM‰;œ|⁄ã]‹É}ËÖf  ˇK8ãC8ÉeÙ âE‹ãE‡ãHãPâM‡ãÀËE”ˇˇã}âE–9}ÿtãÀË◊0  PâEÙãŒãEÏPPjfZË9«˛ˇãE‡Ée É8 é—   çHâM‰ãçEºPãÀË«  É}Ù âEËt ãM‰ã	Ë5ˇˇÖ¿tãEÙãŒPˇuËPjfZËÌ∆˛ˇãUºãÀËç0  ãM‡ãH9E|.9}ÿu)ãMËãEÏ;¡j˛ˇu–QWPj2Zj4XE–ãŒË»«˛ˇãMƒäÎ,ãMËãEÏ;¡j˛ˇu–«EÃ5   Qˇu‹ãŒPj3ZEUÃËò«˛ˇãMƒäfæ–ãŒËÀÀ˛ˇãUãE‡BãM‰É¡âUâM‰;å5ˇˇˇãEÙÖ¿t ãMÿj QPj2ZãŒË@∆˛ˇj Wj jZãŒË1∆˛ˇãU‹ãŒË±…˛ˇãUÙãÀË«/  È0  ãE9EÿuâE‹ÎˇK8ãK8âMÃâM‹É{$ Ö  3…âM‰Öˇ~KÆËãE‡ã—ãHË}‘ˇˇãÄyS Ö˘  ã»Ë˚ÓˇˇÖ¿tãEÏãŒE‰j ˇu‹Pj2ZËØ≈˛ˇãM‰AâM‰;œ|ªãEÉ}ËãŒu$ˇuÏPãEÙPj ZâEËËÜ≈˛ˇ3¿ãŒPPPjZËw≈˛ˇÎKj WˇuÏj^ZËg≈˛ˇWˇuƒã–ãŒËØÃ˛ˇãEãŒWˇuÏ;EÿuPˇuÙjZË4»˛ˇÈS  ãEÙj PjZâEËË»˛ˇÉ}¯ âE‹tÉˇuj ˇuãŒˇu¯j3ZË
≈˛ˇãE;Eÿuj Pj jZãŒËÛƒ˛ˇãEÃÖ¿t	ã–ãŒËm»˛ˇj ˇuãŒˇuËj&ZË—ƒ˛ˇâEÃÉˇ~ˇK83“ãC8âE‡âUÙÎãE3“âE‡âUÙÖˇ~mÆËãÀË+.  ãMºã¯Ë7”ˇˇã–ãÀËt–ˇˇãM–ãWˇuÙˇuËj\ZËyƒ˛ˇãMÙMÏWˇu‡QãM–j4ZËcƒ˛ˇj˛Vãu–ã–ãŒË©À˛ˇã◊ãÀËı-  ãUÙã}∏BâUÙ;◊|ñj ˇuÿãŒj jZË,ƒ˛ˇÉˇ~/ãU‡ãŒËß«˛ˇãEÃãŒj @PˇuËjZË	ƒ˛ˇj ˇuãŒj jZË¯√˛ˇãU‹ãŒË Ã˛ˇãNtâHãEÏ;E¿t	ã–ãÀËÅ-  ãE»Ö¿t	ãã–Ë ˝ˇãEƒÖ¿t	ãã–Ë˝ˇãM¸_^3Õ[Ë-Ã …¬ Sã‹QQÉ‰¯ÉƒUãkâl$ãÏÉÏ°∞	3≈âE¸VãÚWã˘ÖˆtBjãŒË”B˝ˇPçUãŒË%F˝ˇÉ{ tÚEWpG	ÚEjÛçE∫ò   PQˇsQãœË≈˛ˇãM¸_3Õ^ËØÀ ãÂ]ã„[¬ UãÏÉÏ°∞	3≈âE¸˜B   ã¡SVãrãXWã}âEËtj ˇuã∆ãÀ˜ÿÖˇD∆PjFZË‡¬˛ˇÈ°   çUãŒË@M˝ˇâEÏÉ¯uÖˇtJÉ¯tEÖˇt*ãU3…∏   Ä;—u9EÙt.É}ÏtãEÙ˜⁄¡ã ˜ÿâMâEÙjÚçEPQˇuQjGZãÀËKƒ˛ˇÎAjh∏ÏVËÅD˝ˇÖ¿u#πÿ4	ÖˇV∏D‡D¡PhºÏˇuËËﬂB˝ˇÉƒÎˇuã÷ãÀWËî˛ˇˇãM¸_^3Õ[Ë∞  …¬ UãÏÉÏã¡âU¸SVWãxâE¯ã@4Ö¿~ˇuHãœj PjZË˝¡˛ˇãÿÎ3€ˇuãuã÷ãM¸Ëj|  ãM¯ã–ËR  É∆Ä>B|j jˇuãœj^ZËƒ¡˛ˇjVã–ãœË…˛ˇÖ€tã”ãœËΩ…˛ˇãOtâH_^[…¬ UãÏQQSVWã˙âM¸Öˇuˇuˇuˇuj\ZÈ‘   ãuÖˆàº   øG ;Ñ∞   Ä+u∫¨   ã∆ÈÇ   ãﬁ¡„_∑C® tMãI∫   âM¸Ö¬tˇ3hÿÏQË∫A˝ˇÉƒÎãq4¬ˇufâCã◊ãE@SâA4Ëﬁ˛ˇˇãE¸âp4∏ˇ˛  f!CÎSˆGÄãœ∑÷tËÄ  ã»Ë/Ä  ÎËHÄ  ãM¸j\ZòˇuPˇuË≈¿˛ˇˇuãM¸ã◊VËé, Îj ˇu∫Ö   ˇuË£¿˛ˇ_^[…¬ ËXÃˇˇÖ¿täÅ`ˇÔˇˇàH∆ ØâP√UãÏÉÏSVãÚãŸWãŒâ]¯ËÁŒˇˇã–âUÙÉ˙uˇuã÷ãÀË  ÎãE3ˇÄ>ââ8uã÷ãÀËﬁÙˇˇãÿÎ8ãC,ãM¯çX¬âA,Ö“~&ÆËâ}¸ãVçPãE¸ãTËÕ  ÉE¸GãM¯;}Ù|‡_^ã√[…¬ UãÏÉÏ\°∞	3≈âE¸SãYVWã˙âMº3ˆãâEƒãE+∆Ñ  ÉËÑ‡   ÉËÑ»   ÉËÑõ   ÉËtAÉËtˇuãWËf  ãÈL  j4çE»VPˇbãMºçU»Éƒ∆E»úâ}‹ˇuË:  È$  ãO«E§¯Ï«E® Ì«E¨Ì«E∞îÂ«E¥åÂË˘…ˇˇ<@∏ÌÎæ¿ÆËãÑÖ†˛ˇˇãuãÀPã÷Ëpø˛ˇÈÕ   ãW3…jˇˇwË¢  VãuVPjFZãÀËıæ˛ˇÈ©   ãWjˇˇwËÃ  Î‹ãWÄ:¶uãRãOËD!  ã»jFÎjIãŒXVãuã–VQÎΩˇI8ãA8ãuãWVâE∏Ë–  ãMƒÉ˘~4çGIã}ºâE¿âMƒj ˇu∏ãÀVj3ZËæ˛ˇãU¿ãœVãËû  ÉE¿ÉmƒuŸÉ ˇãÀËp∆˛ˇÄ8Nu3“BË©√˛ˇãU∏ãÀË—¡˛ˇã∆ãM¸_^3Õ[Ëª∆ …¬ UãÏÉ‰¯ÅÏ§   °∞	3ƒâÑ$†   SãŸ3¿VWã˙â\$$ãKãUâ|$,âL$âD$âD$8âD$(ÖˇÑÉ
  ∂7ât$É˛mÜÈ  çFíÉ¯Fág
  ∂ÄqBˇ$ÖBãâ|$,Î≈ãG(âD$ øG"kãG(pÄ8 uãFÈ?
  Äx t@øFã>RPãD$(ˇpj\ZËzΩ˛ˇ∑FfÖ¿à
  ø»ãG…Ä|»EÖˇ	  j j È{  ˆGãwtcRãWãÀË	ˇˇˇãO,âD$ Ö…tøW Ë»«ˇˇæãD$ ÎæwÉ˛A~)ãL$j jPj^ZÆËËΩ˛ˇãL$ã–jˇçuêvPËCƒ˛ˇãD$ Èç	  Öˆâ∏   ãC4Ö¿â™   ∑W ãO,øÚâL$ Öˆy˜–Èa	  ¡ÊqË|  ø¯∑F+{4®`tGπ   Ö¡tˇ6hÿÏSË=˝ˇÉƒ3¿È(	  ¡fâFÑ¿yãT$ ãÀWVË@˙ˇˇ∏˛  f!Fã«È	  Ä~EuÛã]ãL$j SWjOZË@º˛ˇãL$j j SjUZË/º˛ˇã√È–  çpˇäGRãW,àD$øG PVËq˙ˇˇÄ|$ tãKÉ ˇËƒ˛ˇã»Ä9\u	∂D$fâA3¿9G,Öá  ÄEÖ}  PPˇujUÎ)Rj ã◊ãÀË†¯ˇˇÈc  ãœËc«ˇˇ3…j Rã@8Hî¡QjFãL$$È<  RãWj ËÏ˜ˇˇÈ2  ˇwË‹ª˛ˇÈ%  ãwçNË◊:˝ˇãL$çVçxˇã	WË7L˝ˇã]ããL$ã«ôj +¬S—¯PjKZËGª˛ˇãL$ã–j˘VËé¬˛ˇÈˇˇˇøG j RPjLZË$ª˛ˇãGÄx Ñº  øW ãã‹   ËZP˝ˇÉ! ã–ãL$jˇËæ¬˛ˇÈò  ãGÈì  ãGäà\$Ä˚öã\$$u
Rjã–ÈˇˇˇÄ|$òuRãPjÈ&ˇˇˇÉ§$Ä    çD$PçT$|∆D$|öãÀ«Ñ$Ä    D  ËF  ãWãçD$8ãÀPË5  ã}ãL$WVPjkÈﬁ	  ãWçD$PãÀË  ãOãË∆ˇˇ3…Ä-ã}î¡ã@äP3¿Ñ“î¿3»3¿QãL$Ñ“ï¿PWVjYZËΩ˛ˇÈÁ	  ãG(Ö¿t ∑O"fÖ…xø…;H,}ã@(k…ãDÈ§  ˇwhÌSËÅ:˝ˇÉƒÈt  ã3Éd$$ Éd$( ˜G   äFPât$4àD$ tãG,ã@8Èc  Ä{ t j jZãœË(·ˇˇÖ¿tjˇã◊ãÀË5
  È=  ãGâD$0Ö¿tã Î3¿ãOã—j ˇt$$âL$DãŒPâD$Ë)…  ãât$ ÖˆÑ¯  É~ ÖÓ  ˜F  @ tˇuãT$4ãÀˇvË@˘ˇˇÈ⁄  ˜F  ( t
Vã◊ãÀËÕ–ˇˇãL$3“âT$Ö…~mãD$0É¿âD$8ã¯É˙ s#ã3“j BËr‡ˇˇãT$ãL$Ö¿tãD$$´–âD$$ˆF tÉ|$( uããÀË≠ƒˇˇãL$ãT$âD$(BÉ«âT$;—|™ã|$,ãT$0ÎãT$0çBâD$8Ö“tgÉ|$$ tãC,çx¡â|$ã|$,ãL$âC,Îã—ãÀË/"  ãT$0ã»âL$ˆF¿tãBä <¶t<®uãzäF$¿àGã|$,jj QãÀË5  ãT$0ÎÉd$ ãD$É¯| ˆGÄtãL$4ÆËˇrã÷PË'] ãât$ ÎÖ¿~ÆËãL$8ã÷ˇ1ãL$8PË] ãâD$ ˆF t8É|$( uãD$4ã@âD$(ãL$3¿PPPjSZË∏∑˛ˇãL$ã–j˛ˇt$,Ë¸æ˛ˇãt$ ∂GãÀã|$ãT$$PVãt$VˇuWË»∏˛ˇÖˆÑ"  É|$$ Ö  Vã◊ãÀËa!  È  ˇt$<h4ÌÈa˝ˇˇãWÉz uãÀËÁÎˇˇã»ãGâHãOË≥≈ˇˇ9GtPˇwhàÎSË¥7˝ˇÉƒãGøO Hã¡Èµ  h‡ÊSËï7˝ˇYYÈâ  ä[j j ˇwjZËÈ∂˛ˇˇuããD$(ã»∆@ ãWËû¯ˇˇãL$$ã÷ã¯àYã\$ãÀËŒæ˛ˇãKtã÷âHãÀËøæ˛ˇã\$$âxÈe  ã3¿!D$(âD$$ãGâD$@âL$0çPâT$,ããC8HâT$4âD$âC8ãGâD$<Ö¿trj j ã–Ë‰–ˇˇããD$0ât$(ÄxS tÖˆÑ“  ã÷ã»ËzœˇˇÈƒ  çD$ã÷PãÀË®ıˇˇã–ãŒËÉıˇˇj4çD$Hj PˇbãT$@çL$PÉƒ∆D$D5Éd$ ât$PÎãL$$ã}çBˇÖ¿éä   H—Ë@âD$ ãD$,ãT$<Ö“âL$$ããD$TE¡âD$TãD$$D¡ˇK8ãs8jVPSâD$4Ë8  ãT$,ãÀWãRË¬  ãL$j ˇt$j jZËÇµ˛ˇã÷ãt$ãŒËˇ∏˛ˇãD$,ãL$$É¿(Él$ âD$,uàãT$4Îãt$ˆ¬tãD$@ãÀk“WãTÙËi  Îj Wj jIZãŒË,µ˛ˇãD$(Ö¿tãL$0ã–ËXŒˇˇÉ ˇãŒË!Ω˛ˇÄ8Nu3“BËZ∫˛ˇãT$ãŒËÅ∏˛ˇÈ∂  ÑÄ  ât$É˛6áX  Ñå  É˛0á9  Ñ#  ât$ât$ÉÓÑÌ   ÉÓÑä   ÉÓt;ÉÓÑ6  ÉÓÑ-  ÉÓÖ(  ãt$3¿«D$(Ä   É˛-î¿çp4ât$È'  RãWãÀË1ˆˇˇã]ã;ÛtãL$j SVjOZËL¥˛ˇãÛãO3“Ë¶|  ãL$j æ¿PSjVZË-¥˛ˇã∆ÈŒ   ãt$ãÄxS Öè˜ˇˇÅ˛â   u7˜G   t.ãGã@ã3¿@;»tÉ{$ ÖÆ  PQh$ÏSËr4˝ˇÉƒÈe  ã◊ãÀËpËˇˇÎtãt$ãWçD$PãÀËj  ã}ã÷j WãL$PÈ  j j Rã◊ãÀËﬂ  Î<ã∆ât$ât$ÉË1Ñõ   ÉËt>ÉËt9ÉËÑ$  ÉËÑ  j Rj jIZË[≥˛ˇãEãå$¨   _^[3ÃË ª ãÂ]¬ j RjjFZË4≥˛ˇãWçD$PãÀË÷  ãL$ã÷j j PË≥˛ˇã}ããL$j Wj jFZËˇ≤˛ˇãL$ã÷Ëª˛ˇãItâHÈ≠  ãs8j RNj jIZç~ˇâ{8Ë“≤˛ˇãT$,ãÀWVËÍˇˇã]ãL$j SjjFZË±≤˛ˇã÷ãt$ãŒË.∂˛ˇj j SjTZãŒËï≤˛ˇã◊ãŒË∂˛ˇÈXˆˇˇÉ˛gáÒ  Ñ  ât$ât$ÉÓ7Ñ  ÉÓÑ  ÉÓÑ  ÉÓÑÄ   ÉÓtÉÓÑ“  È—˛ˇˇ∑W ãw,ãŒø¬ât$<âD$@Ëêq  ø»∫õ   øF"Aãt$@ØGã}j W¡ãŒPË˙±˛ˇãL$@Ö…à≤  ãD$<…ã@Ä|»EÖû  j j WjUãŒÈ7  É{x uÄ{ uhLÌSËH2˝ˇYYÈ'ıˇˇ3“BÄuÉ{t ã√ECtàPäGãw<u$j jj jEZËÄ±˛ˇãL$ã–j VË«∏˛ˇã}È.  3…æ¿9KxQQVP∏  ãÀE–ËO∑  Î€ãt$ãOâL$@ËªøˇˇÉ¯~ˇt$(ãÀVRã◊Ë·¿ˇˇÎµçD$ã—PãÀÆËË«  ãWãÀâD$4çD$8PË¥  ãt$ãŒj ˇuâD$(jjFZËÍ∞˛ˇãOãFtãT$@É¿¡È	É·Qˇt$,ãÀPˇt$,ˇt$Dˇt$$ˇwË…æˇˇÅ|$(Ä   ãŒã}u	j Wj jFÎˇt$ ÆËWˇt$<jZZËè∞˛ˇÎQât$ÉÓhtÉÓtÉÓtÉÓt	ÉÓÖ˝ˇˇãWçD$PãÀË  ãWãçD$8ãÀPË˝  ã}ãT$WVÈç¸ˇˇã˙ãT$ãÀË€  ãL$8Ö…Ñ≈ÛˇˇäC<É∫Ûˇˇ∂¿âåÉò   ˛CÈ®Ûˇˇ±A\4U>ê6˚=Ä6ù6N6È6|;Ã4˙7e4_6ë=7827™7*7;»:";µ>  	
UãÏÉ‰¯ÉÏSVãÒâT$Wã}ãFDâD$Öˇy9Ö¿t5çXã Î&ˆCtjˇRã3…Ë≈  Ö¿Ñã   ãD$ãT$É√HâD$Ö¿“Ö“txãj j ËÖ…ˇˇãÿÖ€tiˆCtcãF3…QQQjZã»âD$Ë€Æ˛ˇâD$ã∆F ÄxS uÖˇyˇF,ã~,Wã”ãŒË„   ãã”∆FËÈ«ˇˇãT$ãL$ËØ∂˛ˇãItâHÎ;ãCÎ83¿ãT$ãŒPË‰—ˇˇã»Ö…tkã«¡Ë3
É‡1
ÖˇyˇF,ã~,â|
âNDã«_^[ãÂ]¬ UãÏSVWã˘ã Ë∫ˇˇÄ ãt.Öˆt*Ä>Øt%j jZãŒË¢’ˇˇÖ¿tãEã÷jˇãœÉ  Ë©˛ˇˇãÎ-ãœËé  ãÿã÷SË≈Ôˇˇã;ÛuãMâÎã”ãœËç  ãEÉ  _ã∆^[]¬ UãÏÉ‰¯VWã˘ãÚÉ t/ˇuËÜÔˇˇ;Et"Öˆt˜F    tjNÎjOãOZj ˇuPËì≠˛ˇ_^ãÂ]¬ UãÏÉ‰¯QSãŸVWã;Ö“tj j ãœËˆ«ˇˇãÎ3ˆÄS uˇuã÷ãÀËÇˇˇˇÖˆt	ã÷ãœËà∆ˇˇ_^[ãÂ]¬ UãÏQVãÒWã˙Ä~ tj jZãœË£‘ˇˇÖ¿tˇuã◊ãŒËØ˝ˇˇÎˇuã◊ãŒË{ˇˇˇ_^Y]¬ UãÏÉÏSä]VãÒäÀˆ—âuÏÄ·Ä…NãFâEÙä√$˝àMˇÄ~ ∂¿âE¯∂√ã]¯Eÿ3¿Wã:É¬â]¯ãÿâUËÖˇéÍ   äm¯ãuÄÂàm˛ãâEÑÌt,∑RÖ“t$ˆE¯tKNOÈ¨   3¿PãEH¬∂—VÆËPÈà   ˆE¯t"3…QjZã»Ëÿ”ˇˇÖ¿tãUãMÏVË‰¸ˇˇÎkãEãMÏã–VËÓˇˇâE;∆tVäEˇ<Nu=ãMÙÉ ˇË2¥˛ˇã»Ä9Nu(ãAãQ@¬;EuãA@¬;∆u3¿f9AuçBâAÎäEˇ3…∂–QVˇuãMÙË‹´˛ˇäMˇäm˛ãUËCÉ¬FâUË;ﬂå"ˇˇˇã«_^[…¬ UãÏÉ‰¯ÅÏ¨   °∞	3ƒâÑ$®   ãESVWã˘âD$3ˆâT$j4çD$Pât$ãVPˇbÉƒçÑ$Ä   j4VPˇbÉƒçD$j4VPˇbãD$ÉƒãPÖ“tVVãÀË∆≈ˇˇããD$Ä{S Ö≠   çL$L∆D$,âL$$ã÷çå$Ä   ∆D$L9âL$(ãHât$XãAâD$\∆Ñ$Ä   7â¥$å   ãAãœâÑ$ê   çD$PË\Íˇˇã–ãŒË7ÍˇˇãD$Ö¿tˇuçL$ˇuQWã»ˇ0cãD$ ˇ–ÎˇuÉNçT$ãœËiÏˇˇãT$Ö“täG<s∂¿âîáò   ˛GÖˆt	ã÷ãÀË≥√ˇˇãå$¥   _^[3ÃËÊ≤ ãÂ]¬ UãÏÉÏSVWã}3“âUÙâUÏãOâM¸Ö…Ñ∆  ã]Ö€Ñª  ∂3âuÉ˛4áD  Ñ…  É˛0á√   Ñ§   ã∆ÉËÑÖ   ÉËtÉËtÉËÑÖ  ãEâE¯Èß  ãÀË–ˇˇ;√t	ˇuˇuPÎHÉ˛,u+ãEˇO8Éãw8PVˇsWËF  ˇuˇuˇsWËGˇˇˇÈ≥   ˇuˇuˇsWË3ˇˇˇˇuˇuˇsWË$ˇˇˇÈ^  ˇuˇuˇsWË   ÈJ  ˇuã”ãœh¿GˇuËö˝ˇˇÈ1  ã∆ÉË1t0ÉËt	ÉËÖLˇˇˇçEÙãœÆËãSPË⁄˙ˇˇ3…ã÷QˇuPãM¸Èı   ˇO8ãœãw8ã∆9Uã”EEPVËM‡ˇˇ3…QˇuQãM¸jZËÏ®˛ˇãM¸ã÷Ël¨˛ˇÈø   ã∆ÉË5ÑÄ   ÉËt{ÉËtvÉËtqÉËtlÉËqtPÉËÖ¬˛ˇˇãKäSËQ¥ˇˇ3…jã@8Hî¡3¿Ä˙™î¿;»Yt3¿Ä˙™D¡PˇuˇsÈ˛ˇˇ3¿Ä˙™D¡PÈ˛ˇˇ3¿«E¯Ä   É˛-î¿É¿4âEÎãEâE¯ãKË¬∂ˇˇÉ¯~UãM¸ãsã∆%  =   uRˇuRjZË®˛ˇ3“ÎrÅÊ   Å˛    tdçEÙã”PãœË∞˘ˇˇ3…9M¯ï¡QˇuPjZÈ ˛ˇˇçEÙã—PãœËé˘ˇˇãSãçEÏãœPË~˘ˇˇãKãS¡È	É·Qˇu¯ãœˇuPVˇuˇsËπµˇˇãUÏãMÙÖ…täG<s∂¿âåáò   ˛GÖ“täG<s∂¿âîáò   ˛G_^[…¬ ÃUãÏÉ‰¯ÉÏSVWã}3ˆât$ât$$ãGâD$Ö¿Ñ—  ã]Ö€Ñ∆  äàD$∂¿ã»ÉÒâL$ É¯4á=  Ñƒ  É¯0á—   Ñ≤   ÉËÑï   ÉËtÉËtÉËÑ~  ãUâT$È°  ãÀËÕˇˇ;√t	ˇuˇuPÎÄ|$,u#ˇuˇuˇsWËKˇˇˇˇuˇuˇsWË<ˇˇˇÈ¸  ãEˇO8Éãw8PVˇsWË0¸ˇˇˇuˇuˇsWËˇˇˇãL$ã÷Ë˝©˛ˇ3ˆÈƒ  ˇuˇuˇsWË ¸ˇˇÈ∞  ˇuã”ãœh∞JˇuËä˙ˇˇÈó  ÉË1t+ÉËt	ÉËÖ>ˇˇˇãSçD$PãœËŒ˜ˇˇãT$ VˇuPÈÁ   ã”ãœ9utˇuˇuËJ›ˇˇÈN  ˇO8ãw8VˇuË6›ˇˇÈdˇˇˇÉË5ÑÑ   ÉËtÉËtzÉËtuÉËtpÉËqtPÉËÖ…˛ˇˇãKäSËX±ˇˇ3…jã@8Hî¡3¿Ä˙™î¿;»Xt3…Ä˙™D¡PˇuˇsÈœ˛ˇˇ3…Ä˙™D¡PÈˇˇˇ3“«D$Ä   Ä|$-ï¬É¬4âT$ ÎãEâD$ãKËƒ≥ˇˇÉ¯~RãKã¡%   =    uVˇuVjZãL$ Ë•˛ˇÎuÅ·  Å˘   tgçD$ã”PãœË≤ˆˇˇ3…9L$ï¡QˇuPjÎ∆çD$ã—PãœËíˆˇˇãSãçD$$ãœPËÅˆˇˇãKãS¡È	É·Qˇt$ãœˇuPVˇt$4ˇsË∫≤ˇˇãt$$ãL$Ö…täG<s∂¿âåáò   ˛GÖˆtäG<s∂¿â¥áò   ˛G_^[ãÂ]¬ UãÏÉ‰¯QSãŸVWã;Ö“tj j ãœË÷æˇˇãÎ3ˆÄS ujˇuVSË…¸ˇˇÖˆt	ã÷ãœËhΩˇˇ_^[ãÂ]¬ UãÏÉ‰¯ÉÏ°∞	3ƒâD$SVã⁄3ˆãUât$Wã˘Ö“tQãçD$PjAjËû˛ˇ9t$thøS ãOËÈÿ˛ˇQãè‡   Ëúÿ˛ˇãÿÖ€t*∑CÉ‡?Ä∏@¿u	≤ãÀËÜù˛ˇãT$ãÀVËÃÃ˛ˇ˜ÿˆFã|$ÖˇtãœËÛì˛ˇãO ã◊ËŸ˘¸ˇãÀË°˛ˇãL$ã∆_^[3ÃËÏ´ ãÂ]¬ UãÏÉ‰¯ÉÏSVãuWã˙âL$ÖˇÑ   ÖˆÑ  Ö…tÄ?õuVËˇˇˇÖ¿u`ãL$ã^ã”W∫‚
âT$s#_∫„
sãG;Ft9jXÈ‡  ä:Öã  <GÑù  ãOÖ…Ño  <´Ñ  <ßÑ  <xu3¿È®  <pÖ‰   ãVÖ“t±Ëã$˝ˇÖ¿u®ã\$ãT$ãG3F©  uì˜¬ @  uƒ˜¬   uÉˆ¬uˇuãWãÀˇvËˇˇˇÖ¿ÖfˇˇˇˇuãWãÀˇvË˜˛ˇˇÖ¿ÖNˇˇˇˇuãVãOË1  Ö¿Ö8ˇˇˇäÄ˘tÑfˇˇˇÄ˘©Ñ]ˇˇˇ˜D$    ÖOˇˇˇfãG f;F ÖˇˇˇäG:Ft	Ä˘ÆÑ˜˛ˇˇÄ˘1Ñ'ˇˇˇãG;FÑˇˇˇ;EÖŸ˛ˇˇÈˇˇˇÉ~ tb<¶t^<®tZˇvQˇÃbYYÈ	ˇˇˇãVËå#˝ˇÖ¿Ö•˛ˇˇ3_∏   ÖÿÖï˛ˇˇã\$ÖGÑ‰˛ˇˇãW,ãÀjˇv,Ë ˛ Ö¿ÑÕ˛ˇˇÈl˛ˇˇã\$È√˛ˇˇ<puˇuãWVËÙ˝ˇˇÉ¯}3¿@Î1Ä>pÖ@˛ˇˇˇuãL$ã◊ˇvË–˝ˇˇ3…É¯ù¡çAÎ
3…;˜jXD¡_^[ãÂ]¬ UãÏQQVãÒÖˆu	3¿Ö“ï¿ÎYSWÖ“tNã;uH3€Ö¿~>ã∆çN+¬âM¸çzâE¯ä8:u+ˇuã3…ˇw¯Ëc˝ˇˇÖ¿uãM¸CãE¯É¡É«âM¸;|“3¿Î3¿@_[^…¬ UãÏVˇuãÒã ËQ¨ˇˇPãŒËI¨ˇˇã–3…Ë˝ˇˇ^]¬ UãÏQQSã]ã¡VWˇuã˙âE¸SË¸¸ˇˇÖ¿Ñ1  ãu∂É¯iá°   Ñ¿   É¯7áÅ   Ñ±   ÉËÑË   ÉËt0ÉËtÉËÑï   ÉËÑå   ÈÇ   ÖˆÑø   ˜G   È±   ÖˆÖù   ãwãM¸jˇuãVSË_ˇˇˇÖ¿uãVãM¸jˇuSËJˇˇˇÖ¿t~3¿@Èö   ÉË8t1ÉËt,ÉË-t*ÎêÉ¯pw9taÉËjtÉËtÉËtÉËtÉËtÉËu23ˆFãWãM¸VˇuSËı˛ˇˇÖ¿u´Î*ÉËqt"ÉË;t ÉËtÉËt	ÉËt3¿Î.Öˆu¯Ä-uÚ3ˆFˇuãWã˙ãM¸SËÀ˚ˇˇÖ¿Ö“˛ˇˇ3¿Ä;xï¿_^[…¬ UãÏQSVãuãŸWˇuã˙VËù˚ˇˇÖ¿tMÄ>+u&ˇuã◊ãÀˇvË—ˇˇˇÖ¿u5ˇuã◊ãÀˇvËæˇˇˇÖ¿u"Ä>3uj ˇuã◊ãÀˇvËA˛ˇˇ˜ÿ¿˜ÿÎ3¿Î3¿@_^[Y]¬ ÃÃÃÃÃÃÃUãÏVãuˆFuc∂πú   ;¡áõ   tQÉË+É¯á©   ∂ÄÑTˇ$ÖpTSWã}3€f9_u(ãVÖ“tãœË%Üˇˇf9_t3¿fâGãVÖ“tãœËÜˇˇ_[3¿@^]¬ ãVÖ“tÒãMËÚÖˇˇÉ¯u‰Î\ãFÄ8¶uã@,Ö¿tÄx+tÕãFÄ8¶u)ã@,Ö¿t"Äx+Î-¶   tÉËt¨ÉËtßÉËt¢HÉËtú3¿ÎõãMãA;Fuç3¿@fâAjXÎÑêSπS¯STTT     UãÏÉÏ °∞	3≈âE¸VWã˙Ë2©ˇˇãÖˆt6ä<3u>ãvÉeË 3¿ÉeÏ «E‰ÄSfâEÙâ}¯Öˆtã÷çM‡ËÖˇˇfãEÙ∑¿ãM¸_3Õ^Ë¨• …√<,u¡ãNã◊ËèˇˇˇÖ¿u
ãvÄ>,tÍÎ©3¿@Î—ÃÃÃÃÃÃÃÃÃUãÏãUVÄ:¶u*ãuãBãN;AufãR ã	Ë(\  fÖ¿y3¿@jfâFXÎ3¿^]¬ UãÏÉÏ(°∞	3≈âE¸SVãuçEÿWjj Pã˙ãŸˇbÉƒâ}¯âuÙçEÙ«E‹ UâEÖ€t
ã”çMÿËPÑˇˇãM¸3¿f9EÏ_î¿3Õ^[Ë·§ …¬ ÃÃÃÃÃÃÃÃÃÃÃÃÃUãÏÉ‰¯ÉÏãESVWãxãEâ|$$ãX ãÖ¿Ñõ   ãOãwô¡âL$ã÷âGâW§¬ât$ RãW¡‡PË≥ı¸ˇ3ˆÖ¿ujâwâwXÎ`âGW¿fD$93~NãL$ãT$âL$k¡HãOã|$ãD4âπãL$ãÉ¡ã|$$÷âL$ÉD$âT$t$ ô9T$ãT$|ƒ;»ræ3¿_^[ãÂ]¬ ÃÃÃÃUãÏãEVWãHãqã∆ãy«tãEã@ ã ô+âq˙ây_^]¬ UãÏQQSVWã}ä<¶t<®Öä   ãM3ˆãYâ]¯ãCÖ¿t!ãâU¸ã÷9~É¿4ã_;ã]¯tCBÉ¿H;U¸|ÌãSãCâE¸âU¯;÷|1;∆v+ãOã[ã}¸9tFÉ√ã∆ô;U¯|;«rÍãMÎ
fÉIÎã}¸ã∆ô;U¯|;«rfÉI_^3¿[…¬ UãÏÉÏ@°∞	3≈âE¯SVãuçE‹Wjj Pã˙ãŸˇbjçEƒj PˇbãWçEƒÉƒâEÙãçM‹«E‡–V«E‰–U«EË†VâEƒâu»Ë¥Çˇˇ˜G   tãG,ãP(Ö“tçM‹Ë˚ÅˇˇãU‘Ö“tãËj¸ˇ3¿ˆEt@Îf9Eï¿HãM¯_^3Õ[Ët¢ …¬ UãÏÉ‰¯QãUSVW˜B `  udãr(Öˆt]ãEøJ"kŸÄ:®ã8u!ãF9TuCãj j Ë3¥ˇˇÖ¿t4ãNâDÎãF(9u#ãj j Ë¥ˇˇÖ¿tãN(âãWDãœPËÿºˇˇâGD_^3¿[ãÂ]¬ VWjã˘ãÚj WˇbÉƒâ7«G0X«G‡ _^√ÃÃÃÃUãÏÉÏãESVãuãHW∂ããQãyâ]¸-¶   Ñ„   ÉËtÉËÑ’   3¿È  ˜A   uãM∂F9Au‰ãO(çW,3¿âM¯ãÿ9~%91t!ã3…jˇVËdıˇˇçW,Ö¿tãM¯CÉ¡âM¯;|€;|vãM¸ã	äAPàE¯çEÙPRãW(jË∏ï  ã]ÙâG(Ö€xRãM¸k”–âUÙâ2ˇA,ãA,âB3“ãFÖ¿tã Îã¬ã	Rˇu¯ãVPË®  ãUÙâBˆFtãM¸ãA(âBˇA(ÎÉJˇfâ^"È1  Ö“Ñ,  ã3¿â]¯ã»;ÿé  ã^É¬4â]Ùã]¸ãuÙ;2ãutAÉ¬H;M¯|ÌÈ˜   ãWã»çG ;}.ãFÉ¬9B¯ufãf;F tãFAÉ¬;O |ÊãWçG ;å≥   çMÙQãPjËŒî  ãMÙâGâMÙÖ…àî   k…»ãF,âãFâAfãF fâAˇC,ãC,âAÉ»ˇfâAâqãWÖ“tLãçBâ]¯3“ã⁄âE¸9U¯~:ã Ä8¶uã@;Fuãu¸ããufã@ f;F tãE¸CÉ¿âE¸;]¯|–ÎfâYÎ3“f9Q}fãGfâAˇGãMÙ∆®fâN"â~(3¿@_^[…¬ UãÏÉÏ °∞	3≈âE¸Ée Ée‡ «E‰‡X«EË0‹«EÏ@‹âM¯Ö“tçM‡Ëë~ˇˇãM¸3ÕË.ü …√UãÏQVãÚã¡âE¸Öˆt!SW3ˇç^9>~ãã»ËîˇˇˇãE¸ç[G;>|Ï_[^…√äAÑ¿uãA,@âA,√˛»àA∂¿ãÑÅò   √Ö“täA<s∂¿âîÅò   ˛A√VãÒÉ˙u^È∫ˇˇˇãNWã~ ;—ç+ âF âNÎãN,çy âN,ã«_^√UãÏãEÉ¯uË°ˇˇˇÎ;A~âAâQ ]¬ QVWã˙ãÒjhÄÌˇ7Ë‰˝ˇÖ¿t!˜G Ä  u˜G   tãËE{  Ö¿u3¿Îˇ7hàÌVË2˝ˇ3¿Éƒ@_^Y√UãÏVWˇuãÚã˘ˇuˇu∆GVVh®ÌWË«H  ÉƒÉ} uˇuˇuVhXÓWË¨H  Éƒ_^]¬ UãÏVRRãÒhÔVËêH  ÉƒÉ} uh†ÔVË|H  YY^]¬ UãÏQVãÒWã˙É~ t(Ë∫c  ˇuãNã◊j Ëïó˛ˇ3“B;˙tˇuãNj ËÅó˛ˇ_^Y]¬ UãÏÉÏ(SVWã˘âU‰3€!]ãâU¸8ZSÖ)  ãE‰3“É¿PËL  ãâu‡ÖˆÑ  ãV<ãË•g ã]¸ã»ãU…âEÏãCã»ãÀâE¯Ë¶Q  ãÿÖ€Ñ›  ˇu¯ãM¸ã”ËõH  Ö¿Öπ  ˇu¯ãM¸ã”Ë‹K  Ö¿Ö§  ãM¸ã÷SËÈk  Ö¿Öë  ã÷ãœËH˛ˇˇÖ¿Öè  Shtã”ãœËWR  Ö¿Öx  Ä~+ãuPh|È\  j Pˇu¯ãœjZË◊B  Ö¿ÖM  ã÷ãœËût  Ö¿Ö<  Ä~+uãM¸ã÷ËK+ 3“ãHã	9QLD¬âEãœË∫å âEËÖ¿Ñ
  Ét ãœEOtÉ ˇ∆Aãã»âEÙË∆˝ˇ3…ãÉ}ÏãEÙPî¡QSPãE¯PPhòWâM‹Ë¥F  ˇuÙVãu¯SSSVhPÒWËûF  ãM¸Éƒ@∫ÑÚVËlG  Ö¿tãE‡ˇ0SVhîÚWËwF  ÉƒÉ}ÏtãEÙSVPSPVh–ÚWËZF  Éƒ É} t5ˇG,ãw,ã÷ãMËSËBì˛ˇãMË∫≠   j j VËŸí˛ˇãMËã–jÙˇuËö˛ˇãu¯ãUÏãœjËõ˝ˇˇj h‹Ûˇu‹ã÷ãœË˝ˇˇÎSh8WË-˝ˇÉƒãu¸ãŒãU‰Ëìì  Ö€t	ã”ãŒË÷Ë¸ˇ_^[…¬ UãÏÉÏ$°∞	3≈âE¸SVWã˘âU‡É$ ãâMÙÖÑ  ÄyS Öz  ã∑Ë   âuËãV<Ë>e ãIã–ã“âEÏÉ√ã—øN"âEãF¡·É¿¡ãŒã–âE‰ËáL  ˇuãMÙã”ãË)F  j ãœˇ0ˇujZËœ@  Ö¿Ö  ãE‰∑@®thÙWËY˝ˇYYÈÙ  ãUËÉz th4ÙÎ„®`Ö≥   ÖˆtãF3…Ä8xDÒãMÙãA % @  É» t$Éz0 tÖˆtSˇuhPÙhÏÛWËøD  ãMÙÉƒãE‰ˆ@tÖˆuSˇuhåÙÎeÖˆtoÉe¯ çE¯QPjAjã÷Ëaã˛ˇÖ¿Öa  ãu¯ÖˆuSˇuhƒÙhÏÛWËfD  ãu¯ÉƒÖˆt.ãŒËiÅ˛ˇãN ã÷ËOÁ¸ˇÎ®@tSˇuhÙÙhÏÛWË1D  ÉƒãE‡ãMÙj ˇpãËÌÎ¸ˇãÖˆtKãU‡ãJIŒÎä<;t∂¿ˆÄêàt∆ I;ŒwÊãEËSˇp,Vˇp,ˇuhıWËÿC  ãMÙÉƒã÷ËœÊ¸ˇãœË}â âEÙÖ¿Ñô   ãœËË˘ˇˇãMÙãjVˇuÏjaZËJê˛ˇãMÙãUÏË÷ö˛ˇãMÙj j˛VjTZË/ê˛ˇãMÙj ãAtÉ¿PVj1ZËê˛ˇãMÙjjˇuÏjbZËê˛ˇã÷ãœË©˘ˇˇãUÏjË’˙ˇˇãEËÉx uãE‰ˆ@tˆ@`tˇuSh®ıWË#C  ÉƒãM¸_^3Õ[ËAò …√UãÏÉÏSVãÒâUWãâU¸ÄzS Öd  ãE3“É¿PË‡F  ãÿâ]ÏÖ€ÑI  äC+<uhîˆVË˝ˇYYÈ0  <uh∏ˆÎËã”ãŒËq˘ˇˇÖ¿Ö  É~t ã∆ãM¸EFt∆@ãS<Ë@b j j@âEËËÃÁ¸ˇã¯ÖˇÑÂ   âæË   ãu¸ãŒ«G   ∑C"fâG"òHôÉ‚¬¡¯@¡‡j PËëÁ¸ˇâGˇ3hÿˆVË˝ˇÉƒâÉ Ñï   Ö¿Ñç   øG"¡‡Pˇsˇwˇ bÉe¯ 3¿Éƒf;G"}?3…ãﬁâMÙãwÒãÀãËoÈ¸ˇã»âË˝ˇãU¯ãMÙBàF
É¡øG"âU¯âMÙ;–|Œã]Ïãu¸ãS4ãŒj Ë ¨ˇˇãMËâG4…ãFãD»âG<ãC,âG,«G   ãUãM¸Ë9è  _^[…√UãÏQVW3ˇæÏˆÄz+E˜Äz+uæÙˆÎÖˆt'ˇ29}∫˜V∏˜D¬Ph,˜QËz˝ˇ3¿Éƒ@Î3¿_^Y]¬ UãÏÉÏ$SVWã˘âU‹3€â}‡â]ÙãâE¯çBP3“ËˇD  ãâuËÖˆÑw  ã÷ãœË¥˜ˇˇÖ¿Öf  Sã÷ãœË]ˇˇˇÖ¿ÖT  ãV<ãM¯Ë` ã»âE‰ãE¯…Sˇ6ã@ã»ãœPjZâEË?<  Ö¿Ö   ãUãM¯ËiJ  âEÙÖ¿Ñ
  øV"ãÀâM¸âUÏÖ“~+ãvã¯ãã◊ËÛ˝ˇãUÏÖ¿tCÉ∆;⁄|Ëã}‡ãEÙâ]¸3€ãM¸; uPh,ÊWË~˝ˇÉƒÈ∑   ãU3¿É}‰ãœSî¿hÿ4	PâEÏË1˜ˇˇˇuÏãUãœËk˜ˇˇÉt ã«ãuã÷EGtãM¯∆@Ë∆I  ãÿÖ€tlããEË∂	ˇ0ˇuÏ∂±êàÅÊÄ   VSˇu¸ˇ0ãEPPh@˜WËº?  ãEËVãuSˇu¸ˇ0Vh¯˜WË£?  ãU‰ÉƒDãœjË˜ˇˇjh‹ÛˇuÏã÷ãœËóˆˇˇã}¯ãœãU‹Ë(ç  ãEÙÖ¿t	ã–ãœËh‚¸ˇÖ€t	ã”ãœË[‚¸ˇ_^[…¬ UãÏSVWã˘ã⁄ÄøÃ   t0ãj jË‰¸ˇãÖˆtãMâããIâVâNãá  âFâ∑  _^ã√[]¬ UãÏãÅ  Ö¿tãM9t	ã@Ö¿uıÎâ]¬ ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃUãÏãE3“VãuWã8ãœVË∑ˇˇˇ˜F   uçF,ãœPË£ˇˇˇ_3¿^]¬ UãÏÉ‰¯ÉÏ4°∞	3ƒâD$0SãZ@ã¡âD$VWÖ€Ñ∫   ã03ˇãCˆ@@uãã”Ë´ßˇˇjã–ãŒËä™ ã¯Éd$ É; ~xçCâD$ã@j âD$çD$ j PˇbÉƒã∆âD$ÖˇtãT$çD$PãŒËB∑ ãD$ã ÄxS uGãT$ãL$ËÌsˇˇãT$ãŒãË≥  ãL$ãD$AÉ¿âL$âD$;|èÖˇt9æ  u	ãGâÜ  ãL$<_^[3ÃË›í ãÂ]√ÃÃÃÃÃÃÃÃÃUãÏÉÏãEã âE¸Éx$ tjXÈ‚   Sã]˜C   t3¿@ÈÃ   VãsWÖˆt:3¿âE¯9~.ã]¸ç~É¯ tˆuˇw¯3“ãÀË>˛ˇˇãE¯@É«âE¯;|€ã]ãE¸ã{ â}ÏÖˇtqÉe¯ É? ~hçw8âuÙˇvÿ3“ã»Ë˛ˇˇãÖ“tãMËÇqˇˇã^Ö€t*Ée É{ ~ ã}¸ãuã3“ãœˇ4Ë“˝ˇˇF;s|ÏãuÙã}ÏãE¯É∆H@âuÙ;âE¯ãE¸|°ã]ãMã”Ë
˛ˇˇ_3¿^[…¬ UãÏÉÏ °∞	3≈âE¸SVWãÒçE‡jj PäûÃ   ã˙ˇbÉƒâu‡«E‰†f«EË–g∆ÜÃ   Öˇt
ã◊çM‡Ë”pˇˇãM¸_àûÃ   3Õ^[Ëgë …√UãÏÉÏ$°∞	3≈âE¸SVã⁄ãÒâu‹Ö€tIWj3ˇçE‡WPˇbÉƒâu‡ã”«E‰†fçM‡Ëqˇˇ9;~çsˆFuˇ6ãM‹3“Ë÷¸ˇˇGÉ∆;;|Ê_ãM¸^3Õ[ËÛê …√Wã˘Ö“tVãrãœËµﬁ¸ˇã÷Öˆu^_√UãÏVWã}Öˇtç±  Î98tçpãÖ¿uÛ3¿_^]¬ Ö“tˆãHâã
âHˇBâÎÂÃÃÃÃÃÃÃÃUãÏãU˜B   t3¿@Î
ãMËß¸ˇˇ3¿]¬ ÃÃÃÃÃÃÃÃÃÃÃÃÃÃUãÏãMVãuäãV<MuøA ;Bu5ã6ãFx;Bu+QãŒÎ!<¶u"øA ;Bu˜A   uãB;A,uQãË9ˇˇˇ3¿^]¬ UãÏÉ‰¯QSVWã˙ãŸãM≤ËIÅ˛ˇãM≤ãË=Å˛ˇãM∫ÿ4	Ä? ˇqπ|¯WD QPVhÄ¯Ë ¸¸ˇÉƒãjˇVSË√˛ˇVË›¸ˇ_^[ãÂ]¬ UãÏQQVãuâU¸âM¯ÖˆtCW3ˇ9>~;Sç^ˆu)É{¯ t#É} tãUãK¯Ë¡˝ˇÖ¿uˇs¯ãM¯ãU¸ËÅ˛ˇˇGÉ√;>| [_^…¬ UãÏÉÏWã}âU¯âMÙÖˇtEV3ˆ9w~<ããâM¸Ö…u	ãE˜ÿ¿ÎÉ} tãUËa˝ˇãM¸ãU¯Ö¿u	QãMÙË ˛ˇˇF;w|ƒ^_…¬ UãÏQQÉe¸ Sã]V3ˆFÉ} Wã˘tã∆ÎãÀËäC  h  j WàÉ∞   ˇbãUÉƒâ∑à   ∆áÃ   âj^Ö“tçE¸ãœPËÛ- Îã∆ãM¸âOÄ{S u*ãÖ¿u$9áË   u9áÏ   u9á   uπT™ ËØa ã_ã∆∆É∞    ^[…¬ UãÏÉ‰¯ÉÏDSVãÒâT$ãMWât$LË˝ˇãMôâD$<ËÙ˝ˇãW¿ôãÿã˙3¿â|$Dãq âD$8âD$ãEât$0fD$@Ö¿ÑÇ   Phò¯VËï˘¸ˇãÉƒât$ÖˆujXÎ[ãŒËü˝ˇHôâD$$ãD$ Rˇt$(ã@ôRPËVß ãL$0√◊É¿É“ RPË∞›¸ˇã¯3¿âD$âD$Öˇug«D$8   ˇt$Ë–⁄¸ˇãD$8_^[ãÂ]¬ jYã«˜·jã»ã√Z˜‚ É¿É— QPãŒËa›¸ˇã¯Öˇtªç]   «âD$çù   «âD$ãD$@âD$$Sˇuâ\$0Wˇ bÉƒÈ≠  ãVãL$Ö“t8ãD$âD$ãD$âD$ãB;FGÚãRÖ“u‡ãD$âD$ãD$âD$ãD$ âL$ã–ã ÎçPã;∆u˜É} ãFâtfÉ} ãFâD$4u'∂ ˆÄêàFtãEãT$<âD$,çFâT$âD$È¶   âD$4ãT$$âL$,çNãâT$ãT$4âL$Ä<"ãT$uBâL$âT$ÎtçFˇ0âD$ˇvˇt$ˇ bãFÉƒãL$∆ Ëó˝ˇãF∫|¯ãN«D$4ÿ4	Ä<'çET$4Rˇt$h†¯ˇt$PËÙ¯¸ˇãD$$Éƒã»âD$,Ë±˝ˇã–âD$ãD$ãN+MâL$@ã âD$4;¬tAãD$(+D$4+¡PãD$8¡«Pç«PˇbãL$$ÉƒãT$ã¬+ãL$(»âL$(∆9 ãL$@Rˇt$0ç9Pˇ bãL$<Éƒã÷Ë,Ÿ¸ˇãD$ ã0ÖˆÖE˛ˇˇãL$Lã◊jˇjjˇË¶Ω˛ˇãL$0ã◊ËŸ¸ˇÈÆ˝ˇˇUãÏÉ‰¯ÉÏ<°∞	3ƒâD$8SVãŸ3ˆWj Vããª   âD$çD$,PˇbãL$Éƒâ\$$ãWËfU ãWã»ãD$…ã@ˇ4»ãL$Ëv6  ã–âSxäGàÉî   Ö“tãÀËÏb  ãÖˆuãWÖ“tçL$$ËÚâˇˇããÈ»  ÖˇÑ»  ãWÖ“tçD$$ãÀPËuÆ É{$ tãsÖˆÖô  9wÑê  ã◊ãÀËS„ âD$Ö¿Ñx  !t$90é£   ã–çH˜⁄âL$âT$ ÖˆÖü   ãC(âAçAˇC(ãQãÀâD$Ö“t*VËÆ ãT$ãÀË˛§ ãWãÀT$ ãD$VãTºË‚≠ Î%P3“Ë†8  ãL$âÖ¿u3ˆFÎˇ@ããÀË˘a  ããL$ãT$É¡HãD$BâT$âL$;åpˇˇˇÖˆuãL$ÄyS t	j^âD$(Î0âD$(Öˆu(ãWÖ“tçL$$ËƒàˇˇãÖˆuãWçL$$ËyâˇˇããD$ãO âL$Ö…tgÖˆucâA âL$,«D$<   ãçL$$ËJâˇˇãÖˆu>ãT$çL$$ãRË4âˇˇãÖˆu(ãD$çL$$ãPËWàˇˇãÖˆuãD$çL$$ãPËAàˇˇãÉd$< ãT$ãL$Éd$( ËRÅ  Îj^ã(ÖˆÑ0˛ˇˇãL$Dã∆_^[3ÃË¨à ãÂ]√UãÏQVãÚWã˘ãVÖ“tËÎgˇˇãvÖˆÑì   SãVãœËDiˇˇãVÖ“tãœË«gˇˇãVãœË[hˇˇã^ Ö€t/ããœËKhˇˇãSãœËAhˇˇãSÖ“tãœËïgˇˇãSÖ“tãœËágˇˇãFÖ¿t'3€9~!3…âM¸ãTãœËŸhˇˇãFCãM¸É¡HâM¸;|‰ãv(ÖˆÖoˇˇˇ[_^…√QVãÒWãNã>Ö…tËÄü˛ˇˇ∂Ë   WË!<  ÎãAã—ãœâÜÏ   Ë/7  ãéÏ   Ö…u‰ãñ   ãœË ‹ ãVÖ“tãœËn’¸ˇãñ  ãœËöˆˇˇãŒË+R _^Y√UãÏÉ‰¯ÅÏÑ  °∞	3ƒâÑ$Ä  ãESVãu3€âD$Cã ä”Wãât$ ãx â|$$â\$Ëïx˛ˇãNä”âD$(Ëáx˛ˇãNãÿ≤â\$4Ëwx˛ˇãNâD$Ëjo˛ˇãL$ ã≤ât$0ãIËWx˛ˇâD$8ãD$ ãHËFo˛ˇâD$@ãD$ ãH Ë6o˛ˇÉ|$( âD$<ãáh  âD$DÑé  ãD$Ö¿ÑÇ  É|$8 Ñw  Öˆào  Ä[ uãœËà ˝ˇãD$Sã–ãœË<2  ãÿÖ€Ñ=  øK";Òç1  ÆËãCãŒ¡·jj âL$4ãâD$çD$PPˇbøC ÉƒÉ ˇãŒ;ˇt$<D ãT$8ˇt$,âL$Xçå$Ä   Éßh   WË1˜ˇˇjãçD$`j PˇbçÑ$Ñ   «D$l@jâD$hÉƒ«D$djçD$HâD$tâ\$TÖˆÖG  ã¥$`  ÖˆÑ  äF+<uHã^,çL$xj ã”ÅcˇˇﬂˇÉ§$à    Ëß© ÄS ã¥$Ñ   jXEÖˆÖ˘  ã”çL$\ËGfˇˇÈ∆  Ñ¿Öæ  ãÖ“u3…ât$TAÈ  ãL$ËØ˛¸ˇã»ât$TâL$Ö…ÖÏ   øN"9L$0}!ãL$,çT$HÆËãFˇ4çL$|ËKÙˇˇã¥$`  É|$P }çF PçT$LçL$|Ë,Ùˇˇã¥$`  ãVçL$\ËÊdˇˇã¥$`  ã^Ö€tãS(çL$\ËÃdˇˇã[Ö€uÌã¥$`  ãú$d  Ö€tãS(çL$\Ëßdˇˇã[Ö€uÌã¥$`  Éd$, 3¿f;F"}8ã|$,3€ãVãŒ”ËÉ6  Ö¿tã–çL$\ËÕcˇˇã¥$`  øF"GÉ√;¯|“ã|$$ãL$ãv0ÖˆÑö  ã|$3¿âD$9F~yç^$Ö…uãL$09uSçT$LçL$|ËLÛˇˇãD$ãNÖ…t@ãT$Ëf˝¸ˇÖ¿u/9Cuã«˜ÿ¿ÎÖˇtãKã◊ËG˝¸ˇÖ¿uˇsçT$LçL$|ËÛˇˇãD$ãL$@É√âD$;F|äãvãL$ÖˆÖmˇˇˇã|$$È˙   ãî$d  Ö“t,ãR(çL$\ËécˇˇãÑ$d  ãP$Ö“Ñ—   çL$\Ë’bˇˇÈ√   çL$xËG¯ˇˇãÖˆÖ”   ãî$h  ãrÖˆtuã|$É~ tYˇt$43“çL$|ˇvË€0  ;√uCãF Ö¿tWˇpçT$Pçå$Ä   ËxÛˇˇWˇvçT$Pçå$Ä   ËøÛˇˇWˇvçT$Pçå$Ä   ËPÛˇˇãv(Öˆuöãî$h  ã|$$9ú$   uˇt$çL$|ˇrçT$PË|Ûˇˇãî$h  çL$\Ë˙ˇˇˇt$@ã\$ çT$Lˇt$<ãÀˇt$0ËYÙˇˇãÖˆt1Îã\$É|$| tçD$x∫ÿ4	PãD$$ãÀˇpˇpËcÚˇˇÎVSË"∏˛ˇçL$xËi˙ˇˇãT$HãœË]ÒˇˇãD$Dâáh  Ä[ uãœË_∆˝ˇãå$å  _^[3ÃË&Ç ãÂ]¬ UãÏãEÄ8¶u#˜@   uãMVçp,ãQãB;uã	VËÒˇˇ^3¿]¬ ÃÃÃÃÃÃÃÃÃÃÃÃUãÏãMSVWã}ãQ˜G   ãw t3¿@Î:ÖˆujXÎ13€9~"ç~ãG;Buˇ7ã	Ë«ˇˇãMCÉ«H;|‰ã}ã◊ËªÌˇˇ3¿_^[]¬ ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃUãÏÉ‰¯ÅÏî  °∞	3ƒâÑ$ê  ãE≤Sã]âD$ã VãWãp â\$(ât$Ëår˛ˇãK≤ã¯ËÄr˛ˇãK≤âD$$Ërr˛ˇãL$(ãÿ≤â\$ãIË^r˛ˇâD$,ãD$(ãHËMi˛ˇÉ|$$ âD$ÑT  Ö€ÑL  É|$, ÑA  ãÜh  É¶h   Ä~[ âD$4uãŒË§ƒ˝ˇjçD$<j PˇbÉƒã”ãŒWËJ,  jâD$HçD$Pj PˇbÉƒ«D$PÄxçÑ$à   «D$T¿xâD$Lçå$à   çD$8ã◊ˇt$âD$hˇt$(VË_Òˇˇã¯ÖˇÖ9  ãF ãú$p  %   âD$Ö€ÑS  äK+Ä˘uiÖ¿Ö)  ãs,j PçD$pPˇbÉƒçÑ$à   âD$hçå$à   ÅfˇˇﬂˇçD$hãS,PËﬁ£ 9º$¨   t	ãº$î   ÎãS,çL$LËÑ`ˇˇãt$È•   Ö¿tãF % @  É» tQÄ˘tLãC0âD$Ö¿tAãt$ãHâL$0Ö…t#ã÷Ë‘¯¸ˇÖ¿uˇt$0çT$<çå$å   ËéÓˇˇãD$ã@âD$Ö¿u«ãt$ãÖ“Ñ\  ãL$Ëñ¯¸ˇÖ¿ÖK  â\$D9D$uãSçL$LË_ˇˇˇ3çT$<çå$å   Ë8ÓˇˇÖˇÑ  ã\$ Éº$å    Ñ-  çÑ$à   ∫ÿ4	PãD$,ãÀˇpˇpËŒÓˇˇÈ  ãå$t  Ö…t=ˇ1çT$<çå$å   ËﬁÌˇˇÉ|$ Öæ   ãÑ$t  ãP$Ö“Ñ¨   çL$LËÁ]ˇˇÈû   ãú$x  ã{Öˇt0ãT$ãœË»˜¸ˇÖ¿uãD$Dã@<;CuWçT$<çå$å   ËyÌˇˇãD$Ö¿u\çå$à   ËÛˇˇã¯ÖˇÖ+ˇˇˇã”çL$LË~ıˇˇã{Öˇt4ãt$ã_Ö€tã÷ãÀËc˜¸ˇÖ¿uSçT$<çå$å   Ë Ìˇˇã(Öˇu‘ãt$ã\$ çT$8jˇt$0ãÀˇt$,ËíÔˇˇã¯ÖˇtÈ≈˛ˇˇWSËÄ≥˛ˇçå$à   ËƒıˇˇãT$8ãŒË∏ÏˇˇÄ~[ uãŒËƒ¡˝ˇãD$4âÜh  ãå$ú  _^[3ÃËÅ} ãÂ]¬ ÃÃÃÃÃÃÃÃÃÃÃUãÏãEÄ8tuˆ@@tãMPãQã	Ë{Ïˇˇ3¿]¬ ÃÃÃÃÃÃÃÃÃÃÃUãÏÉ‰¯ÅÏ\  °∞	3ƒâÑ$X  ãE≤SVãuâD$ã Wããx â|$Ë`n˛ˇãN≤ãÿËTn˛ˇãèh  Éßh   Ä[ âD$âL$uãœË»¿˝ˇãD$Ö€Ñ¶  Ö¿Ñû  j PWã”çL$\ËÃÌˇˇãÖˆÖq  jPçD$DPˇbjçD$0VPˇbãî$P  çD$hâD$8Éƒ«D$$0}çD$<«D$(jâD$8Ö“Ñ§   Äz+u@ãZ,çL$PVã”Åcˇˇﬂˇ!t$`ËB† ÄS ãt$\jXEÖˆÖÿ   ã”çL$ ËÂ\ˇˇÈ≠   ãRçL$ Ë\ˇˇã¥$8  3¿Éd$ f;F"çâ   ã|$3€ãVãŒ”Ë‚-  Ö¿tã–çL$ Ë,[ˇˇã¥$8  øF"GÉ√;¯|“ã|$ÎOãî$<  Ö“t%ãR(çL$ Ëö[ˇˇãÑ$<  ãP$Ö“t*çL$ ËÂZˇˇÎçL$PËZˇˇãÖˆu+ãî$@  çL$ Ë√Úˇˇã\$çT$<j j ˇt$ãÀËÌˇˇãÎã\$ãT$<ãœËPÍˇˇÖˆtÎã\$VSË∞˛ˇçL$PË7ÛˇˇÄ[ ãD$âáh  uãœË8ø˝ˇãå$d  _^[3ÃËˇz ãÂ]¬ ÃÃÃÃÃÃÃÃÃUãÏÉ‰¯ÅÏ\  °∞	3ƒâÑ$X  ãE≤Sã]âD$ã VãWãx â\$(Ël˛ˇãK≤âD$Ël˛ˇãKãât$ËÛb˛ˇãK≤âD$ãG %   âD$ Ë⁄k˛ˇãKâD$$ËÕb˛ˇãèh  Éßh   âL$,ãL$Ö…Ñ   ÖˆÑ  ãw Ö¿tãG$Åg ˇˇˇüâG$ˇt$ã—çL$Tˇt$ WË>ÎˇˇÅÊ   `ãÿ	w Ö€Ö≤   ãL$ Ö…uVãÑ$8  Ö¿tKÄx+uEj QçD$8Pˇbãî$D  çD$\ÉƒâD$0çD$0çL$PãR,PËœù 9\$tÑÄ   ã\$\ãt$ÎNÉº$@   tlÖ…uçL$PËyÓˇˇãÿÖ€u7ãT$ãœËT.  ããœãÑ$@  ãPËD ;∆u7ãt$j jãËÉe˛ˇÖ€t$Îãt$ãT$$Ö“tçD$PãŒPãD$,ˇpˇpË9ÈˇˇçL$PËHÒˇˇãD$,ãå$d  âáh  _^[3ÃËy ãÂ]¬ ÃÃÃÃÃÃÃUãÏÉ‰¯ÅÏ4  °∞	3ƒâÑ$0  ãESVãuâD$ã WããX â\$Ë1a˛ˇãNã¯3¿çPË#j˛ˇãNâD$Ëa˛ˇãKã◊âD$“ãÉh  âD$$3¿@ã—3…É£h   ;¯î¡Qˇt$çL$0SËúÈˇˇãÿÖ€Ö‘   ã¥$  ÖˆÑπ   ∑F"3…Af;¡Ñ©   ãL$ò;»çú   ÆËãF3“¡·âL$ ˇ4çL$,Ë_ÁˇˇçxøF"H9D$}ãL$ ÆËãFˇtçL$,Ë:ÁˇˇãpÎãv,ãœt$ãÎ
ã˘Ä˙,t	HâäÑ“uããL$+¡ã|$VQPh®¯WËê„¸ˇãL$0Éƒã3¿@ã÷jˇPjˇË+™˛ˇVË≈¸ˇÎπŸ≠ ËK ãÿã|$çL$(Ë´ÔˇˇãD$$âáh  Ö€t
Sˇt$ ËC≠˛ˇãå$<  _^[3ÃËrw ãÂ]¬ UãÏÉÏ8SVWã˘âUÿâ}‹ãâUÏÄzS Ö{  ãEÿ3“É¿PË
&  ãÿâ]ËÖ€Ñ`  ã”ãœËøÿˇˇÖ¿ÖO  @ã”PãœËg‡ˇˇÖ¿Ö<  ãUãMÏËß+  ãâu‡ÖˆÑ$  ã÷ãÀËfK âE‰Ö¿yVh,ÊWËÈÓ¸ˇÉƒÈˆ  ã»ãC¡·âMÙ∑D®	t$®πê‚V∏∞¯D¡Phº¯WË±Ó¸ˇÉƒÈæ  3¿@f9C"Vhÿ¯Î©ãS<ãMÏËA ãIã–“âE3€É¯j î√ã4—ã÷hÿ4	SãœË?ÿˇˇSã÷ãœË|ÿˇˇãEËˇ0ˇu‰ˇuVh˘WË!  ãUÉƒãœjËÑÿˇˇ3¿ã÷@ãœPhÑ˘SË¸◊ˇˇÉ$ Ö,  ã]ËãMÙãCˆD Ö  3…!M¯âMÙãœËrf ããG(jeSˇuçHâE¸âO(ã–ãœËK   j j ˇu¸ãŒj&ZË6m˛ˇâEÃãG,@âG,ˆCÄâEuj Pˇu¸∫Ö   ãŒËm˛ˇøC"G,ãM¯ÎaãÀË6,  Ée¯ ã–ãEÉe‘ âUÙ∑J4¡âG,∑J2ã—f9M¯s/ã]Ùã}‘ãEãŒ@«PWˇu¸j\ZËæl˛ˇ∑K2G;˘|‚ã}‹ã—ã]ËãG,∑ âM¯Ée‘ @âG,âE–3¿f;C"ç™   ã}‘3“âUË;}‰ÑÉ   ãCˆD uyãEÙÖ¿t4ã◊ã»Ë≤+  ãMÙø–âU‘∑A2;–|RãU‰ÆËËñ+  ãU‘3…ò;–ü¡+—Îã—ãMøC A ;¯uj Qj jIZãŒËl˛ˇÎQWˇu¸ã”ãŒËj™ˇˇãM¯AâM¯ÎãM¯ãUËøC"GÉ¬âUË;¯åaˇˇˇã}‹ã]CÖ…uˇG,QSQjIZãŒËÀk˛ˇ3¿çHã}–WQSj_ZãŒË∂k˛ˇãEÙãŒÖ¿t∑@2∫à   PSWˇu¸Ëçn˛ˇÎˇuWˇu¸j~ZËàk˛ˇjZãŒË÷p˛ˇã}Ãj çGPˇu¸jZËjk˛ˇã◊ãŒËss˛ˇãVtâPãu‡ãMÏã÷Ëß¡¸ˇãUÿãMÏËLl  _^[…¬ UãÏÉÏ(SãŸVãÚWãâuÙâEË0d âEÏÖ¿Ñﬁ   ãMã˛¡Áy3ˆãıhÜâE¯É˛É≈   ˇ7ã–∆D5¸ Ë  Ö¿u-É˛}xˇ4ılÜˇu¯ˇ7hD˙SË  ãC\ÉƒâDµ‹∆D5¸ÎPˇu¯ã@ãÀãUÙjPâEËâDµ‹Ë¬  É} tˇuˇuˇu¯ˇ7h\˙SË◊  ÉƒÎãMÏ∫è   j ˇuÙˇuËËhj˛ˇãMFÉ˛åQˇˇˇãMÏjˇuÙˇu‹ˇujeZË9m˛ˇ∂U¸ãMÏËëo˛ˇ_^[…¬ Ëfy ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃUãÏãMÖ…t	ã—ã	Ëc¿¸ˇ]¬ ÃÃÃÃÃÃÃÃÃUãÏÉ‰¯ÉÏSã]VWã}ããã@ âD$Ë∂Z˛ˇãKâD$çpÉÊ˛ât$Ë†Z˛ˇãL$âD$çı$   ôRPËP¬¸ˇãÖˆuWËU®˛ˇÎTãD$âãKËmZ˛ˇÉf âFãKË^Z˛ˇãL$ã÷âFãD$âFãD$âFçF$h àâF çàj j$ãœ∆F âFË>§˛ˇ_^[ãÂ]¬ ÃÃÃÃÃÃUãÏVãuWˇ6Ëq°˛ˇãNã¯ËˇY˛ˇ3…ã–9Ou9O~9ãG«à   A;O|Î'Ö“~ãGˇàA; |ıÎãG ˇêãG«ê   B;W|ÍãWBÉ âWt(äO∂¡@ØG;–vãG ˛¡àO3…;¿˜ÿPˇuËÎ§˛ˇ_^]¬ ÃÃÃÃÃUãÏÉ‰¯ÉÏ°∞	3ƒâD$ãESã]VWˇ0Ëº†˛ˇã3“âT$âT$âT$ãNAâT$k¡dfâT$ âD$8VtãFÎãFRPçD$hî˙PËäﬁ¸ˇ3ˇÉƒ9~~:ãF ãNj ã∏3¿B R¿É¡ˇÉ–ˇPQË`ã RPçD$hú˙PËOﬁ¸ˇÉƒG;~|∆çT$ãÀË4⁄¸ˇãL$$_^[3ÃË]p ãÂ]¬ UãÏÉÏlSVWã˘âU¯â}ÏãâE‡3¿@àEˇãEâE‘@âEº@ãâE∞ãG,âuÃFâu§FâuËFâu†Fâu¥Fâu®Fâu¨F;∆âuÿN∆âG,Ëá` ãÿâ]¿Ö€ÑE  ãE¯Ö¿Ñ:  Äx+ Ö0  ãπ∞˙j\h<xËLî  Ö¿Ñ  ãU¯ãM‡ãR<Ë8: ãIã–“âE–ãE¯ˇ4—ãœj ˇ0jZË˚  Ö¿Ö·  ãE¯ãœãU–ˇ0j ˇpË  ãEã–@âUòâEÙjdˇu¯çHãG(ˇu–;¡N¡ãœâG(Ëœ√  ãE¯ãÀãU¥ˇ0Ëg˛ˇãU¯ãEãzÈ‹  Ö¿t;«ÖÕ  ∂Eˇ3…9O$E»ˆBÄàMˇtãG8$<u	∑G2âEƒÎˆG8ã◊∑G4âEƒt∑G2ˇ2ãU®HãÀâE‰ËØf˛ˇãUÏãM‰ˇu–ŒãB,;¡N¡ãÀâB,ˇw,ˇuÙjdZË2f˛ˇãMÏã◊Ë n˛ˇj ˇu∞ãÀˇuƒjFZËf˛ˇ∑G2ãÀj ˇu§PjFZËf˛ˇj j ˇuÙãÀj&ZËÒe˛ˇâEúãÀ3¿@PˇuËˇuÙj`ZË⁄e˛ˇãE‡ãÀj ˇu†ˇ∞Ï  jFZË¬e˛ˇãMÏ3“j h§îjˇuºˇu∞ËÏf˛ˇj ˇuÃãÀj jFZËòe˛ˇãCtãM‰âE‹Ö…éo  ãEÏÆËj ˇH8ã@8âE»ã¡ãM‡¡‡PËgæ¸ˇâEƒÖ¿ÑÇ  3¿ãÀPPPjZÆËËKe˛ˇãCt3…AâE‹9M‰uf9O2uÄ6 tj ˇu»ãÀVj3ZË!e˛ˇ3¿âEãW ãMÏãÇËßs  ãMã¯j ˇuÃQjFZãÀË˘d˛ˇˇuËãÀˇuˇuÙj\ZËÊd˛ˇãEãÀ∆Pj ˇuËj4ZË—d˛ˇããÀj˛Wã÷Ël˛ˇãE∫Ä   ãMƒâ4ÅãÀËj˛ˇãEãM‰@ãuÿã}∏âE;¡åzˇˇˇ3ˆVˇuÃQjFZãÀËÖd˛ˇVˇu»ãÀVjZËvd˛ˇãU‹ãÀçRˇË{l˛ˇãKtã˛ãuÿâHÆËãEƒãÀã∏Ë`l˛ˇãKtâHç7PWˇuÙãÀj\ZË6d˛ˇG;}‰|’ãU»ãÀË∞g˛ˇãUƒãM‡ÆËËq∫¸ˇã}Ë3ˆãMÏ3¿VhH»jWˇuºçPË=e˛ˇãE‡ãÀV9∞Ï  ÑÅ   VWj2ZËﬁc˛ˇj j WjZãÀãËÕc˛ˇãM¿ãÿ3¿@Pˇuÿj ˇuÙjZË®f˛ˇã÷ã¯ãu¿ãŒË∏k˛ˇãNtj ˇu‹âHãŒˇuÙjZËéc˛ˇã”ãﬁãÀËïk˛ˇãKtã◊âHãÀËÜk˛ˇãKt3ˆã}ËâHÎˇu‹ˇuÙjZËYc˛ˇãMÏ3¿Vhì@3“Pˇu¨ˇuºËÇd˛ˇWjˇu¥ãÀj_ZË/c˛ˇVhº˙ã–ãÀËuj˛ˇVˇu‘ãuãÀVj}ZËc˛ˇˇu‘ãÀWVj~ZËˇb˛ˇjZãÀËMh˛ˇãUúËˇj˛ˇãKtãuÿã}∏âHäEˇàEˇãEãU¯ãâ}∏ÖˇÖ¸ˇˇÖ¿Öò   8EˇÑè   ãu¨3ˇWVˇuòãÀj`ZË¢b˛ˇWWVjZãÀËïb˛ˇWˇu®ãÀãWjIZËÑb˛ˇã}ËãÀWjˇu¥j_ZËqb˛ˇj hº˙ã–ãÀË∂i˛ˇj ˇu‘ãÀˇuj}ZËOb˛ˇˇu‘ãÀWˇuj~ZË>b˛ˇjZãÀËåg˛ˇã÷Ë?j˛ˇãKtâH_^[…¬ UãÏÉÏSVWã˘ã⁄ãÛâ]ˆ3“Sãã@ãtË g  ãO(ã”j j âM¸çAQãœâG(Ë•ˆˇˇãG,ãv@ãO(âE¯âMÙÖˆt!ã]¸ãVQPSj ãœËÁ˘ˇˇã6ãE¯ãMÙÖˆuÂã]ãœË≥Z Ö¿tj j S∫î   ã»Ëêa˛ˇ_^[…√UãÏQQSVãÒã⁄Wâu¸ãS<ãË|4 P3“âE¯ãŒË4g  ã~(π¿˙ãU¯çGâF(∏ƒ˙ãuÖˆE¡ãM¸Pã∆D√ˇ0WË˙ıˇˇãM¸ã”ˇq(ãA,@PWVËN˘ˇˇãM¸Ë(Z Ö¿tj j ˇu¯∫î   ã»Ëa˛ˇ_^[…¬ UãÏQQSVWã˘ãÚâu¸ãË2 Ö¿Ö¯   Öˆu$9séÀ   É˛t	ã÷ãœË£˛ˇˇF;s|Ï3ˆÈ∞   ãE3ˆ9pu"ãU¸ãÀË9  Ö¿xã–ãœÆËËr˛ˇˇÈá   ãEãU¸çM¯QPãœË<  ã»Ö…xoãE9ptÆËãC…ã»âE¸Îâu¸ãU¯ãÀËx  âE¯Ö¿tCˇu¸ã–ãÀË«  ãœÆËÖ¿tãPPÎˇu¸3“ˇu¯ËE  Ö¿tÆËVã–ãœËÖ˛ˇˇãU¯ãÀË_∂¸ˇÄ{\ uãœËY Ö¿tVVV∫§   ã»ËÊ_˛ˇ_^[…¬ UãÏSVãÒã⁄W3ˇÄ> t;;˚}73¿ÎÉ˘9wk¿
É¡–¡FæÉ˘0}Íj PË√Û¸ˇãMfâyä< uFäGÑ¿u≈ã}Ég8ªÄ> tzj[Vh»˙Ëºè  Ö¿uÉO8Î=Vh‘˙Ëßè  Ö¿uçNË;Ï¸ˇ;√j L√PËfÛ¸ˇfâG0ÎVh‡˙Ë}è  Ö¿uÉO8@äÑ¿tä»ä¡Ä˘ tFää»Ñ¿uÎFä< t˘Ñ¿uâ_^[]¬ ÃÃÃÃÃÃÃÃÃUãÏÉ‰¯ÉÏLSVãuWÖˆtQãÖ“tKÉ~ tEãMˇqã	Ë  ã¯Öˇt2ã^Ö€u6ãNfãG(3“fâD$@BçD$PçG&PQË«˛ˇˇfãD$@fâG(ÉO_^3¿[ãÂ]¬ ãÖ…tã”Ë\‡¸ˇÖ¿u	ãœËÆ  ÎãEã”ˇpãËÔ  ãNãÿÖ€tõ∑S2Éc8˚BSˇsQËj˛ˇˇÅK8Ä   É{$ u£ãCfã fâG&ÎìUãÏÉÏ°∞	3≈âE¸SVWã˘ãÚ3€ˆãGãTâUãJÎ	ãAÉ`Ôã	Ö…uÛãJ ÎãAÅ`8ˇˇˇã	Ö…uãG∫˙â}ÙãœãPâE¯Ëˇ  Ö¿t=8X+u8ˇu¯hÏ˙WËÛ—¸ˇãÉƒÖˆuj[ÎSçEÙPh ìVWËÓ  ã÷ãœãÿË„≥¸ˇãuãv ÎãNˆA8ÄuËÅX  ã6ÖˆuÏÉ˚uWËVπ¸ˇãM¸ã√_^3Õ[Ë◊e …√UãÏãIVãÚãUã∆¿ã¡Ëﬂ¸ˇÖ¿tÖˆuãUπ|ÊË ﬂ¸ˇÖ¿t3¿Î3¿@^]¬ ÃÃÃÃÃÃÃÃUãÏÉ‰¯ÉÏ$°∞	3ƒâD$ ãE3…SVâD$≤ã Wã}âL$ãX âL$âL$âL$(ãË®V˛ˇãO≤ãËúV˛ˇ∫ÿ4	Öˆã EŒÖ¿âL$$E–ˆÉ¥   âT$tWh8E	Ëw®¸ˇâD$Ö¿Ñ  ∂ª∞   ¡Á{çwãÖ…t	Ë+∆˝ˇãD$3…∫˚h   QVââOã»SËıø˝ˇãÈô  ããî   ã{çA;¯|Qh˚SËj–¸ˇãt$ÉƒâD$(Èc  3ˆÖˇ~Rã÷ãÀËπ˛ˇˇÖ¿u<ãT$F;˜|ÈãSçÉ»  ãÀj ;–u-j0ËÂ¥¸ˇãÖˆÑU  j ˇsVˇ bÉƒÎ!ˇt$hD˚ÎèçG¡‡PËlµ¸ˇãÖˆÑ#  ã{j¡Á˛âsj WˇbãC<ÉƒããT$$âD$çD$PãIçD$PçD$(PçD$PË‹* Ö¿ÑÇ   É¯uSËH∑¸ˇãt$ã|$jˇVWË'ó˛ˇÖˆÑµ  É=@∞	 t?ˇ5ò‡	Ë˚©¸ˇãŒËs∞¸ˇ)†ﬁ	ˇƒﬁ	Vã5d∞	ãŒˇ0cˇ÷ˇ5ò‡	Ë,™¸ˇÈm  Vã5d∞	ãŒˇ0cˇ÷ÈW  ãD$ãT$   ãL$ Pj çGPSËgæ˝ˇãT$ãÀˇCãËèµ¸ˇâ∆C[ jXÉ˛u3ˆhd˚SFË”Œ¸ˇYYâD$(Èƒ   ÖˆÖø   ãWãÀËkl  âGÖ¿ujXãÎ"ÄxL tä@M:CPthà˚SËèŒ¸ˇY3ˆâD$,YFãOË¶˝ˇãG∂SUãHã	Ë}˝ˇãKÉ ˇãIË1∆˝ˇâD$ãGâD$Ö¿t3ã»ËÈ•˝ˇÉ|$ ãT$|ãBπÛˇ  f!HãJãD$¡‡f	Aã Ë?¶˝ˇãS ãOÉ‚8É Ë»ƒ˝ˇãOË&¶˝ˇjX∆GÖˆu97DãD$Ö¿tã»Ë¡< É¿¸PËÄØ¸ˇÖˆuCÄ{[ uãÀË˛•˝ˇÉcÔˆÉ¥   ∆É∞    uçT$(ãÀË‰* ãÄ{[ uãÀË	¶˝ˇÖˆÑœ   ˆÉ¥   Öç   ãCHã¯âD$ ãCˇãL¯Ö…tËÎ¬˝ˇãCÉd¯ ãCÉd¯ ãÀË»  ãD$ jâCX;t(Å˛
  t ãD$(Ö¿uDˇt$$hÃ˚SË(Õ¸ˇÉƒâD$(Î(SËÕ¥¸ˇãT$(Ö“tãÀË$Ø¸ˇhtÂSËˇÃ¸ˇYYÎ÷ãD$(Ö¿tã|$jˇPWËäî˛ˇãT$(Ö“tãÀËÒÆ¸ˇÎã|$ÖˆtVWË ñ˛ˇãL$,_^[3ÃË¸` ãÂ]¬ ÃÃÃÃÃÃUãÏÉ‰¯ÅÏî   °∞	3ƒâÑ$ê   ãE≤Sã]VãWâ\$ËR˛ˇã3ˇÖ¿∫ÿ4	E–3ˆãI âL$âT$;q}9ãYÉ{ ã˚tRã÷Ë∏˙ˇˇÖ¿uãL$ãT$FÉ√;q|€ãL$ãT$ã\$;q|∏Ë˚Î`É˛}∏ ¸ÎTãGÖ¿tÄx uB3ˆ9pu;ãAã@ãH0ÎãQãB;GuãBâBã	Ö…uÈãOËQ¡˝ˇãL$âwâwË  Î&∏¸RPçD$ PhÄ   ËˇÃ¸ˇÉƒçD$jˇPSË?ì˛ˇãå$ú   _^[3ÃËŒ_ ãÂ]¬ UãÏÉÏ@°∞	3≈âE¯ã¡âU»ãMSã]Éx$ âM¿ãMVãuâM–ãWã}âE‘âMƒÖ(  j çEÿj PˇbãE‘ÉƒâEÿÖ€tÄ;;tã”çMÿËª^ˇˇÖ¿Ö˙   Î∆tÖˇtÄ?;tã◊çMÿËõ^ˇˇÖ¿Ö÷   Î∆tÖˆtÄ>;tã÷çMÿË{^ˇˇÖ¿Ö∂   Î∆tãE–Ö¿t$Ä8tuã@Î3¿ãU»ãM‘j j PËW  Ö¿ÖÜ   ãM‘ËjO ãM‘jZâE–Ë¿ˇˇãM‘ã”PâEÃËl®ˇˇãMÃã◊AQãM‘Ë]®ˇˇãEÃã÷ãM‘É¿PËL®ˇˇÉ}– t<ãE¿ãMÃj PæçA+ RÉ¡3“PQãM‘Ë<W˛ˇãM–3¿É}»∫§   j j î¿PËﬁU˛ˇÖ€tã”ã]ƒãÀËoˇˇÎã]ƒÖˇt	ã◊ãÀË˚nˇˇÖˆt	ã÷ãÀËÓnˇˇãM¯_^3Õ[Ë%^ …¬ ÃUãÏãEãMãPÄz$ uÅI   @Ä9õVuã2ãÄ∏±    t
∆x3¿^]¬ ˇr,hT¸VËÏ’¸ˇÉƒjXÎÂÃÃÃÃUãÏÉÏSVãuWãvããV(ã ã»âEÙËu  âEÏãEã@ âEÖ¿ÑΩ   3ˇçXâ}¸98éÇ   çP8âU¯Ä~$ uAãCâEËÖ¿t+ãMÙã–Ë1  9EÏÖç   ãSãMÙË.´¸ˇÅK(   ãU¯â{ãF ÉK(@âãEã
;œâMËãM¸tãUËçNËÅ<ˇˇÖ¿ugãEãM¸ãU¯AÉ¬HÉ√HâM¸âU¯;|Ñã]ãC@Ö¿t!98~ã˜ãTãMË∂=ˇˇÖ¿u-ãC@GÉ∆;8|Â3¿_^[…¬ ãEËPˇv0ˇv,hl¸ˇ6Ë–‘¸ˇÉƒjXÎ€UãÏVãuWã:ˆÉ}âãGãâA(ãG_ãDâA ãEâA,ãEâA0î¿Éa àA$3¿âQ«AÄú«A–ú«A–⁄fâAâI^]¬ UãÏÉÏP°∞	3≈âE¸VãÚ3¿Wã˘ÖˆtjLPçE∞PˇbÉƒâu–çOçU∞Ë‰<ˇˇãM¸_3Õ^Ë\ …√UãÏQSVWãÚã˘â}¸ÖˆÑú   ç_ãVãÀË≥<ˇˇÖ¿Öé   ãVÖ“tãÀË.;ˇˇÖ¿u|ãVãÀËæ;ˇˇÖ¿unãVãœËcˇˇˇÖ¿u`ã~ ÎBããÀËû;ˇˇÖ¿uNãWÖ“tãÀËÓ:ˇˇÖ¿u<ãWãÀË~;ˇˇÖ¿u.ãWÖ“tãÀËŒ:ˇˇÖ¿uãÖˇu∫ãv(ã}¸ÖˆÖgˇˇˇ3¿_^[…√3¿@ÎˆUãÏVãuãŒË‰¸ˇÖ¿uπ≈∏ Ë±. Î2ˇvËz°¸ˇãMãEâéh  âÜl  Ö…t
3“ãŒBË6á˛ˇˇvË≤°¸ˇ3¿^]¬ UãÏÉÏSVãuWã˘âU¸ˆãÄª±    ãCãâE¯t3¿Èë   ˇ∑Ù   ã≥h  ãŒPˇuRjˇ≥l  ˇ0cˇ÷ãÉ˛uHˇuˇu¸h¥¸ËÛ∆¸ˇÉƒÉ{É} tPˇu¯hº¸Ë÷∆¸ˇÉƒPhƒ¸WËw“¸ˇÉƒ«G   ÎÉ˛tÖˆthú¸WËW“¸ˇYY«G   ã∆_^[…¬ UãÏQSVãŸ3ˆWã˙ãUãË•$ ã–âU¸Ö“xvÄ?MuãsxÎ*ãMã∆9~!çQ4ãO;
ãMt
@É¬H;|ÓÎk¿HãtãU¸øO Öˆt:ÆËÖ…xÆËÎ∑F fÖ¿xø»ãF…ã»Î∏»ÎRããÀPË¨˛ˇˇÉ¯u∆x_^[…¬ UãÏSVãÒWãã∏h  ÖˇtnÄ∏±    ueÄæÃ    u\ˇ∂Ù   ãœˇuˇuˇuRˇ∞l  ˇ0cˇ◊3€ã¯C;˚uh‡¸VËN—¸ˇ«F   ÎÖˇtÉˇthú¸Vã˚Ë/—¸ˇâ^YYã«Î3¿_^[]¬ UãÏQQSVãÒâU¸WãFtÖ¿E3€âu¯ãÀãVhç~lÖ“~ãã]¸9j [uãu9pãu¯tMAÉ¿; |„ã¡‚ã¬ôÉ¿”RãPË€™¸ˇã–âÖ“t:ãFhã»¡· @âFhãE¸âãEâAäEàAãEâAÎÄx uÄ} t≥àXÎ
ˇ6â^hË÷´¸ˇ_^[…¬ UãÏVÉ˙tããÚˆã@ãDÄx	 t^]È/ˇˇˇ^]¬ UãÏÉÏSãŸVW3ˇãCâE¸9{h~@ã«â}¯ãKl∫ß   »∂AãqPˇqˇ1ãM¸ËxO˛ˇãM¸ã–jˇVË¿V˛ˇãE¯GÉ¿âE¯;{h|≈_^[…√UãÏÉÏSVWã˘â}ËÄ ã7âu¸Öä  3…8NSÖs  9O$Öj  ã_Ö€u8é±   ÖN  ãœËH ãÿÖ€ÑK  3…Äøï    Ñî   ãáÑ   âEÙ9H`ÑÇ   QQˇp\ãÀj&ZË“N˛ˇâEÏ3…ãEÙãPdâU9H`~+ãã˘çQWˇv\ãÀj\ZË©N˛ˇãUG;~`|Âãu¸â}¯ã}ËãM¯j QRjRZãÀËÜN˛ˇãEÏãÀj @PãEÙˇp\jZËoN˛ˇãUÏãÀËwV˛ˇãKtâH3¿ãÀPPPjEZËPN˛ˇÄ~S Öh  ÉT u
ÉD ÑX  3“ãÀË?V˛ˇãKt3“âUÙâH9V~c!U¯3¿ã @”‡âEËÖGTtDãÀËõX˛ˇãFãM¯ãDãÀˇpˇ0ãGP#EË˜ÿ¿˜ÿPRjZË—P˛ˇÄæ±    u
3“ãÀBË"S˛ˇãUÙÉE¯BâUÙ;V|†3¿âEÏ9á–   ~Aãó   ãŒãÇË%Â ã∫®   3¿ãÀPPPËäM˛ˇjÙVã–ãÀË”T˛ˇãEÏãu¸@âEÏ;á–   |øÉß–    ãœË™˝ˇˇãœËÃØ  ãGDâEËÖ¿t83…∆G âMÏ9~+çpãVÖ“~ÆËRããœËUüˇˇãEËãMÏAÉ∆âMÏ;|€ãu¸Äøï    tãáÑ   Éx` tj ˇp`ãÀˇp\jsZËÓL˛ˇj jj jZãÀËﬁL˛ˇÖ€t#É$ uÄ~S uã◊ãÀË]˛ˇ«Ge   Î9Ou«G   _^[…√UãÏÉ‰¯ÉÏd°∞	3ƒâD$`Éd$ SVãuWÉ~$ ã>ãGâD$Öõ   ãUçEPãœË/¿¸ˇãÿÖ€u8GSu«F   ˇF$Îv˛FçÜ¿   jLPçD$ Pˇ bjLçÜ¿   j PˇbÉOçD$,Éƒã”ãŒPËÙ ãD$âGãT$Ö“tãœËZ¢¸ˇã”ãœËQ¢¸ˇjLçD$PçÜ¿   Pˇ bÉƒ˛NãL$l_^[3ÃËST ãÂ]√UãÏÉÏSVW3€ã˙ãÒâ}¸9]Ñ˜   ã˚â}¯9^~ã^ããMËuÕ¸ˇÖ¿t	GÉ√;~|Èâ}¯3€;~|ãM∫|ÊËQÕ¸ˇÖ¿Öá   ã˚â}¯ãFãœãU¸¡·âMÙSãLÉ¡Ëz‚¸ˇãxÖˇÖ^  jhÄÌˇu¸ËGÕ¸ˇÖ¿ÖG  ãE¸É¿É}¯âE¸ã»u;∫˜¸ËÏÃ¸ˇÖ¿Ñ  ãM¸∫˝Ë◊Ã¸ˇÖ¿Ñ¯   ãM¸∫ã‰È‚   3¿È˝   ∫˝Ë±Ã¸ˇÖ¿ÖÈ   ãFãMÙãL∫Ñ‰È…   ãFSãHÉ¡Ë◊·¸ˇã@Ö¿ÖΩ   ãFã◊SãHÉ¡Ëª·¸ˇãxÖˇÖü   jXâE¯9F~5j YâMÙãFãU¸SãLÉ¡Ëå·¸ˇãxÖˇutãE¯ãMÙ@É¡âE¯âMÙ;F|—jhÄÌˇu¸ËHÃ¸ˇÖ¿uLãE¸∫˝É¿ã»âEÙË˜À¸ˇÖ¿uãFãHÈIˇˇˇãMÙ∫˜¸Ë€À¸ˇÖ¿uãF∫˝ãHSÉ¡Ë·¸ˇãxã«_^[…¬ UãÏÉ‰¯ÉÏSVãÒâT$WãˆCuË« Ö¿Öù   ˇuã}ãÀã◊Ë⁄˝ˇˇã»âL$Ö…Öä   8Fus8É±   ukPçãÄ  ã◊Ë©‡¸ˇã@âD$Ö¿u<jh(˝WËxÀ¸ˇÖ¿uAçOË—Â  Ö¿t5ˆ@0t/j PhÄÇã◊ãÀËYﬁ âD$Ö¿tã–ãŒËêÔ Ö¿t	ãD$ã@ÎfãD$®t3¿ÎZ∆FÎÄy+uLÄ~ tFÉd$ ãD$®π@˝∏0˝D¡É} WtˇuPhPÁVËg…¸ˇÉƒÎPh\ÁVËV…¸ˇÉƒãL$ã¡_^[ãÂ]¬ UãÏSVãuã⁄Wã˘ãÖ“tãË° ãI¿ã¡ÎãFPˇvã”ãœË°˛ˇˇ_^[]¬ UãÏQQSVWã˘âU¯3€3ˆ9_~Lã∆ã÷ÉÉ˛L–ãGã …É} ãD»âE¸tˇuãœË„ÍˇˇÖ¿tãE¸ãU¯çHj ËMﬂ¸ˇãXÖ€uF;w|¥_^ã√[…¬ VãÚWã˘ãV$Ë”aˇˇãV(Ö“tãœËAmˇˇãVÖ“tãœË:û¸ˇˆF8tãV Ö“tãœË&û¸ˇãœã÷_^Èû¸ˇUãÏQVãÒ“Wj ãFãL–ãUÉ¡Ëãﬂ¸ˇã–Ö“t.ãzãO; uãBâGÎç9ãI; tÖ…uÛÎãBâGãŒËeˇˇˇÉN_^Y]¬ UãÏÉÏSVWjXãŸâE¯PYâM9C~\j _WZâ}ÙâU¸ãsÚÉ~ uÉ> tããÀËù¸ˇãE¯ãMãU¸É& Î;¡}{ãU¸••••ã}Ù@É«âE¯â}ÙAÉ¬âMâU¸;K|ØâCãÛÉ¯+çª»  9~t j ˇvWˇ bãVÉƒÖ“tãÀËù¸ˇâ~_^[…√UãÏQSVWã˘ç_Ö“xÆËã“jYãD–f	HNãã@f	HNÉgÔ3ˆ9w8u+9w~&ãŒâu¸ããDˆ@Nt	PËµW  ãM¸FÉ¡âM¸;w|ﬂ_^[…√SVãÒWÄ~[ uË∞í˝ˇ3ˇ9~~)3€ãFãDÖ¿tÉ~8 uPËqW  ÎfÉHNGÉ√;~|ŸÉfÓãŒË$ﬁ Ä~[ uãŒË°í˝ˇÉ~8 u
ãŒ_^[ÈÅ˛ˇˇ_^[√UãÏSVWã}ã⁄∑Gãs4fÖ¿t*Öˆt*9|+k¿ãT0ÙÖ“tã	Ë^ˇˇ∑Gk»ãEâD1ÙÎÖˆu3¿@Îã@ˇuã÷fâGËÈhˇˇâC4_^[]¬ ∑BfÖ¿tÄy+ uãI4Ö…t9|k¿ãDÙ√3¿√UãÏQQSVãÚâM¯WãË¶ƒ¸ˇ@ˆFâE¸ôã¯ã⁄tãM¸Ëçƒ¸ˇ@ô¯⁄ãMËƒ¸ˇãM¯@âE¸ô«”RãPË¿û¸ˇÖ¿tˇu¸â«ˇuPˇ b∏   Éƒf	F_^[…¬ ∑Q˜¬   u3¿√ãÎ@Ä8 u˙ˆ¬t@Ä8 u˙@√UãÏQSVãÚWã˘ã^Ö€tj3¿3…f;F"ÎãÖ“t
ãœËÍö¸ˇãM¸øF"AÉ√;»âM¸|·ãVÖ“tãœË ö¸ˇÄ~+ uãV4Ö“tãœËØiˇˇÖˇt	Éø   uÉf 3¿fâF"8F+u!F4_^[…√UãÏÉÏSVãÚ3€Wã˘ãFÖ¿Î9ãHâM¯Öˇt9ü  uÄ~+tãHãÉ¡SË‰€¸ˇãE¸ã–ãœËÊ˚ˇˇãM¯ã¡Ö…âE¸u¬äF+Ñ¿uã÷ãœËU†  ÎX<uKÖˇt9ü  u	ã÷3…Ëê€ 9^0t:9^,~É˚tãF0ãòÖ“tãœËÛô¸ˇC;^,|‰ãV0Ö“tãœËﬂô¸ˇÎ	ˇv,WËn ã÷ãœË∏˛ˇˇãÖ“tãœËæô¸ˇãVÖ“tãœË∞ô¸ˇãVÖ“tãœËõhˇˇã÷ãœËôô¸ˇ_^[…√ÃÃÃÃÃÃÃÃÃÃÃÃÃÃUãÏãUÖ“tãMÖ…t	Éπ   uÉjuËœ˛ˇˇ]¬ UãÏVãÒ¡‚j VãJãUÉ¡Ëœ⁄¸ˇPVË¥ˇˇˇÉN^]¬ QÖ“tj ˇrãËÌù¸ˇã»Ë√√¸ˇÎ3…ã¡Y√SVã⁄ÉŒˇÖ€t?ãqWNã˛¡ÁyÖˆx-ãÖ…tã”Ëjƒ¸ˇÖ¿tÖˆuã”π|ÊËVƒ¸ˇÖ¿tÉÔÉÓy”_ã∆^[√SVWãÒËáˇˇˇã¯ãŒã◊ËúˇˇˇãÿÖˇt	ã◊ãŒËûò¸ˇ_^ã√[√UãÏVWã˙ãÒãUãÉz vAÄπ±    thP˝VË™¬¸ˇYYÉ»ˇÎ4ãEâã◊Ëõˇˇˇã»Ö…y Whd˝VÆËËÇ¬¸ˇÉƒÎ’ãE∂â∞   â8ã¡_^]¬ ãA 3“3…%  A;¡tã ã¡√UãÏQSãŸVWã˙ã3ãŒË÷ˇˇˇÖ¿Ö“   ˆÜ¥   Ö≈   8I∞	Ñπ   8Ü±   tsã∂∏   ãMãÖ…u˜ÿ¿ÎÖ¿tHã–Ë>√¸ˇÖ¿u=ãFÖˇu˜ÿ¿ÎÖ¿t,ã–ãœË √¸ˇÖ¿uãMãFÖ…u˜ÿ¿ÎÖ¿tã–Ë√¸ˇÖ¿tPhÿ4	SË™¡¸ˇYY3¿@Î@Ä{ ujhÄÌWË√¸ˇÖ¿tãŒËÉ&  Ö¿tã◊Ë∫  Ö¿tWhx˝SËj¡¸ˇÉƒÎΩ3¿_^[Y]¬ ãIÎãA8$<tãIÖ…uã¡√V∑q43¿ÖˆtãIf;t@É¡;∆|ÛÉ»ˇ^√UãÏQVãÒfã¬WˆF tWfÖ¿xRS3“øÿã˙Ö€t(ã~É«â]¸ˆ çB∑»ç∑¬E»∑¡ã–ÉÎu‰ã}¸ãFãœ…[ˆD» tfãF$f+¬f«Îfã¬_^…√QVãq,FWâq,Ë#9 ã¯ÖˇtjˇVj jZãœË @˛ˇ3“ãœËéJ˛ˇ_^Y√UãÏÉÏSVWã˘ã¬âE¯π˝ã7Äæ±    t2Éæ¨   u)∂Ü∞   ∫Ñ‰É¯âE¸D—ãŒËçö¸ˇãÿçáÃ   âEÙÎ~ã]çMQSãœËS˝ˇˇâE¸Ö¿àt  É} t'É{ vÉ¯th§˝WÆËË˚ø¸ˇYYÈN  «E¸   ãEãŒã–âE¯Ës¸ˇˇçóÃ   ãÿÄ:âUÙrÆËˇu¯ã”ãœË1≥ˇˇçóÃ   âUÙãM¯ããIâá∏   âèº   Ö€ÑÙ   É} πt∏Ïˆã”D¡ãœSPË+˝ˇˇÖ¿Ö√   ãM¸3“ãFB8ñ∞   EU¡·É˙âMâUËãπ˝PâEÏ∏Ñ‰j D¡ãœPjZËéÌˇˇÖ¿u9EuˇuÏãMPãEËS∂îH<ìãœËkÌˇˇÖ¿u\ãEÙÄ8 ÖÖ   ãFãMããœâEÙËg Ö¿u9ˇuÙã”ãŒËÅÚˇˇÖ¿t=É} u
ˇu¯h–˝ÎCÉt ãœãU¸EOtËoC  ãœË¸˝ˇˇã”∆GãŒËlî¸ˇ_^[…¬ ˇuÙã”ãŒËäıˇˇÖ¿tShË˝WËÉæ¸ˇÉƒÎÀj j@ãŒËÇñ¸ˇã»Ö…uˇG$«G   ÎÆãUÉ»ˇfâA âãFãDâA<∏»   «A   fâA&âèË   Äæ±    uÜãœË†6 ãÿÖ€Ñuˇˇˇˇu¸3“ãœBËJC  É} t3¿∫®   PPPãÀËd=˛ˇãG,ãÀ@âEÙâGX@jâG\@Pˇu¸âEjaZâG,Ë?=˛ˇãU¸ãÀËÃG˛ˇj j ˇuãÀjZË$=˛ˇãN É·âEËÉ… t3¿@ÎjXPjˇu¸ãÀjbZË˛<˛ˇ∂FPãÀãu¸PjVjbZËÈ<˛ˇãUËãÀËÒD˛ˇÉ} ãKtâHu"É} uãEÙ∫ë   j@ãÀPVËπ<˛ˇâáÑ   ÎãEÙãÀj @Pj jFZËû<˛ˇãœË•5 ãU¸ãœhÑ‰jjãË¶Ïˇˇjˇu¸ãŒjj jeZËc?˛ˇ3ˆ9w(u«G(   ã}ÙãÀVWVj}ZËQ<˛ˇVãuãÀVjjKZË@<˛ˇjˇhú|ã–ãÀËÖC˛ˇWV3ˆãÀVj~ZË!<˛ˇjZãÀËoA˛ˇVVVjxZË<˛ˇÈÙ˝ˇˇÃÃÃÃÃÃÃÃÃÃUãÏVãu∫˛Wj ãFãHÉ¡(Ë«”¸ˇã}ãWÖ“tãŒË!aˇˇã◊ãŒËí¸ˇ_^]¬ UãÏQSVãÒâU¸WÉæ    ãth ˛VË1º¸ˇYYj jhãÀ∆Üï   Ë,î¸ˇã¯ãE¸ÖˇuÖ¿tzã–ãÀË∆`ˇˇÎoâæÑ   ∫ ∂WãŒâ7âGË Ä{S uQf«Gïçw∆G∫˛âãCVã@âGãCã@âG çG,âG$∆ ïãE¸âw0âGDãCãHÉ¡(ËÙ“¸ˇ;∆uSËˆñ¸ˇ_^[…√UãÏÉÏ<°∞	3≈âE¸ãUãESãôË   âU‹âUËãâMÃâEÿâEÏâU‘∆EÊ ∆E–∆EÂAâ]ƒVãuâu»âuWã}â}ÙÖ€Ñú  øC"@;ÇÄ   ~ˇ3hD˛QËª¸ˇÉƒÈz  ÄπÃ   sçMËËŸª¸ˇãEÏâEÿãEËâE‹ÉˇrujçG˙h\˛∆PËbº¸ˇÖ¿u_É«˙â}ÙtçNˇœ∂ˆÄêàt	OIâ}ÙÖˇuÎÉˇ	r8j	çF˜hd˛«PË%º¸ˇÖ¿u"É«˜â}ÙtçNˇœ∂ˆÄêàt	OIâ}ÙÖˇuÎÉˇrgçMËFª¸ˇãu3…ã}ÙâM‡âu»∂Åà{;¯uWˇ4çø	VËÀª¸ˇÖ¿tãM‡AâM‡É˘|◊Î&ãE‡3ˇjZçHàMÊäàî|ãE–Ä˘B∂¿N¬àMÂâE–ÖˇtjZÎ3“BãMÿ3¿3ˆœ¿ ∆PQãM‘ËZí¸ˇãÖˆÑH  ãEÃÄ∏Ã   rçMËã÷Qã»Ë=≠ˇˇˇuÿˇu‹Vˇ bãEÿÉƒãŒ∆0 Ë∫¸ˇËîª¸ˇøS"3…àEÁâM‡Ö“~6ãCâE‹äMÁ8H
ãM‡uããŒË∆∫¸ˇÖ¿t|ãE‹ãM‡øS"AÉ¿âM‡âE‹; |–ãM‘ã¬ôÉ¿É“ §¬RãS¡‡PËjí¸ˇÖ¿tUâCø["j¡„ÿj SˇbäEÁÉƒâ3àC
Öˇu;∂EÊ¡‡3C%   1CãE–àC	äEÂÎMãEÃVhp˛PËÔ∏¸ˇÉƒãM‘ã÷Ë®é¸ˇÎDãŒË®∑¸ˇWˇu»@Vˇ bÉƒ∆7 ãŒË-π¸ˇã”Ëâ   fÉKàCãEƒfˇ@"fˇ@$ãEÃÉ`L ãM¸_^3Õ[Ë@ …¬ SVã±Ë   ã⁄ÖˆtM∑F"fÉ¯|CãNø–“∂√3D—ÙÉ‡1D—ÙÅN   ˆD—˛tãVÎãBøøF"H;»uÉJ8ãRÖ“uÊ^[√UãÏÉÏ°∞	3≈âE¸SVâU¯≥C3“Wã˘ãÚã ÈÅ   ∂¿¡Ê∂ÄêìGÅ˛rahcu≥BãœÎcÅ˛bolctÅ˛txetu≥BÎOÅ˛bolbuÄ˚CtÄ˚Eu=Ä?(≥Au6äãœÎØÅ˛laertÅ˛aolftÅ˛buodu
Ä˚CuÄ√Îã∆%ˇˇˇ =tni täÑ¿ÖuˇˇˇÎ≥Dãu¯Öˆt(âU¯Ä˚C}Ö…u:jZã¬πˇ   ôÉ‚¬¡¯@;¡O¡àF	ãM¸ä√_^3Õ[Ë+? …√∂¿ˆÄêàu	AäÑ¿uÌÎ¡çU¯ËÏ¡¸ˇãU¯Î¥UãÏÉ‰¯ÉÏL°∞	3ƒâD$HãESVãÒâD$ãEã⁄âD$WãÜË   ã>âD$Ö¿Ñ”   Äø±    tÄø∞   tjÎjøH"ã@¡·É¿Z¡ãÀj âD$Ëë]ˇˇÖ¿ãD$uˇ0hå˛VËê∂¸ˇÉƒÈÅ   ˆ@`thº˛VËw∂¸ˇYYÎlj4çD$$j PˇbãT$ Éƒãœ∆D$ ¥ˇt$Ë&ë¸ˇj jçT$(âD$0ãœâ\$4«D$,   Ë#PˇˇãT$(âD$Ö“tãœË·ã¸ˇãD$ãT$ãŒPˇt$ËíÔˇˇÄæÃ   r	ã”ãŒË¨ˇˇÖ€t	ã”ãœËîNˇˇãL$T_^[3ÃË = ãÂ]¬ ä<tu∆;√<puãAÄ8tu∆ ;√QfÉJˆB`thË˛QË£µ¸ˇYYY√UãÏÉÏ ÉM¸ˇ3¿SVãÒâEÙWã˙â}ËãûË   Ö€tãC®t$ˇ3hˇVËhµ¸ˇÉƒÖˇt	ãã◊ËZˇˇ_^[…¬ É»âCÖˇuøC"HâE¸¡‡Cã–âEÙËuˇˇˇÈÖ   ãâE‰Ö¿~wçOâEã˘ãË+@ˇˇã»Ë7ˇˇˇÄ9;uMãAÉe¸ âEÏøC"Ö¿~;ãKâM¯ããMÏË,∂¸ˇÖ¿tãE¸ãM¯@øS"É¡âE¸âM¯;¬|⁄ÎãU¯ãŒâUÙËˇ˛ˇˇÉ«Émuóã}ËãE‰É¯ugãEÙÖ¿t`ã@$<@uWÉ}tQÄæÃ   rÖˇtãOËì?ˇˇPçS ãŒË-®ˇˇãE¸fâC äEàC*ãE¡‡	CÖˇt	äGàÜ    ã◊ãŒËS"  ÈŸ˛ˇˇÉ} thHˇVË-¥¸ˇYYÈ¡˛ˇˇj3¿3“PˇuãŒPPˇuWPPËk"  È∞˛ˇˇUãÏÉÏSVãÒWãûË   ã>Ö€tÄæÃ   tv∂è∞   ãG…ãD»ã@ˆ@u]RãSãŒËìVˇˇã¯â{É~L tjçNHQÎ4ãM3€ACÎA∂ÑòêàuÙãUÎJ∂BˇÑòêàuÛ+—âM¯SçE¯âU¸Pã◊ãŒËﬁWˇˇÎÖ“tãœËLˇˇ_^[…¬ UãÏÉÏSVãÒWãæË   ÖˇÑá   ÄæÃ   s~øG"HâE¸ãã»âE¯ËøÔˇˇãÿâ]Ö€taã”ãŒËA  Ö¿tJãE¸ãWãM¯¡‡S–âEÙËÌˇˇãwÖˆt,ãM¸ã]ÙãFø ;¡uãOÀËiÌˇˇãN âãM¸ãvÖˆu›ã]ãM¯ã”ËÜà¸ˇ_^[…√UãÏQQSVWã˘ã¬âE¸ãüË   Ö€t`øs"ãC¡ÊÉ¿ÄøÃ   uhÄˇWË≤¸ˇYYÎ6fÉ~ wãEÖ¿t[Éxu9jˇ0h¨ˇËŸ≥¸ˇÖ¿tCˇ6hºˇWËH≤¸ˇÉƒãE¸Ö¿t	ãã–Ë·Jˇˇ_^[…¬ Éxu”jˇ0h¥ˇËö≥¸ˇÖ¿u¡j@ÎfˇK$j Yf	Nã—	SˆFt	ã÷ãœË9¸ˇˇˇu¸ã”ãœVËqÎˇˇÎØãVãIãÚˆã@ãDã @PjRjbZË11˛ˇ^√S3“ÎÄ˚"çBE¬AçPäÑ€uÌçB[√UãÏÉÏSVWã}ã¬âM¯3€âEÙä/ã0ÑÌtäÕ∂¡ˆÄêàuÄ˘_uCä;Ñ…uÁ∂≈ˆÄêàu+çE¸«E¸;   Pã”ãœËƒ— É}¸;uÄ<; uÖ€tãE¯3“ÎãE¯3“B∆"FÎàFÄ?"u∆"FGäÑ…uÎÖ“t∆"F∆ ãEÙ_â0^[…¬ UãÏÉÏ$Sã⁄âMÙ3¿â]¯VWãsã¯âEøC"Ö¿~ãÿãËˇˇˇÉ«çv¯ÉÎuÏã]¯ãËı˛ˇˇ¯πp‡Éˇ2∏ÏˇL¡π‹ˇâE‹∏‰ˇL¡âE‰øC"kÉ∆#˜ã∆âuÏôRPËrÑ¸ˇãÿÖ€uˇuÙËÀã¸ˇ3¿È  hˇSVËX•¸ˇÉƒãÀËØ¸ˇâE¸çU¸ãE¯ãÀˇ0Ëó˛ˇˇãE¸∆(çpãE¯ãHâMÙ3…f;H"ç§   Éˇ2«EËÿ4	ã}Ù∏‡ˇLEËã÷ãŒâu¸PçPãEÏ+¡PË§¸ˇÉƒç3Ë¥Æ¸ˇE¸çU¸ãE‰ãÀˇ7âEËË+˛ˇˇæGã4Ö–ÖãŒËçÆ¸ˇã¯WVãu¸çQˇ bãE¯˜ãMÉƒã}ÙAÉ«âu¸ø@"ã÷;»âMãEËãŒâ}Ùâu‡âu¸åyˇˇˇˇu‹çh∏B	PãEÏ+∆PËb§¸ˇÉƒã√_^[…√UãÏSã⁄VãuW∑C4;∆çã   k∆	ôRPËEá¸ˇã¯ÖˇujXÎw∑C4¡‡Pˇs Wˇ b∑C2Éƒâ{ ç<∑çE   PˇsWˇ b∑C4Éƒ¿â{ç<wˆPˇsWˇ b∑C4Éƒâ{˛PˇsWˇ bãEÉƒÉK8â{fâC43¿_^[]¬ UãÏQQSVãÒ3“W3…âu¯ãF∑~4ã@Öˇt%ã^ã∑KfÖ¿y3¿@Îò¿∂D∆	–A;œ|„ãu¯¡‚j RËÊ¡¸ˇ_fâF0^[…√UãÏÎøJçI9Et
Ö“3¿]¬ 3¿@Î˜UãÏQQSã⁄âM¸ãUVãuWãB∑p3ˆâE¯Ö€~1ãyf9u!ãR ãI ãEã±ãÇË>Ø¸ˇÖ¿tãM¸ãUãE¯FÉ«;Û|“3¿_^[…¬ 3¿@ÎÙUãÏÉÏã¡W¿SVfEË∑P4ÉÍãuÏWã}ËâEÙxVãHã@âM¯çPâ]¸øÖ€x/ãE¯ãÀ…ã@ˆD» uÉ˚?}3¿3…´ÿÉ˚ C»3¡É˚@C»¯Òã]¸ÉÎÉÍâ]¸yºãEÙ˜◊˜÷âx@_âpD^[…√UãÏÉ‰¯ÉÏ,SVãÒ3€Wã˙â|$ ããFâL$âD$$ˆÅ¥   uD3¿ã”f;G"}/ãÀãGˆDtãD®uã_É‡ÚÉ»âDøG"BÉ¡;–|’3€ÅO   ãD$$ãñÑ   Ö“tã»ËG4˛ˇ«@   ∑G fÖ¿à©   ø»ãG…ã»âL$0Ëo´¸ˇãL$SâD$8çD$4Pj;ZËê?ˇˇãã–ËùNˇˇã»âL$0Ö…uÅgˇˇˇÈ{  ÄæÃ   rãQçG PãŒË†ˇˇãL$0äÜ    É ˇjSSSàA∂G*SPQSfâW ãŒS3“Ëá  ãD$ÄxS u®9^$u£ãœË∏Íˇˇãât$0ÎrãœË©Íˇˇã3¿@ât$0âD$(f;F2sT3ˇãÿGSVã◊ãŒË¨˝ˇˇÖ¿t∏ˇˇ  fF4ÎãN ãôâπãNäà9ãNfãYfâyG∑F2C;ÿ|øâ|$(3€ã|$ ãD$(fâF2ãF8ãL$É» âF8ˆÅ¥   uÉ»âF8∑F2ãL$$ã–fâF4âT$Ö…tÉ~, vãV,Ëÿ2˛ˇãT$∆ ãGâF,ãOÈ~  ãA8$<Ñn  çQ2â\$$âT$ã√ãT$âD$Ö“tSãD$ã|$ã\$ãL$$∑âT$,QVãœË…¸ˇˇãT$Ö¿çJE ãT$,ã¡âL$ãL$$AâL$$;À|‘ãL$3€ãT$âD$Îã|$â|$ã|$Ö¿∑?â|$(ã|$ ãD$(u	fâA4È⁄   ∑¿ã—D$ãL$PË8˚ˇˇÖ¿Öò  ãL$ã√ãT$â\$(∑	âL$,Ö“Ñû   ã\$ã˘ã◊¡‚âT$ç?ã|$âT$$∑—âT$,P∑—ãœVË	¸ˇˇÖ¿uOãFãT$(ãOã\$$fãPfâãF ã\$ãO ãêâãFã\$Ä< tÅO8   ãD$ÉD$$ÉD$∑ âD$,ãD$(ãL$,@âD$(∑…;√|Üã|$ 3€ãT$ãL$ãIâL$Ö…Öv˛ˇˇøG"ãÀâL$ â\$,Ö¿~BãFãÛâD$(Sã»ËB˚ˇˇãL$ Ö¿uãGˆD0 uAâL$ øG"CãT$É∆;ÿãD$(|Õãt$03€ãD$ã÷¡ãL$PË¸˘ˇˇÖ¿u`f;G"}SãL$â\$(ã—ãNSË‚˙ˇˇÖ¿u*ãL$(ãGˆD ãL$uãFfâHãF «à§çAâL$ÎãL$øG"CÉD$(;ÿ|µãŒË˚ˇˇ_^[ãÂ]√UãÏQSVãÚâM¸WÄ~+u[ãËüß¸ˇã]ã¯Wˇ6SËB™¸ˇÖ¿uBÄ<_u<ãF0ãM¸j Å¡Ä  ãË<ø¸ˇãpÖˆt ã6É>|ãv\ÖˆtçCãŒ«Pˇ0cˇ÷Î3¿_^[…¬ UãÏÉÏVãÚÅ¡Ä  j âu¯ãF0ãËÓæ¸ˇã@âEÙÖ¿ÑÑ   ã Ö¿t~É8|yÉx\ tsãWË˝¶¸ˇãN<ã–âU¸ãyÖˇt[Sã_Ä{+ uJ˜C   uAãRˇ6PËÅ©¸ˇãU¸Ö¿u/ãÄ<_u'ãMÙB¬Pã	ãq\ãŒˇ0cˇ÷ãu¯ãU¸Ö¿tÅK   ã?Öˇuß[_^…√SVWãÚãŸj_Vˇ4bã¯YYÖˇt'j ã÷∆ ãÀË;€ˇˇ∆_Ö¿tÄx+uVã–ãÀËö˛ˇˇÎ3¿_^[√UãÏÉÏP°∞	3≈âE¸ãESãŸâU¥ãUãMâUºâMÃâE»Vã3âuƒWÖ“uÖ¿Ñ∞  ãªË   ÖˇÑ¢  Ö¿uããŒËeˇˇˇãMÃÖ¿ãE»tÅO   3“8ñ±   t*Ö¿Ö±   8W+t9ñ¨   Ö†   ãÜ¨   âGÉ¯u	G˜¡   tqÅO   3¿âU‘f;G"}_âUÿãO âM–ãQã¬%   tpÉ¯u∆AAˆAtøG ;E‘tˆ¬uÉ‚ÚÉ âQÅO   ãM‘ãUÿAøG"É¬âM‘âUÿ;»|ßãMÃÑ…âå   ãG®t[h` 	Îhÿ4	SËF¶¸ˇYYÈØ  ˆAt%∫ÿ4	Ë•¸ˇPãE–ˇ0ˇ7h  	SË¶¸ˇÉƒÈÑ  ˇ1ˇ7hD 	SË¶¸ˇÉƒÈm  ®uˇ7hî 	SËÏ•¸ˇÉƒÈT  Ä  ã◊ãÀâGËä¯ˇˇãW<ãŒË@¯  É âE‘t-ˇw3¿ã◊PjãÀË/ˇˇ3…9K$tãWÖ“t	ãŒËYJˇˇ3…âOÎ3…ˆG`ÑÖ   3¿âMÿã—âU–f;G"}eâM‹ãG¡ˆ@`taã–ãœËPﬂˇˇ3…ã◊QPjãÀË®.ˇˇÖ¿t3¿ãŒPPjxZËE8ˇˇPãGã◊E‹ãÀPËπﬁˇˇãU–ãM‹ˇEÿÉ¡øG"âM‹9Eÿ|¢Ö“uh¥ 	Èº˛ˇˇBâU–Î⁄øO"3¿ã–ãGÖ…~çp	∂çv–IÖ…Ûãuƒ3…çBf9O QM¬¡‡PËR∏¸ˇfâG(ãGÖ¿tããŒË	ˆˇˇãvÖˆuÚãuƒÄæ±    Ö™  ãÀË âE‹Ö¿Ñ˝  3…QQQjxZã»ËÎ#˛ˇäG+∫‡ 	Ñ¿πË 	D ∫tâM¿πÏˆD É}» âM∏ÑÉ  ãC,ˇu‘ãM‹@âEÿ@âEÃ@É{t âC,âE–ã√ECt∆@ˇs\jjeZËâ#˛ˇãM‹jZË÷(˛ˇ«C(   ãAtâE¿@P3¿PˇuÿjZËa#˛ˇ3¿9C$ÖY  ãU»ãÀjAË• Ö¿ÑE  ∑H"fâO$fâO"ãHâO3…PVfâH"âHËÛﬂˇˇãuÿ3¿ãU»ãÀâEËâEÙâEÏâEçE‡P∆E‡âu‰Ë!U 3¿9C$ÖÚ  ã÷ãu‹ãŒË&˛ˇãU¿ãŒËÎ*˛ˇãNtâH3¿PPˇu‰ãŒjZË¬"˛ˇˇuÃãM‹ãˇuˇuÏj_ZË¨"˛ˇãM‹3¿Pã◊Ë√Ä  ãM‹3¿Pˇu–jj}ZËå"˛ˇˇu–ãM‹ˇuÃjj~ZËy"˛ˇãM‹3¿PVPjZËi"˛ˇã÷ãu‹ãŒËo*˛ˇãNtâH3¿PPjjxZãŒËG"˛ˇãuƒã◊ãŒË‘ÒˇˇÎ:É}Ã çÉ¿   ãUºE–ãã»+ã∏   Ä8;tJˇ≥∏   Qˇu¿h 	VËAñ¸ˇÉƒˇsXãM‘Pˇs\âEƒˇ7ãFˇ7¡·ˇu∏âM¿ˇ4h 	SË)’ˇˇãUƒÉƒ$Ö“tãŒËx¸ˇãU‘ãÀËhˇˇˆGt(ÄªÃ    uãNM¿ãAÉxH uˇ1hd	SË„‘ˇˇÉƒ3¿PQˇ7hê	VËπï¸ˇãU‘ÉƒãM‹PË$˛ˇÄæ±    t?ãO<ãWçIË;π¸ˇÖ¿tVË=}¸ˇÎK3¿âÉË   ÉNhÑÚˇ7ˇÃbYYÖ¿uãG<âxHÉ}» u Ä+ uãE¥ã Ö¿uãEºã +É∏   É¿âG,ãM¸_^3Õ[Ës) …¬ UãÏÉÏ\°∞	3≈âE¸ãESVãÒâE∏ãM3¿Wã}ãâU¨ãUâM§âU®â}∞âE¥f9Ü»   ~h¥	VË4°¸ˇYYÈ  ˇuPjˇuRã—ãŒËî‡ˇˇãÜË   âEºÖ¿Ñˆ   É~$ ÖÏ   ÅH   ãŒãU§çE¥Pˇu®ËﬁˇˇãUºãÀãR<ËQÛ  ˇu¥ã÷çM»hÏˆPËˇÀˇˇã◊çMÃËu	ˇˇÖ¿Ö¢   ÅO    ÄæÃ   r3ˇÎjã◊ãÀË÷@ˇˇâE∞ãEºãM∞ãU∏jâH,ãÀËë=ˇˇãMºâA∆A+Ä{S u[ãé¿   ãÜƒ   âM¿âEƒÄ9;t»âM¿ãE¨ã +»çPˇ—ÎIJ∂ˆÄêàuÚãU¨j j «Eƒ   ã3“H¡ãŒâE¿çE¿PËò¯ˇˇÖˇtjã◊ãÀËõ˘  ÄæÃ   r
ãU∏ãŒË|ñˇˇãE∏Ö¿t	ã–ãÀË†DˇˇãM¸_^3Õ[Ëƒ' …¬ UãÏÉÏSVãÚ3¿Wã˘âuÏâ}¯Ä~+âE‰ãuˇC8ËíΩ ˇK8Èã  çN"âM∑	fÖ…~3¿Èv  yˇ6hÿ	WË|ü¸ˇ3¿Éƒ@È\  ãV,ãÀPË¶?ˇˇâEÙÖ¿Ñ*  äèÃ   ∆áÃ    ãP ã(àMˇãM¯Ën  ãEÉ…ˇãUÙj@fâ3¿ã≥h  ãM¯ˇÉ0  !Éh  fâÉ4  Ë‘ âEËãE¯â≥h  ãuÏâx(ã}ËÖˇuãM3¿3“BâU‰fâã}¯ÎBãVçFÖ“tbã}¯ãœPçF"PË‰ Ä{S u É$ uãUÙøF"ãJ;uj@Rã÷ãœË çN"fãfâF$ãEËPSËÕ⁄ˇˇãUÙãÀjË¯  É´0  t+3¿Î.fãG"çN"fâãGâFãGÉ‡b	F3¿!GfâG"Èhˇˇˇ∑É6  fâÉ4  äEˇàáÃ   ã}‰Î3ˇGãV<fÉJNÄ{S t	ã÷ãÀË ÿˇˇã«_^[…√UãÏ¡‚QVãuWãBã}ã@ÎãH9yuâqã Ö¿uÔãBã@ ÎãH9y,uâq,ã Ö¿uÔ_^]¬ UãÏQQSVWã⁄ã˘Ë1 ãœâE¯Ë§ÜˇˇâE¸É˚}h¯	WËôù¸ˇãE¸YYãu∫é   ãM¯VPSËÓ˛ˇÉt ã«EGtˆ∆@ãE¸PPãSã@ˇ4h	WË–ˇˇãU¸ÉƒãœËbÜˇˇ_^[…¬ UãÏÉÏSã⁄âM¸VW3ˇãCâE¯3ˆÖˇt;«sããCÎÖˇt9x,s9p,Gp,ã@Ö¿uÈÖˆtãS<ã	ËoÔ  ãM¸ã÷PË&ˇˇˇãE¯ã˛ãM¸Îµ_^[…√UãÏÉÏ$°∞	3≈âE¸ãE“SVWã˘âE‹ãE3ˆâE‡Fãã@ã–VhL	çE‰PjËüë¸ˇãçU‰ÉƒSË2–ˇˇÖ¿tˇu‡çE‰ˇu‹PSh\˙WË9œˇˇÉƒFÉ˛~æãM¸_^3Õ[ËQ$ …¬ UãÏÉÏSãŸãM¡·VâMãâEÙWã˙ã@¡ãÀâE¯ËÆ ˇu3“ãBâu¸ãÀË]!  3¿Ä+uPPP∫®   ãŒËw˛ˇã◊ãÀË◊k ãÎã÷ãÀË@z ãv ÖˆuˆGãu¯tˇ7ˇ6h\	SËóŒˇˇÉƒˇ7ˇ6hê	SËÖŒˇˇÉƒÉ} uÄ+tã◊ãÀËg˛ˇˇÄ+u1ãM¸∫™   ã7j j ˇuË¸˛ˇãM¸ã–j VËD"˛ˇÉ{t ã√ECt∆@ãM¸∫ï   ã7j j ˇuËÀ˛ˇãM¸ã–j VË"˛ˇãUãÀËcÈˇˇã}Ùã]ãGãtˆFNt+ãvÎãVÄz+uãœË“’ˇˇã6ÖˆuÍãGπ˝ˇ  ãDf!HN_^[…¬ ãA 3“%   ¬t&9ëê  u9ë»   u3¿9ë|  ~
9ëî  ï¿√@√3¿√SVWãÚãŸjhÄÌã>WË5ú¸ˇÖ¿u)jh‘	çwVË!ú¸ˇÖ¿tj
hhÈVËú¸ˇÖ¿u3¿Î#ãv˜∆   tãÀËtˇˇˇÖ¿t3¿@Î¡ÓÉÊã∆_^[√UãÏÉÏSVãÒâU¯WãÄ{S Ö±  ËπÎ  Ö¿Ö§  9Et˛CWãE¯ãŒãUÉ¿PË›–ˇˇã¯ãEÖ¿t˛KWÖˇu!Ö¿Ñs  ãE¯ãŒãPË⁄  ãŒË>ŸˇˇÈZ  ãW<ãÀË]Ï  Ä+ã–âU¸uã◊ãŒË˙ˇˇÖ¿Ö4  ãU¸ãCã ÉeÙ …É˙ã»π˝PâE∏Ñ‰j D¡ãŒPj	ZË«ˇˇÖ¿Ö˙   9EtÉ}¸jXjYE¡Î*Ä+uã◊ãÀËb∞ jã@ã@âEÙXÎÉ}¸jXjYD¡ˇuã–ãŒˇuÙˇ7Ëô«ˇˇÖ¿Ö£   ˇuãŒPˇ7j	ZËÅ«ˇˇÖ¿Öã   ã◊ãÀËM˛ˇˇÖ¿tˇ7h‹	VËô¸ˇÉƒÎlÉ} äG+t<tˇ7h¯	Îﬂ<u	ˇ7h	Î“ãŒËS Ö¿t>ˇu¸3“ãŒBË  É} uˇ7ãU¸ãŒhƒ˙Ë“˚ˇˇãU¯ãŒWË·f  ˇuã◊ãŒˇu¸Ë9¸ˇˇãU¯ãÀË  _^[…¬ UãÏÉÏ8SãŸVãÚâ]‹Wãã}âEãÉË   âuÙâE¯Ö¿Ñı  ÄªÃ   ÑË  Öˆu:øH"ÉÈàÂ  BâU¸ÖˇtF9tBˇuÆËã@…ˇ4»h<	SËò¸ˇÉƒÈº  Öˇtã;thÄ	SË˘ó¸ˇYYÈí  ãâU¸ãEãH3¿É¡%âEÿç—âM‘Öˇt1!E–9~*ã]–çwãËêñ¸ˇãM‘çv@ô»ãEÿâM‘¬CâEÿ;|ﬂã]‹PQãMË©o¸ˇãâu–ÖˆÑ&  ãE¯âãH0ãE¸âNç≈$   ∆âFÄªÃ   âE‘rãUãÀRã–ËÃäˇˇãE‘ãMˇqˇ1Pˇ bãEÉƒãM‘ã@∆ Ë£ó¸ˇãUAãEÙãR—ãM¸âU‘âNÖ¿Öº   ãE¯ø@"HâF$ÖˇtlÖ…~hçGã}¸âE»çF(ãu»âEÿãËπï¸ˇãMÿãU‘âE‹âÄªÃ   rˇ6ãÀËãäˇˇãE‹Pˇ6Rˇ bãU‘ÉƒãE‹É∆ÉEÿ∆ B–âU‘ÉÔu∞ãu–ã}ãEã]¯ãVàF¡¯∆F àFãK<VÉ¡8ËÕ≠¸ˇ;∆Ö˝   ˇuË…q¸ˇãMã÷Ë%l¸ˇÈÛ   3“âUËÖ…éBˇˇˇ!U‰ç~$É¿â}‡ã}ÆËâEÿâE‹ãE¯ÉeÏ øp"âuÃÖˆãu–~KãM‰ãU‹ããHâU»âMÿã	ËOó¸ˇÖ¿ãEÏtãMÿ@ãU»É¡âEÏâMÿ;EÃ|›ÎãM‡âãE‹ãUËãM¸âEÿãE¯ø@"9EÏ};ÄªÃ   rãEÿãM‰ãU‡ˇ4ãÀËnâˇˇãM¸ãUËÉE‰BÉE‡âUË;—åaˇˇˇÈÜ˛ˇˇãMÙk¬ˇth‡	SË|ï¸ˇÉƒÈˇˇˇÖ¿tâFâpâs0ãuÙÖˆt
ãMã÷Ë:ˇˇÖˇt
ãMã◊Ë:ˇˇ_^[…¬ UãÏÉÏ(SVãÚãŸWâu‰ãFãâE¸ãC(âEÙ@âE@âC(ãVËäÁ  ãIã¯ã◊â}Ï“ˇ4—ãÀj ˇ6jZËN√ˇˇÖ¿ÖÖ  ãE¸ã◊ãÀˇ0jˇpËlƒˇˇãÀËO ã¯ÖˇÑa  ãEÖ¿yãF,ã÷âEËãÀË˚  ãS(âE‹âU¯çJâK(Ö¿tˇ ∑F2ãœPj RjuZË˙˛ˇj˜ˇu‹ã–ãœËA˛ˇãE¸ãÀãUÙjdPˇuÏË›p  j j ˇuÙãœj&ZË»˛ˇãÀâE‡ËI}ˇˇÉ{t âE¸EKt3“RR∆AçMÿQRPˇuÙã÷ãÀË4  j ˇu¸∫â   ãœˇu¯ËÖ˛ˇãUÿÖ“tãKË ˛ˇãE‡ãœj @PˇuÙjZËb˛ˇãU‡ãœËj˛ˇÉ} ãOtâH}j ˇuÏ∫è   ãœˇuËÆËË5˛ˇˇuÏãœˇuËˇujeZË"˛ˇj˜ˇu‹ã–ãœËi˛ˇ3“ãœBÉ} jXM–ËX˛ˇj j ˇu¯j$ZËÒ˛ˇÄ~6 âEÿtTj jj jZãœËÿ˛ˇã∫Ç   ãGtâE‹ãE‰∑H2Qˇu¸ãœVˇu¯Ë©˛ˇˇu‰ãÀjZË   ã÷ãœË±˛ˇãOtãu‰âHÎÉ{t ã√ECt∆@ãGtâE‹ˇu∫É   ãœˇu¸ˇu¯Ëk˛ˇ˜F8   ãuuj j V∫á   ãœËN˛ˇj ˇu¸∫à   ãœVË<˛ˇjZãœËä˛ˇãU¸ãÀË“{ˇˇã]¯ãœj ˇu‹SjZË˛ˇãUÿãœË˛ˇãOtj j ˇuÙâHãœjxZËÙ˛ˇj j VjxZãœËÂ˛ˇj j SjxZãœË÷˛ˇ_^[…¬ UãÏQSVWã˙ø˜k∆çµ   É„¯É¿	É‡¯çSH–ãE¬âU¸ôRPË=j¸ˇã–Ö“t/çJHfâz4âJ çFÀâJçAãM¸âB çpâBçGˇfâB2ãEâ_^ã¬[…¬ VãÒÖ“t3¿9~çJˆ u@É¡;|Û3¿^√k¿äDÑ¿t	<∏	u∏	Ph 	VË™ë¸ˇÉƒ3¿@^√UãÏÉ‰¯ÅÏå   °∞	3ƒâÑ$à   ãESãŸâD$ãE3…VãuâD$ãEWã;âD$PãEâD$Tã¡âT$Xâ\$@âL$(â|$0âD$\âD$âL$âL$ âL$,8GSÖV  9K$èM  ÄªÃ   äE(u<Ö9  ãÀËÑ‚  Ö¿Ö*  ãT$ãÀË
ˇˇˇÖ¿Ö  9D$$Ñﬂ   ãT$XçD$PVãÀËŒˇˇã–âT$Ö“àÓ
  ÆËÄø±    u,ãT$$ãÀËà"  É~ ãT$uÖ¿tãOã@<j;AXD–âT$ãD$çL$`Ph<	Rã”âD$hËØªˇˇãt$$ã÷ËºˇˇçF3“PãÀË«ˇˇãât$ÖˆÑv
  ãL$3¿@;»u#ãGã@;F<tÆËˇ6hD	SË+ê¸ˇÉƒÈö  ˆFÄt6ãŒÆËË∏ŒˇˇãL$âD$,Î"ã≥Ë   ât$ÖˆÑ
  ãV<ãœËd‚  ã»âL$ãGj¡·hÄÌˇ6¡âL$dâD$ËIë¸ˇÖ¿u8á±   u9D$$tˇ6hx	ÈzˇˇˇäF+<uhî	SËôè¸ˇYYÈ	  <uh∞	ÎËãD$\Ö¿Ñ∂   ããœj ˇpË j¸ˇã»âD$(Ë“è¸ˇã¡Ö¿Ñœ  ˇ6ã–ãÀh<	ËıÃˇˇÖ¿Ö∑  ÄªÃ   É  8á±   uãT$(ãœPË¿¬ˇˇÖ¿tˇt$(h‘	È‹˛ˇˇãD$ãœãT$(ˇ0ËÛ≈ˇˇÖ¿tlÉ}$ uˇt$(h¯	È≥˛ˇˇÉ{t ãÀãT$EKtËÜ  ãÀËŒˇˇÈ<  ãF3…AÎã@AÖ¿u¯Qˇ6h	WËSÇ¸ˇÉƒâD$(Ö¿Ñ  ÄªÃ    t˛@ÄªÃ   sVãD$π˝É|$ã PâD$H∏Ñ‰j D¡ãÀPjZË±ºˇˇÖ¿Ö»  ˇt$D@ãÀˇ69D$ ˇt$0jZE–ËçºˇˇÖ¿Ö§  ãT$Ö“ucøF"ãN¿jZf	T¡˛ãL¡âL$HË÷å¸ˇj âD$PãœçD$LPj;ZË¯ ˇˇãã–Ë0ˇˇâD$Ö¿ÑT  ãM 3¿∂—É˘ˇE¬ãT$k
àD¸Î-ãã;ÅÄ   ~h<	h®ÎSË¶ç¸ˇãT$(ÉƒÉ{$ Ö  3¿âD$49~3çrãÿãÄ9puãIËFå¸ˇãT$@ÿãD$4@É∆âD$4;|⁄â\$ã\$@ãL$(ã¬É¿âD$4Ëå¸ˇãL$,âD$DÖ…t∑I2Î3…AçT$ RãT$B¬ãT$ P∑f—ãœË±˙ˇˇÄS ãât$HÖi  ãD$DãL$ âçP—@Pˇt$,âT$@Qˇ bãL$\Éƒ∂E(ãT$É‡àN6˜ŸâD$D…âVjX#»ãF8É‡˜»É·¸L$DâN8ãGãL$XãDâFãD$∑ ã»fâF2âL$ ãL$TÖ…t&j QjãÀË–ˇˇãD$TÉd$T ãT$âF$∑F2ã»âL$ ÄªÃ   ∑»ãD$ã@ä@LàD$?rãD$Éd$ âF(Éd$ ã¡3…f;L$ É®  ãL$4ã	ËF÷ˇˇãD$4ãÀj ˇ0j Ë`ˇˇ3“9S$Öd  ãD$4ãËˇˇãL$Ä8¶t8;ãË   Ñ7  9V(uãD$âF(âT$ã|$j˛Xã–ãFR[fâxÉf8˜ã|$0ÎMøP Ö“yøQ Î4ã¬¡‡âD$ ãAã\$ ˆDuÉf8˜ã|$ ãAˆD ã|$0tÅN8   ãFã\$fâXãD$4ã\$@ã Ä8pu4ãpãŒËä¸ˇçxWVãt$@Vˇ bã∆ât$ãt$TÉƒçã|$0âL$8ÎÖ“x¡‚Qã Ëû≈ˇˇâD$Ö¿u	∏§çâD$Äø±    uã–ãÀËÙ  Ö¿tPãT$ãF ãL$âêãD$4∂H3¿Ä|$?B»ãFÉD$4àB∑F2âT$ã»;–}/ãT$ÈÇ˛ˇˇh(	SËúä¸ˇYYÖˆt	ã÷ãœËÔ¡ˇˇãt$É∆Èá  ã¡ÎãT$É|$, ∑¿Ññ   ãT$,3…Éd$H f;J2Éï   ã|$Hã»ã\$ãB∑…WR∑xã—âD$@ã¡ãŒâD$PË¯€ˇˇãT$,Ö¿t∏ˇˇ  fF4ãD$H∑¿Î(ãFãL$8fâXãB ãN ã∏âôãBãNäàC∑F2∑»G∑B2;¯|ìã\$@ã|$0ÎãFÉ…ˇfâPãF «ê§çãŒË4  ÉªË    uãŒË˝⁄ˇˇãŒË–€ˇˇÉ|$$ ãT$t[∑N4øB";»|OÉN8 3¿øJ"âD$8âL$HÖ…~9øR âT$ ;¬tã–ãŒË»ˇˇfÖ¿xãD$8ãL$HãT$ @âD$8;¡|ŸÎÉf8ﬂãT$;ìË   Ö´   ãJâL$Ö…Ñú   ∑V2∑A2f;¬u|3“âD$ âT$,Ö¿tfã|$ãNã\$ âL$8ãG+¡âD$Hfãf;u5ãD$,ãV ãO ãÇãÅËä¸ˇãT$,Ö¿uãL$8BãD$HÉ¡âT$,âL$8;”|¬ã\$@ã|$0ãL$ãD$ ;–ts∑V2ãIâL$Ö…ÖlˇˇˇãT$ÄªÃ   É9  Äø±    Ñ”   É|$$ Ñ†   ãá¨   ãŒâF,Ëù”  Ö¿Ñà   hî	SË>à¸ˇYYπ  Ë„ âCÈê˝ˇˇäA6äV6:¬t)<tÄ˙tj hh	SË
à¸ˇãL$ ÉƒÄy6uäF6àA6Ä}(uãA8É‡¸D$DâA8ÄªÃ   Ç=˝ˇˇãÉÏ   âFâ≥Ï   3ˆÈ'˝ˇˇãNãÉ¡VËü¸ˇÖ¿tWË	c¸ˇÈ
˝ˇˇ3¿@	GÈY  ˆBÄtãD$$Ö¿ÑK  ˇC,ãÀãC,âD$ËÒˇ  âD$0Ö¿Ñ–¸ˇˇˇt$3¿ãÀçPËñ  ãL$03¿PPP∫≥   Ë¥˛ˇãL$0∫ë   jˇt$âF,ˇt$ Ëô˛ˇÉ} tDãìƒ   ì¿   ãD$\ã +ˇ0Äzˇ;çAˇE¡É|$T Pπ®	∏ÿ4	E¡Ph∞	WËìz¸ˇÉƒÎ3¿ãL$XPˇt$âD$XãD$ˇ0ãGˇ6ˇ4hƒ	SË|πˇˇãT$lÉƒÖ“tãœËn\¸ˇÉ|$$ tOˇt$ã÷ãÀËSÒˇˇãT$ãÀË•‘ˇˇj Qˇ6h 	WË%z¸ˇãT$,ÉƒãL$4PËn˛ˇãL$03¿j @∫§   Pj Ëø˛ˇãV,ãL$0Ë≈˛ˇãItâHãD$$Äø±    uÖ¿tÄªÃ   Çà˚ˇˇâ≥Ï   Èä˚ˇˇãL$ãAâFâqÈx˚ˇˇÄy6çQtãÚãÖ…uÔÎÄx6tâçpãââãÖ¿uÈãD$TÖ¿t	ã–ãœËvˇˇãD$Ö¿t	ã–ãœËx*ˇˇãT$$ãœË$  ãD$(Ö¿t	ã–ãœËc[¸ˇãå$î   _^[3ÃË| ãÂ]¬$ SVWãÒj[∑F2ã~f;ÿrãÿãNjcZ∑A&f;¬}ã¬fâQ&É~$ ∑»çAˆ∑–ã¡D–çPçGfâh≠Pˇ b∑F2çKÉƒã–;»wjXfâOA∑V2; ~Ä~6 t	∑¬3…fâG_^[√UãÏÉÏSVãÒWã˙ãâU¯ÄzS Öd  ËV÷  Ö¿ÖW  ˇwãWãM¯Ë¿ªˇˇãÿÖ€u39EuçGPh	VËØÑ¸ˇÉƒÎãWãŒË~	  ãŒË‚√ˇˇ∆FÈ  ˆC8tj h0	VË}Ñ¸ˇÉƒÈı   ãSãM¯Ë·÷  ãIã–ãCâEã¬¡‡É˙âEÏâU¸ãπ˝PâEÙ∏Ñ‰j D¡ãŒPj	ZËà≤ˇˇÖ¿Ö®   ˇuÙãEãŒÉ}¸ˇ0ˇ3jZj
XE–Ëb≤ˇˇÖ¿ÖÇ   ãŒËv¸  âEÖ¿ttˇu¸3“ãŒBË#	  ãM¯ˇ3ãEÏãIˇ4h|	VËê∂ˇˇãU¸ÉƒãŒˇ3h¿˙Ë‹ÊˇˇãU¸ãŒËÃ—ˇˇˇu¸ãS,ãŒË‹ÂˇˇãM∫ñ   ã3j j ˇu¸Ë˙˛ˇãMã–j VËB
˛ˇãM¯ã◊ËÏ  _^[…¬ UãÏÉ‰¯ÉÏãESVWã}ã⁄âL$ã?â8ã«ôãâD$3¿ã @+âD$ãD$ÉŸ ## ÒuC¬u3…ÎãD$§¬¿ã âD$ãEQˇt$ôRPË®$ ãL$RPã”Ë \¸ˇÖ¿uãEÉˇÎãÿØ}ˇuj ˚WˇbãEÉƒˇ _^ã√[ãÂ]¬ UãÏQQSVãŸãÚWã;ÖˆuRjãœËªZ¸ˇãÖˆu3¿ÎTãçE¸PçFãœPjË ˇˇˇÉ}¸ ãœâ}	ã÷Ë7   Î÷ãUË	øˇˇããU¸â—ÄªÃ   rãã–Ö“t
ˇuãÀË¬uˇˇã∆_^[…¬ SVãÚãŸÖˆt7W3ˇ9~~ãã¯Ö“tãÀËÎW¸ˇG;~|Íã_Ö“tãÀË◊W¸ˇã÷ãÀ^[ÈÃW¸ˇ^[√UãÏQã¬âE¸SVWÖ…t#ãY3ˆÖ€~ã9ãã–Ë'É¸ˇÖ¿tãE¸FÉ«;Û|ËÉ»ˇ_^[…√ã∆Î˜UãÏÉÏSã⁄âMÙVWã}ãâ]¯ç:âE;CÜâ   ã¬jY˜Èã»ãÚã«ô»ãEÙâM¸ÚãâUÙ∫»   9U|Rh∏	PËlÅ¸ˇÉƒ3¿Èœ   Öˆ|; vã 3ˆâM¸É¡ˇjHÉ÷ˇZã∆˜‚jHãã¡Y˜·ãMÙÚÉ¿Pã”É÷ VPËLZ¸ˇãÿâ]¯Ö€tµãE¸âCããuJ;÷|@k¬HÉ¿√É√âEç:k¿H+÷√BâEÙãEã]ÙjYãã˚Û•jHY+¡+ŸÉÍuÎã]¯ã}ãu;kŒHk«HâMPj çA√Pˇbç7Éƒ;}ãEÉ¿4jH√YÉˇ¡ÉÔuˆã√_^[…¬ UãÏQãSVWã⁄âE¸3ˇÖ€u4WãÿjPãÀËÿX¸ˇã3¿ÖˆÑä   @jHâFâçFWPˇbÉƒÉN4ˇÎ ˇ3jËw˛ˇˇãÖˆuãM¸ã”Ë°   3¿ÎQã]¸kHãUâE¸Ö“t'3¿9:D–Ö“tãÀËöºˇˇãM¸ãUâD1»ãÀËâºˇˇã¯ÎãUãÀË{ºˇˇãM¸âD1»ãE¸â|0ƒã∆_^[…¬ UãÏQWã˙âM¸Öˇt4S3€9~,Vçw4É> }ãA(âˇA(ãVËÖ“tãR ËÀˇˇˇãM¸CÉ∆H;|Ÿ^[_…√UãÏQSã⁄Wã˘Ö€Ñ≤   3¿âE¸9éú   VçsãV¸Ö“tãœËU¸ˇãÖ“tãœËU¸ˇãVÖ“tãœËU¸ˇˆF tãV8Ö“tãœËT¸ˇˆF tãV8Ö“tãœË’#ˇˇˇvWËMªˇˇÉ~ t	ˇvWË^⁄  ãV(Ö“tãœË3ˇˇãV,Ö“tãœËõ¸ˇˇãE¸É∆H@âE¸;åiˇˇˇ^ã”ãœËåT¸ˇ_[…√UãÏÉÏâM¯SãVWã}Ö“u)Öˇu9}t ∫‡	Öˇ∏‹	D¬PhË	QËâ~¸ˇÉƒÎˇuˇuËÌ˝ˇˇãÖˆu+Öˇt	ã◊ãÀËˇˇãUãÀË¸ˇˇãUÖ“t	jãÀË„◊  3¿Î_kHãE¯Ä∏Ã   âM¸r"ãT1»Ö“tãMÖ…tÉ9 uãMQã»ËâqˇˇãM¸ãUÉz tãÀËô∫ˇˇãM¸âD1ÃãEâD1‘ãEâD1Ùã∆â|1_^[…¬ UãÏQVãÚWÖˆt-ãUÉz v$k>HÉzuÉ: uÉL7ËÎã	ËF∫ˇˇÉL7Ëâ7_^Y]¬ UãÏSVãuãŸWã˙Öˆt:jˇ6Ëƒ˚ˇˇã»Ö…uãã÷ËÔ˝ˇˇÎ kHã˘PçFPçAPPˇ bãÉƒã÷ËS¸ˇã«_^[]¬ VãÒÖˆt"ãJÖ“~Wk˙HÉ«,˛äG∏Jàç∏Ö“Û_∆F, ^√UãÏÉÏSVWj j h	ãÒã˙jZâ}¯ãËX´ˇˇÖ¿uvãŒËpı  ãÖˆtiÉˇtT3ˇ9{~M3…âM¸ãCãDÖ¿tã@ˆ@t3¿Î
3¿É}¯	î¿@j PWjZãŒË¸˝ˇã◊ãŒË©˛ˇãM¸GÉ¡âM¸;{|∏j j 3“ãŒj BËÛ˚˝ˇ_^[…√QVWã˙ãÒj j π 	Éˇ∏	E¡ãŒPjZË≥™ˇˇÖ¿u!ãŒËÀÙ  Ö¿t3…Éˇj î¡3“QBã»RË£˚˝ˇ_^Y√UãÏQQSVãÒâU¸ãUWãË∞∏ˇˇã¯ÖˇtMãŒËâÙ  ãÿÖ€t7ãE¸ãŒj Wˇ4Ö$xj ZËI™ˇˇÖ¿uPPˇu¸3“ãÀËL˚˝ˇj˘Wã–ãÀËï˛ˇÎ	ãã◊ËéQ¸ˇ_^[…¬ UãÏQSVWã˘ã7ãFÉx u[ÄøÀ    uRãçE¸h  j PV3“Ë£^˝ˇãÿÖ€th0	WË~{¸ˇYYâ_3¿@Î$ãFãM¸j j âHãV`ËÏe˝ˇÉ¯uVË¥V¸ˇÎŸ3¿_^[…√QV3¿Wã˘@ã ”‡ãwTÖ∆u´÷âwTÉ˙uãœËeˇˇˇ_^Y√UãÏÉÏã¡âU¯SV3ˆâE¸ãW9s~?3ˇãSÉ|: t*ãM¯Ö…tã:Ë5|¸ˇÖ¿ãE¸uÉxt ã»ã÷EHtËäˇˇˇãE¸FÉ«;s|√_^[…√UãÏSVãuã⁄Wã˘ã÷ãGtÖ¿E¯ãœË[ˇˇˇãGP´_âGP_^[]¬ UãÏQSVWã⁄ãÒË˛Ú  É}ã¯uãVtÖ“EÚ∆Fj ˇuãœSjEZËÃ˘˝ˇæMã–QˇuãœË˛ˇ∂UãœËˇ˝ˇ_^[Y]¬ UãÏÉÏ0°∞	3≈âE¯ã¡âUÿSVãu3€âE‘ã Wã~ãHxâ]‰âE‡â]ËâMÏâ]fâ]Ù9^(tˇ6çE‡hx	PË´o¸ˇÉƒÎ^3¿f;F2sVãFøXãG…ã»âE‹Ö€tjhÑ	çE‡PËàj¸ˇˇ7çE‡PËÕj¸ˇjhÏ4	çE‡PËmj¸ˇˇu‹çE‡PË±j¸ˇ∑F2C;ÿ|™çM‡Ëk¸ˇjj˘PãF8π  ˇuÿ$∫  <D—ãM‘Ë…˛ˇˇãM¯_^3Õ[Ë? …¬ UãÏQQSVWã}ãŸâU¸∑G fÖ¿x#øãGˆˇ4ˇ7h¥¸ˇ3Ë≈l¸ˇÉƒ∫  Îˇ7hà	ˇ3Ë≠l¸ˇÉƒ∫
  jj˘Pˇu¸ãÀËW˛ˇˇ_^[…¬ UãÏQQSVWã˙ãŸâ]¸Ä+t[ãwÖˆtT3“É} tV∑F4ã⁄Ö¿t5ãF∑N4âE¯f9|ãN ãUãôË‡y¸ˇÖ¿t(ãE¯3“∑N4CÉ¿âE¯;Ÿ|’ã]¸ãvj ZÖˆuÆ_^[…¬ ã]¸ãW<ãË÷   P3“ãÀËë˝ˇˇjˇã÷ãÀË	„ˇˇÎÀUãÏÉÏãSVWãX3ˇâUâMÙâEÏâ}¸9x~>É√â]¯ããpÖˆtã}Ùã]ãVãœSË$ˇˇˇã6ÖˆuÔã}¸ã]¯ãEÏGÉ√â}¸â]¯;x|»_^[…√UãÏQQSVãÒã⁄Wâ]¸ã>ËE…  Ö¿Ö  Ö€u3“ãŒËqˇˇˇÈÙ   ãEÖ¿tÉ8 uHãã”Ë4¥ˇˇãÿÖ€Ñ’   äWPãœj SË’  ã”Ö¿tãŒË3ˇˇˇã”ãœË8M¸ˇÈ≠   ãœË,M¸ˇãEã]¸çM¯ã”QPãŒËÄ¥ˇˇâE¸Ö¿àá   ãU¯ãœË“≥ˇˇãÿÖ€twãU¸ÆËãO“ã—ã”PãœâE¯ËΩ™ˇˇÖ¿tj ã–ãŒÆËË'˛ˇˇÎçˇu¯ã”ãœËÛ≠ˇˇã”âE¯ãœË∂L¸ˇã}¯ÆËÖˇtˇu¸3“ãŒË¸ˇˇjˇã◊ãŒËé·ˇˇÎhî	VË¬v¸ˇYY_^[…¬ UãÏÉÏSVWã˙ãŸÉ{$ ∑W4∑G2âU¸âE¯Öì   ãw8ã¬+E¯ÉÊãŒ˜Ÿ…#»∑G2ÖˆQãD¬ã–Ë§‚  ã–âU¯Ö“tf3ˆ9u¸v6ÆËãG ã∞=§çu3¿Îã–ãÀËG  ãU¯âD≤ãGãJäàF;u¸|ÕÉ{$ ã¬t!ãG8π   Ö¡u¡âG8«C  ã Ë∞‚  3¿_^[…√UãÏQQSVãŸâU¸Wj jã3ãŒËÔM¸ˇÄ~S ã¯t ãUÖ“tãŒËâˇˇãUÖ“t)jãŒËQœ  ÎãEãU¸âGãEâGãË7≤ˇˇâäEàGã«_^[…¬ VãÚWã˘ãVÖ“tË>ˇˇˇvWË÷–  ãÖ“t	ãœ_^È-K¸ˇ_^√UãÏÉÏSã¡VWã}ãÚãâEÏâ]¸Öˇuã∆È¨   ãâEÖˆt_Ö¿tGÉeÙ É> ~>ã}ÙçFã]âE¯ããÀË^v¸ˇÖ¿uShƒ	ˇuÏËu¸ˇÉƒãE¯GÉ¿âE¯;>|‘ã}ã]¸kã÷j ãÀÉ¿$PË N¸ˇÎj j$ãÀË›L¸ˇãÿãE¸ÄxS tã◊ã»Ë)ˇˇˇãﬁÎk;ãujYÉ«˚Û•ˇã}ãM¸ã◊Ë]J¸ˇã√_^[…¬ ÃÃÃÃÃÃÃÃÃÃÃÃÃÃUãÏVãuÖˆt)W3ˇ9>~Sç^ãMã”Ëœ˛ˇˇGÉ√;>|Ó[ãMã÷ËJ¸ˇ_^]¬ UãÏÉ‰¯QSVWã˘ãÚÉø   t0ãUËtN¸ˇãÿÖ€t{SVã∑  ãŒWˇ∑   ˇ0cˇ÷ã”ãœË∆I¸ˇÉø   tPãœËnÌ˝ˇãÿÖ€tãUãÀj jjˇjˇË≠È˝ˇ≤ãÀËÌ˝ˇÖ¿tã∑  ãŒP∂GPPWˇ∑   ˇ0cˇ÷ãÀË∑˝ˇ_^[ãÂ]¬ UãÏQSVWã˙ãŸ3ˆãâE¸äñwãÀj PË…   Éx uãE¸FÉ˛|·3¿@ÎjPWˇ bÉg Éƒ3¿_^[…√UãÏÉ‰¯QSVWã˘ã⁄j â\$çè¨  Ë â¸ˇãpÖˆul9utgãÀËÌq¸ˇVãœçXçC<PËK¸ˇãÖˆtKçV<∆FSˇt$âRâV∆FâV(∆F,ˇ bãçè¨  ÉƒVË)ä¸ˇãÿÖ€tWË)N¸ˇã”ãœËÜH¸ˇ3ˆ_ã∆^[ãÂ]¬ UãÏSä⁄ãUÖ“tˇuËNˇˇˇÖ¿t∂Àk…É¡Ï¡ÎãA[]¬ UãÏÉÏVãuàUˇWã˘ãâE¯ÖˆuVˇuã»ËÆˇˇˇãÖˆtÉ~ uSˇu∂UˇãM¯Ëˇ˝ˇˇäUˇãM¯j ˇuËÉˇˇˇãÖˆtÉ~ u(ãM¯ã÷ËÇ˛ˇˇÖ¿t3ˆˇuh‰	WËr¸ˇÉƒ«G  _ã∆^…¬ SVWã˘ãÚãäô±   äyP∂√ä◊PVË)ˇˇˇÑ€uÖ¿tÉx uVPä◊ãœË>ˇˇˇ_^[√UãÏã¡VäæÒ;ÚtÉ˙˛uã@˜ÿ¿É‡Î4Ñ…x3¿Î,W3ˇG;Úãpã∆∂UjYEœÉ‡_;–uÉ¡Î#÷ˆ¬tAã¡^]¬ Vã4ç ﬂ	Wã˙ÎãN ã◊Ëór¸ˇÖ¿tãv$ÖˆuÎ3¿_^√ã∆Î˘UãÏQSã⁄Ö€~ZVWçyãwãŒËo¸ˇæ¡jôY˜˘ã¬ã÷ã»âE¸Ë¢ˇˇˇçWÙÖ¿t
ãHââPÎãM¸É' ãç ﬂ	âGâç ﬂ	É«(ÉÎu≠_^[…√UãÏÉ‰¯ÉÏSVã¬ãŸWã»âD$â\$3ˇ3ˆËo¸ˇãT$çãú  VâD$Ë5á¸ˇã@âD$Ö¿t>ãﬁˇuãUã»ãÛË¡˛ˇˇã»ãD$;ÀOŸ;ŒN«ã¯ãD$ã@âD$Ö¿u–â\$ã\$ãt$Ä} u{ÖˇtˆCt]ãt$3€jY∂∂ÄêìD$ô˜˘ã ã÷Ë∫˛ˇˇÎ(ˇuãUã»ãÛËP˛ˇˇã»ãD$;ÀOŸ;ŒN«ã¯ãD$ã@âD$Ö¿u–ÖˇÑè   É Öò   3¿8EE«Î}É˛}ﬂãt$ãÀj çF)PËÀG¸ˇã¯Öˇt_ãEçW(àãE∂»çFPˇt$âW RâOˇ bãW ÉƒÎ∂¿äÄêìàBäÑ¿uÓãW çãú  WËæÜ¸ˇ;«uã◊ãÀË#E¸ˇSË∑J¸ˇ3¿_^[ãÂ]¬ âGÈ^ˇˇˇã«ÎÎUãÏÉÏ(Sã]VWç}‹çs•çK•••çs(ç}Ï••••3ˇâ{0â{,â{(â{4ËDÑ¸ˇãuÙÎãV3…ËL ã6ÖˆuçMÏË'Ñ¸ˇãu‰â{â{â{â{ÎˇvWË´ˇˇã6ÖˆuÒçM‹ËˇÉ¸ˇçK8Ë˜É¸ˇ∑CNâ{H®tˇC_%ˆˇ  ^fâCN[…¬ SVã¬3€Wã˘Ö¿thpjTZã»ËQÕ˝ˇÎ
SjT3…ËÜF¸ˇãÖˆuWËÀI¸ˇÎ98^Lu4â^â^â^â^â^ â^â^â^$â^0â^,â^(â^4â^@â^<â^8â^D∆FM_ã∆^[√SVWçzãŸW3“Ë÷§ˇˇˇwãˇ3ËN™ˇˇâwÖˆtˇFˆG(tã◊ãÀË 3…Ö¿EÒ_ã∆^[√UãÏSVWã˙ãÒä_+Ä˚uãËƒÑ 3…ã@ã 9H4î¡Î:˜G  tˆGãt"ËA´ˇˇÖ¿u8FtÉ} u.Ä˚u)ˇ7h$	ÎËÜ“ˇˇã»Ö…t·ˇ7h	VËum¸ˇ3¿Éƒ@Î3¿_^[]¬ UãÏÉ‰¯ÉÏ<°∞	3ƒâD$8SãŸã¬ãMVãuãP<âL$ ãMWã;âL$ ãœâD$â\$ât$Ëóø  âD$ÖˆtãT$3ˆVVË ˇˇâD$Î3ˆât$VV3“ãÀËhÏˇˇãÿÖ€t&ãT$ãœãË-G¸ˇâCãœãD$ãW¿ã¬ËG¸ˇâCˇt$ ãL$3“h   ˇt$,VVˇt$$SË«  ãUãÿãL$çD$(âT$,ã”P∆D$,ât$4ât$@ât$8ât$<Ë Ö€tjã”ãœË∆  ãL$D_^[3ÃËNÙ ãÂ]¬ UãÏÉ‰¯ÅÏú   °∞	3ƒâÑ$ò   ãESVWã˘âD$H3…âT$DjQçÑ$ú   â|$tãÒâL$<PâL$lâL$Lât$$âL$DâL$HâL$hâL$pâL$`âL$XˇbãÉƒâ\$(9w$Ö˛  Ä{S ÖÙ  ãT$DãœËú˝ˇˇãât$$ÖˆÑ◊  j j jã÷ãœËçK ã»äF+àD$3¿@âL$XÖ…uQQã÷ãœËÖ@  Ö¿u!D$Î3¿@âD$ã÷ãœË†ÀˇˇÖ¿Öá  9D$Xã÷ãœï¿PËo˝ˇˇÖ¿Ön  ãV<ãÀËºΩ  ã»âD$ãC…ˇ4»ãœj ˇ6j	ZËÅôˇˇ3…âD$0A;¡Ñ9  ãL$D3“ãG(âD$ âT$PâA4ãO(AâO(ãFÖ¿tABâO(ã@Ö¿uÙâT$PÄ|$uããáÙ   âº$ò   âÑ$î   âèÙ   ãœË9„  ãÿâ\$hÖ€ÑÀ  Ä uÉã†   ˇt$ãT$ ãœË–ÔˇˇÄ|$u!ˇt$ ã÷ãœj j ˇt$TË˝ˇˇãD$ âD$`âD$4j çD$xj PˇbãD$Pçå$Ä   ãT$TÉƒâ|$tâD$xËäÒ˛ˇÖ¿ÖQ  ãL$(@3“ãI$#»ã¬¡t)8Wu$9Wxu8óï   uˇG,ãÀãG,RPRjFZâD$LËhÈ˝ˇãL$3¿@É|$0 ÖÃ   É|$H Ö¡   Ö…Öπ   8F+Ñ∞   ˇ6ãT$AQˇvãœËLôˇˇˆFÄu6ãL$@É»ˇã6Ö…∫è   E¡ãÀPãD$(ˇt$ˇpË¸Ë˝ˇjˇVã–ãÀËE˝ˇãt$$ãFâD$XÖ¿Ñ;  ã¯j ˇt$∫è   ãÀˇw,Ë∆Ë˝ˇãG8$<u#ˆFÄtãD$@ÉŒˇÖ¿ãÀEÉ ˇË≥˝ˇâpãt$$ãÖˇu∏ã|$lÈË  ˆÑ$å   @jE»XjÖ…ZE¬ˆFÄ∑¿âD$$u'3¿3…@âL$âD$,ãG,Q@PQjIZãÀâD$hâG,ËBË˝ˇÎOãŒËqßˇˇâD$j ∑H2ãG,âL$0ø…QçP¡âT$@ãÀãW(RâG,jsçBâT$LZâG(Ë Ë˝ˇãT$ãœâD$LËÈÔ˝ˇãD$,ãœãT$D∑¿âD$0ãD$ @Pˇt$(j j ˇt$XË‘ âD$$Ö¿Ñk  É¿jPçÑ$§   Pˇ bãL$03“BÉƒäA.àD$àD$p:¬tÉt ã«EGtàPÑQ0tj j ˇt$(∫ç   ãÀËjÁ˝ˇ3“BãD$@Ö¿tj RPjTZãÀËQÁ˝ˇãT$Ö“tOãD$,Éd$ ø»âL$0Ö…~1ã|$ãD$8ãÀ«PãBã÷øxPˇt$(Ëw%ˇˇãL$0GãT$;˘|◊ã|$lãD$8âD$Î,ˇG,∫Ö   ãG,ãÀj Pˇt$(âD$Ë›Ê˝ˇãD$0ø»ãD$âL$0Ä|$ Ñö   ãD$,ãL$(∑¿âD$,ãD$PÉ¿ôRPË§?¸ˇã»âL$Ö…uãL$$ËÏ( È;  ãD$P@P3¿@PQˇbãD$\ÉƒãT$ãL$ ∆D ãÑ$ú   Ö¿x+¡∆ ãÑ$†   Ö¿x+¡∆ ãD$LÖ¿t	ã–ãÀËÍÏ˝ˇˇO8ãG8âD$dÎyãT$Ö“tNˇG,ãG,Éd$, QQãâD$ËÅC  YPˇt$ãÀˇt$<ˇt$Hj_ZËÁ˝ˇˇt$0∫à   ãÀˇt$<ˇt$ˇt$HË…Ë˝ˇÎ3…∫ö   j APˇt$dâL$8ãÀËπÂ˝ˇãL$$Ë
( Ä|$tR3¿Ä|$âD$LuPPPjZãÀËèÂ˝ˇâD$LçD$`ã÷PçD$8ãœPˇt$ ˇt$,jjeËzk  äD$<uãT$LãÀË∆Í˝ˇÎäD$Ñ¿t=3…A8N+ãL$4Ñû   ãD$+D$ Ä< Ñå   ãD$,òPˇt$ˇt$lQjZãÀËË˝ˇÎmÉ|$ ãÀtNj j ˇt$Dj&ZË˘‰˝ˇä^+3“ãL$Ä˚âD$TE BQ3…:⁄EL$Qˇt$D3…j\ZA:Ÿã\$tãÀçB(E–ËΩ‰˝ˇÎˇt$j ˇt$dj-ZË©‰˝ˇâD$TãL$43¿ã÷@8F+uuãL$(Ë| ãœâD$hËÄä Ét ãœEOt3¿@àA8D$uj j ˇt$(ãÀjxZË[‰˝ˇ3¿@Ét u∆G ˇt$ãÀPj j
ZË=‰˝ˇjÙˇt$lã–ãÀËÉÎ˝ˇjZãÀË|È˝ˇÎ0ˇ¥$†   Ä ˇt$tî¿j∂¿Pˇt$<ˇt$$ˇt$xQˇt$xãœË  Ä|$ ãÀtãT$dËjÁ˝ˇãL$$Ë1& Î3É|$ ãt$Tj tçFPˇt$DjÎVj jZË±„˝ˇã÷ãÀË∫Î˝ˇãKtâHÄ uÉx uÉp tãœËºF  ãD$@Ö¿t/j 3…AQPjQZãÀËp„˝ˇ3¿ãÀçPËC¯˝ˇj hL	j 3“ãÀËò¯˝ˇã\$(ãt$ãå$ò   Ö…tãÑ$î   âÅÙ   É§$ò    ãT$DãÀË(‰ˇˇãD$HÖ¿t	ã–ãÀËM¸˛ˇÖˆt	ã÷ãÀËZ9¸ˇãå$§   _^[3ÃËsÎ ãÂ]¬ UãÏÉ‰¯ÉÏ$É$$ SVãŸWã˙â\$,ˇK8ãsãGãK8%Ä   Ä}$ ât$ âL$âD$(u"fãEÉ|$( òPˇuQˇuãŒjZj!XD–ËÅÂ˝ˇj j ã◊ãÀË8  Ö¿ãEuÖ¿u∂E âD$$ãE(âD$È&  ∂M ã–QWjj âL$4ãÀj ËØM ã◊âD$ãÀËÚ6  ãK,	D$øG"j çQARˇu¡âT$jNZãŒâC,Ë‚˝ˇ3…3“É»ˇâL$âD$f;W"}Rã\$ãT$É˙ˇtÉ˘/3¿@”‡Ö¬t&ã—ãœËJ°ˇˇòã◊@ãŒ√Pˇt$ ˇuË' ˇˇãL$ãT$øG"AâL$;»|∫ã\$,ˇt$ãUãÀˇt$(ãvtˇt$Wjj jËmL ãD$ ;ptã})fãEÉ|$( òPˇuˇt$ ˇujXj!YD¡ãŒã–ËN‰˝ˇÎãE(âD$3¿ã◊PPPˇt$ãÀËÒ1  ãD$Ä+Ñî   Pj ˇuã◊ãÀˇuË≈   3¿∫Ä   8EãŒj ï¿PˇuË·˝ˇÄ{ tãÖ…t∫˙Ë b¸ˇÖ¿uj˙ã◊ãŒË¶Ë˝ˇÄ}$ t
jZãŒË(Ê˝ˇãD$Ö¿x;Etj j P∫Ä   ãŒÆËËØ‡˝ˇjZ3¿ãŒ8U$E–ËıÂ˝ˇ3¿ã◊PPˇt$ãÀPËú<  ˇt$ãUãÀˇt$(ˇt$Wjj jËOK ãT$ãŒËÌ„˝ˇ_^[ãÂ]¬$ UãÏÉÏÉM¯ˇã¡Ée ˆBÄSãHVWâE¸âMÙu3…Îã Ëeüˇˇã»ãE¸ãrâMÏÖˆÑë   ã}ã]É} tÉ; tk;Òtg;}tbˇu¯çMËã÷ˇuQjj ˇuã»Ëd   ˆF8ã–âU¯t∑N2Î∑N4∑¡ãMÙPRW∫ä   Ëæﬂ˝ˇãMÙ3“BËÂ˝ˇãUËÖ“tãM¸ãIË+„˝ˇâuãvÉ√ãE¸GãMÏÖˆÖuˇˇˇ_^[…¬ UãÏÉÏSVãÒ3€ãMWã˙ãUãFâE¯Ö…t'9_$t ˇN8ãF8âçBQâF4ˇ1ãW$ãŒËÿ:ˇˇâ^4Îâã]É} tˆG8t∑G2Î∑G4∑¿ãŒã–âEÙË◊HˇˇâE‰Ö€t;EuÉ{$ t3€ãMÙ3“âUÖ…Ñ∆   !UÏã»ÆËâM¸Ö€t"ãC∑PâEËãGãMËf;PãM¸u	j˛Xf9EËuxãGj˛∑PZQf;¬uãEãŒ@âF4ãW(ãEÏãTË1ˇˇ3¿âF4ÎãWãNòPˇuË‚ˇˇãG3…ãUf9P|+ãE¯ã@tÖ¿~!k»ãE¯ã@pÄ|ÏUuãE¯ã»ãPtJËˇ‰˝ˇãUÉEÏBˇE¸ãM¸âU;UÙåKˇˇˇãE‰ãMÙÉ} tˇuQãM¯Pj_ZËﬁ˝ˇˇuÙãU‰ãŒË Hˇˇ_^ã¬[…¬ ÃUãÏQQãMSã]VãAã@˜ÿ¿3ˆâE¸ãAkIã@pãL¸ãâM¯∑@É‡?Ä∏@¿tFW3ˇG9}~/ãª∑BÉ‡?Ä∏@¿t)Qã≥Ë«˛ˇ3E¸ãM¯ã«L∆Gã;}|—ãMã≥ã	ËR”˝ˇ_^[…¬ ÃÃÃÃÃUãÏãEãMj jã jˇ∑@É‡?∂ê@¿ãï¯âË4˛ˇ]¬ ÃUãÏÉ‰¯ãEã∑AÉ‡?∂Ä@¿ÉËtHÉËtCÉËtÉËt9ãMã	Ë5—˝ˇÎ=≤ËŸ÷˝ˇã»Ö…t0ã—ÎA<¿rÎABä$¿<ÄtˆäÑ¿uÈ+ QÎ≤Ë°⁄˝ˇPˇuË
˛ˇãÂ]¬ ÃÃÃÃUãÏÉ‰¯ãEã∑AÉ‡?∂Ä@¿ÉËt7ÉËt&Ë”Õ˝ˇW…f/»vWpG	QQÚ$ˇuË˛ˇÎKãMã	Ëô–˝ˇÎ?Ë>Õ˝ˇÖ“*|Ö¿s$Ö¿uÅ˙   Äujˇh\	ˇuË!˛ˇÎ˜ÿÉ“ ˜⁄ãMRPã	Ë∆–˝ˇãÂ]¬ ÃÃÃÃÃÃUãÏÉ‰¯ÉÏSVãu3€Éd$  CÉd$ Wã>∑GÉ‡?äà@¿ãFàL$∑@É‡?äÄ@¿àD$Ä˘Ña  <ÑY  ä”ãœËëŸ˝ˇãNä”ã¯ËÖŸ˝ˇâD$Ö¿é  Ä|$u#Ä|$uQˇ6Ë÷˛ˇããEˇpË…˛ˇ3“âT$Î#Ä|$t.ãä”ËJ’˝ˇãä”ãEãHË;’˝ˇâ\$âD$Ö¿ÑË   ãL$Îhˇ6Ë•˛ˇã¯ä”ãœâ|$$Ë’˝ˇãÖˆÑ¬   ä”ãœËÒÿ˝ˇã¯ãEˇpËv˛ˇä”âD$ ã»Ë‚‘˝ˇâD$Ö¿Ñì   ãL$ ä”Ë¿ÿ˝ˇã»â\$ãD$âL$ÖˇtÖˆträàT$ãT$;œ>ÆËäD$8ãD$uQPVˇ(bãL$(ÉƒÖ¿tãT$COFÖ“tä$¿<ÄtÚ;œ~…;œ~3€SˇuË≈˛ˇãL$$Ëÿ˝ˇãL$ Ëÿ˝ˇ_^[ãÂ]¬ ˇuË˛ˇÎ€UãÏÉ‰¯ÉÏ,°∞	3ƒâD$(Sã]VãuWã}ãã@ âD$Éˇåô   ã≤Ë˛”˝ˇã–Ö“ÑÜ   Éd$ çOˇâL$çKâL$3€ãL$ãAxâD$(çD$PRçD$$â\$(PâL$(â\$0â\$8f«D$< Ë$P¸ˇãD$,Éƒã|$,Ö¿tà9\$(vˆD$1uçL$ËwK¸ˇÎãD$ hNjWã–ãŒËÑ˛ˇãL$4_^[3ÃË‚ ãÂ]¬ ÃUãÏÉ‰¯ÉÏÉd$ Sã]VWãK∑AÉ‡?Ä∏@¿Ñõ  É}uãC∑@É‡?Ä∏@¿Ñ~  ã∑@É‡?äÄ@¿àD$Ë¯…˝ˇÄ|$ãôã˙ãât$≤â|$uË—÷˝ˇˇ3âD$$Ë8˛ˇãÿÖ€Ñ4  ÎBË¿“˝ˇãÿÖ€Ñ#  3“âT$ Öˇ)|Öˆs#äãÀÑ¿tA<¿rÎAä$¿<Ät˜äBÑ¿uÈâT$ É}u+ãMãIËq…˝ˇôã˙ãÖˇ'|Öˆs!˜ﬁ«D$$   É◊ ˜ﬂÎãEã ã@ ã@xôãã˙ãT$É»ˇãL$Ö“g|Ö…sWãD$ ô»âL$T$ãT$Ö“f|Ö…s`Ò˙Öˇ|ÖˆsW¿fD$ã|$ãt$W¿fD$ãT$ãL$âT$âL$Î&Ö“|Ö…t»âL$–âT$ÎÖˇ|
Öˆt¯É|$$ t;ã¡âT$$+ŒâL$◊âT$Ö“%|Ö…sã|$$W¿fD$ããT$ãL$âT$âL$Ä|$u|ãD$ ôâT$$ã÷—ãœâT$ ãT$ ;L$$åû   
9D$ Üí   ã|$$ããD$+˙ÖˇèÄ   |ÖˆszW¿fD$ã|$ãt$Îgã¡¬täC<¿rÎCä$¿<Ät˜É¡ˇÉ“ˇÄ; u›Ä; ãÀt#ã∆«täA<¿rÎAä$¿<Ät˜É∆ˇÉ◊ˇÄ9 u›j+Àjˇã¡ôRPSˇuËˇ˛ˇÎãD$jˇWV√PˇuË
˛ˇ_^[ãÂ]¬ ÃUãÏÉ‰¯QQV3ˆÉ}Wã}u,ãO∑AÉ‡?Ä∏@¿Ñﬁ   ËW«˝ˇj^;∆	3…ãÖ¿HÒã∑AÉ‡?Ä∏@¿Ñ≥   Ëè«˝ˇÚ8G	(–f/ ÚT$áÑ   f/ËF	wzÖˆu0W¿f/¬v
Ú G	ÎÚ0F	ÚX¬Ë˚ ã»Ë∞˚ (–ÎFQQÚ$Vhp	Ë…J¸ˇãÉƒÖˆu
ˇuËà˛ˇÎ0jãŒË,U¸ˇPçT$ãŒË}X¸ˇVËõ+¸ˇÚT$QQÚ$ˇuËF˛ˇ_^ãÂ]¬ UãÏVãuWã˘ãMãã@ ã@xô;Ú|;»v
WË¯˛ˇ3ˆÎVQÆËËÛ)¸ˇãÖˆuWË˛ˇ_ã∆^]¬ ÃÃÃÃÃÃUãÏÉ‰¯QSVãu≤WãËœ˝ˇã≤ãÿË˝“˝ˇãÖ€tTãMôÉ¿É“ RPËzˇˇˇã¯â|$Öˇt9Öˆ~#ã◊+ﬂã˛∂äÄêà$ ˆ–"àBÉÔuÁã|$ãMã◊h HjVËƒ˛ˇ_^[ãÂ]¬ ÃÃÃÃÃÃÃÃÃÃÃÃUãÏÉ‰¯QSVãu≤WãËÉŒ˝ˇã≤ãÿËm“˝ˇãÖ€tEãMôÉ¿É“ RPËÍ˛ˇˇã¯Öˇt.Öˆ~ã◊+ﬂãŒ∂äÄêìàBÉÈuÓãMã◊h HjVËC˛ˇ_^[ãÂ]¬ ÃÃÃÃÃÃÃÃÃÃÃUãÏÉ‰¯ÉÏ°∞	3ƒâD$VãuçD$PjËåJ¸ˇãD$ãL$Ö¿|Ö…s%ˇˇˇ˜ŸÉ– ˜ÿPQãËè»˝ˇãL$^3ÃËi‹ ãÂ]¬ ÃÃÃUãÏÉ‰¯ãEVWãË¶ƒ˝ˇãÖ“|É˛s3ˆF3“ãMRVË˛ˇˇã¯ÖˇtWVËJ¸ˇãMã◊h Hj VËÇ˛ˇ_^ãÂ]¬ ÃÃÃÃÃÃÃÃÃÃÃUãÏÉ‰¯QVãuãˇp Ëãã ãRPË¸«˝ˇ^ãÂ]¬ ÃÃÃÃÃÃÃÃÃÃÃUãÏÉ‰¯QVãuãˇp ËÀã ãRPËÃ«˝ˇ^ãÂ]¬ ÃÃÃÃÃÃÃÃÃÃÃUãÏÉ‰¯QVãuãˇp Ë€ã ãRPËú«˝ˇ^ãÂ]¬ UãÏÉÏ$°∞	3≈âE¸Ée‡ SVWã˘ãÚãMâ}¯âuÙâMÏ∂AâEË∂âE‹äAàEÛä<Äs	G∂ÿâ}¯ÎçM¯ËoK¸ˇã}¯ãÿãMÏÖ€Ñ¥  ;]‹Ñ=  ;]uÄy u.çM¯ËCK¸ˇãÿÖ€Ñ  ã}¯â}‡ä<ÄÉ≠   F∂–âuÙÈÆ   3ˆçMÙ!u‰3ˇËK¸ˇãÿÖ€Ñ„   çM¯Ë¸J¸ˇã»É˘^u3¿çM¯@âE‰ËÁJ¸ˇã»É˘]uK;ŸÎ7É˘]tHÉ˘-u)ãE¯ä <]t Ñ¿tÖˇtçM¯ËπJ¸ˇ;ﬂr;ÿjXF3ˇÎ
;Ÿã˘jXDçM¯ËóJ¸ˇã»Ö…uµÎn9u‰tiã}¯ãuÙãMÏÈˆ˛ˇˇçMÙËtJ¸ˇãuÙã–ãMÏ;⁄Ñﬁ˛ˇˇÄ}Û t(∂√∂ äÄêì:Åêìu∏Ä   ;ÿsãMÏ;–Ç∞˛ˇˇ;]Ëu;}‡tãMÏÖ“Öõ˛ˇˇ3¿@Èu  ä<Äs	G∂ÿâ}¯ÎçM¯ËJ¸ˇã}¯ãÿãEË;]‹t;ÿuÖ¿t;ÿu–çMÙË·I¸ˇÖ¿uƒjXÈ1  Ö€u3¿È&  ;]uãEÏÄx uDçM¯Ë¥I¸ˇãÿÖ€t—ã}¯Å˚Ä   áµ   Ä}Û t\∂À∆E˙ äÅêà$ ˆ–"√àE¯äÅêìàE˘ÎBãuÙÎ,ˇuã÷çOˇPË•˝ˇˇÉ¯Ö∏   äF<¿rÎFä$¿<Ät˜ãEÏÄ> uœÈ`ˇˇˇà]¯∆E˘ ãuÙçE¯PVˇ‡b∆YYÄ8 Ñ>ˇˇˇã]ÏˇuçpãœSã÷ËH˝ˇˇÉ¯u_çE¯PVˇ‡b∆YYÄ8 u◊ÈˇˇˇãuÙä<Äs	F∂¿âuÙÎçMÙË–H¸ˇãuÙÖ¿ÑË˛ˇˇ;√u⁄ˇuã÷ãœˇuÏËÚ¸ˇˇÉ¯t∆Î3¿8ï¿ãM¸_^3Õ[ËRÿ …¬ ÃÃÃÃÃÃÃÃÃÃÃÃÃÃUãÏãUãMj[h∞çË∞¸ˇˇ]¬ ÃÃÃÃÃÃÃUãÏˇuãUãMh<xËè¸ˇˇ]¬ ÃÃÃÃÃÃUãÏÉ‰¯ÉÏ°∞	3ƒâD$ãM≤Sã]VâL$ã	ãWãp ãCãxËÕ˝ˇ;Üò   ~jˇhx	SË˛ˇÈ’   É}ÖÖ   ãL$≤ãIËÚ»˝ˇâD$Ö¿Ñ±   É ˇã»ËBM¸ˇÉ¯t	jˇhú	ÎπçL$Ë±G¸ˇ∂ã;Òt∂O;Òu=jçD$WPˇ b∂L$$ç|$$∂D$$3“Éƒ;ÒD¬àD$∂D$;u
àT$Î∂wãD$≤ãËj»˝ˇâD$≤ãD$ãHËX»˝ˇã–Ö“tãD$Ö¿tVWã»Ëm˚ˇˇ˜ÿ¿@PSËú
˛ˇãL$_^[3ÃËŒ÷ ãÂ]¬ ÃÃÃÃÃÃÃÃUãÏVãuWã}ãFkVãã@pˇt¸ãWËH˜˝ˇÖ¿t	ããËÊ√˝ˇ_^]¬ ÃÃÃÃÃÃÃÃÃÃUãÏãM∫êâj jjˇËŸ˛ˇ]¬ ÃÃÃÃÃÃUãÏãM∫(/	j jjˇËπ˛ˇ]¬ ÃÃÃÃÃÃUãÏÉ‰¯QVãu≤ãNËÑ«˝ˇãPh∏B	Ëvæ˝ˇPË»C¸ˇÉƒ^ãÂ]¬ ÃÃÃÃÃÃÃÃÃÃÃÃÃÃUãÏÉ‰¯ãE≤ãËG«˝ˇÖ¿tPË$¥ PˇuËõ	˛ˇãÂ]¬ ÃÃÃÃÃUãÏãEãËæ˝ˇPË}¥ ãMã–j jjˇË˛ˇ]¬ ÃÃÃÃÃÃÃÃÃUãÏÉ‰¯ÉÏL°∞	3ƒâD$HSVãuWã}â|$ã∑AÉ‡?∂Ä@¿ÉËÑ‰  ÉËÑd  ÉËÑ≤   ÉËtj jj∫‹4	È¥  QË˘˛ˇã≤âD$Ëz ˝ˇjYâD$˜Èj É¿ãœ[”RPËÙˆˇˇãÖˆÑè  ãT$ãÀÖ“~4ã\$ç~∂¡ËäÄ8úàGˇæÉ‡AäÄ8úàç; |Ÿã|$3€jˇ∆DV'ãœà\Vã÷jjˇf«X'Ë˛ˇVË"¸ˇÈ)  ≤ËÙ≈˝ˇãÖˆÑ  äW¿3€fD$ãL$ã”Ñ¿t)ãT$ã˚<'uÉ¬ÀGä7Ñ¿uÔâ|$ã|$âT$ãT$ÎãD$âD$ã¬ôD$—É¿ãœ”RPËˆˇˇÖ¿Ñ±   3…∆ 'AÎàAÄ>'u∆'AFäÑ“uÎ∆'ã–Ah HjQàÎnËØº˝ˇQQÚ$çD$(h<‡Pj2ÚD$$ËÊ@¸ˇÉƒçT$çL$ jjË˛M¸ˇÚD$f.D$üˆƒD{QQÚ$çD$(hÃ	Pj2Ë®@¸ˇÉƒjˇjjˇçT$,ãœËÛ˛ˇÎ	ã—ãËœ¿˝ˇãL$T_^[3ÃËk” ãÂ]¬ ÃÃÃÃÃUãÏÉ‰¯QQãE≤ãË•ƒ˝ˇâD$Ö¿tÄ8 tçL$Ë{C¸ˇPˇuËÌ˛ˇãÂ]¬ ÃÃÃÃÃÃÃUãÏÉ‰¯ÉÏSã]VWçù   ôRPË≤¸ˇã»âL$ãÒÖ…uˇuË	˛ˇÈ€   3ˇÖ€é∫   ãEã∏Ë,ª˝ˇÖ“|Ö¿rÖ“|=ˇˇ v
Éd$ ∏˝ˇ  %ˇˇ çVâT$=Ä   sàãÚÎgäÿã»Ä„?¡ÈÄÎÄ=   sÄ·ÄÈ@àãÚàFÎDÄ·?ã–¡ÍÄÈÄ=   sÄ‚ÄÍ àãt$àà^É∆Î¡ËÄ‚?,ÄÍÄàãt$ààNà^É∆G;}åJˇˇˇãL$j+Òh Hã∆ôRPQˇuËæ˛ˇ_^[ãÂ]¬ ÃÃÃÃÃUãÏÉ‰¯QSVãuWˇ6Ë¨˛ˇã≤ãÿË/«˝ˇjYã˜ÈãMÉ¿É“ RPË¨ÛˇˇâD$ã–Ö¿tEÖˆ~'ã˛∂ã¡É·¡ËäÄ8úàäÅ8úàBÉ¬CÉÔu€ãMç6h Hj∆ ãT$PËÍ˛ˇ_^[ãÂ]¬ ÃÃUãÏÉ‰¯QQãEãË∂π˝ˇÖ“|Ö¿sW¿f$ãT$ã$RPˇuËÀ˛ˇÖ¿t	PˇuËÓ˛ˇãÂ]¬ ÃÃÃÃÃÃÃÃUãÏÉ‰¯ÉÏ<Sã]≤VãuWããã@ âD$4ËU¬˝ˇâD$0Ö¿Ñ  ã≤Ë5∆˝ˇãNã¯≤â|$$Ë0¬˝ˇâD$(Ö¿ÑÍ  Ä8 uããËæ˝ˇÈ◊  ãN≤Ë¸≈˝ˇãN≤âD$Ë˘¡˝ˇâD$@Ö¿Ñ≥  ãN≤Ëÿ≈˝ˇâD$çGôã âD$QâL$ãÀPËQÚˇˇãÿÖ€ÑÑ  +|$j XPâ|$H_P^âD$ ât$,à.  ÆËãL$0ãT$(ŒâD$<âL$8ä:ãT$Öœ   Rˇt$,Qˇ(bÉƒÖ¿Ö¥   ãL$ãD$;¡éÖ   +¡ãL$ô»ãD$4âL$T$ÉÈâL$8ã@xãL$ôÉŸ ; è•   |
9D$8áô   ãD$ @âD$ ÖD$<u7ãD$ôãâ\$<ãD$$ã ô+ t$L$É∆ˇÉ—ˇQVãÀËÕ¸ˇãÿÖ€tIãt$,ãD$Pˇt$DçPˇ bãT$ÉƒãD$JÚÎãL$8äà3¿@¯Fât$,;t$D'ãD$ ÈÛ˛ˇˇˇuË`˛ˇˇt$<Î	ˇuË"˛ˇSË|¸ˇÎ9ãD$$+∆PãD$4∆PçPˇ bãD$0ÉƒãM+∆¯ã”h HjW∆ ËP˛ˇ_^[ãÂ]¬ ÃÃÃÃÃÃÃÃUãÏÉ‰¯ÉÏ$SVãuWã∑AÉ‡?Ä∏@¿Ñ  ≤Ë˝ø˝ˇâD$Ö¿Ñˇ  ã≤Ë›√˝ˇÉ}ã¯ãEu3ˆª«∫ìâ\$FâT$Éd$$ È¡   ãN≤Ë¥ø˝ˇãÿâ\$$Ö€Ñ¥  ä3ˆãÀÑ“Ñï  AÄ˙¿rÎAä$¿<Ät˜äFÑ“uËÖˆéu  jYã∆˜ÈÆËãMRPËÌÔˇˇã–âT$Ö“Ñd  ç≤ãÀ3ˆâD$Ä; Ñ?  âT$ ãÿ+–âäâL$ A<¿rÎAä$¿<Ät˜ã¡+D$ FâÉ√Ä9 u÷ãT$Öˆé  ã\$ãEã@ã@âD$,®tqÖˇtm3…âL$Öˆ~_ã¬+⁄ÆËâD$ â\$(Îã\$(ã;ﬂwSÆËˇ0ˇt$ˇ(bãL$(ÉƒÖ¿tãD$ AÉ¿âL$âD$ ;Œ|∆;Œ}\$+˚ãT$ã\$uóãD$,®tdÖˇt`3€Öˆ~ZãD$ãT$+–âD$ ÆËâT$,ãâL$(;œw$QÆËˇ0ã«+¡D$Pˇ(bÉƒÖ¿tãD$ ãT$,CÉ¿âD$ ;ﬁ|≈;ﬁ}+|$(u†É|$$ tˇt$ÆËË
¸ˇãT$ãMjˇjWËˇ˝ˇ_^[ãÂ]¬ UãÏÉ‰¯QãM≤SVWã	Ë”Ω˝ˇã}ã3¿âD$ããY ãK Å·   »ujˇh‡¸WË∞ˇ˝ˇÈè   É}uãE≤ãHËëΩ˝ˇÖˆtxçL$QPVSË˜Z  Ö¿tgãt$jˇVWËvˇ˝ˇÖˆtVÉ=@∞	 t<ˇ5ò‡	ËN¸ˇãŒË∆¸ˇ)†ﬁ	ˇƒﬁ	Vã5d∞	ãŒˇ0cˇ÷ˇ5ò‡	Ë¸ˇÎVã5d∞	ãŒˇ0cˇ÷_^[ãÂ]¬ ÃÃÃUãÏÉ‰¯QSVWj ˇuË¸˛ˇã}ãˇ7Ëê˛ˇÖˆtbÉ¯t]ÉFÉV ãÉ¯u=ËÀ≥˝ˇãÿã¬ãÀâD$ËîË ÚXäF
FÚu*ˇt$çNSËÜT¸ˇÖ¿tf«FÎËÒ≥˝ˇÚX∆FÚ_^[ãÂ]¬ ÃUãÏÉ‰¯QSVWj ˇuËl˛ˇãuãÿˇ6Ë ˛ˇÖ€tEÉ¯t@ÉCˇÉSˇÉ¯u Ä{ uãË5≥˝ˇãã˙ãŒËË )s{ÎãË~≥˝ˇÚÚ\»Ú_^[ãÂ]¬ ÃÃÃÃÃÃÃÃÃÃÃÃÃÃUãÏÉ‰¯QVãuj VËÌ˛ˇÖ¿tIÉx |CÉx v;Äx tjˇh\	VË»˝˝ˇÎ&Äx tÚ QQÚ$VËo˝˝ˇÎˇpãˇpËZ∂˝ˇ^ãÂ]¬ ÃÃÃÃÃÃÃÃÃUãÏÉ‰¯QVj ˇuË~˛ˇãÖˆt,ãVãNÖ“|"Ö…tË3Á ÚÚ^»QQÚ$ˇuË˝˝ˇ^ãÂ]¬ ÃÃÃÃÃUãÏÉ‰¯j ˇuË0˛ˇÖ¿tÚ ÎW¿QQÚ$ˇuË‘¸˝ˇãÂ]¬ ÃÃÃÃÃÃÃÃÃÃÃÃÃÃUãÏjˇuËÛ˛ˇÉ} tãMã	∑IÉ·?Äπ@¿tÖ¿tÉ ÉP ]¬ ÃÃÃÃÃÃÃÃÃUãÏÉ‰¯ÉÏVãuj VË´˛ˇÖ¿tãã@ÎW¿fD$ãD$ãL$PQãË@µ˝ˇ^ãÂ]¬ ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃUãÏjˇuËc˛ˇÉ} tãMã	∑IÉ·?Äπ@¿tÖ¿tÉ ˇÉPˇ]¬ ÃÃÃÃÃÃÃÃÃUãÏQãESVWã0ã}j(Wâu¸Ë˛ˇãÿÖ€tk∑N∑CÉ·?Äπ@¿ufÖ¿tRÉOˇ∆GÎHfÖ¿t2ãGkOãU¸ã@pãL¸ãGQãÀãpËÈ˝ˇÖˆtÖ¿xÎ»Ö¿~ƒãU¸Î
ãã÷ã@ âC ãÀËõµ˝ˇ_^[…¬ SVW3¿ã˘PWã⁄Ëé˛ˇãÖˆt3¿f9Ft	ãã÷Ëmµ˝ˇÖ€u
_ãŒ^[ÈÔØ˝ˇ_^[√ÃÃÃÃÃUãÏãM3“BË¥ˇˇˇ]¬ ÃÃÃÃÃÃÃÃÃÃÃÃÃÃUãÏãM3“Ëïˇˇˇ]¬ ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃUãÏÉ‰¯ÉÏSã]VWã∑@É‡?Ä∏@¿Ñß  ã}j$WË˛ˇãât$$ÖˆÑé  É}ããNã@ ã@xâFuÖ…tj,jVË∞/¸ˇÈ>  «F   È2  ãCÖ…≤ã»Ñ  Ëî∏˝ˇãK≤âD$Ë{º˝ˇã¯3€ãD$â|$Ö¿t
WPVËı/¸ˇÎã˚â\$çFâD$ ;~u	9^ Ñ€   ãF¡‡S9^ Öè   É¿PËè¸ˇã¯â|$ÖˇÑõ   ãNIâL$Ö…~{É˘rOçFãâT$çQˇçó;¯w;–s8ã¡%  ÄyHÉ»¸@+»É√;Ÿ|˘çAôÉ‚çãD$¡˘¡·¡ÈÛ´ãL$ã|$;Ÿ}#ãt$ ãâüC;Ÿ|ˆãt$$ÎPˇv Ë ¸ˇã¯ÖˇtãFÖ¿~ãL$âLá¸â~ Î∆F9^tVËÁ0¸ˇÎËnª˝ˇâFãE≤ˇFãËg∑˝ˇã¯≤ãEãËNª˝ˇÖˇtPWVË‘.¸ˇ_^[ãÂ]¬ ÃÃÃÃÃÃÃÃÃÃÃUãÏÉ‰¯QSVWã}ã∑@É‡?Ä∏@¿Ñå   j$ˇuË ˛ˇãÖˆt|ã≤Ë˝∂˝ˇã≤ËÈ∫˝ˇãN ã¯ãFHâFÖ…tÖ¿~9çÖ¸ˇˇˇPçAPQˇbÉƒÎ~3€;~|â^ÎÆËãN)~ˇvç9PQˇbÉƒ9^uˇv â^Ëî¸ˇâ^ _^[ãÂ]¬ ÃÃÃÃÃÃÃÃUãÏVj ˇuËrˇ˝ˇãÖˆtãMã÷ËÀ.¸ˇˇv ËZ¸ˇ^]¬ ÃÃÃÃÃUãÏWj ˇuËBˇ˝ˇã¯Öˇt0äG<u_]ÈŒ˙˝ˇ<u_]ÈÛ˙˝ˇWËM/¸ˇãMã–jˇjˇwË˜˝ˇ_]¬ SVWj[jXÖ“æ<x∫‹	ã˘Dÿ∏¨âE3¿PPPPPh†"VjjË} 3¿ãœPPPPPh†"Vjæ‹	jã÷ËÁ| j jjã÷ãœË~Àˇˇj jj	Xã÷ãœËlÀˇˇ_^	X[√UãÏQSVWã˙ãGÖ¿twã ãWj jPâE¸ËCÀˇˇãÿÖ€t_ˆCtYãujˇsVˇ bÉƒÉ}¸}3…Î%ãGãH0Ä9tu2ãIäÑ¿t)Äy u#:t:Ftä»àN3¿ãSãM¡Í˜“É‚@âÎ3¿_^[…¬ ÃÃÃÃÃÃÃÃUãÏÉ‰¯QVãuˇ6Ë~˛ˇÉ¯tÉ¯u&ãË(¨˝ˇ3¿W…f/¡ó¿É…ˇf/»G¡PˇuË˜˝ˇ^ãÂ]¬ UãÏÉÏ âUÙãUSVãÒ3…çB(âuËWãzãŸãâE‰âUÉˇu-ãuÙ∑F fÖ¿xKÖ“tãNò¿ã¡ËV<¸ˇÖ¿Öë   3¿Èí  9Mt"ã«Qã¡‡PËX¸ˇãÿÖ€Ñr  ãE3…ãUâãuÙãvÖˆÑ&  ∑F2;«Ö  Ä~6 Ñ  9N$Ö¯   Ö“u9ãF8$<ÖÁ   Ö€tÖˇ~ãUÉ¬$ãçRâãA;œ|ÛãEâ0ÈoˇˇˇãU3…Îôã—âU¸Öˇé¶   ãF∑PfÖ¿àî   ø»ãEÙ¡·ã@¡ã»âE‡Ë∆tˇˇãN Ö¿∫§çE–ãE¸ãÅËi;¸ˇÖ¿u]ãE‰3…âM¯âEÏãM‡ããËN;¸ˇÖ¿t,ãU¯ãEÏBÉ¿âU¯âEÏ;◊|‹ãM¯ãU¸;œt'BâU¸;◊åwˇˇˇÎÖ€t‰ãEãM¯ãU¸ãD»$âìÎÿãU¸3…;◊Ñ4ˇˇˇãvÖˆtãUÈ⁄˛ˇˇãMËÄπó    uãEˇpã ˇ0h¯
	QËÉ9¸ˇãMËÉƒÖ€t	ã	ã”Ë6¸ˇ3¿@_^[…¬ UãÏÉÏ(SVãŸâU‹Wâ]ËËÀ±  ã¯ãC(Hâ}ÿˇK8ãK8âEãEÖ¿ãEâM¯y∂@j QPj0ZãœËå∏˝ˇãEãp3…ãUâM‡âuÏÖˆ~@ãu¯fãäãËŸwˇˇãMj AòV¡ãœPj2ZËT∏˝ˇãEãM‡ãUAâM‡ãXâ]Ï;À|…ã]ËãuÏÉ}  ÖH  É} ãÀÖ—   Ëß!ˇˇãufãâEÙãË|wˇˇø»ãEj ˇuÙ@»QjOZãœËÛ∑˝ˇj j ˇuÙãœjZË‚∑˝ˇâE‡ãE;u(É}u"ˇuÙãœˇu¯ˇuj5ZËø∑˝ˇ∫ê   ãœËΩ˝ˇãEãuãÀjdPˇu‹ã÷Ë¢  ˇuÙãœj Vj!ZËé∑˝ˇj ˇu¯ãœj jZË}∑˝ˇãwtãœçV˛ËÇø˝ˇãU‡âpËwø˝ˇãOtãUÙâHãÀËˇ ˇˇÈk  ã÷Ë!ˇˇãÀâE‡Ë  ˇˇˇu‹ãMâE‰ˇq,ãœˇujdZË&∑˝ˇãUãÀËø˝ˇ3¿âEÙÖˆ~=ã]ÆËãMfãÅãËovˇˇãMòA»ãEÙE‡j PQjNZãœË‰∂˝ˇãEÙ@âEÙ;∆|Ãã]ËãEãM;Öú   É}Öí   ãGt3…@âMÙ∆âE‹Öˆ~oã]ÆËãEfãàãËvˇˇãMã}ãUÙGò¯ãAãI∑4Pã÷ËÍuˇˇãUò@Ef;r DEPˇu‹Wã}ÿãœj4ZËX∂˝ˇjZãœË¶ª˝ˇãMÙãuÏAâMÙ;Œ|öã]Ëj ˇu¯ãœj jZË,∂˝ˇãUVQãËò  YPˇu‰ãœVˇu‡j_ZË"∑˝ˇj ˇu‰ãœˇu¯ˇujZËÏ∏˝ˇãU‰ãÀËòˇˇãU‡VËﬁˇˇãM3ˆäAÑ¿u0ãã@ %   ∆u9stu8CujjˇVj∫  ãÀËÆªˇˇÎ-äAãUÖ“~Ñ¿uãCtÖ¿Eÿ∆C∂AãœVRP∫ú   Ëµ˝ˇãU¯ãœËˇ∏˝ˇVVˇuãœjxZËfµ˝ˇ_^[…¬ UãÏÉÏSã¡âU¸VWj ã∫Ø   ãÀâE¯ËÁ…˛ˇã¯Öˇt_ãUfÖ“xMãE¸f;P tDøÚã»ÆË¡ÊpËÑtˇˇø–ãŒãE@¬âGäFàGËpˇˇÖ¿uãCã ãM¯ã◊PËd¿˛ˇã¯Î
ãEâG∆GDã«_^[…¬ UãÏÉÏT°∞	3≈âE¸ãEâE–ãESâE‘ãŸãEâE»ãEâEºãVâEÃ3ˆWã}3¿âU∏â}ƒâu¿âE∞Ëî≠  ã»âM¥9u}ãE‘VV∂@Pj0ZËj¥˝ˇâE∞ãE‘3…É ˇâMÿ9HéÖ   ãE–Ö¿t	ã@∑HÎã¬Pˇuºã◊ãÀË’˛ˇˇâE¿ãE»Ö¿tãMÿ∑àãE‘ÎãE‘∑H$ã ø……ã@ˇ4»ãMÃj;ZË®»˛ˇPˇu¿ãÀj5ZË$…˛ˇPã÷ãÀËç ˛ˇãMÿããE‘AjˇâMÿZ;H|Äâu¿“;8ÖV  É} éL  ˆGÄuBRˇuºã◊ãÀËJ˛ˇˇãMÃããE∏∫¶   j ã@4âEƒË8»˛ˇÖ¿tãMƒâHÉ…ˇâx,fâH j4ÈÌ   ãE–3ˆ3…âuÿ3“âM»f;P2É–   ã@ã◊∑4HãÀVˇuºËË˝ˇˇãMƒã¯ø÷“ãIˇ4—ãMÃj;ZË’«˛ˇPWj-ZãÀËS»˛ˇãuÿã¯ãâE¨Öˆuã˜ÎdÖˇtcãFπ   #¡çQˇ;¬t	ãG#¡;¬u8ÄªÃ   s/ãSDãÀVË>÷˛ˇWã–âCDãÀË1÷˛ˇãM¨∫ö   hÎâCDËc«˛ˇÎWVj,ZãÀËﬂ«˛ˇãâuÿãE–ãM»ã}ƒAâM»∑@2;»ãE–å0ˇˇˇj3¿ZPVãÀË∞«˛ˇãU¿ãÀPË…˛ˇãj çE‹j Pˇbã}∏çM‹Éƒâ}‡ã÷â]‹Ë+∫˛ˇ3¿9C$u9PPPPVã◊ãÀËBÍ ã]¥ã¯ãE‘∫ú   j ˇu∂HQãÀË≤˝ˇÖˇtãœËhÙ Îã]¥Öˆt
ãMÃã÷Ë:À˛ˇãE∞Ö¿t	ã–ãÀËX∑˝ˇãM¸_^3Õ[Ëa∫ …¬ ãA<ãj çH8Ë˜H¸ˇã@√VWã˙ãÒÖˇt9Sã_ãSËáÀ˛ˇãSÖ“tãŒËı÷˛ˇˇsVËçç  ãWãŒËfÀ˛ˇ[ã◊ãŒ_^È›¸ˇ_^√SãŸ“VãCãD–ãpÖˆt9Wã~Ä+ u(ã0ÎãWãÀËçˇˇˇãW ãÀÉg ËˇˇˇÉg  ãÖˇu›ã6Öˆu…_^[√UãÏÉÏSVãÒâUÙWãâE¸ã@ % @  É» Ñ›   ã]Ä{+ Ö–   3ˇË™  ãÀâE¯ËˇˇˇÖ¿uJãK0Ö…Ñ∞   ãU¸Äy uãB %   É» uãIÖ…uÊÖ…Ñã   ˇN8ã~8ã]¯ãÀj Wjj0ZË£∞˝ˇÎã]¯ãUÙ3¿PPPQãM¸P∆Üó   Ëtœ˛ˇYã–ãŒË∂ƒˇˇãE¸3…àéó   ã@ %   ¡u'ãCtQÉ¿PQj0ZãÀËQ∞˝ˇjjˇj j∫  ãŒË=∂ˇˇÖˇt	ã◊ãÀË∫≥˝ˇ_^[…¬ UãÏSVWãz3ˆãŸÖˇ~$É¬$ã
ãEÉ<à }øC ;»uÉ} uFÉ¬;˜|ﬂ3¿_^[]¬ 3¿@ÎÙUãÏÉÏãBSVW3ˇâM¸âEÙÖ¿~røI"çZ(ãU¸3ˆÖ…~Z3…âM¯ãEÉ<∞ }øB ;u.É} t(É; ãE¸ã@tããËh1¸ˇÖ¿t6ãM¯ÎˆDu*ãU¸øB"FÉ¡âM¯;|≤ãEÙøJ"GÉ√;¯|ò3¿_^[…¬ 3¿@ÎÙUãÏÉÏ<°∞	3≈âE¸SVWã˘ã⁄â]Ïâ}»ãäáó   àE˜âMËãA % @  É» Ñ∏  Ä{+ ÖÆ  ãS<Ë
Ç  ãIã–ãs0“âEÃã—âE‡È2  3…âM–âMâM‹9Mt8ããFÖ…u˜ÿ¿ÎÖ¿tã–Ëô0¸ˇÖ¿tˇuã÷ãÀˇuËÇ˛ˇˇÖ¿ÑÁ  ãE‡Äøó    PtãVãMËËøbˇˇÎˇv3“ãœË°dˇˇãÿÖ€Ñ1  çEã”PçE–ãœPVËùÛˇˇÖ¿Ö  9EtãUÎ	ãF$çU¯âE¯3…âU‘âMÿ9N~aãEÏø@ 9äuÉäˇãEËÉ∏h   t<ãE–Ö¿t	ã@∑HÎ∑C ˇuÃãø»ãC…ˇ4»ãœËz[ˇˇãMÿÉËãU‘˜ÿ¿@âE‹AâMÿ;N|üˇ3ãUÃãœj ˇsËÎ]ˇˇˇG(ãEÖ¿tˇu‹ãUÃãœjˇPˇu‘Vˇu–SË“ÙˇˇÉ} tCÉt ã«EGtã@|Ö¿tã ;FuÄ~t%;F uÄ~tˇu‹ãUÃãœjˇuˇu‘Vˇu–SËâÙˇˇÉ} Ñì   ãUãMËË†¸ˇÈÉ   Ä}˜ Ñﬁ  ãEËÄxS Ö—  Ö€uhãœË.¶  ãVãÿÉeÿ çBCtâE‹Ö“~6ç~$fããËmlˇˇãMj ˇu‹Aò¡ãÀPj2ZËÊ¨˝ˇãEÿç@âEÿ;F|–ã}»∂F∫ú   j jˇPãÀËø¨˝ˇã]ÏãvãE‡ÖˆÖ∆˝ˇˇãÀËÕ˙ˇˇãÈ>  Ée‡ Ée É} tˇuã÷ãÀˇuËù¸ˇˇÖ¿Ñ  Ä~ uãEËã@ %   É» u9Gtu	8GÑÚ   çEã”PçE‡ãœPVËÅÒˇˇÖ¿tÄ}˜ Ñ›   ãEËÄxS Ö–   È¿   j j 3“ãœË¨ˇˇãÿÖ€Ñì   ãâSããâCˇBãG(âC4ˇG(É} tjˇˇuã”ãœˇuVˇu‡ˇuÏË˜ˇˇãMÖ…tDjQˇu3¿ã”9EãœVˇu‡ï¿ˇuÏäD0àEÁË‹ˆˇˇÄ~ uäEÁ<
t<tÉt ã«EGt∆@Éc ã”ã]ËãÀËÜ¨ˇˇÎã]ËÉ} t
ãUãÀË¡¸ˇã]ÏãvÖˆÖ∫˛ˇˇãM¸_^3Õ[Ë–≥ …¬ UãÏÉÏã¡âESVã ã⁄W3ˇâ]¸ã@ % @  «Ñ©   Ä{+ Öü   ãC0jYÖ¿t1ãpÖˆ~ çX$9~É ˇÎ
ã3“Bj”‚Y˙É√ÉÓu„ã@Ö¿u“ã]¸ãÀË¸¯ˇˇãâEÙÎRãMçE¯Ée¯ ã”j PVËˆÔˇˇãE¯Ö¿t0∑X2Ö€t%ãPj^∑
f;Œ~É»ˇÎ3¿@”‡¯É¬ÉÎu‰ãuÙã]¸ãvâuÙÖˆu™ã«_^[…√UãÏQãSV3€3ˆã@ C% @  â]¸∆Wã˙tÄ+ u9uu!ãœËg¯ˇˇÖ¿u9w0tãÛ3¿ÖˆEE¸_^[…¬ ã_0Î?ˇuã”ˇuËÏ˘ˇˇÖ¿t+ããCÖ…u˜ÿ¿ÎÖ¿tã–Ë“+¸ˇãM¸Ö¿jXD»âM¸3ˆFã[ãœÖ€uªË˛˜ˇˇãÿÎˇuã”ãœˇuËﬂ˘ˇˇÖ¿t	Ä{ u3ˆFã[Ö€u›ÈvˇˇˇjXÈvˇˇˇUãÏÉ‰¯ÉÏdã¡âT$ ãMSVWã8âD$3¿9Eâ|$<ï¿3€âD$DäTàT$Ä˙uãG %   √uRãD$DãtÅÑ“ÑT  ÖˆÖL  ãt$çD$0ãT$,PçD$<â\$<PQãŒâ\$<â\$$â\$ â\$0â\$@â\$,ËLÓˇˇÖ¿t3¿È  ãEãÀâ\$@9Xéﬂ  ãT$0«D$XàÊ«D$\   «D$`ÑÊ«D$d   Ö“tãäÎã@$âD$(ãD$8Ö¿t	ã@∑HÎãD$,∑@ ø»ãD$,…ã@ã»âL$PË'¸ˇãL$(âD$TãE¡·âL$(ã ã@ãâL$hËÕ'¸ˇSâD$pãœçD$lPj;ZËª˛ˇPSçD$XãœPj;ZËﬂª˛ˇPSçD$dãœPj;ZËŒª˛ˇP∫å   ãŒË[Ω˛ˇPj5ZãŒËPΩ˛ˇãL$ã–ãâT$HâD$LÖ…uâT$ÎnÖ“tjãA%   =    tãB%   =    u<ÄæÃ   s3ãVDQãŒË/À˛ˇˇt$Hã–âFDãŒËÀ˛ˇãL$L∫ö   hÎâFDËPº˛ˇÎRQj,ZãŒËÃº˛ˇâD$9]txSçD$TãœPj;ZËª˛ˇPSçD$hãœPj;ZËª˛ˇP∫å   ãŒËïº˛ˇPSçD$XãœPj;ZËÍ∫˛ˇPSçD$dãœPj;ZËŸ∫˛ˇP∫å   ãŒËfº˛ˇPj-ZãŒË[º˛ˇãT$ ãŒPË¬Ω˛ˇâD$ äD$<Ñ„   <
u99]Ñ÷   SçD$TãœPj;ZËà∫˛ˇPSçD$hãœPj;ZËw∫˛ˇP∫å   ãŒËº˛ˇÎ8<	u(ãEããQT$(ˆB`uË7aˇˇÖ¿tSSã–ãœË-¡˛ˇÎSSjxZãœË0∫˛ˇãT$$âD$(Ö“uãã–Ë1…˛ˇã–âT$$ÎDã
çy9zâ|$Lã|$<}
ãPËW…˛ˇÎ‹k¡çzãL$LæÏÇâ
jY¯Û•ãL$(ã|$<ãt$âLSçD$lãŒPË&À˛ˇãL$@ãEAâL$@;Hå!˝ˇˇãD$0Ö¿t	ã–ãœË\¸˚ˇãEã ã ã»âD$<ËS%¸ˇÄ|$ã»âL$@ucãD$<hH·jGâL$tãœZâD$lËr∫˛ˇÖ¿t∆@ãã–Ëg»˛ˇãL$ãSSSSSˇt$(çÑ$Ä   3“SPË†•ˇˇãL$4ã÷PËÄ  ãL$@âD$4â\$ˇá0  3¿fâá4  çAUSPãœË˛˚ˇãÖˆÑú   ˇt$@çF$ˇt$@çH0âD$ QâFâHˇ bãD$ ÉƒÖ¿tSjã–ãœËÆø˛ˇã»ÎãÀãD$ãT$$jâHãœË≤¬˛ˇãL$ãT$4jâAãœËÀ≈˛ˇãL$âAãD$ Ö¿t)ãL$SPjZË∫˛ˇâD$ Ö¿tSjã–ãœËOø˛ˇÎã√âFÉØ0  u∑ü6  ãD$fâü4  Ö¿t	ã–ãœË◊Ω˛ˇãD$ Ö¿t	ã–ãœË∆Ω˛ˇãD$$Ö¿t	ã–ãœË»…˛ˇãD$4Ö¿tjã–ãœËç~  ÄSuã÷ãœËçÚˇˇÈC˚ˇˇäD$<t<
uÉ} u	ãL$∆ÎãL$∆ÄÎãL$∆âÉ} âqãL$,ãA<âFãA<ãL$DâFãEâtàï¿àFã∆_^[ãÂ]¬ UãÏQSãŸVWã˙ãã@ % @  É» tMãœËÙÒˇˇãÎ>É} tˇuã÷ãœˇuËœÛˇˇÖ¿t"ˇuã◊ãÀVË ˙ˇˇÖ¿tj jˇuã–ãÀWËÌ ãvÖˆuæ_^[Y]¬ UãÏQSVãÚãŸWâu¸ã~0ÖˇtjÖ€t	Éª   u4ãOãGÖ…tâAÎÖ¿tãPÎãWãN<PÉ¡8Ë;¸ˇãOÖ…tãGâAãWãÀËYÒˇˇãW ãÀËOÒˇˇãwã◊ãÀËc˘˚ˇã˛Öˆãu¸uñ_^[…√UãÏQQÉ}eSãYî¿VãuW∂¿ã˙ãUˇ6âM¸PˇvËıRˇˇˆFÄuøF$ãÀãUPˇuˇvWË©•˝ˇÎ$ãŒË‰aˇˇˇuãUããÀˇv,WËô¢˝ˇãM¸ã÷Ëá™˝ˇ_^[…¬ UãÏQSVãÚWã˘É~ Öè   ãFâE¸∑F4ôÉ¿É“ RPËÁˆ˚ˇâFÖ¿u
WËA˛˚ˇ3¿Îi3¿3ˇf;F4sU3€ãF∑xfÖ¿xø»ãE¸…ã@äL»ÎfÉ¯ˇtãN(ãLË ¨˛ˇä»Ä˘A}±AÎÄ˘C~±CãFÉ√àG∑F4;¯|≠ãF∆ ãF_^[…√UãÏQQSVãÚãŸWâ]¯˜F   tRÉ} u*j˙Ë}©˝ˇÉ ˇãÀËø©˝ˇˇp∆ ]ˇpˇpj_ZËô°˝ˇÈ»   øF$j Pˇuj]ZËÇ°˝ˇj˙ã÷ãÀË=©˝ˇÈ¶   ã~ÖˇugãâE¸øF"@ôRPËÂı˚ˇã¯Öˇu
ˇu¸Ë>˝˚ˇÎ}3…3¿!M¸f;F"}&ã]¸3“ãFˆD uäDà9AøF"CÉ¬;ÿ|‚ã]¯∆9 ÉÈxÄ<9A~Òâ~Wˇ‹bãYÅÊˇˇˇ?t&É} ãÀtj Vˇuj^ZË‹†˝ˇã–ãÀÎÉ ˇVWË!®˝ˇ_^[…¬ UãÏQQSVWâU¯ãÒË¡ô  ã}âE¸Ä+uãã◊Ë&8 ãÿãE¸Î3€3ˆF9pt~Fã÷ã»Ëñ®˝ˇäÄ˘du#ãM¯9Hu%ãH;Ot/ãGÎ;H,t%ã@Ö¿uÙÎ
Ä˘´u9XtãE¸F;pt|∫3¿_^[…¬ 3¿@ÎÙÃÃÃÃÃÃÃÃÃÃÃÃUãÏãEÄ8¶u ∑@ fÖ¿xãUø»…ãBã@fãD»f	B3¿]¬ UãÏÉÏ8°∞	3≈âE¸SVãuãŸã¬ã÷WPãKâE–Ë¯˝ˇˇˆF@tFãKÉ ˇË’ß˝ˇäÄ˘^u(ãHÄ9 t,3“ãF∑D® u®@t∆@AÉ¬Ä9 u‰ÎÄ˘]u«@   3¿3“f;F"}$3…ã~∑D9®`t
Ä   fâD9øF"BÉ¡;–|ﬁãE–ÉeË ÉeÏ ˜ÿâu¯«E‰QâC43¿3…3“âEÃâM‘âU‹f;F"çπ   âEÿã~¯∑OÑ…yoÅ…   3¿fâOã◊ãŒfâEÙËÅYˇˇÖ¿t
ã–çM‡ËÃÜ˛ˇãU‹∏ˇ˛  f!GˆEÙÄt
ãEÿãœâM‘Î/ãŒ«EÃ   Ë6^ˇˇòã÷E–ãÀPWËé‹˛ˇãU‹∏ˇ  f!GãEÿãM‘É¿BâEÿøF";–âU‹ãEÿåhˇˇˇÖ…tÉ}Ã Ö>ˇˇˇˇ1hÿÏSË¸ˇÉƒãM¸Éc4 3Õ_^[Ë‡¶ …¬ UãÏQQãESVãÚ3“ˆ@Wâu¸ã˘Ñô   ãˆ@Öç   9Wtãﬂã@ãŒE_t…ãD»ã@HÖ¿t{ˆ@ÄuuÄx+tojYf9H"ufãspÖˆtãE9FtKã6ÖˆuıãRjËﬂˆ˚ˇã∫–HVãÀËäq  ãÄxS u:ãCpâãEâspâFãE¸âFãC,É¿âC,âFÉC,ãVã¬_^[…¬ ˇG$«G  3¿ÎÎUãÏÉÏSVWã˘ããGã_pâU¯âE¸Èì   ãKãB…ãs3“jdãD»ãœˇpHˇsËQ˙ˇˇãCçVˇãM¸ˇ0Ëîù˝ˇQãM¸h∞xjZËÎ°˝ˇã–Ö“tTçFˇârâB@çNjXfâB>çFâJâr4ârHâBXârpâr|âäî   â≤ê   â≤–   É( u«G(   ããU¯Ö€Öeˇˇˇ_^[…√UãÏÉÏSVWã˘ãOãã_pâM¸âEÈå   ãsãœãS¡ÊpâU¯Ë$ˇˇâEÙãE¸RãHtÉ¡QçJQj7Zã»Ë}ú˝ˇãF3“jeãœˇpHˇsËm˘ˇˇQãM¸h8ÉjZË°˝ˇÖ¿t9ãM¯jçQIâPâPâPHZâH,ãMÙfâP>ã—âH4âHDãœË“ˇˇããEÖ€Ölˇˇˇ_^[…√UãÏÅÏ‹   °∞	3≈âE¸ãESãŸâE†ãE3…âÖDˇˇˇã¡Vã3âEÄâÖ(ˇˇˇâÖ0ˇˇˇâÖXˇˇˇÉ»ˇWã}âïpˇˇˇâù<ˇˇˇâ}∏âçlˇˇˇâÖTˇˇˇâEòâMîâçHˇˇˇâçLˇˇˇàM∑âçhˇˇˇâMêâç,ˇˇˇâçdˇˇˇâµ\ˇˇˇ9K$Ö  8NSÖ  âM‡Öˇt)˜G   t 9O4uãGã◊âOãŒjâÖhˇˇˇËou  Ée∏ ãïpˇˇˇãÀËù≠ˇˇã¯â}àÖˇÑƒ  ãW<ãŒË'n  ã»âEåãF…ˇ4»ãÀj ˇ7jZËÌIˇˇÖ¿Öó  ãGã◊¡ËãÀ%ˇˇˇâE¯çÖ@ˇˇˇPj j~ËO˚  âÖ8ˇˇˇã◊äG+ãÀàE´ËÜ{ˇˇÖ¿ÖX  ãÖ@ˇˇˇã◊PãÀâÖ@ˇˇˇËP≠ˇˇÖ¿Ö:  ãÀË§ì  ãâu§ÖˆÑ&  Ä{ uÉé†   É}∏ uÉΩ8ˇˇˇ u3“Î3“BˇuåãÀË+†ˇˇÉ}† ãEâÖ4ˇˇˇuˇuåã◊ãÀPˇu∏Ë^"  Ö¿Öj  ãUåãÀWË—˚ˇˇãK,âÖPˇˇˇçAã–âÖ`ˇˇˇøG"@âUú¡âC,Ä+u
çQ@âUúâC,çBãWÅ‚@  âÖ|ˇˇˇ˜⁄“˛¬âïxˇˇˇãU†Ö“Ñ  ãB3…Ö¿~ãÉL»ˇAãB;»|Ò3“âU¨Ö¿é˙   øG"Ée∞ Ö¿é†   ãE†ãOâçtˇˇˇã âEÑã–âÖ$ˇˇˇãã»ËS¸ˇÖ¿t)ãE∞ãçtˇˇˇ@øW"É¡âE∞;¬ãÖ$ˇˇˇâçtˇˇˇ|œãU¨ÎPãUÑãE¨ãM∞âL¬ã¡ãïxˇˇˇ3…¡‡âEÑ∂¬ãU¨;U∞D»øG 9E∞ãEÑàçxˇˇˇã EMòâMòãOˆD`Ö  øG"9E∞|1ãE†ã ã–ã»âEÑËˆ¬˛ˇÖ¿Ñ  Ä}¯ Ö˙  ãU¨âUò∆Öxˇˇˇ ãE†BâU¨;PåˇˇˇÉ}∏ Ñ˜  ˇC,ãFtãK,âEÑ@Pj QjâçtˇˇˇãŒZËÜò˝ˇãÖtˇˇˇãÀÉe‰ Ée ãU∏âE‡3¿8Öxˇˇˇ∆E‹EÖ|ˇˇˇâEËøG"âEÏçE‹PËq   ãMËâMêÖ¿ÖŸ  ãÖ\ˇˇˇÄxS Ö…  É{$ Öø  ãïtˇˇˇãŒË:õ˝ˇãUÑãŒË†˝ˇÉΩ8ˇˇˇ ãNtâHãE∏ã@ã âE¨uãUåãÀWË!˜ˇˇÖ¿Ñ±   ãS(ãÀ∆E∑âUîçBâC(ËRˇˇã¯ËKˇˇj ˇu¨ãŒãÿRjsZËÆó˝ˇj j ˇu‡ãŒjZËùó˝ˇãM§ãWˇu¨ˇuêj_ZËâó˝ˇãM§j Sˇuîj}ZËxó˝ˇãM§SWˇuîj~ZËhó˝ˇãM§j Vj jZËXó˝ˇã÷ãu§ãŒË^ü˝ˇãNtã◊âHãç<ˇˇˇË„ ˇˇã”ãŸË⁄ ˇˇã}àãU¨ãM†Ö…Ö∑  Ö“é—  øG âEòÖ¿x9ˆG`t3çPˇÖ“x)ã ãÿ¡·É¡Oˆ`çCˇçID√ÉÍãÿyÌâ]òãù<ˇˇˇãU¨ˆGbt3øW"Ö“~(ãOãµlˇˇˇÉ¡ˆbçFçID∆ãÉÍuÌâµlˇˇˇãu§ãU¨øG"ãçlˇˇˇ+¡;–Ñ@  ÆËøG"R+¡PãÖpˇˇˇÉ¿Pht	SË˘¸ˇÉƒã}∏ãù\ˇˇˇãÀãïpˇˇˇËVóˇˇãÖhˇˇˇÖ¿t	ã–ãÀËåª˛ˇãÖDˇˇˇÖ¿t	ã–ãÀË∫ Öˇtjã◊ãÀËBp  ãU†ãÀËZîˇˇãÖdˇˇˇÖ¿t	ã–ãÀËTÏ˚ˇãM¸_^3Õ[Ëqû …¬ ˇ4h(	SËo¸ˇÉƒÈqˇˇˇˇuÑãÖpˇˇˇÉ¿PhT	SËO¸ˇÉƒ∆CÈMˇˇˇj çEºj PˇbÉMîˇÉƒãçhˇˇˇâ]ºÖ…tãã—çMºâE¨Ë%û˛ˇÖ¿ÖˇˇˇÈE˛ˇˇ3“âU¨È>˛ˇˇãEòâEò;QtˇqRh®	SË·¸ˇÉƒÈ„˛ˇˇãÖ\ˇˇˇ3“ãH$ã¬É·¡t-8Su(9Sxu#8ìï   uˇC,ãŒãC,RPRjFZâÖ,ˇˇˇËï˝ˇ3“Ä}´Ñù   çÖXˇˇˇãÀPçÖ(ˇˇˇPRjˇRjeã◊ËÏ  ãç\ˇˇˇâÖtˇˇˇj çÖ   PË¬Ì˚ˇâÖdˇˇˇÖ¿ÑR˛ˇˇãW3…9çtˇˇˇ~&ãµtˇˇˇã¯ˇC,ãC,âè∑B4C,AãR;Œ|Ëã}àãu§ãïdˇˇˇˇC,ãC,âäãÖ(ˇˇˇâEÄãÖXˇˇˇâÖ0ˇˇˇãçDˇˇˇÖ…Ñ™   äG+<uˇ7hƒ	È[˛ˇˇ<uhÙ	SË¡¸ˇYYÈƒ˝ˇˇããÀË¡ÇˇˇÖ¿Ö≥˝ˇˇãÖpˇˇˇãUÄãç|ˇˇˇâP4ãÖDˇˇˇâÖXˇˇˇÉ8 ãΩpˇˇˇâx ãΩ0ˇˇˇâx,ã}àâH$âP(t%ãïpˇˇˇãÀPË” Ö¿Ö_˝ˇˇãÖXˇˇˇãç|ˇˇˇãUÄã@âÖXˇˇˇÖ¿uÆÄ}∑ t"j j ˇuîãŒj&ZËèì˝ˇâÖHˇˇˇãFtâÖLˇˇˇÎBÉ}∏ t<j j ˇu‡ãŒjZËgì˝ˇâÖLˇˇˇâÖHˇˇˇãEòÖ¿xãMêj ˇuú»QjNZãŒÆËË<ì˝ˇÉ•lˇˇˇ 3“ãç|ˇˇˇ3¿âM∞âUåf;G"ç.  !ÖxˇˇˇøG ;–uj j QjJZãŒË˛í˝ˇÈÎ   ãïxˇˇˇWâUÑ∑B®bt?ˇÖlˇˇˇ® tIÈ    ®@tˆÖ@ˇˇˇÑπ   ÎµÉ}† uQãœË7Mˇˇã–ãÀËkÂ˛ˇÈò   É}† t>ã]†3¿9Cãù<ˇˇˇ~!ãU†ãuåã}†ãÉ¬92t	@É¬;G|Ûã}àãUÑãu†;Fãu§|Î¶É}¨ t†ãEå+ÖlˇˇˇÄ}∑ tQPˇuîj\È;ˇˇˇÉ}∏ tãUê;ï|ˇˇˇt%j Q¬PjOÈˇˇˇk–ãÖhˇˇˇQãÀãTË:‰˛ˇãM∞ãUåÉÖxˇˇˇBøG"AâUåâM∞;–åÿ˛ˇˇˇK8ˆÖ@ˇˇˇãC8âEàÑ  øW"ãÀBËé˚˛ˇãMòâE∞Ö…yjFÎrÄ}∑ PÆËtQˇuîãŒj\ZË•ë˝ˇÎãÖhˇˇˇk—ãÀãTËª„˛ˇj j ˇu∞ãŒj3ZË~ë˝ˇãM§ãj ˇu∞jˇjFZËjë˝ˇã÷ãu§ãŒËpô˝ˇãNtjâHãE∞âÖTˇˇˇ3¿Zj PˇµTˇˇˇãŒË:ë˝ˇãM∞øG$AHâçTˇˇˇPQˇµ|ˇˇˇãŒjNZËë˝ˇˆG`tãïTˇˇˇãÀWË	ÒˇˇÄ}´tˇµTˇˇˇã◊ãŒËÔˇˇˇuàøG"ˇµ4ˇˇˇãM∞ãï8ˇˇˇ+»IQWjj j~ãÀË©˚  øG"ãÀãU∞@PË±˙˛ˇÄ}´ÑL  äG+<uj ˇµ`ˇˇˇãŒj jIZËìê˝ˇäG+ãMòÖ…àØ   Ä}∑ tˇuúÆËQˇuîãŒj\ZËkê˝ˇÎ2É}∏ u,k—ãçhˇˇˇÆËãD
Ä8xuÄ+u|ˇuúÆËãT
ãÀËc‚˛ˇÄ+ãŒj t:j ˇuúj3ZË ê˝ˇˇµPˇˇˇãM§ãˇuúˇuÄj}ZËê˝ˇã÷ãu§ãŒËò˝ˇãNtâHÎãFtÉ¿Pˇuúj2ZË·è˝ˇj j ˇuújÎ2<t%Ä}¯ uˇµPˇˇˇãŒˇuúˇuÄj}ZË∂è˝ˇ«Eê   Îj ˇuúj jIZãŒËúè˝ˇÉeê ãÖPˇˇˇÖ¿~j ˇuúÆËãK∫ù   PËxè˝ˇˆG`tãï|ˇˇˇãÀWËhÔˇˇÄ+ã◊ujãç\ˇˇˇËŸ& ãÀãËE5 ˇµ`ˇˇˇøO"É¡QãM§jj
ZË-è˝ˇjÙVãu§ã–ãŒËsñ˝ˇãÖ4ˇˇˇãŒ∑–É¯jXD–Ë]î˝ˇÉ{t ã√ECt∆@Èê   ˇµDˇˇˇ3…çE¯QPˇuàãEòˇµ4ˇˇˇ¡Ë4âM¯∂¿PQˇµ`ˇˇˇãÀˇµ0ˇˇˇˇuÄˇµdˇˇˇË  3¿ã◊PPˇµ`ˇˇˇãÀPËNﬂˇˇÉ}¯ tÉæ‡    t3¿Î3¿@Pˇuêã◊ãÀj ˇµdˇˇˇˇµ`ˇˇˇˇµ0ˇˇˇˇuÄË!  ãÖ,ˇˇˇÖ¿tj jPjTZãŒËIé˝ˇãï8ˇˇˇÖ“t(ˇuàøG"ˇµ4ˇˇˇãç|ˇˇˇj+»X+»QWPj j~ãÀË¯¯  ãUàãŒËóë˝ˇÄ}∑ Ñí   ã}îãŒj ˇµLˇˇˇWjZËÌç˝ˇãïHˇˇˇãŒËÚï˝ˇãNtj j WjxâHãŒZËÀç˝ˇã}∏Ä{ uÉ{x uÉ{p tãÀË‚ˇˇãÖ,ˇˇˇÖ¿ÑA˜ˇˇj jPjQZãŒËíç˝ˇ3“ãŒBËg¢˝ˇj h	j 3“ãŒËº¢˝ˇÈ˜ˇˇã}∏Öˇt¢j ˇµLˇˇˇãŒj jZËVç˝ˇãïHˇˇˇãŒË[ï˝ˇãNtâHÈvˇˇˇÃUãÏãEÄ8¶u'∑@ fÖ¿xãUø»ãBÉ<à |fÉJÎãEfÉH3¿]¬ UãÏÉÏ °∞	3≈âE¸VWjçE‡ãÚj Pã˘ˇb3…«E‰‡dÉƒfâMÙâu¯Öˇtã◊çM‡Ëút˛ˇfãMÙÉ} _^u∏˝ˇ  f#»3¿fÖ…ãM¸ï¿3ÕËï …¬ UãÏÉ‰¯ÅÏ¨   ãE0SVWã˘âD$0ãÚâD$D3“ât$Lâ|$\ãˆFÄã_âD$HøF"âî$î   âT$làT$âî$Ä   âT$xâî$Ñ   âî$†   âT$tâî$à   âú$ê   âD$@uâT$4«D$|   ÎãŒË@KˇˇâD$4∑@2âD$|˜F   äM âL$XÑ>  ã¬âT$ã âD$âL$,Éd$8 É|$@ é2  3…âL$ ãV—âT$ãJÉ·âL$$ÑÔ   øF 9D$8Ñ›   ∑BÉ‡`âD$<tãD$Ö¿uãT$BâT$È¬   É}, ãD$8tã},É<á ã|$\}É|$< Ñò   Ä|$Xt(ãL$X∂…âL$$É˘u$É|$ u3…f9Ju#jYâL$$ÎÉ˘uﬁjYâL$$É|$ tÉ|$< tOã–ãŒËtJˇˇãMòA»ãD$$âL$<ÉËÑı   ÉËÑﬁ   ÉËÑ„   jZ+¬ÑÉ   3¿Pˇu$Qj2ZãÀËæä˝ˇãD$ãT$ãL$8ÉD$ A;L$@âL$8ãL$ åÿ˛ˇˇãL$,Ö“uÖ…Ñ‹   Ö¿Ö‘   @âD$Ö…éù˛ˇˇˆF`Ñì˛ˇˇãUãœVçRËaÍˇˇãD$ãL$,ãT$Èt˛ˇˇ3¿PPQj3ZãÀË=ä˝ˇˇt$<ãL$PãˇD$0ãT$Ë©Dˇˇã–ãœËí‹˛ˇã÷ãÀË&í˝ˇãKtâHãt$LÈGˇˇˇÉt ã«EGt∆@ãD$ˇ0ˇ6h¥¸ˇt$TË ˛˚ˇÉƒãÀãˇt$<ˇt$(h  jDZË≈â˝ˇj˘ã÷ãÀËÄë˝ˇ3“ãÀBËè˝ˇÎ†ãL$XãVâT$(Ö“ÑE  ãD$Hã@ %   É» Ö0  ãEÄ|$X˜–âG4∂¡jYE»3¿âL$,âD$@9é  çBâD$ ãU,ãH¸âå$å   Ö“t∂EPË7¸ˇˇÖ¿Ñ∑   Ä|$ uãEã÷@ãÀPËCÁˇˇ∆D$ˇO83¿ãî$å   ãO8âL$Ö“tãL$HPPËÄ£˛ˇãL$ãT$HâD$<ÄzS u
jQPWËﬁ˛ˇãT$<Ö“t	ãL$HË
¢˛ˇãD$,jY;¡u3¿ãÀPˇu$PjZËØà˝ˇÎ%jYÉ¯∫  jD¡3…QãL$(âD$4ˇ1ãœPËàéˇˇãT$ãÀËå˝ˇãT$@ãL$(BãD$ É¿âT$@âD$ ;åˇˇˇ3¿âG4Î3¿ãT$0ãNâD$<âÑ$å   âD$8âL$,Ö“Ñ  9u#äB3“Ñ¿ET$Dï¿âT$0çE   âD$XÈ·   Ö…ÑŸ   ãI@Ö…u¯âD$(âD$,k¿
QãL$L«D$@   PË‡˚ˇã»âL$8Ö…ÑÖ  ãD$(ãT$0ç¡3¿â\$(âJâD$9tIÉz t<ã»ãFÎ	;Btã@AÖ¿uÛÄ< u ã|$ãt$8∆â˛ã«ã˛ãt$LâL«@âD$3¿ãRÖ“u≥ãú$ê   ã»ãFã|$\Ö¿t,ã\$8ãT$ç”ã\$(Ä< uââJÉ¬ã@AÖ¿uÍãú$ê   ãD$H3“ãH ã@$âÑ$ú   ã¡% `  ¬u
âT$pâT$dÎj3¿Å·    »ã÷PãœPt$jË`Á  âD$pÖ¿u&PPã÷ãœËd‹ˇˇÖ¿uâD$dÎ4âD$xËQ‹ˇˇâD$dÖ¿t#ˇG,3…ãG,QPQjFZãÀâD$pË¢Ü˝ˇˇO8ãG8âD$tÄ} «D$(   ÑQ  É|$4 ÖF  ˇO8ãG8ãL$XâD$ ∂F*Ä˘t	∂—âT$$ÎjÉ¯YD¡âD$$ãL$0Ö…tKã—3¿9t9BtãRÖ“uâT$lÖ“tÄz jXED$(âD$$;—t3¿PPPjZãÀËÜ˝ˇã»ãD$$âL$xÎãD$$ãL$xÉ¯u&8D$Xt 3¿9FtÖ…uPPPjZãÀË–Ö˝ˇ@âÑ$Ñ   ãEÖ¿t Pˇt$$ãÀˇuj5Xã–Ë≠Ö˝ˇ∫ê   ãÀË˘ä˝ˇˇuãÀˇt$$ˇuj!ZËçÖ˝ˇãT$$ã¬ÉËtÉËtÉËtÉËteÉËtsÉËtIjXã–VãœË§åˇˇãT$ ãÀË€à˝ˇãT$0Ö“ÑŸ   9T$lÑœ   3¿ãÀPPPjZË,Ö˝ˇâÑ$Ä   ÈÎ   ˇuãT$43¿PVãœË  3¿ãÀPˇu$PjZË˝Ñ˝ˇÎüÉ|$d tRÉt ã«jˇEGtã÷jjãœ∆@3¿Pjˇuˇuˇuˇ¥$ê   Ëÿ°ˇˇ3¿ãÀPjˇt$ljTZËØÑ˝ˇ«Ñ$à      Î&3…9Nt9Otã«jˇEGtã÷Qˇuãœˇu∆@Ë"§ˇˇ«Ñ$î      ÈˇˇˇÉº$Ñ    t13¿ãÀPPPjZËSÑ˝ˇãî$Ñ   ãÀâÑ$†   çRˇËMå˝ˇãKtâHãT$0É|$< tãD$8ãHã âL$Î3¿ã»âD$ãD$,ãt$tât$$ãt$LâD$Ö¿Ñ´  ã|$tâ|$$ã}É<è ã|$\Ñ>  Ö“t2ã É9 t9AtãIÖ…uÔãD$xâL$lÖ¿t; uã–ãÀË¿ã˝ˇãKtâHãG8HÄ|$ âD$`âG8uãEã÷@ãÀPË¨·ˇˇ∆D$ãEãT$¬ãL$âD$@ãE˜–âD$D3¿9A$t;PãEãÀˇ4ê3¿PjIZËNÉ˝ˇãD$DâG4ãD$Qˇt$dãœãP$Ë…ﬁ˛ˇãL$3¿ãT$âG4ãEÉd$( ãêâD$h3¿âD$∑A4ã–f9D$(É∫   ãT$hB3¿âT$PâD$ ãt$ãA∑pãt$LâD$TòÉ¯˛u!ãD$DâG4ãD$ RãQ(ãœãTË4’˛ˇ3¿âG4Î?É¯ˇt)ã|$Tf;~ ã|$\t3¿ãŒPRãT$\ËBˇˇãMòA¡PjOÎ	3¿PRˇujPZãÀËyÇ˝ˇãL$ãT$PˇD$ÉD$ B∑A4âD$(∑¿âT$P9D$å\ˇˇˇãD$(∑–ãD$ãMˇ4Å∑¬ãÀPãD$p@Pj_ZË)Ç˝ˇÉ} ãL$t9L$4uÄ} uãT$`ãÀËíÖ˝ˇÈ_  ∂A6Ö¿tËãT$XÄ˙t∂¬Î	jÉ¯ZD¬ãT$lâD$Ö“tÄz jXjZD¬âD$É|$ ug3“9Qu`9L$4uZÉ¯uUãD$Hã@ %    âÑ$ò   tRRjã÷ãœË‚  Ö¿u/3“ãD$Hã@ % @  âÑ$ò   ÑZˇˇˇ9V0uãŒËáœˇˇÖ¿ÑFˇˇˇãD$ãÀ∑@2PãD$l@Pˇt$hˇt$LjZË,Ñ˝ˇâD$ ãD$;D$4uãL$hAÎãT$|ãœË€Í˛ˇã»ãD$É} âL$TuÉ|$uFˆFÄÖ?  3¿∫å   PQˇt$HãÀË„Ä˝ˇãMÖ…t$Qˇt$dãÀˇt$\j5Xã–Ë«Ä˝ˇ∫ê   ãÀËÜ˝ˇãM3“ãD$ÉËÑ~  ÉËÑu  ÉËÑl  ÉËÑP  HÉËÑ2  ãCt+D$ É|$d âD$tÉt ã«EGtˇÑ$à   ∆@É|$p tÖ…tRRˇu∫•   ãÀËAÄ˝ˇˇt$@ãD$8ã÷9D$ãœî¿∂¿Pj3¿Pˇ¥$å   ˇt$hˇuˇuˇ¥$ê   ËùˇˇÉ|$p tÉ} t3¿∫¶   PPˇuãÀËË˝ˇãD$dÖ¿Ñ  3…QjPjTZãÀËÃ˝ˇ3¿ãÀPPPjZËΩ˝ˇãT$$ãÀâÑ$ò   Ë5É˝ˇãD$3“ˇO8ãO8âL$$9P$tRQˇt$pãÀj2ZËÜ˝ˇÉ|$ éè   ãL$ ÆËã—ãÀË}á˝ˇjãçº$®   YÛ•ãÑ$§   <åtHãå$¨   ∂–ˆÇ0≠EL$$¡Ëæ¿Pˇ¥$∏   ˇ¥$∏   Qˇ¥$∏   ãÀË-Ä˝ˇãî$¶   ãÀËbÑ˝ˇãD$ãL$ HAâD$âL$ Ö¿Äã|$\ãt$Lˇt$ãœjXã–Ë4Öˇˇãî$ò   ãÀË‡Ü˝ˇãKtâH«Ñ$î      Èú  ãT$4;¬tW3ˇf;z2â|$(ã|$\sGã|$ãt$(ç1ãœPãBfãpË÷=ˇˇòãÀPˇt$Hj\ZËv~˝ˇãT$4FãL$T∑B2;|Õã|$\ãt$LãD$ãMÖ…Ññ˝ˇˇ∑J2ã@8ãSt$ãú$ê   —<âT$(ãD$hãT$T«D$D4   ç@D–âî$ò   3“ã¬âD$PÖ…Ñ¨   ãL$4ãQ ãœãÇËéåˇˇã|$4ããD$Pj5ãO∑A∑O2ã|$HI;¡â|$Hã«_D«9L$PâD$DãD$`ED$(ã»ãÑ$ò   D$Pj˛Vãt$TPâL$4QãŒË=ˇˇãMãT$TAò¡ãÀPËù~˝ˇçW[ãÀË÷Ç˝ˇãD$4ãL$Pã|$\AâL$P∑@2;»ã¡åYˇˇˇÈü¸ˇˇãMÈú¸ˇˇˇt$@ãT$4ãœˇt$VË0
 3¿ãÀPˇu$PjZË-}˝ˇÎˇt$ãT$ãœËtÉˇˇãT$`ãÀËõÄ˝ˇãL$hãD$TA;¡tˇt$|ã–ãœËÊ˛ˇãD$lÖ¿tKÉº$Ä    tAã@3…Ö¿t	9t9Hu/ãD$xQ@PQjZãÀË¡|˝ˇãî$Ä   ãÀË≈Ñ˝ˇãKtâH3¿âÑ$Ä   ãL$É|$< t,ãÑ$å   @ã»âÑ$å   âL$;L$,}2ãD$8ÆËç»ãHã ÎãD$,Aã@âD$,âD$âL$Ö¿t	ãT$0È]¯ˇˇãÑ$Ñ   Ö¿t#3…QPQjZãÀË2|˝ˇãî$†   ãÀË6Ñ˝ˇãKtâHÉº$à    ÑÉ   3¿ãÀPˇt$(ˇt$ljZË˚{˝ˇÉ|$4 uJãEÖ¿t Pˇt$xãÀˇuj5Xã–ËŸ{˝ˇ∫ê   ãÀË%Å˝ˇˇuãÀˇt$xˇuj!ZËπ{˝ˇVjXã–ãœËÙÇˇˇÎ3¿ãÀPˇt$xPjZËò{˝ˇãT$$ãÀË˝ˇˆFÄu1ãD$ãMˇ4ÅøF$ãÀPãE@Pj_ZËi{˝ˇÄ|$ u3¿ã÷PãÀËzŸˇˇãE(ãå$î   â_^[ãÂ]¬, UãÏÉÏã¬âMÙSV3“âE¯ãpã⁄âU¸WãyÖˆÑ¶   ãEãòÖ…ÑÉ   9V$tãGtRÉ¿PQj2ZãœËız˝ˇãEãòÉ}  ãF8î√$˛ÀÄ„<uãE¯ˆ@Ät	äE$
ÿˆF8t∑F2Î∑F4∑¿∫à   PçAPãE¸EQPãœËê}˝ˇ∂”ãœËÍ˝ˇã]¸3“ãEãvCâ]¸ÖˆÖcˇˇˇãE¯ãMÙˆ@ÄuvÄy uãUÖ“j ∂¬YE»Ä…ä—ˇuä¬É} ∂»∂¬D»ä¡É}  ∂–∂¡ãœD–ãEâU¸ˇ4òˇuj~ZËz˝ˇãEÙÄx uãU¯ãœj˙ËÃÅ˝ˇãE¸ãœ∂–ËQ˝ˇ_^[…¬ UãÏÉÏSã⁄VWã˘Ä{+uãEπ¸ˇˇâãEâ3¿È  ãS<ãË…L  ãuã»ãGâMËâEÖˆyãw(ãEã÷FÖ¿tâˆCÄuãEÖ¿tÄ8 tˇuSQãœËÑ÷ˇˇÎÉ}eã—ˇ3î¿ãœ∂¿PˇsËâ)ˇˇãEÖ¿tâ0ãK3¿âEÏâM¸Ö…tãUçBâE¯ãA8âuÙ$F<uˆCÄtãEÖ¿tãUÙâãU∆E Ö“tãE¯Ä8 t0ˇuËãUˇq,ãMˇuÙË˛x˝ˇãU¸ãœËÏÄ˝ˇ∂UãMË@~˝ˇãM¸ãUãEÏãI@ˇE¯âM¸âEÏÖ…uä;w(~âw(_^[…¬ UãÏQSVãÚWã˘∑N2f9O2Ö¿   fãG4f;F4Ö≤   äG6:F6Ö¶   3¿3€f;¡ÉÉ   ãÀâ]¸ãF∑XãGf;XÖÄ   fÉ˙˛uãG(ãV(jˇˇtãT
3…ËÊ‘˛ˇÖ¿u_ãFãOä:uQãG ãòãF É<ò u˜Ÿ…ÎÖ…t8ã—ãòËÔ˘˚ˇã»Ö…u(ãM¸C∑F2É¡âM¸;ÿ|ÇãV$3…jˇˇw$Ëä‘˛ˇÖ¿u@Î3¿_^[…√UãÏÉÏ@SãŸ3…Vãuâ]¯ãâEÙâM»âMÃâM‹Wã˙ÖˆÑ  9ã  Ö  9N@Ö  ãÀË»  Ö¿Ö˜  Ä+ÑÌ  3“É}uf9W |∂G*âEÉ¯u«E   ãN 3¿@9Öæ  9QÖµ  9V$Ö¨  9V0Ö£  9V(Öö  9V<Öë  9V4Öà  ÑFÖ  ãFÉ8Ös  ã@Ä8≥Ög  çA3“PãÀËB.ˇˇãâuÿÖˆÑM  ãF;GuãF<;G<Ñ9  ãNãG¡È¡Ë˜—˜–3»ˆ¡Ö  Ä~+ Ö  ∑O"f;N"Ö  fãG f;F Ö¯  ∏   ÖGt	ÖFÑÂ  3“3¿âU‰f;¡ç?  âEÏ«E`   ãOãV»–âM‡âUËfãAf#EfâE˛fãBf#Ef9E˛Öù  fÉ}˛ t-ã—ãœjˇËß0ˇˇãUËãŒPËú0ˇˇã–3…Ë≠“˛ˇÖ¿Öo  ãM‡ãUËäA:BÖ]  ã Ë1ˇˇãM‡âE¸Ë1ˇˇâE–Ö¿ãE¸u˜ÿ¿ÎÖ¿Ñ3  ãM–ã–Ëù˜˚ˇãM‡Ö¿Ö  ˆAtãEËˆ@Ñ  ˆA`uUÉ}‰ ~Oã—ãœË0ˇˇãUËãŒâE–Ë0ˇˇãU–3…Ö¿âE‘î¡3¿Ö“î¿;¡ÖÕ  Ö“tãE‘ˇpˇrˇÃbYYÖ¿Ö∞  ãM‰øG"AÉEÏ;»ãEÏâM‰åÀ˛ˇˇãGÎoÄx6 ãM‹jZE âM‹ãNâM‡Ö…Ñs  ã—ã»ËD¸ˇˇÖ¿uãM‡ãIâM‡Ö…ÑU  ãEËÎ›ãE‡ãMËã@,;A,uãF<;G<uπõ  Ë∑Û˚ˇÖ¿Ñ(  ãEËã@âEËÖ¿uäãWÖ“tãNjˇËê”˛ˇÖ¿Ö  ãMÙ3“ãA ãI$% @  ¬t	9W0ÖÂ  3¿@#»ã¬¡Ö÷  ãV<ãMÙËnG  ãÀâE‰Ëhm  ãU‰ãÿãE¯ã»Éxt EHtËãyˇˇãM¯ãUWãA(âE¸É¿âA(Ë“’ˇˇãM¯âE–Ë´›˛ˇ3…âE‡QPQjIZãÀËt˝ˇãM¯Ëë›˛ˇãU¸jeWˇuçRâEËˆ–ˇˇãEÙˆ@uX3…f9O }9Ou9M‹uãE3“BÉ¯t>;¬t:ãE¸QQ@ãÀPj&ZË∑s˝ˇããÀ3¿PPPjZË¶s˝ˇã÷âE»ãÀË¨{˝ˇãKtãuÿâH3“BˆFÄãM¯Ö  ãU¸jdVˇu‰Ëw–ˇˇ3¿ãÀPPˇu¸j&ZËbs˝ˇ3…âEÃf9O |uQˇu∫Ö   ãÀˇu¸ËDs˝ˇâE‹ãEÙˆ@u4ˇuãE¸ãÀj @Pj!ZË$s˝ˇãUããM¯WË^zˇˇã÷ãÀË{˝ˇãKtãuÿâHãE–Ö¿~Mj ˇuÆËPãE¯∫ù   ãHË‰r˝ˇÎ29OuãEÙˆ@uãE¸Qˇu@Pj}ZÎQˇu∫Ö   ˇu¸ãÀË≥r˝ˇâE‹ãEÙˆ@t3¿∫á   PPãE¸ãÀ@PËír˝ˇ«EËò   Î«EË©   ˇuãM¸QçAãÀPjZËmr˝ˇˇuãE¸ãÀˇu‡@Pj~ZËXr˝ˇãEÙˆ@uj˙WÉ ˇãÀËóy˝ˇãUËãÀËêw˝ˇj ˇu‹ˇu¸jZË(r˝ˇ3¿ãÀPPˇu¸jxZËr˝ˇ3¿ãÀPPãE¸@PjxZËr˝ˇÎ ˇ7RˇwãUË"ˇˇˇ6ãU‰ãM¯j ˇvË"ˇˇãGã}¯âEÏÖ¿Ñœ  ãFâEËÖ¿t%ã}Ïãã÷ãœË˙¯ˇˇÖ¿uãvÖˆuÏã}¯âuËãuÿãEËˇu‰ãÀˇp,ˇu¸jdZËèq˝ˇãUËãœË}y˝ˇˇuãEÏãÀˇp,ãE¸@PjeZËmq˝ˇãUÏãœË[y˝ˇ3¿ãÀçPËØv˝ˇ3¿PPˇu¸j&ZËHq˝ˇâE–ãEÙˆ@txãEË3“âU‹∑H4âM‘Ö…t0ã@ âEËÉ8 t%ãπ§çËÌÚ˚ˇãU‹Ö¿uãEËBÉ¿âU‹âEË;U‘|÷3¿ã»;U‘uFPPãE¸∫á   @ãÀPË›p˝ˇãM¸Ée‘ jZçA«EËê   âE‹Î:3¿ˆFÄã»tãEÏjä@8$<XD»ãE¸∫Ñ   âE‹ãE‡âEƒ3¿@âE‘∑¡ãMƒâEËˇu‘Qˇu‹ãÀË|p˝ˇãE¸∫à   j ˇu‡@ãÀPËfp˝ˇãUËãÀÉ Ë±u˝ˇãE–j @Pˇu¸jZËGp˝ˇãU–ãÀËOx˝ˇãKtâH3¿PPˇu¸ãÀjxZË&p˝ˇ3¿ãÀPPãE¸@PjxZËp˝ˇãMÏãIâMÏÖ…Ö1˛ˇˇãEÃÖ¿tã–ãÀËx˝ˇãKtâHãUãœËåŸ˛ˇãU‡ËÑŸ˛ˇãu»ÖˆtCÉp tË˚“ˇˇ3ˇãÀWWWjEZËπo˝ˇã÷ãÀË¬w˝ˇãKtWWâHãÀãE¸@PjxZËôo˝ˇ3¿_^[…¬ 3¿@ÎÙÃÃÃÃÃÃÃÃÃÃÃÃÃÃUãÏÉ‰¯ÉÏSVãu3€WãŒË¬ ¸ˇÖ¿uπŸ ËWK ÈÉ  9]øÿ4	ˇvE}Ëæ˚ˇ!^@9û$  t	3“ãŒË“Ó˚ˇÄ? ÑŸ  Éd$ çD$ Éd$ ã◊Éd$ ãŒPçD$ Pj hÄ   jˇË&F  ã|$ãÿÖ€Ö  Öˇuã|$ Î¥Éd$ Éd$ WË¡Ø˝ˇÉ} ãÿâ\$$Ñ  É˚dt%É˚eÖ	  É|$ Ö˛   ãF %   É» ÑÌ   É|$ u`∑áò   ãŒâD$j ç≈   PËp«˚ˇâD$Ö¿Ñ  Éd$ É|$ v$ã\$ãj j ã”ãœËµ˝ˇâûC;\$|Èãuã\$$«D$   É˚duXãT$3…ãD$âL$çêâD$Ö“~9QWË¥˝ˇãL$ãT$âäÖ¿uQWËï¥˝ˇÉ¯ÖØ   ãL$AâL$;L$|ÀãD$É$à ÎãD$ˇt$ãMPˇt$ˇuˇ0cˇUÖ¿u~É˚dÑ”˛ˇˇãœË∆ç˝ˇÉd$$ ãÿã|$ ÎG∂ˆÄêàuÛãD$Ö¿t	ã–ãŒËŒ√˚ˇÖ€ÑC˛ˇˇã|$$Éd$ ÖˇtãœËç˝ˇãD$Ö¿t	ã–ãŒË°√˚ˇÄ~S u*Ö€u&3ˇÎ-VË'…˚ˇÎŒj[ãœËNç˝ˇã”â^@ãŒ3ˇË¬Ï˚ˇÎ¥ã”ãŒËÄ…˚ˇã¯ã]Ö€t-Öˇt&VË9 ã–3…Ë“«˚ˇâÖ¿uj_ã◊â~@ãŒËÜÏ˚ˇÎÉ# ˇvËº˚ˇã«_^[ãÂ]¬ UãÏÉ‰¯ÉÏ4°∞	3ƒâD$0SVãuãŸãMã¬Wât$3ˆã;PâD$â\$8âL$0ât$<ât$ ˇ‹bYãL$ã–âT$(Ö…tâ1ãC %   ∆uÖ…Ñè  h‡¸Ë6·˚ˇãt$YâÈy  9t$,∏ 	ED$,âD$$Å˙  á  ˇt$ãw(ãŒWˇ0cˇ÷ã∏‰Ñât$âD$ ÖˆuWˇ0ˇt$h¥¸Ë◊‡˚ˇÉƒâD$0Ö¿Ñê   ãw(ãŒPWˇ0cˇ÷ˇt$0ãât$Ë™¡˚ˇãD$ É¿âD$ =ËÑ|≠ÖˆÑ~  ˇt$$Vãw0ãŒWˇ0cˇ÷ãÖˆÖá  9D$,Ö˚   ãL$ËﬂÍ˚ˇãçFôRPË£¿˚ˇâD$Ö¿uãL$ãw4QWãŒˇ0cˇ÷jXÈÇ  jYQh8	PâL$,ˇ bãD$ÉƒÉÓxä0Ä˘/tÄ˘\uÓj@hD	∆PË#Ì˚ˇ˜ÿ¿É‡˝É¿D$æÖ…t2ãT$j[É˘.t∂¡ˆÄêàt
äÅêìàCFæÖ…u›â\$ ã\$4ãD$ ãt$∆jhH	Pˇ bÉƒât$$Vˇt$ãw0ãŒWˇ0cˇ÷ãÖˆÖÇ   ãt$ÖˆtYˇt$$ˇ‹bã\$,,  Yj ÿY…QSËîø˚ˇâD$8âÖ¿t-ˇt$ˇt$(hP	PSË÷ﬂ˚ˇãw,çCˇÉƒãŒˇt$8PWˇ0cˇ÷ˇt$ãw4ãŒWˇ0cˇ÷ãT$RËÒø˚ˇÈ;  ãT$RË‚ø˚ˇhèçD$<ãŒPSˇ0cˇ÷Ö¿tH=   u3¿È  ãt$Öˆtˇt$8h|	Ë•ﬁ˚ˇYYâˇt$8Ëòø˚ˇˇt$ãw4ãŒWˇ0cˇ÷È–   ãÉ–   3…QãÀçÖ   PË(¬˚ˇãÖˆÑ'˛ˇˇãÉ–   Ö¿~¡‡Pˇ≥‘   Vˇ bÉƒãì‘   Ö“tãÀË¶ø˚ˇãÉ–   ãL$â≥‘   âÜˇÉ–   ÈPˇˇˇãL$3ˆãT$(Ö…tSÅ¬,  âT$(ˆVRËAæ˚ˇãt$âD$8âÖ¿t2ˇt$ã\$,h  hú	PSËzﬁ˚ˇãw,çCˇÉƒãŒˇt$8PWˇ0cˇ÷3¿@ãL$<_^[3ÃË@q ãÂ]¬ ÃÃÃÃÃÃÃÃÃÃUãÏVãuWˇvËp∑˚ˇˇuãUãŒˇuË«˚ˇˇÄ~S uÖ¿u3ˇÎã–ãŒËÁƒ˚ˇã¯ˇvËü∑˚ˇã«_^]¬ ÃÃÃÃÃÃÃUãÏÉ‰¯QSVWËE ãÖˆuijYËπ∂˚ˇãÿSË∑˚ˇ°ﬁ	3…ã}ãﬁ	Ö¿t
9<ätA;»rˆ;»u/j çÖ   PRËY¿˚ˇã»Ö…uj^Î°ﬁ	âﬁ	â<Å@£ﬁ	SË∑˚ˇã∆_^[ãÂ]¬ ÃÃÃÃÃÃÃÃÃUãÏVWjYË9∂˚ˇã¯3ˆWËâ∂˚ˇ°ﬁ	çHˇÖ…x&ãﬁ	Sã]9ätÉÈyˆÎH3ˆ£ﬁ	FãÇâä[WË±∂˚ˇ_ã∆^]¬ ÃÃÃÃÃÃÃÃÃË_ Ö¿u1VjYË‘µ˚ˇãVË&∂˚ˇˇ5ﬁ	Ë+Ω˚ˇÉ%ﬁ	 É%ﬁ	 VËg∂˚ˇ^√UãÏÉÏ°∞	3≈âE¸S3€âMCÉ=ﬁ	 VWâ]ÙÑÿ   3ˇjYËxµ˚ˇãVË µ˚ˇ;=ﬁ	r3€!]ÙÎ°ﬁ	ã∏VË∂˚ˇ3ˆâu¯Ö€t:ãuçE¯hèPVãÀˇ0cˇ”Ö¿tˇu¯hƒ	PVËƒÊ˚ˇãu¯Éƒ3€â]ÙÎãu¯ã]ÙÖˆtVÉ=@∞	 t<ˇ5ò‡	ËOµ˚ˇãŒË«ª˚ˇ)†ﬁ	ˇƒﬁ	Vã5d∞	ãŒˇ0cˇ÷ˇ5ò‡	ËÄµ˚ˇÎVã5d∞	ãŒˇ0cˇ÷GÖ€Ö*ˇˇˇãM¸_^3Õ[Ëßn …√UãÏQWã˘âU¸∂ˆÄêàtËÍÚ˚ˇÎGSVË`Â˚ˇãÿ3ˆ∂é@ì;Àu&∂ÜòâSWP|PËÓÁ˚ˇÖ¿u9E¸tÄæ4«vFÉ˛|…äE^[_…¬ äÜ4«ÎÒV∫ÌãÒËÁ˚ˇÖ¿u^√∫l	ãŒËmÁ˚ˇÖ¿u@^√∫t	ãŒËZÁ˚ˇÖ¿ujX^√ãŒËRÚ˚ˇ3…É¯^F»∂¡√ã—Vã2ãFãHÖ…tÄ~Q tÄy uË œ¸ˇãFãŒÉ` ËÊˇˇ3¿^√hà	RË∏Â˚ˇYY3¿@^√SVãÚWã˘äçB–<wæ⁄ÉÎ0Î+∫‰	ãŒË’Ê˚ˇÖ¿u3€CÎ∫Ä	ãŒË¿Ê˚ˇ˜ÿ€É„˛É√ã7∂FR;√tãœËhˇˇˇÖ¿t3¿@Îà^R3¿_^[√UãÏÉÏSVãÚWã˘â}¯ä^∂√ã–âE¸3¿@Ñ€D–Ëoy˝ˇÑ€uj ˇ63“ãœj Ë√y˝ˇÎ-∂F3ˆ9u¸v"ã]¯ç<Öháj ˇ7ã÷ãÀj Ëùy˝ˇFç;u¸|Ë_^[…√UãÏQVjÚçEãÒPQjQjGZË˛e˝ˇj jjjRZãŒË d˝ˇ^Y]¬ VãÒÖ“tR3“BËad˝ˇj jjjRZãŒË˙c˝ˇ^√Wã˘ÄQ t0Sã_VãwÖˆ~"É√ãK¸NÖ…tãW ∂É‚8–Ë√Œ¸ˇÉ√Öˆ·^[_√∂¡ÉËt'ÉËtÉËtÉËt∏Ù	√∏‡	√∏‘	√∏»	√∏Ë	√UãÏQQSVWjBâM¸3ˆ[ç3ô+¬—¯ã»âE¯ãE¸¡·çπòãÖ¿u˜⁄“ÎÖ“uBÎã»Ë Â˚ˇã–Ö“tãE¯Ö“çHˇIÀ@Ö“ãŸI;Û~∞3¿;ÛO¯ã«_^[…√UãÏVWãÚã˘ÎjÉ~ taãN˜¡   tÉ} tPÉ~ t∫<	ÎÉ~ ∫@	∏ÿÍD–ã¡É·5ˇ˜„ˇ% < PæPˇ4ç|øRˇuˇv hD	jWË0c˝ˇÉƒ$ãvÖˆuí_^]¬ SVW3€ã˘SjjjRZËáb˝ˇãGtãœjÉ¿Pjj1ZËrb˝ˇSSSjEZãœãËcb˝ˇ_ã∆^[√UãÏÅÏò   °∞	3≈âE¯ãESãŸâEºãEVWã3âU‡â]ƒâE»âuåË7[  ã¯â}òÖˇÑ⁄&  Éè†    çC,ãU‡ãÀâEî«    çEÑPˇuºËπˇˇâE¨Ö¿à´&  ÆËãNã–¡‚ âU¿âM®É¯uãÀË†fˇˇÖ¿ÖÑ&  ãUÑãŒË‰ˇˇâÖpˇˇˇÖ¿Ñl&  É} tˇu»hL	VËŸ’˚ˇÉƒÎ
ãU»ãŒË≥ˇˇãMº3€âEú9Yv
ãM®ã	âM¥ÎãÀâ]¥QãMƒPˇµpˇˇˇjZËGˇˇÖ¿ÖÚ%  ãÖpˇˇˇãMúâEÏçEËPjˇu¥â]ËâMâ]ÙVâûƒ  Ë≠@ âE‡Ö¿Öß   3“ãœBËÙu˝ˇjˇˇuË3“ãœSËLv˝ˇãuËÖˆÑô%  3“ãœVBËGa˝ˇS3¿ãœ@PPjRZË‡`˝ˇãuËÖˆÑs%  9@∞	t?ˇ5ò‡	ËïØ˚ˇãŒË∂˚ˇ)†ﬁ	ˇƒﬁ	Vã5d∞	ãŒˇ0cˇ÷ˇ5ò‡	Ë∆Ø˚ˇÈ,%  Vã5d∞	ãŒˇ0cˇ÷È%  É¯ÑÖ   9]ËtoˇuËh∏B	ˇuƒËÌ‡˚ˇãuËÉƒÖˆtU9@∞	t<ˇ5ò‡	ËØ˚ˇãŒËàµ˚ˇ)†ﬁ	ˇƒﬁ	Vã5d∞	ãŒˇ0cˇ÷ˇ5ò‡	ËAØ˚ˇÎVã5d∞	ãŒˇ0cˇ÷ãM‡ãEƒˇ@$âHÈà$  ãçpˇˇˇËW¸ˇˇã–âU∏Ö“Ñp$  ˆBtãMƒËŒ1  Ö¿ÖZ$  ãU∏äB®u®tãMúÖ…uãœËË˙ˇˇãU∏ãMú∂BHÉ¯*á$  ˇ$ÖÏ∂ã]¨ãœã”Ëj˝ˇãEúÖ¿u(ãEîQhl|j	É ãœZËd˝ˇâXâX«@|0¯ˇˇÈË#  ã»Ë&Ï˚ˇã»Ë‹Ú˚ˇãMƒ3“SãË˛dˇˇVjSjbZãœË!_˝ˇãM®ãAâpPãQãIãRPË\…¸ˇÈ£#  ãE®ã@âE‡Ö…uÖ¿tã@ãX$ã√È{#  Ë≈Î˚ˇãM‡ã–SSâF`ËÛ…¸ˇÉ¯Öh#  VË∑∫˚ˇÈ]#  ãE®É ˇâU‹ã@âE‡Ö…t)∫P	Ë}‡˚ˇÖ¿ujZÎãMú3“SBËk¯ˇˇ3“Ñ¿ï¬âU‹ãEº9Xu)Ö“x%ÆË9^~ã˚ãNãL9Ër ¸ˇãU‹çC;^|Ëã}òãU‹ãM‡ËX ¸ˇÈ÷"  ãMƒW¿ãu¨ã÷fEÃãAtÖ¿E»ËmcˇˇãEîˇ ããÖpˇˇˇâM»∂ Ä∏êìpu	SQ∫Æ   ÎNãEúÖ¿t3çUÃã»Ë^Ë˚ˇÖ¿u%ãEÃ9]–|;√r9]–|É¯˛vj˛XâEÃâ]–ÎW¿fEÃãEÃPˇu»∫Ø   VãœË™]˝ˇSjˇu»jRZãœËö]˝ˇÈ3"  É»ˇ∫úD	Ö…t)Ë_ﬂ˚ˇÖ¿u3“BÉ»ˇÎãMú∫d	ËFﬂ˚ˇÖ¿uã”ÎÊÉ»ˇã–ãMº9Yu5;–u∂FUÎ;j[9^~ j _ãFãDãHã	ËÚÄ¸ˇCç;^|Êã}òàVUãE®ã@ã@ãË”Ä¸ˇÉ¯∫d	πúD	D—ãœË‡¯ˇˇÈì!  Ö…tKËN‹˚ˇã»â]¿âM‡ã√É¯t7ãÖ ÉÖ¿t,QPˇuúË€ﬁ˚ˇÖ¿ãE¿t	ãM‡@âE¿Î÷É}¿u&ãF %   √t"ÉM¿ˇãUº9ZuãÀ«B   âM¨ÎâE¿É¯ˇt‚ãUºãM¨ãFÉËâE∏xQ¡‡âE‰ãFã}‰9\ã}òãE∏t';¡t9Zuã–ãœË‡f˝ˇˇu¿ãœjˇu∏jZË7\˝ˇãE∏Ém‰HãM¨ãUºâE∏Ö¿yµ3¿S@PPÈs˛ˇˇãE®ÉÀˇã”j˛ã@ã@ã0âU–XâEÃÖ…t'çUÃËaÊ˚ˇãU–;”|ãEÃ;√sã√ã”âEÃâU–ÎãEÃ;”|";√rãéË   âÜ∞   âñ¥   Ö…tâAâQãÜ¥   ãé∞   PâMÃâE–QÈ+   ãE®ã@âE‡Ö…uã»Ë+»¸ˇÈ   Ë≈ıˇˇãM‡ãÿã”à^VË¿«¸ˇÖ¿Ö˝  É˚t	É˚ÖÔ  ãwtQhDçjZãœË˝_˝ˇãU¨çNâH0çKˇâH\ãœâPâPâPTË∂e˝ˇÈ∏  Ö…tçU‰ËqÊ˚ˇÖ¿t9]‰«E‰ˇˇˇãu¨3“ãMƒVËø`ˇˇSjˇu‰ãœjFZË‡Z˝ˇSSVj=ZãœË”Z˝ˇSSjjRZãœãË√Z˝ˇSjˇjjTZãœË¥Z˝ˇSVjj1ZãœË¶Z˝ˇã÷ãœËØb˝ˇãOtâHÈ0  Ö…uãE®ã@ã@PÈ  Ë^Á˚ˇã]®ãKâAPãSãKÈU˚ˇˇÖ…u"ãF É‡ √Ñg˚ˇˇãE®3“ãHË‹ƒ¸ˇãÿÈS˚ˇˇ3€çU‰Câ]‰ËñÂ˚ˇÖ¿tãE®ãU‰ãHËµƒ¸ˇÉ}‰ ã”ãMúïE‡ˇu‡ËÍÛˇˇãN ãV$Ñ¿tÉ… ÎÉ·ﬂâN âV$ãŒËııˇˇÈÜ  Ö…Ñ«   çUÃËG‰˚ˇãU–âU‰;”"|
ãEÃâE‹;√sãÏ∞	°Ë∞	âU‰âEÃâU–ÎãEÃâE‹ãMº9YuâF0âV4ãVÉÍâU»xtã}¨ã¬¡‡âE†ãM†ãFãDãMºâE‡Ö¿tF;◊t9Yu=ãpã»Ë:•¸ˇããE‹âÅà   ãE‰âÅå   Ë„Z¸ˇãM‡Ëõ•¸ˇãE–ãuåãU»âE‰ãEÃâE‹Ém†JâU»Ö“yöã}òÉ»ˇâEÃâE–çEÃPjˇu¥VËÑ8 ã»Ö…uˇu–ˇuÃÈá  jX;»ÑÉ  ÈË¯ˇˇÖ…u	∂FRÈg  ã—ãMƒË´ÛˇˇÈb  Ö…uãÏ›	È¥˚ˇˇ8t7ã6çE‡PjQVãv ãŒˇ0cˇ÷Ö¿u9]‡uhX	ˇuƒËŸ˚ˇYYÈ  ãuåÄ~RwãMƒË
Ûˇˇˇ5Ï›	ËDÆ˚ˇãEú8tPh∏B	Ë2Õ˚ˇYY£Ï›	È·  âÏ›	È÷  Ö…uãË›	È(˚ˇˇ8t(ã6çE‡PjQVãv ãŒˇ0cˇ÷Ö¿Öuˇˇˇ9]‡Ñlˇˇˇˇ5Ë›	Ë’≠˚ˇãEú8tPh∏B	Ë√Ã˚ˇYY£Ë›	Èr  âË›	Èg  Ö…uãE®∂@ôÉË”ÈH  8^Qu
ht	Èˇˇˇ3€C9]¨Ñ6  S3“ËnÒˇˇãM®@É‡D√àAàY	Èá˝ˇˇÖ…u3ãœË∏ÚˇˇãU∏ãN ãF$#J#B»t3¿@ÎW¿fEÃã]–ãEÃSÈ⁄  ãBãRâE‰âU‹8^Qu%ˇøˇˇâU‹âE‰3“SBË˝ˇˇãN ãV$âM‡âUÑÑ¿tM‰U‹âN âV$ÎRãU‰ã ãE‹˜—#M‡˜–#EÑâN âF$Å˙   u9]‹uâû  âû  ÎÉ‚”tãMú∫¨	Ëïÿ˚ˇÖ¿uãŒËaˇˇSSS∫§   ãœË†V˝ˇÈß¸ˇˇÖ…Ñ1  ãuƒãŒãU¥Ë˜[ˇˇˇu¥ãŒˇuújZËöˇˇã–âU§Ö“Ñ  ã â]†ËóˇˇãMîâE»«   ãŒË7ˇˇãM§3¿â]®∑q"ãQâUºf;∆çœ  ã∆ãu∏âE∞∑Bâ]‰âE‡®bt3ãFFuˇE†È‚   ∑B® t	«E‰   Î∂»É·@É… ¡ÈâM‰ãM§3¿@ÑE‡uâ]¿Î@âE¿9]»t8ã}∞øˇâ}‡;¯ã}ò|(ãE»ã}¿ãU‡ãpø;E®tGÉ∆;˙~ãu∏ãUºâ}¿ã}òËˇˇãM‰É˘sÖ¿tã@âE∞Îâ]∞ãFF«E‰¥	u«E‰º	ˆB∫ÿ4	Qˇu¿ãMºˇu∞j Xï¿PË¡‘˚ˇPãEºˇ0ãE®+E†Pˇu‰jWË∑U˝ˇãM§Éƒ(ãUº∑A"É¬ˇE®ãòâu∞ãu∏âUº9E®å·˛ˇˇÈ£  ãMîãU¥«   ãMƒËbZˇˇâ]§9^éÉ  ãM¥ã”âU∏Ö…t ãFãÖ¿Ñ-  ã–Ëü÷˚ˇãU∏Ö¿Ö  ãFãDÉ¿ãHâM‡Ö…ÑÒ   ã˘ãHOÎãqâu‡f9^"ãuåtã	Ö…uÎÈÃ   ãE‡ˇ0hƒ	VËÆ»˚ˇÉƒâE‡Ö¿Ñô   SçM»â]»QSSjˇã–ãŒË|+  ãE»âE∞Ö¿tpãâM‹ã»Ë7ä˝ˇÖ¿tπBJ Ë(0 ÎTãE‹ˇpËÓ¢˚ˇãE∞9òî   |9òê   vãM‹ã–Ëä˝ˇãE∞ã»Ët˝ˇã–ãE‹ÄxS uÖ“t
ã»ËM∞˚ˇãE‹ã»Ëó ãU‡ãŒË!™˚ˇãFãU∏ãDÉ¿ÖˇÖˇˇˇã}òã@âE»Ö¿Ñ  ã]úã@âE‰Ö€tãÖ“Ñ’   ãÀË_’˚ˇÖ¿Ö∆   ãE‰äH+Ä˘u	«E†ÏˆÎ%Ä˘u	«E†¨ˇÎ˜@   π‘	∫tD âM†ã jhÄÌPâE‹ËD’˚ˇÖ¿u:ãE‹∫ã‰É¿ã»âE‡ËÛ‘˚ˇÖ¿u	«E‹˝ÎãM‡∫˝ËŸ‘˚ˇÖ¿u«E‹¸ãM‰3“BãIã¡¡Ë#¬¡ÈPãE‰# QãM∏ø@"Pˇu†ãFˇu‹ˇ4h‹	RWË>S˝ˇÉƒ$ãE»ã âE»Ö¿ÖˇˇˇãU∏3€ãM¥ãE§É¬@âU∏âE§;Få´˝ˇˇÈ!  Ö…Ñ  ˇu¥ã—ãŒË˘	ˇˇâE¿Ö¿u5ˇu¥ãMƒˇuújZË{ˇˇÖ¿ÑÌ  ˆ@ÄÑ„  ã»ËvˇˇâE¿Ö¿Ñ—  ãPãŒË3%  ãu∏âE‡ãE¿ãNNt∑H4jÎ∑H2j∑˘ãMîZâ}»âãMƒã@ãU‡âEÑãAtÖ¿E»Ë-Wˇˇã}òã”â]‰9U»Ür  ãE¿ã@∑Pø»âM‡fÖ¿yã√ÎÆËãEÑ…ã@ã»ãM‡PQRh‰	jWËR˝ˇãFÉƒFt/ãM¿ãU‰∑A2;–¿˜ÿPãA ˇ4êãA∂PhÏ	jWËËQ˝ˇÉƒãEîãœSˇ0jjRZËNQ˝ˇãU‰BâU‰;U»åjˇˇˇÈ◊  Ö…Ñœ  ˇu¥ã—ãŒËYˇˇâE‡Ö¿Ñ∏  ãP<ãŒË$  ãMîã–ãuƒ«   ãNtÖ…EÒãŒË;Vˇˇãu‡ã”â]»ãvÖˆÑ~  j«EÃÙ	«E–¯	«E‘D	Y3¿9^$ï¿PãF8#¡ˇtÖÃ3¿8F6ï¿Pˇ6Rh¸	jWË"Q˝ˇãU»Éƒ ãvBâU»jYÖˆu¡È"  ãEî«    9^é  ã”â]»ãFãLÖ…t Ë¶/˝ˇPãFˇ4Sh	jWËÕP˝ˇãU»ÉƒCÉ¬âU»;^|…Èœ  ãEî«    ã∂¥  ÎãFˇ0Sh	jWËíP˝ˇã6ÉƒCÖˆu„Èú  ãF3€ãCãEî¡Ó#Ûâu‰«    ∏ ﬂ	âE∞ã ÎVSã–ãœË¥ÏˇˇãE»ã@$âE»Ö¿uËãE∞É¿âE∞=|ﬂ	|‘ãuåj [ãÜ§  âE»Ö¿Ñ8  ãu‰ãPãœVSËqÏˇˇãE»ã âE»Ö¿uËÈ  ãEî«    ã∂à  ÎãFˇphÿÍjWË€O˝ˇã6ÉƒÖˆu‰ÈÊ  æòˇ6hÿÍjWËπO˝ˇÉ∆ÉƒÅ˛8ú|„Èø  Ö…Ñ∑  ˇu¥ã—ãŒËAˇˇâEÑÖ¿Ñ†  8X+Öó  ãH0âM‡Ö…Ñâ  ãP<ãŒËÎ!  ãMîã–ãuƒâ]‰«   ãNtÖ…EÒãŒË	Tˇˇãu‡ã√ã”âU»9^~Uç^$äNh	ËÂÍˇˇäNPË‹ÍˇˇãPˇsãEÑ…ã@ˇ4»ˇvRˇu‰h	jWË˘N˝ˇãU»ç[Éƒ,BâU»;V|≥ãE‰3€ãv@âE‰ÖˆuñÈÎ  ãUîãçxÉ¿âE®@âãU¿ãFâ}∞ãDãPÖ“Ñ¬  Ö…tˇu¥3“QãMƒË6ˇˇã”â]êÎãBãâUêâE¿Ö¿Ñq  8X+Öh  9X0Ñ_  ãP<ãŒËÊ   ãNã–“âE∏ã—ãU∏âE¥ãEƒã»9XtEHtË SˇˇãE¿ãU∏ãMƒˇ0SˇpË»˝˛ˇãM¿ãU®ã}òBøA"–ãEî;~âjdQˇu∏ãMƒ3“Ë™ˇˇãE¿ãœãU∞ˇ0Ë√M˝ˇãE¿3…Aã@0Èá   ˇu¥ãPãŒËÖˇˇâE»Ö¿tiˇ0ãU∏ãMƒSˇpâ]ºËZ˝˛ˇãU»çEºãMƒSPˇu‰Ë_íˇˇÖ¿Öπ  ãEºÖ¿uãU‹ãMƒjdˇu»ˇu∏Ë™ˇˇÎˇu∏ãœˇp,ˇu‹jdZËÏL˝ˇãUºãMƒËŸT˝ˇãE‰ãM‹Aã@âE‰âM‹Ö¿ÖkˇˇˇãEƒ9H(}âH(SSSj&ZãœË±L˝ˇâÖxˇˇˇãE¿«E¨   ã@0âE∏Ö¿Ñ‚  ãM∞çQÉ¡âïtˇˇˇâMÄˇu¥ãPãŒË® ˇˇâEÑã”â]ºâU§Ö¿tçM§ã–QçMºQˇu∏ãMƒËåëˇˇãU§ãEƒãM∏ã}®ãuåGˇH8ã@8yâÖ|ˇˇˇãEîâ}‡;8ã}ò~ãu‡â0ãuåãAâ]‰âE»Ö¿~aãE®ãu¿@É¡$âE‹âM†ãÀçäÖ“uãM†Pˇ1ã÷ãœSËHä˛ˇSˇµ|ˇˇˇãœˇu‹j2ZË“K˝ˇãE∏ãM‰ÉE†AˇE‹ã@;»ãU§âE»ãE‹âM‰|¥ãuåãUºÖ“tJãŒË©ˇˇãM®ããE∏QˇpçAãœPj_ZËÜK˝ˇˇu»ã–ãœVËŒR˝ˇSˇu®ãœˇµ|ˇˇˇˇu¨jZËVN˝ˇãuåÎ09]Ñt+ãE®ãœ@PãGtÉ¿Pˇu¨j ZË?K˝ˇSˇµ|ˇˇˇãœSjZË-K˝ˇãE¿∫Ö   Sˇµtˇˇˇãœˆ@ÄSjIXE–ËK˝ˇãE¨HPãE∏ˇph 	ˇuÄWËxK˝ˇÉƒãœSjˇu∞jRZË‡J˝ˇãï|ˇˇˇãœË]N˝ˇãU§Ö“tãŒË°˚ˇãE∏ˇE¨ã@âE∏Ö¿Ö0˛ˇˇãÖxˇˇˇãœS@PSjZËùJ˝ˇãïxˇˇˇãœË¢R˝ˇãOtãUêâHÖ“Ñ  ãMúÈS¸ˇˇÖ…Ñ  3“SBËD‰ˇˇ3“ãŒÑ¿ï¬Ë4éˇˇÈÒ  ãÖpˇˇˇÉ ˇjdâ]¿∂ äÄêìàEããEº9ãE¨D¬âE¨ãEî«    XâE‹Ö…tGçU‹Ëu’˚ˇÖ¿tãE‹Ö¿4jdXâE‹Î,ãE¨Ö¿xã»ÆËãF…ã»Îã√ãMƒ3“PˇuúË˝ˇ˛ˇâE¿ãE‹SjçHˇQjFZãœË¬I˝ˇã”âU∏9^é 	  ãE¨ãÀÖ¿x;–Ö	  ãEƒã»9XtEHtË⁄NˇˇãU∏ãÀãF¡‚âU‡ãDâEêã@Ö¿ÑÀ  ã˘ãP9]¿t9U¿u!ˆBÄuAãRâ]∞ÎãRAˇE∞Ö“uı9}∞O}∞ã Ö¿uÃâ}ºã}òÖ…Ñá  9]¿çASD¡ãŒçÖ   PË¢˚ˇâE‰Ö¿Ñv  ãÀâM§9M¿t	3…âXAâM§ãUêãRâU∞Ö“tQãEºãu‰âEºãBâEÄ9]¿t9E¿u&ˆ@Äu
ã@AâéãEÄãPÖ“tãB,AâéãRÎãU∞ãâU∞Ö“u¡ãuåãE‰âM§ãUîâãMºÉ¡ã;¡jˇu§N¡ãœâ∫ô   ãEƒjàXâXËiH˝ˇjÒˇu‰ã–ãœË∞O˝ˇãE∏ãœ∂–Ë¶M˝ˇSSjj2ZËBH˝ˇãNã¯ãE‡ˇ4h$	VËkº˚ˇÉƒãSjYQãMòSjtZËH˝ˇj˘Vãuòã–ãŒË\O˝ˇjXPPjjoZãŒËˆG˝ˇãŒËTÂˇˇã◊ã˛ãœËˆO˝ˇãOtâHãEêãPâU‡Ö“Ñ#  ãRÉç|ˇˇˇˇâU¥âùtˇˇˇ8Z+Öı  ãE¿Ö¿t;¬ÖÊ  ˆBÄuâ]‰Î
ã Ë»ˇˇâE‰ãuƒçEÑPçE®ãŒPSjSjdËÉÕˇˇSjSjFZãœËgG˝ˇãE¥ã@âEÄÖ¿t'ãuÄjXâEêSPSjFZãœËDG˝ˇãEêãv@âEêÖˆuÂãuƒSSˇu®ãœj&ZË$G˝ˇSjjjTZãœËG˝ˇÄ}ãqâE‘t$ãE¥jøH$IQˇu®ãœj\ZËÙF˝ˇ∫Ä   ãœË@L˝ˇãE¥ã”âU§∑HÉ·âM∞3…f;H"ç¡  â]†ãHM†ø@ âMº;–Ñ   ˆAãE∞uÖ¿ÑÔ  Ö¿tˇN8ãF8âE»Îâ]»j^VRˇu®ãU¥ãœËﬂÑ˛ˇÉ ˇãœËÖN˝ˇÄ8\uçV}ËæK˝ˇãMºˆAÑÖ   SSVj3ZãœËLF˝ˇãMºâEÄãE¥ˇ1ˇ0h<	ˇuåËq∫˚ˇÉƒãœãSjSjtZËF˝ˇj˘Vã–ãœËhM˝ˇ9]∞tãEºã@$<tSˇu»ãœSjZËÛE˝ˇÎãœËO„ˇˇãUÄãœËÚM˝ˇãOtj^âHãMºãE¥˜@   Ñû   ãI¡ÈÉ·É˘Ñå   æÅ…ãœPSVjZËûE˝ˇãU†ã¯ãE¥ãHˇ4
ˇ0ãEºãH¡ÈÉ·ˇ4çø	hP	ˇuåË≠π˚ˇãMòÉƒãSjSjtZËZE˝ˇj˘Vãuòã–ãŒË†L˝ˇãU»ãŒËÀH˝ˇãŒËü‚ˇˇã◊ã˛ãœËAM˝ˇãOtâHãE¥ãU§ø@"BÉE†;–ãuƒãE¥âU§åB˛ˇˇãPÖ“Ñˇ   ãuåãF %   √ÖÈ   SãŒËâb˛ˇâE»8^SÖ»   ãUƒãM»ãB8HâÖxˇˇˇHâE∞âB8ãE®@âB4ãHâEÄÖ¿~9ãuÄã˙k¿É¿¡âEêSˇµxˇˇˇˇ0WË#ù˛ˇãEêNÉËâEêÖˆ„ã}òãuåãUƒãM»jˇu∞ˇqRËö˛ˇãïxˇˇˇãœËÂG˝ˇãEƒâX4ãE¥ˇ0hh	VËÑ∏˚ˇÉƒãœãSjSjtZË2D˝ˇj˘Vã–ãœË{K˝ˇãœËÑ·ˇˇãU∞ãœËüG˝ˇãuåãE»Ö¿t	ã–ãŒËTi˛ˇãE¥Ä}ãqÑO  ãpâu§ÖˆÑA  ãEÑjY+»âEºãEƒâMÄãH8IâMêâH89u‰Ñ  ˇµ|ˇˇˇççlˇˇˇã÷ˇµtˇˇˇQSSˇu®ã»Ë dˇˇãMºMÄSjQjTZãœâÖ|ˇˇˇâµtˇˇˇËÇC˝ˇ∑N4Qˇµ|ˇˇˇãœˇuêˇuºjZË[F˝ˇSjSjtZãœãËWC˝ˇShà	ã–ãœËùJ˝ˇjXPPjjoZãœË7C˝ˇSjSjtZãœË)C˝ˇShê	ã–ãœËoJ˝ˇjXPPjjoZãœË	C˝ˇãE§ãœˇ0jZËQC˝ˇâÖxˇˇˇjXPPjjoZãœË„B˝ˇãœËA‡ˇˇã÷âE»ãœË‚J˝ˇãu§ãOtâH8^6Ñﬂ   ãEƒãÀâMêˇH8ã@8âE†3¿f;F2s@ãFøHÖ“xãE¥“ã@ˆD–uãÖ|ˇˇˇSˇu†¡ãœPj2ZËtB˝ˇãMê∑F2AâMê;»|¿SSˇuºãœjZËVB˝ˇSˇu†ãœãSjZËEB˝ˇã÷ãœËNJ˝ˇãu§ãOtâHãœ∑F2Pˇµ|ˇˇˇˇu†ˇuºj(ZËE˝ˇSjSjtZãœË
B˝ˇSh®	ã–ãœËPI˝ˇSˇµxˇˇˇãœSjZËÈA˝ˇãU†ãœËiE˝ˇãU»ãœËÁI˝ˇãOtãïlˇˇˇâHãEƒÖ“tãHËDE˝ˇãEƒãvˇEºâu§ÖˆÖ–˝ˇˇãu‘ãœSVˇu®jZËîA˝ˇçVˇãœËúI˝ˇÄ}ãqãOtâHÑæ   SjSjtZãœËlA˝ˇShƒ	ã–ãœË≤H˝ˇãE¥ã@âE»Ö¿Ñê   ãU‰jYâM∞;–tqãEÑSj^VÉ¿¯¡ãœPj`ZË'A˝ˇVSˇu∞ãœj5ZËA˝ˇ∫ê   ãœãËbF˝ˇãE»ˇ0jZËTA˝ˇjjjjoZãœËÌ@˝ˇãœËKﬁˇˇã÷ãœËÔH˝ˇãOtãU‰âHãE»ãM∞ã@AâE»âM∞Ö¿ÖyˇˇˇãU‡ãÈ⁄¯ˇˇãE¥Èá˚ˇˇãuåãU∏ãE¨BâU∏;Vå„ˆˇˇQhîÃjZãœËCE˝ˇãÖˆt$3¿@+E‹âFÉ»ˇjYàF)«F8‰	àFeËeˇ âFtãwt3“ãœÉÓË]H˝ˇâpÈ·  Ö…u$ã]ƒãÀË?  Ö¿ÖÀ  ã∂PPã’–wÈ„ˇˇˆF@ÖØ  °–wø–wÎã–ËŸ¡˚ˇÖ¿tãMúÉ«ãÖ¿uÈÎ6äO∂¡Ñ…jYE»ãFSä—h§çã@àHMàNPãŒË£MˇˇâFãÖ¿ÖT  ˇuúh0	ˇuƒË9¿˚ˇÉƒÈ<  ãBãœãu¨ã÷âE‡Ë#J˝ˇã]úÖ€t@ãU∏ˆBu7QhtøjZãœË+D˝ˇãM‡ããE¨âNãÀâFâFË7Ã˚ˇâF 3¿@fâFÈ„  Qh|{jZãœËÙC˝ˇãM‡âpâpâH Éß†   ﬂÈª  ãEîãÛS«    Î3“ãœPBFËZ?˝ˇS3¿ãœ@PPjRZËÛ>˝ˇVË0& Ö¿u⁄ÎæÆËãEºã”j9XEE¨âE‘Ö…tA∫l	Ë†¿˚ˇÖ¿u3“BÎ.ãuú∫L	ãŒËà¿˚ˇÖ¿ujZÎ∫	ãŒËs¿˚ˇÖ¿ã”jXD–ãEîjYjRâãœãE‘PjZËu>˝ˇSjjÈ«‡ˇˇÆËÖ…tËBÀ˚ˇPVË´ Åæ  @ªÖZﬂˇˇãû  ÈOﬂˇˇVË*Û È–  Ö…tËÀ˚ˇã»âM»ˆ¡Ñπ  Î«E»˛ˇ  ãUƒÆËãB(âEÑ@âB(ãE¨9]¥tâEêÎãNIâMê;¡èa  ãM¿ÆËÉ¯Ñ?  9Ztã EJtã–ËCˇˇãFãM¿ãDãPâïtˇˇˇÖ“Ñ  ãRâU‘˜B   ÑÎ   fãB&fÉ¿.∑¿âE‡ãBÎˆ@8ÄÑ£   ã@Ö¿uÔãE»É‡âE∞f9]‡t7ãMƒjdRˇu¨ãUÑËYöˇˇãM‡ø¡ãM∞PãGtÉ¡¡ãœPˇuÑj#ZË5=˝ˇãM¿ãU‘ˇ2ãFˇ4hT	VË[±˚ˇÉƒâE‡9]∞tCãMƒËî¶˛ˇSããœVSjtZË˙<˝ˇj˘ˇu‡ã–ãœËAD˝ˇSjVjRZãœËﬁ<˝ˇãuåÎ(ãE»É‡âE∞ÎüSSS∫í   ãœËø<˝ˇj˘ˇu‡ã–ãœËD˝ˇãM¿ãïtˇˇˇãÈÁ˛ˇˇãM¿ãE¨ãUƒ@É¡âE¨âM¿;Eêé•˛ˇˇSSS∫§   È◊ﬁˇˇÆËÖ…tçUÃËÿ∆˚ˇÖ¿uˇu–ˇuÃË}ç˚ˇÉ»ˇPPËsç˚ˇÈ‡   ÆËÖ…tAçUÃË´∆˚ˇÖ¿u5É»ˇPPËQé˚ˇã»9]–|$9]Ãvã¡¬t;U–|;MÃvˇu–ˇuÃË&é˚ˇÉ…ˇQQËé˚ˇÈâ   ÆËÖ…t(çUÃËT∆˚ˇÖ¿u9]–|ãEÃ;√r%ˇˇˇPjVËÿ
 jˇjVËŒ
 ÎMÆËÖ…t%çUÃË∆˚ˇÖ¿u9]–|ãEÃ;√r%ˇˇˇâÜÏ  ãÜÏ  ÎÆËÖ…tË\»˚ˇPVË¸ ãÜ  ôRPãœË◊ˇˇã]åãÀãïpˇˇˇË´ë˚ˇãEúÖ¿t	ã–ãÀËõë˚ˇãM¯_^3Õ[Ë∏C …¬ d∂≤âñ¢öò∂ãó∂ó¶ßÏ° ≥Âôô°òí⁄±–£¸¢¢“µóöü‰† ß(ïñò∂àî€ì5ò£¢Î≥ì’¢^ì‡≥•µTöÇõù=ôYô)∂≤≥6≥ÃÃÃÃÃÃÃÃUãÏÉ‰¯ÅÏ¸   °∞	3ƒâÑ$¯   ãEâD$ãESâD$3€ãEVâD$ãÛWã}çD$8âD$$çD$ hh	Pât$â\$(«D$0»   â\$4â\$8fâ\$<Ë√´˚ˇ∂G8_v<j(Zç4Öháˇ6çD$$Rhx	PË>∞˚ˇ∂GçvÉƒCãÀj,Z;ÿ|⁄ãt$âL$Ö…uˇ7çD$$hÄ	PË∞˚ˇÉƒCÉd$ ˆG thà	çD$$PËO´˚ˇ«D$   ˆG¿thî	çD$$PË2´˚ˇˇD$jhp‡çD$(PËÕ™˚ˇçL$ Ëã´˚ˇçD$8Pˇt$ËñŸ  âD$Ö¿u6jËGé˚ˇãÖˆujXÎDjj VˇbãD$ ÉƒâFãD$â~à^àFÎˇt$Ë Ph∏B	Ë‰≠˚ˇYYãL$âãD$ãL$_â1ãå$   ^[3ÃËaA ãÂ]¬ ÃÃÃÃÃÃÃÃÃÃÃUãÏˇuË•é˚ˇ3¿]¬ ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃUãÏãMÉÏÚ8F	Sã]ÚA(VÄ{ Ñ§   ÉeÙ 3ˆÉe¯ ãQ91~{WÄz tÄzu∂Cã:âE¸;¯|
+}¸çFâDΩÙFÉ¬;1|’ãUÙ_Ö“tGãA«D–¯   ãA∆D–¸ãU¯Ö“tEãAÚPF	Éa4 ÚA(«A0   «D–¯   ãA∆D–¸ÎÚ»F	Éa4 ÚA(«A0ˇˇˇ^3¿[…¬ ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃUãÏVjË≈å˚ˇãÖˆujXÎjj VˇbãEÉƒâãEâ03¿^]¬ QVãÒWˇvË^n˝ˇÉf É∆j_ˇ6Ë]ç˚ˇÉ& çvÉÔuÓ_^Y√ÃÃÃÃÃÃÃÃÃÃÃÃÃÃUãÏãMË∫ˇˇˇˇuË-ç˚ˇ3¿]¬ ÃÃÃÃÃÃÃUãÏQVãuW3ˇÉFˇv~Ëx˝ˇÉ¯dtˇvËÈm˝ˇÉf ãŒã¯Ëqˇˇˇã«_^Y]¬ ÃÃÃUãÏÉ‰¯ÉÏ$°∞	3ƒâD$ ãESVWã}ãœâD$ãË;ˇˇˇãC3…ãÒ∂@¡Ë˜–É‡9M~DÉ¿çáâD$ãD$≤ã∞Ë0˝ˇÖ¿tPh∏B	Ëw´˚ˇYYãL$âÖ¿Ñµ   ÉD$F;u|»3…ãCh§	ã@|âD$$çD$PâL$ âL$âL$$âL$,f«D$0  Ë˙ß˚ˇÉ tˇwçD$h¨	PËÇ¨˚ˇÉƒãCˇ0çD$PË–ß˚ˇÉ tˇwçD$h∞	PËX¨˚ˇÉƒãt$Öˆt+ãD$$∆0 É|$  vˆD$)uçL$Ë©ß˚ˇãÎãt$ÖˆujXÎEj çGPjˇVˇsË¸  VâD$Ëíã˚ˇãt$ÖˆtˇsË≤ Ph∏B	Ëw™˚ˇYâCã∆YÎWËH˛ˇˇãL$,_^[3ÃË˙= ãÂ]¬ ÃÃÃÃUãÏãM3¿9Aî¿]¬ ÃÃÃÃÃÃÃÃÃÃÃÃÃÃUãÏãMãUVã1∂FÆË;–}RˇqË`{˝ˇãMã–ã	Ë˙*˝ˇÎ∂F+–jˇjjˇãTëãMË˘o˝ˇ3¿^]¬ ÃÃÃUãÏãEãHãPãEââP3¿]¬ UãÏQVãÒWã>ÄS t«F   Èü   ãFÉ8 Öì   ãFÉ‡t+ˇuˇ4Ö èˇrˇ2h‘	WËÿ®˚ˇãNÉƒâ«F   Î`ãG É‡É» tπ∞ ÎFÉz ∏t‡EBPh	WËú®˚ˇã»ÉƒãEÖ¿tÄ8 tPQh	WË~®˚ˇÉƒã»ãFâπ∑ Ë âF_^Y]¬ ãAã@Ö¿tãQ,9P,u;¡u
ã@Ö¿u3¿√3¿@√UãÏÉ‰¯ÉÏSVãuWã}ããVÉK@ÖˇÑÛ  ˇFÄ{S tj ã◊ãŒË„˛ˇˇ3¿@ÈŸ  É Ñ¬  ãOÖ…ÑR  ∂Ä∏êìcÖB  ∂AÄ∏êìrÖ1  äÉ∞   àì∞   çì¨   ãOàD$Ëw¿˚ˇÖ¿tãF9É¨   vÖ¿tÄ=I∞	 thî	ã◊ãŒË]˛ˇˇÉ£¥   ˛çD$3…âª∏   ãWQPQQâL$$ãÀjˇË*  ãC@äL$àã∞   Ö¿t7ˆÉ¥   u.;F~âFÉ¯uSËﬂé˚ˇÎÉ¯	t<tSËÓ˛ Pã◊ãŒËÓ˝ˇˇãt$«É∏   ø	ÖˆÑ‘   ã>ãŒË≥h˝ˇÖ¿tπBJ Ë§ È∏   ˇwËjÅ˚ˇÉæî    |	Éæê    v	ã÷ãœËòh˝ˇãŒËôR˝ˇÄS uÖ¿t	ã–ãœË—é˚ˇãœËÓ ÎpÉ t_Ö…tÄ9 uVãC“ãÀˇ4–ãWË¿È˛ˇãÿÖ€uh	Î9ãOçS,Ë+ø˚ˇÖ¿tãC,É¯r;FwãÀËÂ˝ˇˇÖ¿tÄ=I∞	 thî	Îj ã◊ãŒË˝ˇˇ3¿_^[ãÂ]¬ UãÏÉ‰¯ÉÏl°∞	3ƒâD$hÉd$ ã¬SVWã˘âD$ãM3“BâD$4ª˝â|$(ãwàó±   ÉŒøÉ¯âL$ãE∫Ñ‰D”âD$<âT$çD$\âT$`âT$d3“RPjçD$8«D$htP«D$x¥Ï«D$|(	âî$Ä   â|$<âT$HâL$@âT$PâT$TË3˝ˇˇ!wã\$8Ö€Ö]  ãL$ãG¡·âL$ç4ãNât$ Ö…uã@Af	HNÈR  Ë“|¸ˇãNÖ…tÄy u.j 3“Ëæ†¸ˇãÿÖ€tãÀËÿÔ ãL$ã◊PËå˚ˇÈÔ  3¿@âD$$3€ç|$HãNCWã”Ë·˝ˇÉ«É˚|Ïã|$(ãG %   É» tjçD$Lj PˇbÉƒãNãD$Hã\$âãD$XÖ¿t2Ö€Öå   ˆG@ÖÇ   j$Y∂¿D¡ãœSh§çä–àGPË>ˇˇâGãNäGPàAMãFÉxP u'ãL$PËπ√˚ˇÖ¿π0¯ˇˇD¡ãNâAPãVãNãRPËMö¸ˇãNäD$LàALãFÄxL u3…AàHLãFÄxLv)hp	ÎÉ‡:GPtñhà˚ãL$ã◊Ëuã˚ˇ3¿çXÈ—   Ö€uÉ|$L|
ãG$Ég ˝âG$ãFãL$ˇt$ã@ã@0âD$HãGˇ4hà	WË¥£˚ˇã∑h  çL$<Éßh   ÉƒâD$j Qh æPWË—øˇˇãT$ãÿÖ€â∑h  D\$8Ö“tãœËâÖ˚ˇÖ€uãT$ãœËÒ–˛ˇÄS tj[ãœË√Ë˛ˇãwt$Î)Ö€tãG %   É» tãGãL$ãD3…Af	HN3€ãt$ É|$$ tãNË∏™¸ˇãNË){¸ˇÖ€tÉ˚tÅ˚
  uWË§ä˚ˇãT$ãœËÚÁ˛ˇãL$tã√∆á±    _^[3ÃË7 ãÂ]¬ UãÏÉ‰¯ÉÏSVWã˘âT$ãGãO˜–É‡âD$ãAä@MàGPãAˆ@Nuj R3“ãœËn¸ˇˇÖ¿uIãT$ãwNÖˆ~0ãﬁ¡„ãGãDˆ@Nuj Rã÷ãœË@¸ˇˇÖ¿uNÉÎÖˆ~ãT$Î’É|$ tÉg˛3¿_^[ãÂ]√UãÏÉ‰¯VWã˘3¿ã78Ü±   u çWãŒËMˇˇˇÖ¿tˇG$âGÎ
Ä~[ tÉN_^ãÂ]√UãÏÉÏã¡SVWã03ˇâE¯9~é§   3€â]¸ãFÉeÙ ã\Ö€t}Ä{ u8j 3“ãÀË[ù¸ˇâEÙÉ¯t=
  uVËXâ˚ˇãE¯«@   ãEÙÖ¿uY«EÙ   çE3“PBãÀËz˛¸ˇãFãM¸ãLãE;tã◊ãŒËqÊ˛ˇãE¯«@   É}Ù tãÀËˆ®¸ˇã]¸GÉ√â]¸;~åaˇˇˇ_^[…√Væ ÄˇˇÖ“tãA3ˆÉ¿ÎFç@9u¯ã∆^√UãÏQSãŸWããÄ   ã;âM¸Ö…t2VãâÉÄ   ˇqãqãŒWˇ0cˇ÷ãU¸ãœËÙÇ˚ˇããÄ   âM¸Ö…u–^ãS@Ö“tãœËÿÇ˚ˇãSDÖ“tãœË√Q˛ˇÖˇt∂C)á0  t3¿Î∑á6  fâá4  _∆C […√UãÏSVWã˘3ˆVã⁄jãÖ…tË,Ö˚ˇÎË≤Ä˚ˇã»Ö…tãáÄ   ãuââèÄ   âqâYÎˇuãÀˇ7ˇ0cˇ”_ã∆^[]¬ UãÏÅÏ@  °∞	3≈âE¸ãESâÖÿ˛ˇˇã⁄ãEVãuâÖƒ˛ˇˇãEWâÖÃ˛ˇˇã˘3¿âù‡˛ˇˇhò   PâÖ‹˛ˇˇâÖ‰˛ˇˇçÖË˛ˇˇPˇbÉƒçE®jLj PˇbãEÉƒâu»âÖ»˛ˇˇ®t˛Ö ˇˇˇˇá0  3…fâè4  ¡Ë$Ä[ àÖˇˇˇu_3€9_~R3…âç‘˛ˇˇãGãtâµ–˛ˇˇÖˆt*ãŒË˛v¸ˇ3“ãŒjBËx¸ˇãç–˛ˇˇãËgw¸ˇÖˆukãç‘˛ˇˇCÉ¡âç‘˛ˇˇ;_|∂ãù‡˛ˇˇãœË√  ãÖÿ˛ˇˇâΩË˛ˇˇÖ¿àü   ç4t
Ä~ˇ Ñê   ;G|~=hÃ	jWË»™˚ˇÉƒãœjZËá˚ˇãÈ©  ãG€ˇ4ÿh¨	VWË†™˚ˇÉƒÈç  ôãœRPã”ÆËËíÖ˚ˇâÖÿ˛ˇˇÖ¿t0çç‰˛ˇˇã–QççË˛ˇˇÆËË7“ ãïÿ˛ˇˇã√+¬ãœEÃÆËËçÄ˚ˇÎâuÃÎ#çÖ‰˛ˇˇã”PççË˛ˇˇË“ ãÖ‰˛ˇˇãuÃâÖ‹˛ˇˇãÖÃ˛ˇˇÖ¿tâ0Äø±    u;+Ûãù˛ˇˇÖ€t5ãÖ»˛ˇˇàÉú   Ñ¿xÉ£‹    ãã∆ôRãï‡˛ˇˇPËÊÑ˚ˇâÉ»   ãù˛ˇˇÄS tj^2¿âµÙ˛ˇˇàÖ˘˛ˇˇÎäÖ˘˛ˇˇãµÙ˛ˇˇÖˆtcÉ˛et^Ñ¿t Äø±    uççË˛ˇˇË¥˚ˇˇãµÙ˛ˇˇãù˛ˇˇÖ€tãÀË}I˝ˇãµÙ˛ˇˇãù‹˛ˇˇÖ€tSh∏B	VWËW©˚ˇÉƒã”Î4ã÷ãœËı®˚ˇÎ0ãÖƒ˛ˇˇ3ˆâ!w@ãè$  Ö…tË;˝ˇÎãAã—âÖdˇˇˇãœËQ˚ˇãçdˇˇˇÖ…u‰ççË˛ˇˇË¸ˇˇãM¸ã∆_^3Õ[ËW1 …¬ UãÏÉ‰¯ÉÏÉd$ Sã]âT$VãÒWÖ€u
π† È¥   É# Ë˝π˚ˇÖ¿Ñü   É|$ Ñî   ˇvËXw˚ˇÄ~[ uãŒËÍt¸ˇˇuãT$ãŒSˇuˇuˇuËq¸ˇˇã¯Öˇt,Ä~S u&Åˇ  t‘ÉˇuÉ ˇãŒËâ·˛ˇãL$ã¡AâL$Ö¿t∂Ä~[ uãŒËÃt¸ˇÄ~S uÖˇtã◊ãŒËÑ˚ˇã¯ˇvÉ¶ƒ   Ë0w˚ˇã«Î
π§ ËÔ _^[ãÂ]¬ ÃÃÃÃÃÃÃÃÃUãÏˇuãUˇuãMj j ˇuËÚ˛ˇˇ]¬ ÃUãÏˇuãUˇuãMj hÄ   ˇuËœ˛ˇˇ]¬ ÃÃÃÃÃÃÃÃÃÃÃÃÃÃUãÏˇuãEˇuãUÉ‡ãMÄ   j PˇuËò˛ˇˇ]¬ UãÏÉÏãESVW3ˇâU¯â}ÙãÒâ}¸Ö¿u
π4 ÈÁ   â8Ëì∏˚ˇÖ¿Ñ”   ãM¯Ö…Ñ»   ã]Ö€xã«~Ä< uÄ| tÉ¿;√|ÏãÿˇvËÕu˚ˇQSã]¯ãŒã”Ë^•˚ˇâE¯Ö¿thçMÙã–QˇuãŒWˇujˇËˇ˝ˇˇãUÙâE¸Ö“t>9}t9+U¯ãM¯Ë˜§˚ˇã–çKÖ“~äÉ¡<ÿr<‹sä$<wÉ¡ÉÍu„çAˇãMâãU¯ãŒË÷|˚ˇÄ~S ãU¸uÖ“t	ãŒË⁄Ç˚ˇã¯ˇvËíu˚ˇã«Î
π8 ËQ _^[…¬ ÃÃÃÃÃÃÃÃÃÃÃÃÃUãÏˇuãUˇuãMj ˇuË¿˛ˇˇ]¬ ÃÃÃUãÏˇuãUˇuãMhÄ   ˇuËù˛ˇˇ]¬ UãÏˇuãEˇuãUÉ‡ãMÄ   PˇuËv˛ˇˇ]¬ UãÏQSWã˙ãŸÖˇÑ∞   VãWãw4âu¸Ö“tãÀËK˛ˇãW ãÀËÆ&ˇˇãW$ãÀËq?˛ˇãW(Ö“tãÀËﬂJ˛ˇãW,ãÀËY?˛ˇãW0Ö“tãÀË«J˛ˇãW<ãÀËA?˛ˇÉ@ t	ˇw@SËo1ˇˇãWHÖ“tãr$ãÀË¨~ ã÷Öˆuãu¸ÎË~~ ãODÖ…uÙ9Mt	ã◊ãÀË{˚ˇ«E   ã˛ÖˆÖRˇˇˇ^_[…¬ UãÏÉ‰¯ÉÏ\°∞	3ƒâD$XSVWã˘âT$j jLãËÂ}˚ˇãÿçt$ãD$Ö€EÛÖ¿uã∫≥   PËo9˛ˇãã–ËlG˛ˇâF3…ãEâF∆ââNâNˇGdãGdÉNˇÉNˇâF3¿fâFãEÖ¿uQãjPË#}˚ˇ3…âF ãEâF$ãEâF(ãEâF,ãEâF0ãE âN4âN8âF<âN@âNDâNHãÄyS t3¿çT$;Úã÷ï¿PË^˛ˇˇ3€ãL$dã√_^[3ÃË•, ãÂ]¬ ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃUãÏãUÖ“t
ãMjË#˛ˇˇ]¬ UãÏÉÏã¬âM¯SâEÙ3€âEËãEVâEÏ3ˆãEWâEãTµËÖ“t^3…øHúâM¸∂G9Buˇr∂L¨Pˇ2Ë∂•˚ˇãM¸Ö¿tãTµËAÉ«âM¸Åˇ]ú| Îk¡∂ÄJúÿÉ˘}FÉ˛|üÎÉÀ@ã√É‡!<!ï¡ˆ√@î¿Ñ»tˆ√ tFã√$<t>h	ˇu¯Ë–£˚ˇYYÎ*ã}π}¯WÖˇ∏|¯D¡PˇuˇuÙh‡	ˇu¯Ë•£˚ˇÉƒ3€C_^ã√[…¬ UãÏQQSVã¬ãÒWã»âE¯Ël•˚ˇã^3ˇøv"àEˇÖˆ~8C
uãU¯ãË©§˚ˇÖ¿täEˇÉ√G;˛|‚É»ˇ_^[…√ã«Î˜UãÏQSVã¬3ˆâE¸WÖ¿~2çyããUËëˇˇˇãÿÖ€xÉ} t"ãã”“ãIˆD—tFÉ«H;u¸|—3¿_^[…¬ ãEÖ¿tâ0ãEâ3¿@ÎÊUãÏQSVWˇuã¡ã⁄ˇuâE¸ã8ãœË,˛ˇˇuã”ãœˇuãË˛ˇã}¸ãÿSVj5ZãœËG7˛ˇÖ¿tÉ} t
ÉHãKâH$ãuãœPãËô8˛ˇ_â^[…¬ UãÏQVãÒWã˙ÖˆtMSÉNÄ>´â~$u.ãFÖ¿t'3€9~!3…âM¸ãLã◊Ë»ˇˇˇãFCãM¸É¡âM¸;|‰ãNã◊Ë≠ˇˇˇãvÖˆuµ[_^…√UãÏQVãÒWã˙ÖˆtwSãNã¡ˆ¡tÖˇx9~$uã¡É‡˛âFäÄ˘¶u9~u=%ˇˇÔˇâFÎ3Ä˘´u.ãFÖ¿t'3€9~!3…âM¸ãLã◊ËûˇˇˇãFCãM¸É¡âM¸;|‰ãNã◊ËÉˇˇˇãvÖˆuã[_^…√UãÏÉÏ<ã¬3“SâEÙVãX Wã˘âU¸ãHÖ¿é„  ç≥Ä   çKâu‡âM‰É9 ãF‡âEÏÑ{  Ö¿Ñs  ∂NÙ¡ÈÉ·ˆFÙâMËÑû   3¿9Öo  9FÖf  âE¯3“ãEÏf;P"}}3¿ãÒâEã»ãUÏãRâU‹ˆDãU¸uCjçM‘BQçM–âUÿQãM‹ˇ4ãÀËó˝ˇˇÖ¿tãEÙã”É¿$ãœPãE¯VPˇuÿˇu‘ˇu–Ë’˝ˇˇãEãM¯É¿AâEãEÏâM¯ø@";»ãE|íãu‡ãMËÉ> t0É~ Ö‡   Ö…t
ãV¸ãË˝˝ˇˇãEÙãœˇ6ãP$Ë~6˛ˇãMÙâA$É& ãFâE¯Ö¿t|3…âM9H~rã ã»ã–ãMÏâE‡Ë¶¸ˇˇâEÿÖ¿àò   ãE¸çMÃj QçM»@Qˇu‡ã–âE‹ãÀÆËËÀ¸ˇˇÖ¿ttãEÙã”É¿$ãœPˇuËÆËˇuÿˇu‹ˇuÃˇu»Ë˝ˇˇãMãE¯AâM;H|éãU¸ÉE‰HBãÉ∆HHâU¸âu‡;–}5ãM‰ÈY˛ˇˇPhD	WË∞ü˚ˇÉƒ3¿@Îhx	WËùü˚ˇYYÎÏˇu‡h∞	ÎŸ3¿_^[…√UãÏSãYVãrˇA,ãR$Wãy,Ö“t∂BPj ˇ2ãUãRË…q˛ˇãUãÀW+÷RãU÷Rj_ZË±˝ˇã«_^[]¬ UãÏÉÏ0ÉeÙ SVWã˙ãÒâuÿã∂O ã^˜—É·ã âEËâMçãGUâE¯3¿9EâE‘ãEâU‰tã»+MÎãF,çH¬âF,ãUâM¸ãBÖ¿t@ÎãBâEÏãF8HÉ} âF8ãâGï¿çÖ   PˇuQãŒËq˛ˇãMËM¸ãEâM‡Ö¿tj QˇwãÀj|ZËÙ˝ˇãEãM‡É} uãUÖ“~R¡PˇuÆËãNjMZËÃ˝ˇãM¯Ö…él  ˇu‰ã◊ãŒˇu¸ˇuË∫˛ˇˇãV,ãO âEÙâN,ãMËçB+OâE‹ãE»âMãM‡Ö¿uãOj j QjZjvYÖ¿D—ãÀËl˝ˇˇwãÀâE–ˇu¸ˇu‹jXZËV˝ˇãWãÀË^%˝ˇãâE‡ÄyS ÖØ  ãMMÆËãpâH∑FPj ˇvˇbÉƒÉ ˇãÀj˜VËc$˝ˇ∑N∑Fãuÿ+»ãIQˇu¯ãŒËI
  ãM‡âAãÀãCtâE‡@Pj PjZËÿ˝ˇˇN8ãÀãF8j âGˇF,ˇwãF,PjZâGË∂˝ˇj j ˇw∫ê   ãÀË£˝ˇãEÏÖ¿tj ˇwãÀPjZËå˝ˇãU–ãÀËî$˝ˇãKtâHˇwãNˇu‹ˇu¸jMZËh˝ˇãU‡ãÀËp$˝ˇãKtâHãM¯ãUÏÖ“t`ãCtãÀãwÉ¿j PRj;ZË7˝ˇj j Vj"ZãÀË(˝ˇãUËãÀ+U¯ãE¸E¯RPj Vj'ZâE–Ë˛˝ˇj j V∫Ä   âE‘ãÀËˆ˝ˇãE¸ãu–ÎãE¸ç4ãMÙÖ…uˇu‰ãMÿã◊PˇuË€¸ˇˇâEÙã»ãE‰+E¯∂W PVQˇwÉ‚ãÀÅ¬à   Ëü˝ˇãE‘Ö¿tãwÖˆuãstã–ãÀË£#˝ˇâp_^[…¬ UãÏÖ“~jˇuÆËRj1ZËo˝ˇ]¬ UãÏÉÏ$SãY3¿âMÙâE¯VãuWã¯ã6âu¸ÉÍÑ  ÉÍt\Ë≈Ñ˛ˇˇu¸ã}ãÀˇuãˇuWjZË˝ˇVˇu¸ãÀˇuj_ZË˝ˇˇu¸∫à   ãÀˇuVWË˝ˇjZãÀËJ ˝ˇãMÙã÷ËíÑ˛ˇÈ∫   ãA,çx∆âA,ãCtãM∆âEçFˇâ}‰âE‡ÖˆéÜ   ãUÉ¬+˘â}Ïã}ÙâU¸ããœËâ&˛ˇãM¯âEËçFˇ;»}
ãEÆËj4ÎãEj5MâEÙãEÏZ¡PˇuÙQãÀËn˝ˇj˛ˇuËÉ ˇãÀË¥!˝ˇ∫Ä   ãÀË´˝ˇãE¯ãU¸@É¬âE¯âU¸;∆|îã}‰ãMãE‡PWQjNZãÀË)˝ˇã«_^[…¬ UãÏQÉy$ SVWãÚuNÉ˛tÉ˛uDãyãœã]ã”Ë≠ ˝ˇçSãœË "˝ˇÄ8¥uçSËñ ˝ˇÉ˛uã”ãœËÂ!˝ˇãM∆ I«@   âH_^[Y]¬ UãÏÉÏT°∞	3≈âE¸ãEÉeƒ Sã]âE‘VãuäàEÛ∂¿âE¥ãCâEÿãE‘âUËâMÏâu–â]‡Wãyâ}¿Ö¿t∂@Î3¿ã]âEºÖˆt
É> u3ˆâu–Ö¿uãRãœSËº˝ˇˇãMÏãUËãBããE‡â]∞ã@Ö¿u'ÖˆtãˆF ã çpEq,âuƒãA,ãu‡@âFY,Îãq,√;∆~çâA,ãE‡ãpâXãEâu»âu‹Ö¿x33¿âE‰ÆËÖ€éS  ∆ãœPˇu‰ˇuj\ZËº˝ˇãE‰@âE‰;√|‚È*  äeÛÄ¸Ñ$  Ä¸
tÄ¸	t	Ä¸t2¿Î∞ãU–àE‰Ö“Ñæ   É}º Ö¥   Ä¸Ñ´   Ä¸Ñ¢   ã
àE‰ãBâEÃ;}Cã}Ëãÿk√ãÚâEÃ∑DÖ¿tfã”f+VfBk»ãGfâTãCãEÃÉ¿âEÃ;|”ã}¿ãu»ãU–ãEËãHãÖ€â]∏ã]∞~?ãU∏çAâEÃã˛∑3¿fÖ…D«ã¯çCˇD√ãÿãEÃÉ¿âEÃÉÍu›ãU–ã«â}‹ã}¿âE‹ãEËÉx äM‰âuÙàM¯tˆ¡tÉ}ƒ ~Ée‹ çEÙâB$Îˇu‰ãUËãMÏj VãRËÉj˛ˇãMÏãUËÉ}º tEˇu»ãE‘ˇrˇu∂pˇpã÷ËÒ˚ˇˇãM‘ã÷ˇqãMÏPË+˝ˇˇãE–Ö¿u-ãEËãœˇuãPË≠˚ˇˇãu»ãE–ãM¥ãUIÉ˘áv  ˇ$ç™ﬁãu»Î‰ãMÏËïÄ˛ˇããœVSˇu»j_ZË˘˝ˇãEÿ∫à   Sˇu»ãœVPËÿ˝ˇãMÏã÷ËÑÄ˛ˇÈ-  ãEÿ∫ä   SVPãœË√˝ˇÈ  ãEƒãMÏ@ã–âE∏ËpÄ˛ˇâE‰ãœEƒPSVj_ZâE¥Ëó˝ˇÄ}Ûu/ãGtãœãuÿÉ¿j ˇu‰FPVjZËj˝ˇSˇu»∫à   ãœˇu‰VËV˝ˇãE–ã]ÏãÀÖ¿tˇuƒã–jˇu‹ˇu¥ˇuËËô˜ˇˇÎ;Ë≈˛ˇj ããœVˇuÿj}ZË(˝ˇVˇu‰ãœˇuÿj~ZË˝ˇjZãœËe˝ˇã÷ãÀËÆ˛ˇˇu∏ãU‰ãÀÈJ  ãMÏÖ¿Ö—   ãE‡ã@âE¿Ëi˛ˇj RVj2ZãœâE‘ËÕ˝ˇãM¿ˇu‘¡È+ŸSç1ãœPj_ZË≥˝ˇãE¿ãœÖ¿yVˇu‘ˇuÿj~ZËõ˝ˇÈÙ  PVˇu‘∫à   ˇuÿÆËËu˝ˇÈ⁄  ãMÏÖ¿uZË˚~˛ˇããœãE‡SˇpVSˇu»j_ZËm˝ˇSˇu»∫à   ãœVˇuÿË8˝ˇãMÏã÷Ë‰~˛ˇÈì  j ˇuÿjjFZÈ\˛ˇˇÖ¿Ñ|  ãMÏˇuƒã–Sˇu‹VˇuËËaˆˇˇÈ}  Ö¿u‚Ä}ÛãœPuPãE‡ˇpjÈHˇˇˇSVjRÈ?ˇˇˇãM‡3¿âE‹ãAãMÏâE∏ãâU‡ËP~˛ˇçRâEºË}~˛ˇâE‰E‡âE‘ãEÿ@Ä}ÛâE¥uSVj PjZãœËâ˝ˇâE‹ãE‘ãœ@PSVj_ZËÅ˝ˇÄ}Ûu ãE‘∫à   j @ãœPˇu¥Ëe˝ˇjZãœË≥˝ˇã]‰3¿âE¿9E‡~7ãM∏É¡ÆËâMÃj √P∑ãœH∆PjOZË,˝ˇãE¿ãMÃ@É¡âE¿âMÃ;E‡|’ãuÿãœj ˇu‘Vj|ZË˝ˇˇuºãE‡ãœÉ¿PSj_ZËÔ˝ˇãE‡∫à   É¿ãœPSˇuºVËÀ˝ˇãE‹Ö¿tã–ãœËŸ˝ˇãOtâHãUºãMÏË`}˛ˇãE‡ã”É¿PË°}˛ˇÉ}– uãEËÉx tj ˇuãœˇpj<ZËá˝ˇãM¸_^3Õ[Ë˝ …¬  €H€Ë‹uﬁ_€=›=›_€›˜‹°‹_€›_€&‹UãÏQQSã¬âE¯EkÿVWâE¸ã˘j ÉÎçCPËl˚ˇãÖˆt>ãE¸É¿Sj çÜãE¯âN∑»fâNMfâNäGPàFçFPâ~«   ˇbÉƒÎWË∫n˚ˇ_ã∆^[…¬ Ö…tÉ)u
ã—ãIÈi˚ˇ√UãÏÉÏã¬SãŸâEÙVãã—ãEãu@WâM+÷ãPâ]¯ËHˇˇˇã¯ÖˇtYãUÙãﬁkŒÉ¬—âUÙ;u}DçGÆËâE¸ããM¯Ë8˛ˇã»Ö…uãE¯ã ãHãE¸ãUÙÉE¸âãOäB+ŒÉ¬âUÙàC;]|≈ã«_^[…¬ ÅÈÜ   tÉÈtÉÈt∏	√∏¸	√∏	√∏	√UãÏÉÏ@âU‹ãUSVãqãBˇI8âE‡ãA8âEÿ3¿Wã}âE‘ãâEÃä∂√âE¿ãGâEÏãE‹âMÙâuƒà]ˇã@É¿Éz âE»t73ˇãŒWˇrˇrjZËÉ˝ˇWˇu‡ãŒWjZËt˝ˇã}ãŒãWËÒ˝ˇãMÙã◊ã}ãBâEËÄ˚	t?Ä˚t:Ä˚
t5Ë–z˛ˇâE¯Ä˚tÄ˚tã}ã◊â}‰ËÓz˛ˇãUãÿ3…ÎË®z˛ˇ3…ãÿã˘Îã_3…ã}âM¯â}‰ãEÃã +BˆB âEÃÑú   ãMÙˇA,ãA,âE–ãA(âE@âA(3¿9BtPPPjZãŒË»˝ˇâE‘ãMÃAœQˇu–ãŒˇujwZËÆ˝ˇãE‘Ö¿tã–ãŒË∞˝ˇãNtâH3¿ãŒPˇu‡ˇuËj$ZËÖ˝ˇˇuÿ@ãŒâE‘ãE‹ãPËÍÙˇˇˇu∫É   ãŒˇu–ˇuËË\˝ˇ3¿ã»Î.Qˇu‡ãŒˇuËj%ZËE˝ˇˇuÿ@ãŒâE‘ãE‹ãPË™ÙˇˇãEË3…âEAãEÃ¡âE–çHˇâM‹Öˇ~'ãU»É¬â}Ã3ˆf92çAçRE¡ã»ÉÔuÌãuƒã}‰âM‹çGˇâEƒÖ¿xMã}ƒãU»k«É¬ÆË¬âE»∑ fÖ¿tçPˇÎã—IâM‹çãŒPRˇuj\ZË¨˝ˇãE»ãM‹ÉËÉÔâE»y ã}‰ãE¿ÉË
Ñ˜   ÉËÑƒ   ÉËt~HÉËtxÉËt*3¿ãŒÄ}ˇ	PuãEWˇpjRÎ	PãEˇpjZËN˝ˇÈ¥   ãEãMÙãPâU¿Ë√x˛ˇ¡ÍãœP+ âE»QçQj_ZãŒË˝ˇãE¿ãŒÖ¿ySˇu»ˇuÏj~Î∂PSˇu»ÆËÎ^Sˇu–ãŒˇuj\ZËÔ˝ˇ3¿ãŒPˇu¯ˇuÏj}ZË‹˝ˇˇu¯ãŒSˇuÏj~ZËÀ˝ˇjZãŒË˝ˇÎ*ãEãŒWˇpˇu¯WSj_ZËæ˝ˇWSˇu¯ãŒˇuÏ∫à   Ëâ˝ˇÉ}¯ t#Ä}ˇã”ãMÙuWËwx˛ˇÎË!x˛ˇãU¯ãMÙËx˛ˇãUÿãŒËÏ˝ˇã}3€Sˇu‘ãŒäW ˇuËˆ“É‚çU   Ë@˝ˇ9_tSSˇwãŒjBZË,˝ˇãU‡ãŒË¨˝ˇ_^[…¬ UãÏÉÏD°∞	3≈âE¸∂SV3ˆâU‘Wã˘-â   ÑÕ   ÉËÖÂ   ãE‘ãﬁâ]»ã÷øH âM–ÖˇÑÃ   Ö“uiãGâEÿã∆ãMÿã	Ö…âMÃãM–~,ãM‘ãqãMÿÉ¡4âu¿ãﬁâMƒãM–ãuƒ9t	@É∆H;EÃ|Ûã]»3ˆ;EÃ}ã]ÿk¿HÆËãTã\â]»ÎãÖˇuóÖ“t_Ö€tãC;}TÖ…xPk…ÆËãCãTãC Î)Ö…yæ@3	Î3¡·ÆËJ3“Ëüå˚ˇÎãJãAãPãA âE‡çM‹ãâ}ËâE‹ËÏ˛ˇˇããM¸ã∆_^3Õ[Ëy …√UãÏÉÏT°∞	3≈âE¸SVWã˘â}¥ÄøÀ    ãGã7âE»âu‘Öe  Ä Ö[  Îã–ãB4Ö¿u˜ãB ãZ3“âE∞BàWãF$ãN 3ˆâEºã¡É‡â]ƒ∆tã¬âE–Îã∆âu–É·@ŒuâuÃÖ¿tâUÃããM»ËA!˝ˇãâuÿÖ¿é∫   ã}–çKâMºããQ¸Ö¿tˆAtH9uÃtHÄ:¶uCøJ ãR,Ö…yøJ Ö…y∏‘	ÎÆËãB…ã»ÖˇtPˇ2h¥¸ˇu‘Ë9Ä˚ˇÉƒÎ*É…ˇÎ*Ö¿uãEÿ@Ph0	ˇu‘ËÄ˚ˇÉƒÎ
ãM‘ã–Ë™f˚ˇπNãUÿQãM»PVË˛ ˝ˇãUÿãMºBãÉ¡âUÿâMº;–åRˇˇˇã}¥ãM∞ã_âM‡â}‹âuËÖ¿~)ã}ƒÉ«ãçM‹Ë]˝ˇˇjˇPjã÷ãÀË∞ ˝ˇãEƒçF;0|›ãM¸_^3Õ[Ë’ …√UãÏÉÏ4°∞	3≈âE¸ãESVWã9ãÚ3…âE‹ãEâE‡âM‘âM–âMÃâMÿÖˆt!ãã√Q¡‡ãœPâ]ÏË™c˚ˇπˇ  âEË;Ÿ~Îã¡âMËãŸâ]ÏãM‹3“âUÙâEfâãM‡âÖ€ég  çFâE‰ÄS ÖW  ãp¯Öˆtˆ t]ãHÙËr˛ˇÎÄ8åuã@Ö¿uÙäÄ˘¶u4˜@   u3ãH,Ö…t,øp Öˆyøq Öˆyæ‘	ÎÆËãAˆã4ÎÄ˘;uãpÖˆtãŒË0˛ˇÖ¿uã÷ãœË'e˚ˇˇEÙÎãUÙBRh0	WâUÙËo~˚ˇÉƒÉe¯ ãÖˆtqã]¯j ã÷çMÃË@°˚ˇÉx tYãŒËiâ˚ˇã–Ö“~çJˇÎ∂1ˆÄêàtIÖ…ÓÄ<1:D—CSVRh<	Wâ]¯Ë~˚ˇÉƒãÉ˚vçE¯PjË/Ä˚ˇã]¯Öˆuïã]ÏãMâ1ãŒË%å˚ˇãMàA
ÖˆtQã÷çMÃËx°˚ˇ;EuWËye˚ˇãE‰ÉEÉ¿ãUÙâE‰;”åü˛ˇˇçMÃË3ü˚ˇÄS tBã]ÙÖ€~ãuËãÖ“tãœË¢_˚ˇÉ∆ÉÎuÎãEËÖ¿t	ã–ãœËä_˚ˇãE‡jÉ  3…ãE‹fâXÎ3¿ãM¸_^3Õ[Ëí …¬ UãÏÉ‰¯ÉÏD°∞	3ƒâD$@ã¡âD$SVã ã⁄ãuWâD$ÄxS Ö   j çD$0j PˇbãF ÉƒãvÉd$  É∆ã{âD$03¿f;C"È›   ∑GçL$,É‡b	Cãã–âD$Ëq˙ˇˇãL$âD$Ë:˛ˇàGãD$Ö¿tkã»Ëœá˚ˇãôâD$ãÚË¡á˚ˇãL$ôâD$$D$÷É¿É“ RãPËÌb˚ˇã–âÖ“t#ãL$ãD$AQPãD$,@¬Pˇ bÉƒfÉOÎ	π˚˝  f!Oãt$Ä@äEàGãT$ãL$(Ë◊˛ˇÖ¿tˇ0ãL$ ã◊Ëá¬˛ˇãL$ É∆øC"AÉ«âL$ ;»ât$åˇˇˇ3¿@fâC(ãL$L_^[3ÃË. ãÂ]¬ UãÏQQã¡SVâE¸ã⁄ãWâM¯j ãq ã∆ãy$É‡˚É»@ây$âA ãM¸Ë˙3  ãM¯ây$ã}¸âq É$ t3¿_^[…¬ ãÿãC4Ö¿u˜Pj@ËÈ_˚ˇãÖˆt‡É& çN∏»   «F   fâF&çF"ãSQPãœËÃ˚ˇˇˇuã÷ãœSË˛ˇˇÉ»ˇfâF ãE¯ÄxS t	VPËÀ√˛ˇÎïã∆ÎìQãAÖ¿u9Atuãˆ@Lu∆AËŸ˝ˇY√UãÏÉÏ°∞	3≈âE¸SVWã˙ãŸÉ ãw<âuÏÖ„   ÖˆÑ€   ãC,@âC,âEâGËüˇˇˇãNçU¯âEÙË>/˛ˇÖ¿t@ãMÙj ˇuˇu¯jFZËl˝ˇãE¯Ö¿u	PˇuPjÎFxMôRPËmö˚ˇf9G~?ÅO @  fâGÎ2ˇuãVãÀË^X˛ˇãMÙj j ˇujZË ˝ˇj ˇuˇujãMÙZË˝ˇÉ~ t?ˇC,ãÀãs,ãUÏâwˇC,VãRËX˛ˇãMÙj j VjZË›˝ˇãMÙçFVPˇu∫û   Ë»˝ˇãM¸_^3Õ[Ë> …¬ UãÏQQSVãÚãŸWã}ãV4Ö“tWË‰ˇˇˇã»Ö…u!Î3…ãF;8}k«ãÀÆËãVãTË]˛ˇã»_^ã¡[…¬ UãÏÉÏ SVãr0ã¡3€âUÏâE¸WÖˆtã>Îã˚ã çWjã»âEËËÚˇˇâEÖ¿t|Öˇ~xÉ¿É∆ÆËâEÙããM¸âE‰˜@   t	ã–ËÚ˛ˇÎ0∑FãUÏHPËDˇˇˇâE¯Ö¿u	ãEËã@âE¯ˇ0ãU‰ãM¸Ë[˛ˇâãE¯ãUÙâÉ¬ãEâUÙãHäFÉ∆àC;ﬂ|óãE_^[…¬ UãÏÉÏX°∞	3≈âE¸ãESVWã˙âE¥ãŸãG ãsâE–ãGâu‹ã âEº3¿âE»âE¿9GDthD	SË˙Ñ˚ˇYYÈŒ  PPPj!ZË@≥˛ˇÖ¿Öª  ãC8π@  Hã◊âC8fâOãÀPâEƒË^˝ˇˇãG<ãM–ãW0âE¨ãGâE∞ãGâE∏3¿âG<âGâGã1;âuÿãu‹âUÃ~ É¡0ˆ u@É¡H;Eÿ|ÚÎãM–k¿HãD4âE»ãC(âE‘@âC(Ä?Öu3…âE¿Ö“ï¡É¡@âC(Î	ã ˜Ÿ…É¡ãE‘ˇuºâE‰3¿ˇC,âEËâEÙâEÏâEãC,Pˇu»àM‡ãŒjwZâEÿËÇ˝ˇÉ}Ã t<Qã◊ãÀË˛ˇˇããEÃj ãÉ¡Qˇu‘ãM‹jsZËW˝ˇj˜Vãu‹ã–ãŒËù
˝ˇãEÃâE¯Îj ˇuºãŒˇu‘jsZË.˝ˇãE¿Ö¿tj j PjsZãŒË˝ˇâGÉO Ég0 ã˜ˆFÖH  ãF4∆Ü˜@    tãÖˆu·ãF4h§	jSÉ`8 âE–ËË˝ˇãU–çE‡ÉƒãÀPËÎ4  ãM–ây8Ö¿Ö
  ãM‹Pˇuƒˇu‘j&ZË§˝ˇãM‹∫Ü   j j ˇu»âE¿Ëç˝ˇãEÃÖ¿tã ãMÿ@j\ZÎ
ãEÿ∫Ñ   3…QãM‹Pˇu‘Ëd˝ˇãM‹∫Ä   j j ˇu‘ËP˝ˇˇK8ãC8ãU∏ãM‹PâEÿË¥Êˇˇˇuƒã◊ãÀˇuÿˇu¥j j ˇu»ËgËˇˇãE∞Ö¿tãM‹j ˇuƒPj<ZË
˝ˇãUÿãM‹Ëâ˝ˇÉf4 h¨	jSË˝ˇÉƒçE‡ã◊ãÀPË4  ãE–ãM‹j ˇu¿âF4j jZË∆˝ˇãUƒãM‹ËE˝ˇÎhx	SËAÇ˚ˇYYãW0Ö“tãË&˛ˇãEÃâG0ãE¨âG<ãM¸_^3Õ[Ë
 …¬ UãÏQQSVãÚãŸW3ˇ3“GãF<Ö¿âE¸î¬ÎãF4Ö¿tã˙É~D tÔÉ»ˇ_^[…¬ πº	Éˇ∏ÿ4	E¡PWh¿	j SË<˝ˇÉƒjjˇuã÷ãÀj j jˇËUÁˇˇÉ}¸ ufâ~ãv8ÖˆuŸ3¿Î¨UãÏÅÏà   °∞	3≈âE¸SVã¡ã⁄ãU3…WâMÄç}‹jâEàãÚã YÛ•ã}àãœâEêãC4â]îâïxˇˇˇâEòËº˘ˇˇÄ}‹âEúuãKj ˇ1ã»ˇu‡jsZËë ˝ˇ∆E‹˜C   tçE‹ã”PãœËˆ˛ˇˇãÖˆâ»  π    ÖKt)ã√ÖHtã@4Ö¿uÙÖ¿tçE‹ã”PãœËî˚ˇˇ3ˆâuÑÈ≠  3“9S0tãçxˇˇˇã”QãœË  È°  ãuò9V4u"hÿ	jWË˝ˇÉƒhË	jWË˝ˇÉƒ3“∂-Ö   Ñæ  ÉËÑ±  ÉËÑ¨  ãO(RRQçAâM†ãMúâE¯@jsZâG(Ë∂ˇ¸ˇâCã√ãK8Îã¡ãH8Ö…u˜ÉH ã÷ãE†ãœâEƒ3¿âE»âE‘âEÃâE–çE¿P∆E¿Ë°1  ãÖˆÖÀ  ãu¯ãMúPPVjsZË_ˇ¸ˇ∂âCãC<Éc4 Éc< âEåâuƒË,ÌˇˇPh¸	jWËH˝ˇÉƒçE¿ã”ãœPËL1  ãK4ããEòâC4âuÑâMÄ∑@f9C~fâCãS<Ö“tãMêË6˛ˇãEåâC<ÖˆÖO  ãw8ãœãUîNVâuåç^ˇâ_8Ëˇ˜ˇˇãMúj Vˇu†j&ZË¿˛¸ˇãœËDh˛ˇãMúãj Vˇu†∫Ñ   Ë§˛¸ˇãMúã¯j VSˇu¯jZËÑ˝ˇãMàã÷Ë0h˛ˇãuåçE‹ãUîVSPj j ˇu†Ë≥‰ˇˇã”ã]úãÀËÏ˝ˇj Wã}†ãÀWjZËQ˛¸ˇã÷ãÀË“˝ˇ3ˆçGVVPjxZãÀË6˛¸ˇVVWãÀÈÅ  ãCãœâFãCâFãC<âF<çE‹âU†âU¯ã÷PË.0  ã3“ãEòâP<ÖˆÖP  âS4ãHâKã@âCÖ…t,ãuúRRQjZãŒË“˝¸ˇãKâE†Ö…tQA∫û   QˇsãŒË∂˝¸ˇh	jWËºˇ¸ˇÉƒçE‹ã”ãœPË¿/  ãK4ããEòâC4âMÄfãKfãPâuÑË5ë˚ˇãK<fâCÖ…t(ãIçU¯Ë &˛ˇÖ¿tãE¯Ö¿~ôRPËmë˚ˇf9C~fâCãE†Ö¿Ñ£  ãMúã–ËE˝ˇãItâHÈé  Ä}‹uãE‡âE†Î4ãO(RRQçAâM†ãMújsZâG(Ë ˝¸ˇâCã√ãK8Îã¡ãH8Ö…u˜ÉH ãE†âE®ã÷3¿∆E§âE¨ãœâE∏âE∞âE¥çE§PËÎ.  ãÖˆÖ  !C4ãC<!s<Ä;á∂âEåî¿˛¿àE§ËÑÍˇˇPh¸	jWË†˛¸ˇÉƒçE§ã”ãœPË§.  ãK4ãÉc0 Ä;ÖãEòâuÑâMÄâC4ufãPfãKËê˚ˇfâCãS<Ö“tãMêËÇ˛ˇÉc Éc Ä}‹ãEåâC<Ñë   ãEêÄxS ÖÑ   ã_8ãEàKãUîã»Sç{ˇâx8Ë4ıˇˇãuúãŒj Sˇu†j&ZËÛ˚¸ˇãUîçE‹ãMàãvtSWPj j ˇu†Ë‚ˇˇã◊ã}úãœËVˇ¸ˇj Vãu†ãœVjZËª˚¸ˇã”ãœË<ˇ¸ˇj j VãœjxZË£˚¸ˇãuÑã}àã]îÉ{8 uãœË˛¸ˇÉ$ Öﬁ   ˆC Ñ‘   ãCãMêjã ã–âEòË.ËˇˇâEåÖ¿uj^È±   É¿âÖ|ˇˇˇ3¿âE†9Eò~-ãµ|ˇˇˇPã”ãœË|ıˇˇâÖ¿uãEêã@âãE†É∆@âE†;Eò|Ÿã}úãuòÉeê çCã]åâEòã âÖ|ˇˇˇÖ¿x7ã–ãœÆËË˝˝ˇãï|ˇˇˇj˜SâpˇË-˝ˇãEòãMêÉˇAÉ¿âMêâEòÉ˘|Ωã]îã[4â]îÖ€u£ãMåËÌÁˇˇã}àãuÑãçxˇˇˇãEËâAãEÏâAãEÄÖ¿tP∫ŒãœË8Œˇˇã∆ãM¸_^3Õ[ËÛ …¬ UãÏÉÏSã]VWã˘âUâ}¯ãwâu¸ãFtˇO8ãO8âEËãEâMÙÖ¿Ñì   j j PjZãŒË)˙¸ˇâEÏãEÖ¿tˇ ˇsã}ãŒGWˇsjXZË˙¸ˇãM¸ãj˜ˇuã÷ËL˝ˇçFãu¸PˇuÙãŒPjZË‚˘¸ˇãUÏãŒËÍ˝ˇãNtâHãŒãCHPWˇsjNZËø˘¸ˇj ˇuãŒjjFZËÆ˘¸ˇã}¯ãMÙãUãÄxS t3¿È~  ãRQãŒËﬁˇˇãU∂ÉË
Ñ  ÉËÑƒ   ÉËtTÉËtj ˇsˇsjRãŒÈ  Éz uãSãœËc˛ˇãUâBãCâBˇsãOˇrˇsjMZË(˘¸ˇãEj j ˇpjÎªãœËûb˛ˇãM¯ã¯Ëîb˛ˇWˇsãˇsã]¸ãÀj_ZËÛ¯¸ˇãEãÀj Vˇpj}ZË‡¯¸ˇãEãÀVWˇpj~ZËŒ¯¸ˇjZãÀË˛¸ˇãM¯ã÷Ëdb˛ˇã◊Ë]b˛ˇãÛÎ^ãœË3b˛ˇˇsãM¸ãˇrVˇsˇsj_ZË£˘¸ˇˇsãE∫à   ˇsãM¸VˇpËh˚¸ˇãM¯ã÷Ëb˛ˇãu¸ÎˇsãOˇrˇsjMZËQ¯¸ˇãEÉx tj ˇuãŒˇpj<ZË6¯¸ˇãUÙãŒË∂˚¸ˇj j ˇuãŒjBZË¯¸ˇãEË_^[…¬ UãÏÅÏà   °∞	3≈âE¸ãEÉeÑ Ée¥ SVãÒâEêã⁄âu∞Wãã~âEòãF8Hâ}¨âEîHâF8ãK0âEàäàE√Ä}√ÜãC4ãâEúâM∏âUåÑƒ   ãEò«Eº   ÄxS Ö∞   k¬âE§ãCã}º;8ã}¨èô   3¿Ö“~!çyã∑;EºtFÉ«;Ú|ã}¨âu®ãu∞ãE®;¬uZãMò∫ö   j ËÒ˛ˇã»Ö…Ñ©   ãEºÅI   ãU∏âAQãŒËà˛ˇã»ãEºâM∏âK0Ö…tãU§fâD
ãUåBÉE§âUåÎãUåÎãEº@âEºãEòÄxS ÑVˇˇˇãMòçï   j PË÷O˚ˇâEÄÖ¿tCãMå3“Bâ; |ã}∏ãÉ«∑çHâñB;—~Òã}¨ãu∞Qã”ãŒË2ÒˇˇâÖ|ˇˇˇÎjXÈY  É•|ˇˇˇ ãE∏ã–âC0ãj Ë˛ˇÄ}√ÜãMúâA0u	Ée® ÈÜ   ãCj ããF,âU§Bçx¬Wj jFâ}®ã}¨ãœZâF,Ë7ˆ¸ˇãU§ãMòjËÛ‚ˇˇã–çN,âU¥âM∏Ö“tGÉeº É}§ âM∏~:ã}ºçBÆËâE†Wã”ãŒËAˇˇãM†âÉ¡ãE¥âM†ã@∆ G;}§|€ã}¨çF,âE∏ãEúã”Éc4 ãŒh–ÈÉ`8 ˇs0Ë"˜˝ˇãEúÉx4 uh–Èˇp0ã–ãŒË˜˝ˇˇuîã”ãŒË¿Óˇˇ3¿9CtGÄ}√ÜuAãE∏ˇ ãâM§çQâãCâU†Ö¿t@ÎãCj QPjNZãœËXı¸ˇj ˇu†ãœˇu§jNZËFı¸ˇÎâE†âE§ãS<Ö“tãMòËn˛ˇãE∏Éc< ∆Eƒ∆E‡ˇ ãâM∏âM»çQâUºBBâ3“çAâUÃ∂âUÿâU–âU‘âE‰âUËâUÙâUÏâUËÕ‚ˇˇPhú	jVËÈˆ¸ˇãGtÉƒ@ãœPj ˇu∏jZËøÙ¸ˇãM§ããEúh®	jˇu∞âHË∏ˆ¸ˇãUúçEƒãM∞ÉƒPË∫&  ãU∏ãœËÆ˜¸ˇã÷ãœËí¸¸ˇãOtâHãœãGt@Pj ˇuºjZËfÙ¸ˇãsã{Éc h∞	âE§ãE†jˇu∞âCËWˆ¸ˇãM∞çE‡Éƒã”PËZ&  âsãu¨ãŒâ{ã}ºã◊ËC˜¸ˇˇuîçGã”ˇu¥ã}∞ãœˇu®PˇuêçEƒPËí˘ˇˇâE†äE√<Üt<Öu#ˇuîãEºã”ˇu¥É¿ãœˇu®PˇuêçE‡PËd˘ˇˇâEÑãM¥Ë·ˇˇäE√<áÑÁ   <àÑﬂ   ãEºãŒj ˇuÑÉ¿PjZËúÛ¸ˇj ˇuîãŒâE¥ˇuºjZËáÛ¸ˇj ˇu¥ãŒâE∞j jZËsÛ¸ˇãEúfãKfãPËá˚ˇfâCãEºãŒj ˇu†@PjZËKÛ¸ˇj ˇuîãŒâE®ˇu∏jZË6Û¸ˇj ˇu®ãŒj jZË%Û¸ˇãEºãŒj ˇu†@PjZËÛ¸ˇj ˇu¥ãŒâE¨ˇu∏jZË¸Ú¸ˇj ˇuàãŒj jZËÎÚ¸ˇäE√<ÜuCãE¨âE¥ãFtâE†ÈÜ   ãUîã âM¥âU∞<àÖaˇˇˇãEúâM®∑@f9C~fâCâU∞âM¥È|ˇˇˇ<àuãE¨âE¥@âE¨ãFtâE†ÎTj ˇu¥ãŒˇu∏jZËyÚ¸ˇj ˇuàãŒâE¥j jZËeÚ¸ˇÄ}√ÖãE¨ãNtâE¨ãE∞âM†âE∞uãEºãŒj ˇuÑÉ¿PjZË7Ú¸ˇj ˇu®ãŒˇuºjZË%Ú¸ˇj ˇuàãŒj jZËÚ¸ˇãU§ãŒË˙¸ˇãNtj ˇu∞âHãŒˇu∏jZËÚÒ¸ˇj ˇu®ãŒˇuºjZË‡Ò¸ˇãUàãŒË`ı¸ˇ3¿ãŒPPPjWZË«Ò¸ˇjÒˇuÄã–ãŒË˘¸ˇˇuåãŒˇuÏˇu–jXZË¶Ò¸ˇj˜ˇµ|ˇˇˇã–ãŒËÍ¯¸ˇ3“ãŒBË„ˆ¸ˇˇu†ˇu¥ˇu¨jZËzÒ¸ˇãUîãŒË˙Ù¸ˇãS4Ö“t
ãMòjËâÀˇˇãuúâs4ãV0â^8Ö“tãMòËô˛ˇÉf0 ãœË±Û¸ˇ3¿9G$ï¿ãM¸_^3Õ[Ë™˘ …¬ UãÏÉ‰¯ÉÏ<°∞	3ƒâD$8SVWã˙ãŸÖˇu3¿È¬  ˆGtãG$;CuãCâG$ä<¶Ö/  ãG;CÖ5  ˆGÖ+  øG k–ãCãtãŒË2ˇ˝ˇÉ¯~ÆËãã÷ËX!˛ˇÈa  É{ ãã âD$t9Ä>¶t4j4çD$j PˇbãCÉƒât$çt$âD$,ãD$∆D$≤«D$   ÎÖˆtj j ã÷ã»ÆËËÀ
˛ˇããD$Î3ˆÄxS tÖˆÑÓ   ã÷ã»ÆËË^	˛ˇÈ›   É{ tÅN   ˆGtÆËãW$ãŒËŒˇˇãD$ã◊ã»Ë,	˛ˇäã˛<¶t,<pt(ÆËãã÷Ëº˚˝ˇÖ¿tÆËã Î∏X‡ãã÷PË8˚˝ˇã¯Ågˇ˛ˇˇÎs<≤uãG;CuãCâGãWËs˛ˇˇãWãÀâGËf˛ˇˇ˜G   ãÀãWâGt	jË~   ÎËA   ˜G   t$ãw,ãÀãV(Ë1˛ˇˇãVãÀâF(Ë   ãVãÀË   ã«ãL$D_^[3ÃË∞˜ ãÂ]√UãÏQVãÚã¡âE¸Öˆt#W3ˇ9>~Sç^ãã»Ë‚˝ˇˇâGç[ãE¸;>|Í[_^…√UãÏQQSVãÚãŸâu¸ÖˆÑÅ   WãVãÀË©ˇˇˇãV(ãÀËüˇˇˇãV0ãÀËïˇˇˇãV,ãÀËë˝ˇˇãV$ãÀâF,ËÑ˝ˇˇã~ âF$ãâE¯Ö¿~+É«0ããWÏãÀjËîˇˇˇˆt
ãWãÀËOˇˇˇNÉ«HÖˆ›ãu¸É} t
ãv4âu¸ÖˆuÅ_^[…¬ ÃÃÃÃÃÃÃÃÃUãÏãMVÄ9¶u ãEãpãF,;AufÉy  |Ë0⁄˝ˇ	F8	V<3¿^]¬ UãÏÉÏã¡âU¯ãMS3€âE¸â]Ù9~rVçq4Wâu;]tUˆF¸ ã>tÉ|∫ uã@(âD∫ãE¸ˇ@(ãã~ËãDÇâÖˇt'ã]¯ãu¸jˇˇw ã”ãŒËôˇˇˇã4ÖˇuÎãuã]ÙãU¯ãMãE¸CÉ∆Hâ]Ùâu;|ò_^[…¬ ÃÃÃÃÃÃÃÃÃÃÃUãÏãEãUäÄ˘¶tÄ˘≤uãJVãp;1}ãL±Ö…~âH^ˆ@tãJãP$;}ãLëÖ…~âH$3¿]¬ UãÏÅÏÑ   °∞	3≈âE¸ÉMêˇã¡Sã]âE∏ãàÙ   ã VâMîãÚ3…âu∞ˆ@LWâ]åâMòâEºâM§Öì   ãV k√HâEàç<ãG4âEÄçGãâE¨3¿â}¥9FDuo9ADujãA<ãY Ö¿tÉ~< uZÉx uT˜F   tÖ¿uGÉ; tBˆAu<ãuÖ¿t	É:0Öˆu,ãU∞Éz0 tÉy0 uÖˆtÉy0 uÖ¿t"3¿9B$uãRÉ‚t3¿ãM¸_^3Õ[Ë«Ù …¬ ãRÉ‚˜A    uﬁçG,ˆ  âEÑt"3¿@âEò9…Öˆu≈ãCÄx+tºã]∞ˆCu≥Îã]∞çA4É8 âE®Ñ∂   3¿9A0uòÖˆuîÖ“uê9EòwãˆA	uÖãQ4Ö“t	Ä9ÜÖuˇˇˇãA É8åiˇˇˇ9qDÖ`ˇˇˇã Ö…uœãS0Ö“tãŒ9
~çBf90ÑAˇˇˇAÉ¿;
|Ô˜C    Ö,ˇˇˇãC ãu∏É8~;Å~dÙ  èˇˇˇãF(ôj É¿Y—ãMº§¬¡‡RPËÏC˚ˇâE§Ö¿t
ãN(âÎãu∏ãGãŒâÜÙ   3¿PPPjZËö˛ˇã]¨ãEîâÜÙ   ãWãâ]îÖ“tãMºËZA˚ˇãWÖ“tãMºËKA˚ˇãWÖ“tãMºË<A˚ˇãE¨3…âOâOâOâãE®ã âE®Ö¿ÑŸ   ãU∞Î3…ãB4ããZ0ãr<âEúãE¥QâHâJ0âJ4âJ<ãMºËh˛ˇãU∞ã»ãE¥âM†âr<ãu∏âZ0∆ÜâxÖ…uãEúÎnˇFdã]§ãFdâAÖ€tLãEºÄxS uCˇuåã”ˇq ãŒË0¸ˇˇ3¿jPçEƒPˇbãU†çMƒÉƒâ]‹«E»†«EÃ‡ Ëg”˝ˇãM†ãU∞ãEúâA4Ö¿tâH8âQ8ã¡ã}¥âB4ãE®ã@4âE®Ö¿Ö/ˇˇˇã]îãE§Ö¿t
ãMºã–Ë2@˚ˇãEºÄxS tãE¨â3¿@Èr˝ˇˇãWÖ“t*ãBÉ¯uÉ~t ãŒRENt∫ÆËXΩˇˇÎHâB3“âWÎ3“ãE∞ã˚â}§ãÿâE†ãw ãK àU√ãâU¥;ÿuãEÑä àE√É˙~*ãEåã}∏@PçBˇã—PãœÆËËË˛ˇã»Ö…Ñú  ãU¥âK ÎÖ“~XãEàç^¡âUúÆËâE¨çxâ}®ãW4ãMºË`Á˛ˇjYãÛÛ•ãC,3ˆjHVSâEêˇbã}®ÉƒÉ«HÉ√HÉmúâ}®u«ã]†ã}§Î
ãEà¡3ˆâE¨ãM¨äE√àA,ãG0Ö¿t%˜C  @ uã÷90~çH3ˆBfâ1çI;|ÛâC0âw0ãw$3¿âG$9Eòv
ãUêãŒËû∆ˇˇÖˆtÉ{$ tˇs$Vãu∏ãŒj,ZË†˝˝ˇâC$Îâs$ãu∏ãEºÄxS u(ãEÄçMÃâE–ã”ãEêâE‘ãEòâEÿãGâE‹3¿PâuÃË>˘ˇˇãG3“%   	CãG<Ö¿tâC<âW<ãE¥Ö¿~Pãu¨É∆@9Vÿt:jRçEƒPˇbçF»«E»–ÉƒâE‹3¿«EÃ‡ ã”âçMƒâFË—˝ˇãE¥3“É∆HÉËâE¥u∂ã[4ã4ãE∞â]†â}§Ö€Ö&˛ˇˇã}∏ã◊çM‡Ë4N˛ˇãuîçM‡ã÷Ë⁄–˝ˇÖˆÑº˝ˇˇãMºã÷jË•¡ˇˇÈ´˝ˇˇUãÏQSVWã˙ãÒˆGÖú   ã]ãÀËÚ˝ˇÑ¿Öä   ãUãË4ı˝ˇÖ¿t	Åxê©us3…9N~#ãVãã_9Xã]u
fã@ f;G tRAÉ¬;N|‡ãœË¬Ò˝ˇ<Au«F   ˇFããFãV¡‡ã	j PËêA˚ˇã»âNÖ…u!FÎãFâ|¡¯ãNãFâ\»¸_^[Y]¬ UãÏQSVWãÚâM¸ÎˆFufä<,uãVËﬁˇˇˇãvãM¸Öˆu‚ÎL<5uHã~ã^Ä?¶u3“ãÀj BËÛ˛ˇÖ¿tãM¸ã◊VSËÓ˛ˇˇÄ;¶u3“ãœj BË“˛ˇÖ¿tãM¸ã”VWËÕ˛ˇˇ_^[…√UãÏÉ‰¯ÉÏSãŸVWãÚãCÄ8 uTÄ>¶Öó   ˆF	Öç   3ˇã◊âT$9S~4ãKâL$ã	;ŒtãA;Fu
fãA f;F t!ãL$BÉ¡âT$âL$;S|”3¿@_^[ãÂ]¬ 9}tËw˝ˇ<AtÊãT$ˇCãF%ˇˇˇÉ»âFãCãT–ãÖ“tãWWË ˛ˇã¯â~Î¥3¿Î≥ÃÃÃÃÃUãÏãEVWã}ãpÉ~ t?ä<5r<9v<-u1ãWãŒj ËˇˇˇãFÄ8 t3¿@Î$ãOËıÔ˝ˇ<BtãWãŒj ËÏ˛ˇˇˇvã◊ãŒË‡˛ˇˇ_^]¬ UãÏÉÏ<°∞	3≈âE¸SãŸV3ˆâ]‰Wãã˙É¿SâEËãW$çM‰ÉeÏ Ée Ée¯ ÉeÙ Ë˛ˇˇÉ}Ï tWjçE»j PˇbÉe‘ çE‰Éeÿ ÉƒãW$â]»«EÃ†«E–‡ âE‡Ö“tçM»ËpÃ˝ˇãU¯Ö“t
ãM‰ã	Ë‹:˚ˇãEÎãEÖ¿uÅãM¸ã∆_^3Õ[ËÈÏ …√UãÏÉ‰¯ÉÏ$°∞	3ƒâD$ Sã]ã¡VWã˙âD$3“ãÚÖ€t1˜G   u(9W4tã«9PDuã@4Ö¿uÙã¡ÎãODÖ…t9Qt9W<t13¿ãL$,_^[3ÃË|Ï ãÂ]¬ ˇuã◊ã»ˇuˇsË}ˇˇˇã[ãD$Ä;,t‡É} ât$tˆCt∫ãEÎ	ˆCãEt9C$ußPjZãÀË$˛ˇÖ¿Ñ†   FÅO   ât$ãL$ã”j j ã	Ë˛˝ˇãÉ ˇãŒËÈ¡ˇˇãD$çL$Éd$$ ã÷âD$ãEâD$âD$ ãGâD$(Ë'ÚˇˇããGDÖ¿tˇpãL$ã÷Ë†˛ˇÖ¿t9ˆGãL$VtãW,Ë¬˘˝ˇâG,ÎãW$Ëµ˘˝ˇâG$ã4ÖˇÖpˇˇˇãt$ã∆ÈÔ˛ˇˇÖˆtãD$ã÷ãË$¸˝ˇãt$Î‚UãÏQQSVãrWã˘Öˆtv3€Câ]¸9ul˜B   uc˜GL   uZãB∫®		ã»âE¯Ë{d˚ˇÖ¿uãNË∆˛ˇãÿ˜€€Ä„ÎãM¯∫¨		ËWd˚ˇÖ¿u ∆E¸j ã÷ãœË ˛ˇãMâÖ¿tàXäE¸Î2¿_^[…¬ UãÏQSVWã˙ãŸãGãO@âM¸ãpÖˆtã—ãËd˚ˇÖ¿t*ãvãO@ÖˆuÈãM¸j Qh∏	SËüb˚ˇ3¿∆CÉƒ@_^[…√âwD3¿ÎÙÃÃÃÃÃÃÃÃÃUãÏÉ‰¯ÉÏ°∞	3ƒâD$Sã]VãuW3ˇ9{4Ñ  ãK0Ö…Ñ  ã√äÄ˙ÜtÄ˙âuã@4Ö¿uÌÖ¿ÑÍ   çAf9xÖ›   ã	ÉÈà“   k—–ã˜@   uÉÍÉÈyÌÖ…à≤   ã6WjLât$ãã»âD$ËÒ9˚ˇã¯â|$ÖˇÑ§   jçD$ j PˇbÉƒçD$3…3“QQWPQQãŒËÎ‚˛ˇÖ¿tyjYãÛ∫≥   Û•ãL$3ˆVâC Ë§ı˝ˇãL$ã–ã	Ëù˛ˇãL$âC∆ââs$âq(âq,âq0ãC%ˇ˛ˇˇâs4   âs8âs@âsHâCãA4âH8âq<3¿ãL$$_^[3ÃË&È ãÂ]¬ jXÎÁQˆB(tˇrhÃ	QËa˚ˇ3¿Éƒ@Y√3¿Y√UãÏVãÒÖ“t,Ä} tR∫0˛Ë¥ˇˇã–Ö“tÉ~$ uãÜ  âBâñ  ã¬^]¬ UãÏÉÏ(SVãÒâU‰WãÜ  âEÖ¿tXÉ~$ uRã]É{ uI˜C(   u@ãÉe‡ âMÿÖ…~#çxããKË»a˚ˇÖ¿t+ãE‡É«@âE‡;Eÿ|„ãEÉx u
ã@âEÖ¿u¿3¿_^[…¬ ÖˇtÛãÉMËˇâE¸çGÉ8 âE‡tˇ7ˇ0VË/`˚ˇÉƒjXÎœã”ãŒËÛ˛ˇˇÖ¿uÓãM¸Pj@Ë8˚ˇã»âMÙÖ…t⁄ã_Ö€u2ãM¸SjË8˚ˇãÿâ_Ö€Ñã   S∫–HãŒË ≥ˇˇÖ¿tzäGãMÙàCãEâH«A   ããM¸Ë:˚ˇãMÙj ÅI B  âÉ»ˇfâA ∏»   fâA&ãWãM¸ËÕˇ˝ˇãM¸ã–ãEâPÄyS ÖLˇˇˇÅJ   ãH(ˆ¡tˇp@h‰	È'ˇˇˇãUÙãM¸Ë5˚ˇÈ ˇˇˇÅ…Ä   âXDâH(ˇÉ;|
Ä{u∆C ã@ã–âEÏâU¯äÄ˘ÜtaÄ˘Öt\Éeÿ ã]ãM‡«$	ãé  âû  ˜@    âM‹ãM‰Ñ˙   ã@@âB@Ëñ«˝ˇãM¯Éa@ Ö¿ÖÏ   âû  ã]Ïã”ãC4ÈÏ   ã]äÈ«Eÿ   :ÈuõãB Ée‹ ãU¯âE¸É8 ãEÏ~}ãM¸ãE¸É¡âMÉy¸ uRãÖ¿tIãã»Ëæ_˚ˇãMÖ¿u9ãEÙãU¯âAˇ@ÉI  ãB©    uZ    âBãEËÖ¿yãF(âEË@âF(ãEËâA$ãE¸ãU‹É¡HBâM;âU‹ãU¯|îãEÏä˜B    Ñ¸˛ˇˇãB4ã–âE¯ä(ãEÏÈKˇˇˇˇ7h¯	È∫˝ˇˇã–Ë†∆˝ˇÈˇˇˇãM‹âé  È©˝ˇˇã–ãB4Ö¿u˜ãGãRÖ¿t$Ö“tã9
tQˇ2ˇ7h<	VË®]˚ˇÉƒjXÎFã–ãMÙçAPçA"ãŒPË©—ˇˇÉ}ÿ t#˜C    πd	∏à	ã”E¡ãM‡âãM‰Ë∆˝ˇãE‡É  3¿@ãM‹âé  ÈÙ¸ˇˇÃÃÃÃÃÃÃÃÃÃÃÃUãÏãEãÉ∫   t$ãEÉx4 uÎã¡ãH8Ö…u˜ã@@Ö¿t	ã@âÇ  ]¬ UãÏQSVWã¬ãŸj j@âE¸ããxË˙4˚ˇããE¸âpÖˆujXÎg«F   ãPÖ“t	ãË7˚ˇÎˇwh∞	ˇ3Ë`P˚ˇÉƒâÎã¯ãG4Ö¿u˜ãWçFPçF"ãÀPËØ–ˇˇÅN B  É»ˇfâF ∏»   fâF&3¿9C$ï¿_^[…√ÃÃÃÃÃÃÃÃÃÃÃÃÃÃUãÏÉ‰¯ÉÏdãESã]VWã83ˆ∑Sâ|$dât$8ãÉK@âL$$ÄyS Ö    ˆ¬@t3¿@È¿   3“f9Pt	ˇGdãGdâCãs ãCât$âD$L9ó  t'˜C    tãC@Ö¿uRj$ËÌ3˚ˇâC@Ö¿tw3“3…AâHãK@Ö…t9W$uãá  âAâè  ã÷ãœË‹€˛ˇãL$3“É∆âT$Hã¬ât$D9é®  ãŸ9VÖÜ  9Vu,ãVãMË-ƒ˝ˇÖ¿uã÷ãœËa˛ˇˇÖ¿Ñ@  jX_^[ãÂ]¬ ãUãœVË|˙ˇˇÖ¿t3…A;¡ﬁÈ  V3“ãœËÎë˛ˇãÿâ^Ö€t∆ãC=ˇˇ  ÉC  @Ä{+âCtã÷ãœË⁄˘ˇˇÖ¿u°Ä{+ Ñ◊   ãEã”ãœä@àD$Ëª˛ˇÖ¿uÄäC+<u?ãT$$ãB %   ÄÉ» uãJãC<;Atˇ3h‰	WË∞Z˚ˇÉƒãS,ãL$$j Ëﬂ˙˝ˇâFÎC<u?ˆF(@t9ãS4Ö“t2ãD$$ã@ %Ä   É» t3¿çHÎ3…∂B;¡vˇ3h	WËZZ˚ˇÉƒ∑s"É»ˇãT$D3…fâC"AãEfâHã»ãRËÏ¬˝ˇãM∂D$fâAfâs"ãt$DˆF(tã÷ãœË/˜ˇˇÖ¿Ö©˛ˇˇã\$3“ãD$H@É∆HâD$Hât$D;å]˛ˇˇã]9W$Ö˛ˇˇãt$$Ä~S Öq˛ˇˇã”ãœË3∏ˇˇÖ¿Ö`˛ˇˇãT$L3…;
çô  ãÚã˘çFâD$PãäÄ˚≥t$Ä˚åuãBÄ8≥tãD$PzÉ¿Aâ|$8âD$P;|”ãT$Lã|$dã]ãt$$;
çJ  ãÉd$ Éd$d ã@ É‡DÉ: âD$Té  çBâD$ãH¸ãD$8AäâD$8Ä˙≥tlÄ˙åuãAÄ8≥t_ãT$QãœËﬁ˚˝ˇã–ãD$âT$Ö“t#k
ã âD¯k
ãD$ã@3É‡1ãD$É  É`¸ Èí  ˇ3hº	WË»X˚ˇÉƒÉf È\˝ˇˇ3¿âD$`âD$4Ä˙åu
ãAã@âD$4ãL$Éd$H É9 é$  É¡âL$ ÎãD$4ãQ¸ãY¯Éd$@ Ö€âT$0ãâ\$,ã]âT$<uãt$0ã6ât$,ãt$$Ä~S Öÿ  Ö“t	˜B   uKÉd$< Ö¿tãT$,ã»ËsY˚ˇÖ¿Öè  ãD$0ãŒãP<Ëå™ˇˇÖ¿xÆËãN¿ã¡âT$@Î«D$@(	ãL$ ãD$03“Éd$\ f;P"çO  !T$D3…âL$Pã@ãT$4âD$XãâL$Ö“t3É|$< t,ãD$<ãL$Dj É¡HR3“Ët¬˝ˇÖ¿Ñ◊  ãD$XãL$ãT$4˜C   uã\$PˆDã]Ö∞  3¿@É|$H âD$`~BÖ“u>ãD$ ˆ@t 3¿@PRRãT$TQãL$ Ë˚≥ˇˇÖ¿Öx  ãD$ ãT$ãH Ë&’˛ˇÖ¿â`  ˇt$ãŒj;ZË)Î˝ˇ3…âD$(É|$TâL$Xt	ãL$É9~tˇt$,ãŒj;ZËÎ˝ˇˇt$(∫å   ãœPËzÎ˝ˇãL$@âD$(Ö…t Qj;ZãŒËŸÍ˝ˇˇt$(∫å   ãœPËRÎ˝ˇâD$(É|$Tu"ˇt$ˇt$0h¥¸VË@J˚ˇâD$,ÉƒâD$XãD$(ãT$ãœPËH˘˝ˇâD$ãD$ã»âD$hË5U˚ˇãT$ãœâD$lçD$hj PË∫˙˝ˇãL$Ö…tv˜C   tmÄøÃ   sdkâD$(ãT¯Ö“tãŒËÊ+˚ˇãD$<Ö¿tãPãŒãD$DãTËR0˚ˇÎˇt$ˇt$0ˇt$Hh,	VËôI˚ˇÉƒãL$ãT$(âD
¯ã
É‡˛É»â
ãD$XÖ¿t	ã–ãŒËá+˚ˇãD$0ãT$\ãL$PBÉD$DÉ¡ø@";–âT$\ãD$0âL$Påø˝ˇˇãL$ ãD$HÉ¡HãT$@âD$HâL$ ;åÏ¸ˇˇÉ|$` u&ãD$4Ö¿tPh8	WËYU˚ˇÉƒÎhL	WËIU˚ˇYYãD$ãL$dÉ¿ãT$LAâL$dâD$;
åÍ˚ˇˇãŒËﬂ˘˝ˇãD$âCãKÖ…t-ã	;éÄ   ~h`	WË˝T˚ˇYYÈñ˘ˇˇ˜D$8   tÅK   3¿ÈÅ˘ˇˇUãÏÉÏ °∞	3≈âE¸Äy VãÚ«E‰‡ âM‡tÉeÏ çM‡«EË0Ë`Ω˝ˇ3¿«EËPã÷«EÏpçM‡fâEÙËBΩ˝ˇãM¸3Õ^Ëo‹ …√ÃÃÃÃÃÃÃÃÃÃÃÃÃUãÏQãMãAÑ¿xRÄ   âAãESãY Wã 3ˇâE¸9;~5VçsãV¸˜B @  tãÖ¿tÎã¡ãH4Ö…u˜ãM¸j@PË} ˇˇGÉ∆H;;|–^_[…¬ UãÏÉÏ °∞	3≈âE¸Sã]VãÒWã˙ãÄxS uSˆGÄuMËˇˇˇÉ~$ uBãÄxS u:Sã◊ãŒË›‹˝ˇÉ~$ u*ãÄxS u"ã◊«EË‡ çM‡«EÏ@«E‰‡ âu‡ËOº˝ˇãM¸_^3Õ[Ëz€ …¬ UãÏÉÏSã⁄VWã˘ãC â}C,ÑŒ   É$ Öƒ   ãÄxS Ö∏   ˇsãGã»ˇsâEÙj jIZË©“¸ˇãs(3¿âu¯âE¸9C,éå   É~ |sããPÖ“tVÉ:uQj j ãœËÃøˇˇãMÙã¯j j ˇvjsZËb“¸ˇãMÙãj˜Wã÷Ë®Ÿ¸ˇãE¯ã}âpããFˇp h¥	j WËH‘¸ˇÉƒÎhÄ	WË∏R˚ˇÉNˇYYãE¸@É∆âE¸âu¯;C,åtˇˇˇ_^[…√UãÏQãISVWã˙âM¸3€ãw(9_,~8ãã@Ö¿tã Î3¿j Pˇv∫£   ËÃ—¸ˇãVãM¸j¯ËÖŸ¸ˇãM¸CÉ∆;_,|»_^[…√UãÏÉÏ,Sã]VãÒâUÿWãK(3ˇâM¯ãFâE¸3¿!E‹âE‘∆9C,é¬  ãÉeË ˜@   ãPâUÙtPÉ{$ ã@,ã@(âE‡t)ãAˆ@ t ãEÿÖ¿tÖˇuˇF,ã~,ãM¸j WPjNZË.—¸ˇˇN8ãF8jPˇu‡âEËVË¨)˛ˇãUÙÖ“t%ããŒã–âEË«:˛ˇãUÙãŒjj PâEÏËÛ#˛ˇãUÙÎÉe ÉeÏ ãE¯Éx |.Ö“t*ãMËÖ…u	ˇN8ãN8âMËˇuÏRãUQˇpãŒËKµˇˇãM¯âAã¡ã@ˆ@ tmãEÙ3…É¿âM‰âEÙ;M}$ããŒËp‹˝ˇãM‰ã–ãEÙAÉ¿âU‡âM‰âEÙÖ“tŸÎãã@âE‡Öˇu9{$tˇF,ã~,ãM¸j j WjSZËG–¸ˇãM¸ã–j˛ˇu‡Ëç◊¸ˇãM¯∫†   ˇqãM¸ˇuÏj Ë –¸ˇãE¯ãM¸j¯ãPË÷◊¸ˇãEãM¸∂–ËZ’¸ˇˇuãUÏãŒËÓ9˛ˇãEËÖ¿t
ãM¸ã–Ën”¸ˇãE‹ãM¯@É¡âE‹âM¯;C,åP˛ˇˇâ}ËÖˇtãMËç{$ÎãUÿç{$É? ã«âEËt!âEËã Ö“tj j QãM¸jZËìœ¸ˇâE‘ã«â}ËÉeÿ É8 ã{~#ã]ËÉ«ˇwããŒËô!˛ˇãEÿç@âEÿ;|Êã]ãE‘∆ Ö¿t
ãM¸ã–Ëµ‘¸ˇ_^[…¬ ÃÃÃÃUãÏÉÏ8Sã]Ä;,Ñç   Vãuã”Wã~ãâ}¸ˇw(ËÄ˜˝ˇ3…AÖ¿tiãC%   =    tZÉ{( uTã∫ö   h¥ÏãËç„˝ˇÖ¿t:ãW$ãjYjç}»Û•Yã¯ãÛÛ•jYçu»ã˚Û•ãuPãË[Â˝ˇãM¸âA$3…AfâNÎ3…A_ã¡^Î3¿[…¬ UãÏQSVWã˙ãG˜@   u_çq;˜sXÆËã^Ö€tGˆF(uAãNÖ…t:ãFãP<ãGâU¸;P<u)ãWÖ“t"Ë!P˚ˇÖ¿u9E¸uãGã@;Cu	˜C   tÉ∆H;˜r´3¿_^[…√ã∆Î˜ÃÃÃÃÃÃÃÃÃÃUãÏVãuãVÖ“tãMËP$˚ˇãV(Ö“tãMËA$˚ˇãMã÷Ë7$˚ˇ^]¬ UãÏÉ‰¯ÅÏÙ   °∞	3ƒâÑ$   ãEÉd$x SãŸâD$DVWãÚâ\$Pã;ât$<«D$T   â|$(Ëü∆ˇˇâD$ÖˆÑ  ÄS Ö  3¿9C$Ö	  PPPjZãÀËN|˛ˇÖ¿ÖÙ  ãD$LÄ8w'É~0 tˇv0∫∞ãÀËˆ†ˇˇÉf0 ãFÉ‡˛  @ âFj ã÷ãÀËß˘ˇˇÉ{$ Ö˚   ÄS ÖÒ   ãN˜¡  Ä toãV 3¿@âD$$9~XãzçJ\â|$ âL$;yu2ãzãÖˇu˜ÿ¿ÎÖ¿tã–ãœËüN˚ˇãL$ãV Ö¿ÑÅ   ãzãD$$@É¡HâD$$âL$;|πãNÅ·ˇˇˇâNãD$Lã˛Ä8	u	ã÷ãÀËäøˇˇã÷ãÀËD! Ö¿uVãFã ¡ËÉ‡â|$,j(âD$`çÑ$ê   j PˇbãF03…ÉƒâÑ$å   9N4Èî  Öˇuã|$ ã?Wh¸	SË±L˚ˇÉƒãt$(∂FSC$ãÑ$Ñ   Ö¿t	ã–ãŒËNÒ˝ˇãÀËjŒ¸ˇãD$TÈà  ;çè  k¡HâD$ ˆD8,ã\8ãT8â\$@ã\$PâT$$t:ãT84ãN$Ë,.˛ˇÖ¿t"ãD$(˜@L    uãT$ Äd:,◊ãT:4ãN$Ë™ˇˇãL$ãT$$Ö“Ñ€   ãBã\$@ã âD$øC"ã\$P;D$ÖÓ   ˆBÖ≤   Éz0 tYÉ~0 uÉ?~6Éz< u0∏   ÖBu&ÖFu!ãD$(˜@L   uãR0ã»Ël˝ˇãD$$É`0 ÎÖ…u˜F   tÉ?tYˆGt
uSˇt$\ãD$ã÷PãÀË∂›ˇˇÖ¿tÉ{$ ÖΩ˛ˇˇÉ»ˇâD$ãD$(ã~ â|$,ÄxS Ö°˛ˇˇãD$LãL$Ä8v
ãF0âÑ$å   AÉ~4 âL$Ñ™˛ˇˇˇt$Lã÷ãÀËé…ˇˇÉ~8 ã¯uãÀËÔÃ¸ˇã«È  ˇt$ãL$Dˇ1Ph4	SËJ˚ˇÉƒÈ:˛ˇˇãF$Ö¿tÄ8,uãD$(˜@L Ä  u	ã÷ãÀËÂˇˇ3¿∫ÿ4	âD$`9é   â|$,k»HçG¡âL$âD$@ãD9@D9DuãD9Ö¿tˇt9ãÀRPjZË’x˛ˇãL$ãD9âD$Ö¿Ñ¿  Éd$ çT$ãŒËP‹˝ˇãÉ‘   D$ãT$âÉ‘   ãD$(˜@L   u8ˆD:0ÄtãD:LÄx t'É8}"∂D:,ãÀ¡ËÉ‡Pˇt:4ãT$$ˇv$ËÂˇˇãT$É|$` ãÉÙ   âD$8ãD:âÉÙ   Ö&  É?t
ˆGt
Ñ  ˆD:0ÄtãD:LÄx Ñ  ã|$ãL$,ãtˇC,ãC,âD
$ãL$çwVj PjZË…¸ˇãL$ãD$,∆Ñ$¥   çQât ã÷Rh\	ãD1$âÑ$¿   3¿jSâÑ$Ã   âÑ$ÿ   âÑ$–   âÑ$‘   Ë√ ¸ˇãT$,çÑ$ƒ   ÉƒãÀPË¡˙ˇˇãT$ãD$ãL2fã@fâA&ÉL20ãÑ$¿   âD2(ãT2$ãt$ãŒËåÀ¸ˇã◊ãŒËp–¸ˇãNtã|$,âHÉc ∆C ãt$<ãD$(ÄxS Ö¸ˇˇÉd$ çT$ãŒË¥⁄˝ˇãD$)É‘   ãD$8âÉÙ   ãD$`∫ÿ4	@âD$`;å‰˝ˇˇãF$3…ã~AâD$XãF(âD$ãF,âD$päF"¡â|$`àÑ$   ãF$	:¡u4ãå$å   ã◊jˇË©&˛ˇÖ¿u 9FDuãL$(ã◊Éf˛PËIÂ˝ˇÉNâD$âF(ãî$å   Ö“Ñj  ˇ7ãÀj Ë‘¥ˇˇãs(ã¯ãD$`â¥$î   j çNâK(ãå$ê   ãBããL$¬PVjsZËJ«¸ˇj˜ãWã|$ ã÷ãœËçŒ¸ˇâ¥$†   ãt$<È  ˆD:0ÄtPãD:LâD$Éx ~BãL$j ˇpˇpjZËˇ∆¸ˇãD$ãL$ãP9T94tj Rˇt94ãL$$jpZË€∆¸ˇãD$fã@ÎUãT$@ãœË0¯ˇˇâD$Ö¿tOÉx tãL$j ˇpˇpjZË§∆¸ˇãD$ãL$j ˇp,ˇt94ãL$$jpZËá∆¸ˇãL$ãAfã@ãL$fâAÈ'˛ˇˇãL$3¿ãt$âD$ãC,j @Pj âC,jFâD9$ãŒZËG∆¸ˇâD$ çHãD$ˆD80âL8 u3¿ãŒPPPjZË"∆¸ˇâD$ãD$ˇt$@ãL843¿hl	jS∆Ñ$ƒ   âå$»   âÑ$Ã   âÑ$ÿ   âÑ$–   âÑ$‘   ËÎ«¸ˇãT$,çÑ$ƒ   ÉƒãÀPËÈ˜ˇˇãL$ãD$ãL9fã@fâA&ãD$Ö¿tã–ãŒËØÕ¸ˇãNtâHãD$ãŒj j ˇt8$jBZËÅ≈¸ˇãT$ ããL$ËÑÕ¸ˇãT$âpÉc ∆C ˆD:0ÄÑ˝ˇˇˆD:0ãt$<Ö˝ˇˇãL:LãD: âAãD:$âAãD:4âAãD$fã@fâAÈ◊¸ˇˇÉå$†   ˇã|$ãD$LÄ8uãL$`j ˇ1ãœˇpjsZËıƒ¸ˇãC8π @  HâC8âÑ$à   ÖNu	π@  fâNPã÷ãÀË¯ΩˇˇÉ~ uãî$†   Ö“xãœËƒÃ¸ˇ∆ uÄå$¨   ˆFtfãC(ãÀâÑ$Ù   @j âC(ãVj Ë€±ˇˇãL$ã¯j j ˇ¥$¸   jsZËlƒ¸ˇj˜ãWã|$ ã÷ãœËØÀ¸ˇjZãœâ¥$¯   Ë°…¸ˇãt$<∆Ñ$Ò   Î∆Ñ$Ò    É|$\ ãL$Ö˜  Ö…ÖÔ  8å$   ∏   ∫ @  E»fãFf#¬f»∑¡âD$ ãFDâD$8Ö¿t	ã÷ãÀË! øFãÀãT$,Pˇt$$ˇvˇ¥$ò   ˇt$hËÃ˚  ã»âL$$Ö…Ñò˜ˇˇ∑A4f;F}fâFÄº$    täI/∂î$Ò   Ñ…∂¡ãL$$E–àî$Ò   ãî$å   Ö“t@æA-âÑ$ê   ˆA0uãAÎ∂A,k¿XãÑ®  âÑ$®   3…ãÑ$ê   ;D—âî$å   Éº$†    |Ö“uãî$†   ãœËÀ…¸ˇÉ|$8 Ñß   ã[8ãL$PãT$<çsˇÉÎˇA,ãy,VWˇt$,çCˇâA8ËÊ3 ãL$çCˇj Pj jZËœ¬¸ˇãL$ã÷ËN∆¸ˇãT$<çsˇãL$PçÑ$   É§$®    VSˇt$TPçÑ$ú   PjˇËŸ®ˇˇãL$ã”Ë∆¸ˇj j Wã|$$ãœjBZËv¬¸ˇã÷ãœË˜≈¸ˇã\$PÈe  ãD$$ã÷ãÀˇp ˇpçÑ$¯   ˇt$TPçÑ$ú   PjˇËÄ®ˇˇãL$$Ëå È.  Éd$h Éd$D Éd$| Ö…Ñé   ãVãÖ¿~É¬3ˇHfâ:çRÖ¿ÛãÖ¿~çQ3ˇHfâ:çRÖ¿ÛjBXf9F~fâFãî$å   Ö“tMã;uGÉd$  Ö¿~#ã\$ 3ˇäDç$CàD9¸ãî$å   ;|Áã\$PjˇËÉ ˛ˇÖ¿u«D$|   Î3¿fâFˇK8ãC8ãL$(j j4âD$,Ë˚ˇã»âL$Ö…tQ∫$ãÀËïˇˇãL$ãD$(ÄxS Ö'ıˇˇãFj âA0çÑ$‘   j PˇbãL$(ÉƒãC,ã|$,@âú$–   âº$‘   âå$ÿ   âAãD$Ö¿tãÎ3“âQãT$`âAçå$–   Ë6*˛ˇãî$å   çå$–   Ë#*˛ˇãD$pÖ¿taÉ|$ tLjçÑ$∏   j PˇbãV,Éƒâú$¥   «Ñ$∏   ‡"â¥$Ã   Ö“tçå$¥   ËX®˝ˇãF$âD$XãD$pã–çå$–   Ër)˛ˇãL$ãA âA$3¿9F(u-9F,u(Éy,u"ãQ(çÑ$Ñ   ãL$(PãËR›ˇˇãL$àD$33¿ÎàD$3âD$ 9A,éÅ   ãå$Ë   ãã|$ãÿãG(Å…   ãâå$Ë   çå$–   âD$ ãPË6)˛ˇãT$ ˜B   tãR,çå$–   ãR(Ëœ(˛ˇãå$Ë   É∆Å·ˇˇ˝ˇCâå$Ë   ;_,|ûã\$Pãt$<ã|$,ãL$ãC,âAãD$(ÄxS ÖdÛˇˇãD$Ö¿Ñà  Éd$t Éd$\ Éy,utãQ(Éz |kãÖ“te˜B   u\ãRÖ“tUãRÖ“tãL$(j j Ë∏Ÿ˝ˇâD$ãD$ÎÉd$ ãL$(ã–j Ë∫‹˝ˇˇt$ã–ãÀËi‚˝ˇâD$t˜ÿ…Å·   ã¡ãL$âD$\ãC(ãT$âAˇC(ˇq ãÀj Ë,¨ˇˇãL$âD$8ãD$j ˇpˇpjuZË∫æ¸ˇãL$ã–j˜ˇt$<âD$tË˙≈¸ˇãC,ãT$@âD$4@âD$,j ˇt$0çHãC8HâK,âD$HHâC8âL$P
âD$âK,j çAâÑ$Ñ   ã¡ãL$$jFZâC,ËPæ¸ˇãL$ããL$HHA¡PQãL$ j jIZË2æ¸ˇãL$j ˇt$ˇt$PjZËæ¸ˇÉ|$| π@  j j@XE¡fD$`∑¿Pˇt$|ã◊ãÀˇt$ˇt$hË˜ı  ã–âT$\Ö“uãD$tÖ¿ÑªÒˇˇãL$(ã–Ë„˝ˇÈ´Òˇˇ∂B/ã|$âD$ æB-;uã|$3…ãt$âL$XÈü  Äº$    tˆF∏|	t∏à	Ph	j SËäø¸ˇãÉƒãt$ã–âÑ$Ä   âD$TâD$DãF «D$X   Ö¿~7ã~ã⁄É«ãøçB;ÀçL¬ã–çCL√ãÿÉÓu„ã\$Pãt$ã|$âT$TãÀË”&˛ˇj j Pã◊âD$tãÀËˇ˛ˇ3…âL$d9N ~Tã\$3¿ãº$Ä   âD$DãV–øB;«|ãD$hãÀ«PøBPˇrãË˚˝ˇãL$dGãD$DAÉ¿âL$dâD$D;N |¡ã\$PãÀË#&˛ˇã|$ãVˇt$Xãœˇt$pj_ZËº¸ˇãT$ãœj Vˇr∫â   Ëiº¸ˇã÷ãÀË
&˛ˇˇt$TãT$lËL&˛ˇãL$\Ë§˛  ãt$ãÀãS(âT$hâVˇC(ËΩ%˛ˇˇt$TãœâD$HPRjwZËº¸ˇj ˇt$(ãœˇvj$ZËº¸ˇãT$\3…∆FAÉ|$| t*ãD$(ˆ@Lu Ö…uˆB0tãî$†   ãœÉ§$å    ËÑ¬¸ˇÉ|$X ãGtâÑ$Ä   tˇt$h∫É   ãœˇt$HˇvËßª¸ˇãD$3…âL$D9~NçPâT$dãD$x¡É|$X PtQˇt$pãœj\ZËuª¸ˇÎ∆ãÀãËì˛ˇãL$DãD$AãT$dÉ¬âL$DâT$d;|πãt$8Öˆtˇˇ0ãD$Lãœˇt$|@PjXZË+ª¸ˇj˜Vã–ãœËt¬¸ˇãwtãœçFPj PjZËª¸ˇãD$ãKˇ0ãD$L@Pˇ¥$Ä   jMZËÌ∫¸ˇãD$,ãœj ˇt$D@PjZË◊∫¸ˇj ˇt$(ãœˇt$4j1ZË√∫¸ˇj ˇt$ãœˇt$PjZËØ∫¸ˇã÷ãœË∏¬¸ˇãOtˇt$ ãt$ ãT$8âHãÀVËﬁËˇˇj ˇt$8ãœjjFZËz∫¸ˇÉ|$X tj ˇ¥$Ñ   ãœˇvjZË]∫¸ˇÎãL$\Ë¨¸  ãT$lãœË¸¿¸ˇãD$tÖ¿tãL$(ã–ËÜﬂ˝ˇãt$,ãœj ˇt$DçFPjZË∫¸ˇj ˇt$(ãœj jZË
∫¸ˇãtj Vãt$ ãŒjjFZËÙπ¸ˇãD$,ãŒj j @PjBXã–Ëﬁπ¸ˇãT$@ãŒË]Ω¸ˇãvtãL$j çFPˇt$<j1ZË∫π¸ˇãD$,ãL$@j j PjBXã–Ë¢π¸ˇãT$ãÀËìÁˇˇjFVˇt$xSË˛ˇãT$<çÑ$   WVˇt$TãÀPçÑ$ú   PjˇË´üˇˇãD$,j j @ã|$ ãœPjBXã–ËLπ¸ˇãT$ãœËÀº¸ˇãt$ãÀã÷ËAÊˇˇj ˇt$8ãœj jFZË"π¸ˇj j ˇt$PãœjBXã–Ëπ¸ˇãL$ Ö…Ñ¯  ãF(ã—ãÀˇpˇpË–ûˇˇÈ·  É~$ Ö  ãFÉ8Ö  ãV É:Ö  Éz Ö¯  Éy,ÖÓ  ãRâT$DÄz+ Ö›  ã@Ä8ßÖ—  9H(Ö»  ãA(ã@˜@   Ñµ  ãvãFãt$<˜@  Öû  Ö“Ññ  ãã˙ãW<Ë[ãˇˇã–ãC(âD$âT$ çH3¿âK(3…É{t âL$4ãÀEKtâD$8ãGâD$lËdΩ˛ˇˇ7ãT$$ãÀj ˇwË.h˛ˇˆGÄtãœË5w˛ˇâD$4ÎãD$4ãN â|$HˆA0u<ãOâ|$HÖ…t1â|$HˆA8u∑Q0f;W(}Éy$ uÖ¿tf;P0}ã¡ãIÖ…u◊âD$4Ö¿tãx,ã–ãÀËt¡˛ˇâD$8Îã|$ljˇt$$Wˇt$ ã|$(ãœjdZËk∫¸ˇãD$8Ö¿tj˜PÉ ˇãœË∑æ¸ˇãT$ãœj ãB(ˇpˇt$j`ZËH∑¸ˇj j ˇt$ãœjxZË6∑¸ˇÄªÀ   ÖÓ  ãL$4Ö…tãT$DˆBÄt	ãA8$<t	ã	∫ÿ4	ÎãD$H∫ÿ4	Éd$T ã âD$HÉ|$T ∏ÿ	QD¬PãD$Pˇ0h	j SË‚∏¸ˇÉƒÈå  Éd$@ Éd$8 Éd$  Éy$ t[3¿;A,}1ãQ(ãã˜@   u	ãBˆ@ u	FÉ¬;q,|„ât$ãD$ãt$<;A,uFˇC,ãC,ãL$j Pj jFZâD$LË]∂¸ˇãL$Î%Éy,uãA(Éx |ã ã@âD$8˜ÿ¿%   âD$ ã—ãÀË6„ˇˇ∂D$3ã◊fD$ ãÀj ∑¿Pˇt$@ˇ¥$ê   ˇt$hËÓ  âD$4Ö¿Ñ⁄Èˇˇ∂@/ãÀã|$ãT$@PWâD$tË.‰ˇˇãT$lÖ“tãG(ãÀˇpˇpË§õˇˇãD$@ã|$Ö¿tj PjjFZãœË©µ¸ˇÄ|$3 ãL$4tSˆA0tMÄy- tG∂Q,ÉÍx)k¬X¡âD$ãÄ8  ˆ@$ãD$Ö¯   ÉËXÉÍâD$y‡j ˇq j jZãœËOµ¸ˇãL$4Ë†˜  ãT$ãÀË7„ˇˇÉ§$å    jˇt$(ˇt$xSË∂˛ˇãD$$ã÷PPˇt$TãÀj j jˇËOõˇˇãT$$ãœËâ∏¸ˇÄº$Ò   uh|	h	j SËˆ∂¸ˇÉƒÉº$å    tCÉº$ê    π¨	∏î	N¡Ph	j SË∆∂¸ˇãD$pÉƒãT$<ãÀˇt$Lˇ0çÑ$î   PË¶¢ˇˇãî$à   ãœË∏¸ˇ3¿9C$ü¿âD$TÈYËˇˇj ˇ∞   Èˇˇˇ3¿@ãå$¸   _^[3ÃË÷º ãÂ]¬ UãÏÉ‰¯ÉÏSVãuWÉ~ uÉ} tã}ç?Îã}ãœãFãV¡;¬vçQãâF¡‡j PËœ
˚ˇÖ¿ÑÀ   âÉ~ uK3€â~Öˇ~*ãEˇ4òh∏B	Ë¿(˚ˇYYÖ¿Ñ†   ãVãâëˇFC;ﬂ|÷ãEÖ¿t~3€Öˇ~uãòÖ…u'3“ÎW9~t„ˇvËÅ	˚ˇh∏	Ëw(˚ˇâF3¿@YâFÎLËÂ2˚ˇ@âD$ôRPË©˚ˇã»âL$Ö…t9ãEˇt$ˇ4òQˇ bãT$ ÉƒãNãâàˇFCãE;ﬂ|ãˇF3¿_^[ãÂ]¬ 3¿«F   @ÎÎÃÃÃÃÃÃÃÃÃÃUãÏÉ‰¯ÉÏ4°∞	3ƒâD$0ãMãESã]âL$ãMVãuâL$ãŒWã}ât$âD$Ë:D˚ˇÖ¿Ñ^  ãD$Ö¿ÑR  3…âãD$Ö¿tâÖ€tâÖˇtâQjPâL$,âL$4âL$8«D$<   «D$0   âL$@Ë∫˚ˇâD$ Ö¿ujXâF@È  É  çD$ WPh–=ˇt$VËﬂBˇˇãL$ ãT$4âD$â<Ö˙   ãD$ É¿PËÏ  ãt$$ÖˆÑ—   ÖˇtsãÖ€tZÉ=@∞	 t<ˇ5ò‡	Ë‚ ˚ˇãÀËZ˚ˇ)†ﬁ	ã5d∞	ãŒˇƒﬁ	Sˇ0cˇ÷ˇ5ò‡	Ë˚ˇÎã5d∞	ãŒSˇ0cˇ÷ãt$$Vh∏B	Ë°&˚ˇãt$,YYâÖˆtVÉ=@∞	 t<ˇ5ò‡	Ëq ˚ˇãŒËÈ˚ˇ)†ﬁ	ˇƒﬁ	Vã5d∞	ãŒˇ0cˇ÷ˇ5ò‡	Ë¢ ˚ˇÎVã5d∞	ãŒˇ0cˇ÷ãL$ãD$8âA@Èﬂ   ã|$$Öˇt^É=@∞	 t<ˇ5ò‡	Ë ˚ˇãœË{˚ˇ)†ﬁ	ã5d∞	ãŒˇƒﬁ	Wˇ0cˇ÷ˇ5ò‡	Ë4 ˚ˇÎã5d∞	ãŒWˇ0cˇ÷ãD$ãt$Ö¿tãD$ É¿PËà   ãD$ÎbãD$49D$(v%ãL$ ¡‡j PË˚ˇÖ¿uãD$ É¿PËX   È!˛ˇˇãD$ ãL$É¿âãL$Ö…tãD$0âÖ€tãD$,â3¿Î
πo& Ëmå ãL$<_^[3ÃË‚∏ ãÂ]¬ ÃÃÃÃÃÃÃÃÃÃÃÃUãÏVãuÖˆt)SÉÓW3ˇGã;ﬂ~É<æ tˇ4æË	˚ˇG;˚|ÌVË˛˚ˇ_[^]¬ Sã⁄Wã˘Ö€tpVãÛã[(ãVÖ“tãœË5…˝ˇãVÖ“tãœË:’˝ˇãVÖ“t	jãœËäˇˇãVãœËÆ˛ˇãV Ö“tãœËS8  ãVãœËø∞˛ˇãV$Ö“tãœË˚ˇã÷ãœË¯˚ˇÖ€uí^_[√UãÏÉÏÄπó    âU¸âM¯t3¿…√ãSãZ8Wã@ã@âEÙãx0Öˇt\VãwãF;B<u"É~ tããNË&1˚ˇÖ¿uãEÙ9Fu"ãM¯ãU¸Ä~ïuãÉ∏ê   uãâFãB<âFâ^ ãﬁã?ãU¸ãM¯Öˇu¶^_ã√[…√UãÏÉ‰¯ÉÏl°∞	3ƒâD$hãESã]âD$0ãEVâD$ãEWã˘âD$0ãMâD$(3¿âT$ ã7âL$<âD$4âD$«D$   9E t#9Avh¸	WË//˚ˇYYÈ∏  ãT$ã âL$Î'çD$$PQãœË=l˛ˇã»âL$Ö…àë  ãD$$ãT$âD$ ãD$Ö¿Ñ}  Ä~S Ös  Äæ±    t; tãPÖ“tãŒËä˚ˇãD$É` ã–ãœËâ¿˛ˇÄæ±    u&ãL$<Éy uãT$Ö¿tãNã@<;ADT$âT$ÎãT$Ä~S Ö  ˇt$ çL$Dh,	Rã◊ËôY˛ˇãT$ËÚY˛ˇÖ¿Ö‡   ãT$ãœË¿˛ˇâD$$Ö¿tÄx+uCh4	WË,.˚ˇYYÄæ∞   ãD$âD$u
ãD$	Ü¥   Éd$4 ãT$ãD$0âD$0Ö“ÑÜ   Î}ãT$ ãŒË~j˛ˇâD$Ö¿tqãL$$ã–ˇ1ãœh,	Ëzk˛ˇÖ¿uNÄøÃ   ÉÎ   ãL$ãF…ãT$j ãL»É¡(Ë:D˚ˇÉx Ñ∆   É}$ Ö§   ˇt$ h`	WË~-˚ˇÉƒãT$ãŒË6˚ˇãD$ã–ãŒËŸ≠˛ˇÖ€t?3…âL$(9K~ãã»Ö“tãŒË
˚ˇãL$(AâL$(;K|‚ãÖ“tãŒËÔ˚ˇã”ãŒËÊ˚ˇãT$0Ö“tãŒËΩ≈˝ˇÉø    uãT$4ãŒË
  ãL$t_^[3ÃËﬂ¥ ãÂ]¬  Ét ãœãT$EOtËã±˛ˇÈVˇˇˇãD$$jhÄÌã PâD$HË:.˚ˇÖ¿uh|	WË´,˚ˇYYÈ)ˇˇˇãD$$Äx+u5ãL$8É˘AtNãD$∫¨	É¿É˘!P∏§	E¬Ph¥	WËm,˚ˇÉƒÈ;˛ˇˇÉ|$8AuãD$É¿Ph‹	WËK,˚ˇÉƒÈ˛ˇˇÄøÃ   s}ãP<ãŒËß~ˇˇãVã»…âD$,É}  ã âL$ tãJ;D$tÉ}  tjÎjZQˇt$@ãœˇt$ËJZ˛ˇÖ¿Öo˛ˇˇˇt$ ãT$ π˝9T$0P∏Ñ‰D¡ãœPjZËZ˛ˇÖ¿ÖB˛ˇˇj j$ãŒË¡˚ˇãT$âD$4Ö¿Ñ+˛ˇˇâãŒãD$ãPËﬁ˚ˇãT$4âD$,j!âBãNãD$¿É|$<AãL¡ãD$(âJãH<XED$8É¯!âJäMï¿àJ˛¿àB	ÄøÃ   rãD$ãœãT$,ˇpËÚ˛ˇ3¿âD$0Î"ãD$0Ö¿tj ˇt$ ã–ãŒË
≈˝ˇâD$(ÎÉd$( ãD$4ãL$(âHâX3€âá   È˝ˇˇUãÏÉÏX°∞	3≈âE¯ãESVãÒâU∞WâE¨ãæ   É¶    É~$ ãÖÑ  ÖˇÑ|  ããÀãWâE¥Ë}ˇˇâE∏ãE∞âGÖ¿tâxã@(Ö¿uˆâE∞ãâMËL)˚ˇâEÙçMºçEã÷Ph,	ˇu∏ËúU˛ˇãWË>V˛ˇÖ¿Ö   ãWÖ“tçM¿Ëéë˝ˇÖ¿Ö	  ÄæÃ   çÉ±   râæ   3ˇÈô   Ä8 Öï   ãŒËå¢ˇˇâE®Ö¿Ñ“   ˇu∏3“ãŒË6Ø˛ˇãE¨ãÀj ˇpãË|˚ˇãM∏PˇwâE¨…ãCˇu¥ˇ4»h	VËã\˛ˇãU¨ÉƒÖ“tãÀË~ˇ˙ˇãU∏ãŒË w˛ˇj Qˇu¥h\	SËI˚ˇãU∏ÉƒãM®PËî´¸ˇçÉ±   Ä8 tOãM∏ã˜ãC…ãU¥Wâu®ãL»É¡(Ë∫@˚ˇã¯ÖˇtSË∫˚ˇÎ$ãN9NuãVÉ¡j Ë‹?˚ˇãM®ãpãF8âA âN8ã◊ãÀË?  ãU∞ãÀËz¯ˇˇãM¯_^3Õ[Ë± …¬ UãÏVˇuË›˚ˇãÖˆtäÑ“tãŒ∂¬ˆÄêàt∆ AäÑ“uÍã∆^]¬ UãÏÉÏSã]ã¡VâEÙWããCÉ¿1àUˇj PâM¯Ë¡ ˚ˇã¯ÖˇtGˇsçw0ˇ3Vˇ bÉƒãŒË)˚ˇäEˇˇuãUãM¯âwàËmˇˇˇãMÙâG$ÄπÃ   r	ãWSË◊˛ˇã«_^[…¬ UãÏÉÏSVãuã¡WˇuâE¸ˇuãR≤~âu¯Ë_ˇˇˇã¯ÖˇtCãM¸ÄπÃ   rãE¯3ˆÎjã÷ãÀËT»˝ˇãM¸ãUâGãEâGäEâW àGÖ“t!ãËñ˛ˇÎãUãÀËû•˛ˇãUÖ“tãÀË◊/  Öˆtjã÷ãÀË_Åˇˇã«_^[…¬ UãÏÉ‰¯ÉÏ,ãESã]Vã1WˇuâL$,ˇuâD$R≤Äâ\$,â\$$Ë¥˛ˇˇã–3ˇâT$Ö“Ñ*  ãD$(Ä∏Ã   r"ãD$ãœâBãﬂãEâBâ|$âL$â\$ ÈÏ  ãL$â|$â|$Ö…uã◊È7  ã—ãŒË¸˙ˇôãŒRPËêˇ˙ˇã–âT$4Ö“t‹ãL$â|$(ãâãAâBçBâD$99é˘   ãŸã¬+√âD$$ç{ãWÙãŒjâT$0Ë—√˝ˇãL$âD$0âãL$,Ö…tPÄ9±uKÖ¿tGãPÖ“tãIâL$âT$âPÎ0ãI;L$t ã¡ãŒjã–âD$ ËÖ√˝ˇã»ãD$0âL$âHÎãL$âHãW¯ãŒËº ˚ˇãL$âAäG¸àAããD$$É‚ã8É‡¯–ãD$$â8ã3 É· 3 â8ã3¡É‡3¡ãL$$â9ãL$ãGÉ«âAÉ¡ãD$(@âL$âD$(;åˇˇˇã\$ 3ˇãT$4ãD$âPãEâD$Ö¿tWjã–ãŒË◊ø˝ˇÎã«ãT$âBÖ€u	â|$Èd  ãÖ¿~Hk¿HÎã«É¿PãŒôRPË˛˙ˇã»âL$Ö…u	â|$È2  ãâAââ|$(9;é  ã√çS+¡âT$çyâD$4ãBÙãŒâG¸ãD$4ã8ËØˇ˙ˇãT$ãŒâãR¸Ëüˇ˙ˇâGãŒãD$ãËèˇ˙ˇãT$âGãBãJâO$çJ4ˆG$âG ãB âG(ãBâGãBâGâL$0tããŒËTˇ˙ˇãT$ãL$0âG<ˆG$ÄãB8âG@tˇ ˆG$tããŒjËÒ¡˝ˇãT$âG<ãBâGÖ¿tˇ@ãRãŒjË˛ƒ˝ˇâGãŒãD$jãP$Ë†¡˝ˇâG,ãŒãD$ãP(ËLƒ˝ˇãT$âG0ãB,ãJ0É¬HâG4ãD$(âO8@É«HâD$(âT$;åı˛ˇˇ3ˇãT$ãL$ãD$âBäEàBÎãMâL$ãD$Ö¿tã–ãŒË˙»˝ˇãL$Ö…t	ã—ãŒË÷º˝ˇÖ€Ñ´   9;éö   É√ãS¸Ö“tãŒËœ˘˙ˇãÖ“tãŒË¬˘˙ˇãSÖ“tãŒË¥˘˙ˇˆC tãS8Ö“tãŒË†˘˙ˇˆC tãS8Ö“tãŒËÖ»˝ˇˇsVË˝_˛ˇÉ{ t	ˇsVËˇˇãS(Ö“tãŒË„º˝ˇãS,Ö“tãŒËK°˛ˇãD$ GÉ√H;8åkˇˇˇãÿã”ãŒË=˘˙ˇãD$_^[ãÂ]¬ UãÏÉ‰¯ÉÏSVãuã¡WˇuâD$ãﬁˇuãâL$ã»R≤Ëd˙ˇˇã¯Öˇt1ãD$Ä∏Ã   r3ˆÎÖˆtãL$ã÷j jËΩ˝ˇãÿÎ3€â_∆GÖˆtãL$ã÷Ë£ª˝ˇã«_^[ãÂ]¬ VãÚWã˘ÖˆtLÄ~
 uFãVË-ÚˇˇãÖ“tãœËç¯˙ˇãVÖ“tãœË¯˙ˇãVÖ“tãœËWª˝ˇãVãœËZ†˛ˇãœã÷_^È\¯˙ˇ_^√UãÏÉÏÉe¯ SVãÒã⁄Wâ]¸ã>ÄS ÖØ   ËÂsˇˇÖ¿Ö¢   ã√3€ãPãHâUÙâMÏ9_~eã√ãÀÉÉ˚L»âMÖ“tRã—ãœËND˛ˇÖ¿t%ãMãG…ãUÏj ãL»É¡(ËØ8˚ˇã@âE¯Ö¿uÎãE¯ãUÙC;_|≠Ö¿tã–ãŒË=   Î(ãE¸É} uÉ¿Ph|	VË◊!˚ˇÉƒÎãŒË©¶˛ˇ∆Fã]¸ã”ãœË1¢˛ˇ_^[…¬ UãÏÉÏSVWã˘ãÚâu¸ãã»ãVâE¯ËtˇˇãNãÿãVÉ¡j â]ÙË8˚ˇãÛˆãHÖ…tNãE¯É˚ã@ãPˇ1âEãœãE¸ˇ0jZjXE–Ë¶O˛ˇÖ¿uyˇuπ˝É˚P∏Ñ‰D¡ãœPj	ZËÉO˛ˇÖ¿uVãœËõôˇˇãÿÖ€tIãE¸ˇ0ãE¯ãHˇ4Òhê	WË√S˛ˇãUÙÉƒãœËo˛ˇãE¸3ˇWWˇuÙã0∫ó   ãÀËI†¸ˇWVã–ãÀËìß¸ˇ_^[…√UãÏQVWã˘“j ãGãL–ãUÉ¡(Ë8˚ˇãÖˆtBãN9Nu-ãVÉ¡j Ë,7˚ˇãHÖ…tÉ¡8Î;∆tçH ãÖ¿uÛÎã@ âã÷ãœË~˝ˇˇÉO_^Y]¬ UãÏQSã¡âE¸VWÖ¿t+Ö“t'ã3ˆÖ€~çzãã»Ë4û˛ˇÖ¿yãE¸FÉ«;Û|Ë3¿Î3¿@_^[…√UãÏÉÏSVã¡âUÙWâE¯3ˇË⁄Ôˇˇãÿâ]Ö€Ñ’   ãU¯ãÛã
ãI Å·   œu,ãMÙãI8Ö…t";Ÿu3€È¨   ãC Î	;¡t	ããF Ö¿uÛ!~ ãÛã]äN∂¡;√uãUãNË@ˇˇˇÖ¿ubäNãU¯Ä˘ïu>ãEÙà^Äx+u(É˚~tπÿ	É˚∏–	E¡Ph‡	RËc˚ˇÉƒ∞Î∞àF	∂¿ÎÄ~
 tÄ˘~uÅ˚Ä   uÉzt u∂F	¯ãv ãU¯ÖˆÖqˇˇˇã]ãEÖ¿tâ83¿Öˇ_^E√[…¬ UãÏÉÏSVãÒã¬WâE¸âu¯ããÀãPË8˘˙ˇj j 3“ãŒã¯ËQû˛ˇãÖˆt6ãU¸ãJãAâ~ãK;AtâFãRÖ“t%j ãÀËΩ˝ˇãM¯ã÷PË°˛ˇãÎÖˇt	ã◊ãÀËZÙ˙ˇ_ã∆^[…√UãÏÉ‰¯ÉÏSVãÒâT$3…ât$W3ˇâL$ãâD$9
éÛ   çZã¬â\$$ãS¸Ö“ÑÀ   ä<≥t%<åÖ‹   ãBÄ8≥Ö–   h	VË(˚ˇYYãL$ãE3“Éd$ f;P"çà   ã\$ 3ˆãL$ât$ãPˆDuMˇ4ãL$j;ZË˝±˝ˇPã◊ãÀË¨¿˝ˇãL$ã¯ãEÄyS u!ãPãD$k7ãË¯˙ˇÉ$>¸âD>¯ãt$ãEãL$ø@"AÉ∆âL$;»ât$ãE|íã\$$ãt$ ãL$ãD$AÉ√âL$â\$$;åˇˇˇã«_^[ãÂ]¬ ãL$j j ËK∑˝ˇPã◊ãŒË¿˝ˇã¯ãD$ÄxS u∂ãÖ“t∞k7ã»Ë|˜˙ˇâD>¯ãC3>É‡1>ÎêUãÏÅÏ‰   °∞	3≈âE¸ãESVãŸâÖ4ˇˇˇWjLj ãCã3ãªÑ   âÖ(ˇˇˇçÖ8ˇˇˇPâï,ˇˇˇâµ0ˇˇˇâΩ$ˇˇˇˇbÉƒçE®jPj PˇbãWÉƒãŒj Ëºπ˝ˇÉM‹ˇçï8ˇˇˇâÖTˇˇˇãÀçE®«E®   âÖXˇˇˇãÖ4ˇˇˇj âE¿Ëk»ˇˇÄ~S uÉ{$ uçï8ˇˇˇãÀË◊éˇˇãïTˇˇˇÖ“tãŒË¡˝ˇˇµ4ˇˇˇãWãÀË∞˝ˇˇããÖ0ˇˇˇâµˇˇˇÄxS Ö  j çEàj PˇbÉƒÉ` uãâG`ãC(âG\ˇC(ãEçMàâEêã÷ãÖ,ˇˇˇâ]à«E†   ä@àÉî   ãÖ4ˇˇˇâCxË·£˝ˇÖ¿ãÖ0ˇˇˇÖ∑   ÄxS Ö≠   ãC,ãâï ˇˇˇçHÉ¿¬âç4ˇˇˇâC,âOd3ˇâΩ,ˇˇˇÖ“~(É∆ãçPãÀË®Ì˝ˇãç4ˇˇˇçvG;Ω ˇˇˇ|·âΩ,ˇˇˇ˘Wˇµ,ˇˇˇQãç(ˇˇˇj_ZË∏ö¸ˇãÖ$ˇˇˇçwãç(ˇˇˇj Vˇp\j}ZËõö¸ˇãÖ$ˇˇˇãç(ˇˇˇVWˇp\j~ZËÇö¸ˇãµˇˇˇãÖ0ˇˇˇÖˆt	ã÷ã»Ëªø˝ˇãM¸Écx 3Õ_^∆Éî    [Ë‘¢ …¬ UãÏÉ‰¯ÉÏ,°∞	3ƒâD$(SãŸVWã˙ãCã3âD$ât$Èï  É}uäGÎäEàÉñ   É$ t<ˇw$hLÂVË7˚ˇãL$Éƒ∫∞   ãj jhˇˇˇË‹ô¸ˇãL$ã–j˘VË#°¸ˇãt$∂ÉË~Ñ‡   ÉËÑ¶   ÉËtSãWãŒj Ëw∫˝ˇ3…âD$âL$ã–âL$ âL$,âL$$âL$(çL$QãÀ∆D$ËûÀˇˇãT$Ö“Ñ›   jãŒËåsˇˇÈœ   ãWÖ“tj j ãŒË”≥˝ˇã»Î3…∂Éñ   3“RRRPQQRãWãŒË—∂˝ˇYPã◊ãÀË®˙ˇˇã–ãÀËÊ  j j j ÎsãWÖ“tj j ãŒËÖ≥˝ˇÎ3¿j j PQã◊ãÀËr˙ˇˇYã–ãÀË≠˛ˇÎ«ãW ãŒË…!  ãWãŒP∂Éñ   PËπ˝ˇãWãŒPj Ëáπ˝ˇPã◊ãÀË2˙ˇˇã–ãÀËã¸˛ˇ3¿PPPãL$∫Å   Ëéò¸ˇã(ÖˇÖc˛ˇˇãL$43¿_^[3ÃËˆ† ãÂ]¬ UãÏÉ‰¯ÉÏD°∞	3ƒâD$@ã¡â$SVWÉxt ã¯ã0ãŒExtÉd$  j jâD$ â|$,ât$0ËÀ˙ˇãÿÖ€Ñ'  ãO|âKãŒj jâ_|Ë≠˙ˇâD$âCÖ¿Ñ  ãWj h  ãä‡   âHãŒâÇ‡   ãD$âãEâCÉKˇÉKˇËj˙ˇã¯ÖˇÑ∆  j çD$0j PˇbãL$ÉƒãEâ|$,âGxãD$$â7âGtãâáÙ   äAãL$àáî   ãÅà   âáà   äAãœàGËuêˇˇâD$Ö¿ÑO  ãD$ãÖ…t#j˘QQh<	VËÅ˚ˇãL$$ÉƒÉ ˇPËáû¸ˇãD$ãPÖ“tPj j ãŒË§±˝ˇÄ~S âD$u*ã–çL$,ËÊû˝ˇÖ¿uˇO8ãG8jPˇt$âD$,WËÔ˝ˇãD$Ö¿t	ã–ãŒË∞˝ˇãD$ˇuãPãœË}¸ˇˇãD$ Ö¿tãL$ã–ËAö¸ˇãL$3¿PPPjEZË¶ñ¸ˇãL$ãWÉy$ uâQãG$âA$ãGâAÎÖ“tãË÷Ï˙ˇãL$Ä~S u5Éy$ u/ãD$ã»ãT$$É¬`ãppËö¸ˇãT$ãL$ãBtâAÉbp â1ãt$(ÎãL$ãG,âAãG(âAãD$âAãáå   ãL$âCãáê   âCË}∑¸ˇãœË/iˇˇã◊ãŒËUÏ˙ˇã√Î3¿ãL$L_^[3ÃËkû ãÂ]¬ UãÏÉ‰¯QÉyt ã¡VEAtãuã@|Ö¿t9u9ptã@Ö¿uÖ¿u	VˇuË<˝ˇˇ^ãÂ]¬ UãÏÉ‰¯ÉÏSVWã⁄ãÒËõéˇˇˇuã”âD$ˇuãŒËòˇˇˇã–Ö“tL3ˇ9;tããI Å·    âL$uGãF,ã\$@PˇuâF,ãÀˇuãrj/ZË=ï¸ˇj¸Vã–ãÀËÜú¸ˇã◊ãÀËÄö¸ˇ_^[ãÂ]¬ UãÏÉ‰¯VWãÚã˘ÎläN∂¡;EtÄ~
 tXÄ˘~uSÅ}Ä   uJ∂F	;EuAãUãNËıˇˇÖ¿t2Ä~
 uˇu ã÷ãœˇuˇuˇuËˇˇˇÎÉt uˇuã÷ãœˇuË¯ˇˇãv Öˆuê_^ãÂ]¬ UãÏQS3€âM¸9]Vï√ãÚWÉ√3ˇÎH∂F;√u=ãEÑF	t5ãUãNËóÙˇˇÖ¿t&Ä~
 tÉœˇÎˇuãM¸ã÷ˇuËb˛ˇˇÖ¿tãM|àãv Öˆu¥ã«_^[…¬ UãÏÉÏ°∞	3≈âE¸Sã]VWã˙ãÒâuÙÄ+tHÉe¯ ã”¡‚ãœWËvN˛ˇâEÖ¿t.ã6çE¯Q∂JãUP∂FPQPãŒË˛ç¸ˇãU¯ãuÙÖ“t	jıãŒËÑõ¸ˇãG€Ä|ÿEuÄ+tj j ˇuãŒjUZËõì¸ˇãM¸_^3Õ[Ëú …¬ UãÏÉ‰¯ÉÏD°∞	3ƒâD$@ãEÉ$$ SVãuWâT$,ã˘ãUâD$$ãEãâD$ãBj âL$âD$Ë0≤˝ˇãÿâ\$(ÖˆtãL$3¿PPã÷Ë∞≠˝ˇâD$ ÎÉd$  Ö€tãCÅK0   ÉK4ˇˇHÉc ã\$$Ö€tc3¿3ˆf;C2sCãCãœj j jK∑pZâD$Ë®˝ˇÖ¿t	ãL$AfâH ãT$ãœPË"∂˝ˇã–F∑C2âT$;|øÎãT$ãD$3€Äx+ï√É√ÎRã\$äC+<uM3¿3ˆf;C"}6j j jKZãœË©ß˝ˇÖ¿tçNfâH ãT$ãœPË¡µ˝ˇã–FøC"âT$;|ÃÎãT$j[â\$Î+3€ãœj <j ï√jKÉ√Zâ\$ËXß˝ˇãã–ËÀ¥˝ˇã–âT$ãD$Ö¿tPÉd$ É8 ~Fã\$çpãÖ“tj j ãÀËt¨˝ˇÎ3¿ãT$ãœPË>µ˝ˇãL$ã–ãD$É∆@âT$âD$;|≈ã\$j h  Ç j j j ˇt$4ãœˇt$@ËîlˇˇãÖˆtÅN   ãD$,âD$43¿âD$DâD$<âD$@ãD$$à\$0Ö¿t
∑@2âD$8ÎÉL$8ˇçD$0ã÷PãœË}√ˇˇÖˆtãL$ã÷jËokˇˇãL$L_^[3ÃË∫ô ãÂ]¬ UãÏÅÏ¸   °∞	3≈âE¸SVWâïpˇˇˇãÒâµ<ˇˇˇãEÉç`ˇˇˇˇâÖHˇˇˇãE3…ã}AâÖLˇˇˇ3¿jPâÖˇˇˇâÖ ˇˇˇâEºâÖhˇˇˇâÖ$ˇˇˇâÖlˇˇˇâÖ(ˇˇˇâEâÖˇˇˇâEêâÖxˇˇˇâÖ8ˇˇˇâÖˇˇˇâÖˇˇˇâEÄçEËPâ}®âçˇˇˇˇbãÉƒÉ~$ â]îÖ`  Ä{S ÖV  ãïpˇˇˇãŒË»¢˛ˇãÿâ]ÑÖ€Ñ∏  ãS<ãËRcˇˇâE§ã”çÖPˇˇˇãŒPWhÄ   Ë¶ˇˇâÖtˇˇˇ3“äC+BàE∆ãÖpˇˇˇ9~ãâEúÎÉeú ã”ãŒË≈p˛ˇÖ¿Ö`  ãÖPˇˇˇã”PãŒâÖPˇˇˇËè¢˛ˇÖ¿ÖB  ã~(ã◊â}∏âï,ˇˇˇçGâF(ˆCÄâÖ4ˇˇˇuÉeò ÎãÀËÁN˛ˇâEòãÖ4ˇˇˇ3…âç0ˇˇˇãKÖ…t0ãù0ˇˇˇã–9Mòã¬E«BâV(CãIã¯Ö…uÍãï,ˇˇˇâù0ˇˇˇã]ÑâE∏ãÖLˇˇˇÖ¿tãx(ã@,â}∏âÖ4ˇˇˇâV(ãÖpˇˇˇãMîj âx4øC"ãΩ0ˇˇˇ«çÖ   «PË!Ë˙ˇã–âUºÖ“Ñ˘  øC"çOçÇçàâÖXˇˇˇçGâç\ˇˇˇP3¿@PQˇbãÖ\ˇˇˇÉƒ3…∆D8 3¿f;C"}ãuºÉéˇAøC";»|Ûãµ<ˇˇˇj çE»j PˇbãçLˇˇˇÉƒãÖpˇˇˇâM–ãŒâu»âEÃ«E‡   Ëôáˇˇã}®âE¿Ö¿Ñ„  Ée∞ 2¿É? ∆E£ àE«é≤  çGâE¨ãHËÿ˚ˇÉ}ú ä–àUãuãE¨çM»ãË ñ˝ˇÖ¿Ö  äUãøC"3ˇÖ¿éã   ãCøK"âE¥8P
uãM¨ãQãËÁ˚ˇÖ¿tãE¥øK"äUãGÉ¿âE¥;˘|’ÎTøC ;¯u3¿@àE«ãE¨ããE∞âïhˇˇˇâÖ`ˇˇˇÎ*ãKã«¡‡É}ò t3“BÑTtàU£ÎˆD`Öt  ãE∞ãMºâπäE«ãçhˇˇˇàE«ãÖ`ˇˇˇâÖ`ˇˇˇøC"âçhˇˇˇ;¯|<É}ò Ö¥  ãE¨ãHËx∑˝ˇÖ¿Ñ°  3¿Éœˇ@àE«ãE¨ã âÖhˇˇˇãE∞âÖ`ˇˇˇÎÖˇy∫»ÎÎ+ÆËãCãœ…ã»ãÖhˇˇˇâÖhˇˇˇãÖ`ˇˇˇâÖ`ˇˇˇäE«àE«ãEîãM§…ã@ˇ4»ãŒRˇ3jZË’;˛ˇ3…A;¡Ñ¿   É¯uãEºÉ∏ˇã}∞ãM®GãE¨É¿â}∞âE¨;9åW˛ˇˇäE«äU£–ˆC`àïTˇˇˇÑ;  ãuº3“3¿3ˇâU¥f;C"ç  3…âçdˇˇˇÉ<æ çÈ   ãS—ˆB`Ñ◊   ∂E«ãÀPË‡F˛ˇã÷ã»ËOˇ˛ˇãçdˇˇˇÖ¿Ñ¥   3¿«æüÜ çPâU¥È£   ãE¥ˇ0hL	VËµ˚ˇÉƒãUºã}®ã]îãMÏÖ…tãEËâÅÙ   ÉeÏ Ö“tãÀËP‚˙ˇãïpˇˇˇãÀËÛå˛ˇÖˇt	ã◊ãÀË/±˝ˇãÖHˇˇˇÖ¿t	ã–ãÀË	•˝ˇãM¸_^3Õ[Ë@î …¬ kE∞ã}®ˇt8hp	VË6˚ˇ3¿Éƒ@àFãUºÈyˇˇˇãU¥øC"GÉ¡âçdˇˇˇ;¯å˜˛ˇˇÖ“Ö‘˛ˇˇãµ<ˇˇˇäïTˇˇˇ3¿@8C+uÉ»ˇÉ…ˇÎW¿fÖ@ˇˇˇãçDˇˇˇãÖ@ˇˇˇãΩpˇˇˇâG@∂¬ã”PˇuºâODãŒâÖˇˇˇË™‡˛ˇÉ}âE¨ãEjYD¡3“âEã{âïdˇˇˇÖˇÑ;  ãÖ\ˇˇˇã]¨@âÖ|ˇˇˇÎ3…AÄΩTˇˇˇ Ö∆   ;Ÿèæ   ÆË;}òÑ≤   ãO$∂E«âEåÖ…tãUºPË§˝˛ˇÖ¿Öì   3…3“3¿âçDˇˇˇâU∞f;G2Éé   âM¥ãG∑PfÖ¿xã]ºòãÉ˜–¡ËÎãO(ãE¥ˇuåãUºãLËQ˝˛ˇãU∞ãM¥Ö¿u∑G2BÉ¡âU∞âM¥;–|µãçDˇˇˇÎ8ãN,AâN,∑G4¡É}âF,uÄ6u3¿@âEÎãN,AâN,∑G4¡âF,Ö…uãÖ|ˇˇˇ∆  ÎãÖ|ˇˇˇãïdˇˇˇãùXˇˇˇâìBã@ã]¨âïdˇˇˇâÖ|ˇˇˇÖˇÖ⁄˛ˇˇã]ÑãF,ãçXˇˇˇ@âF,âëÉ} tãÖ0ˇˇˇ@P3¿@Pˇµ\ˇˇˇˇbÉƒÄ~ ã}¿uÉè†   ÉΩtˇˇˇ u
É}¨ u3“Î3¿çPˇu§ãŒË'è˛ˇ3¿@8C+Ñà   ãÖdˇˇˇãçXˇˇˇãV,BÄ}£ âïxˇˇˇãÅâÖˇˇˇâV,âUêuÉΩtˇˇˇ u	ãE¨ã Ö¿tøK"çB âÖˇˇˇãE¨âN,ÄΩTˇˇˇ uÉΩtˇˇˇ uÖ¿tçAâÖxˇˇˇã»âF,çAâÖ8ˇˇˇøC"¡âF,äE∆<uããÜÙ   âEËäE∆âuÏâéÙ   É}ú u0<uˇu∏ã”ãŒj j ˇµHˇˇˇËµõ˛ˇãïHˇˇˇçM»ËWê˝ˇÖ¿ÖQ¸ˇˇ3“B8S+u*ˇuãïhˇˇˇãŒˇµHˇˇˇã}®ˇuºRãïpˇˇˇWSË5  È§¸ˇˇãF8HâF8âÖ|ˇˇˇâE∞ãEîãH$3¿# ¡t9É~x u3Ä~ u-Äæï    u$ÉΩLˇˇˇ uˇF,ãœãF,j Pj jFZâÖˇˇˇËÁá¸ˇÉ}ú Ö‘   ˆCÄÖ    ˇuêãœˇµˇˇˇj jIZËæá¸ˇˇµˇˇˇãN(j QjsçAâMåZãœâF(Ëüá¸ˇÉΩLˇˇˇ ã¯â}¥Ñu  É• ˇˇˇ 3¿jˇµ|ˇˇˇ@ˇµHˇˇˇâE§VËˇﬂ˝ˇÉ•ˇˇˇ ãM∏ˆCÄÖs  j ˇuê∫Ö   QãM¿ËEá¸ˇãE§Ö¿Ö>  ˇuêãçdˇˇˇˇµˇˇˇãïXˇˇˇˇuåˇF,ãF,âäãM¿j~ZËá¸ˇÈ—  ãEòÖ¿t∑H2Î3…ãF,ã}úâç(ˇˇˇGø…çPâM§¡âïlˇˇˇ«ÉΩLˇˇˇ âEÄâF,Öä  Ä}∆uøC"Î3¿ç<ãF(}úâEå@É}ò âF(tçAˇãM¿¬PRj jIZËèÜ¸ˇãM¿j WˇuåjsZË~Ü¸ˇâE¥ãEòÖ¿t ã–ãŒËEê˛ˇÖ¿tãM¿ã–j˜fâxËé¸ˇãEòÉ}ú t3ã}åã◊QQˇµHˇˇˇãŒˇµpˇˇˇˇu®PË¶ÚˇˇÄ}∆ãM§Ö˛   â}∏Èˆ   ã}¥Ä~ jXu"ÉΩtˇˇˇ uÉ}¨ uÄΩTˇˇˇ u
É} jYD¡ˇµ4ˇˇˇãïpˇˇˇãŒPj j ˇµHˇˇˇË⁄Ω  âÖ ˇˇˇÖ¿Ñ¢˘ˇˇÉ¿jPçEÙPˇ bãÖ ˇˇˇÉƒ∂H.ãP03¿@âM§#–âïˇˇˇ;»Ñ&˛ˇˇÉ~t ã∆EFt3“BàPÉ˘Ö˛ˇˇãE¯ãM∏Ö¿à˛ˇˇ;¡Ñ˙˝ˇˇ+Ö,ˇˇˇãï\ˇˇˇÄ< Ñ‰˝ˇˇÉe§ È€˝ˇˇÉeå 3ˇãU∏â}¥âU∏9}úÑò˝ˇˇÉ~t ã∆âç$ˇˇˇEFt3“ãçlˇˇˇBâMÄàP3¿âE§È«   ÖˇÑø   ãM¿ã◊Ëüã¸ˇÈ≠   ãÖ(ˇˇˇÉ•Dˇˇˇ ø¯Öˇ~3ãµDˇˇˇãÖlˇˇˇã”∆PãEòã@øpPQãM¿Ë√˝ˇãM∏F;˜|Ÿãµ<ˇˇˇÉ}§ t"ãE¥Ö¿t
ãM¿ã–Ë<ã¸ˇãÖlˇˇˇâΩ$ˇˇˇâEÄÎ>ãUòWQãMîË··˛ˇYãM¿PˇuÄWˇµlˇˇˇj_ZËgÖ¸ˇãM¿∫à   WˇµlˇˇˇˇuÄˇuåË,á¸ˇãE§ÉΩLˇˇˇ Ö1  É}ú uÉ¯tãç ˇˇˇËl∆  Ä}∆Ñä   ãM§3ˇÖ…tSãEÙãï\ˇˇˇÖ¿x
+Ö,ˇˇˇ∆ ãE¯Ö¿x
+Ö,ˇˇˇ∆ É˘u&ãç0ˇˇˇ3¿9E¯ù¿+»Ö…~ãM¿3¿PPPjZËÆÉ¸ˇã¯3…ã”QQˇµ\ˇˇˇˇµ,ˇˇˇQjeãŒËû	ˇˇÖˇtã◊ã}¿ãœËÌà¸ˇÎã}¿ãE§Ö¿t]ãM∏9MÙt"9M¯tˇµ$ˇˇˇˇuÄˇµ|ˇˇˇQjZãœËAÜ¸ˇãE§3…A;¡t	ˇN8ãF8âE∞É}ò ãEêEEÄj ˇµ|ˇˇˇPj2ZãœËÉ¸ˇÈ#  É}ò uKÉ}ú uEj ˇµ|ˇˇˇãœˇuåj&ZËˆÇ¸ˇˇN8∫Ö   ãF8ãœj ˇuêâE∞ˇuåËŸÇ¸ˇâÖˇˇˇˇuêˇu∞ˇu∏j!Î¢ˇN8ãœãF8j ˇµ|ˇˇˇâE∞ˇuåj&ZË®Ç¸ˇãGtâÖˇˇˇãEúÖ¿ÑÇ   Ä}∆Ñô   É}ò tYãÖ(ˇˇˇ3ˇòâE¥Ö¿~-ãu¿ãÿãÖlˇˇˇãŒ«PWˇuåj\ZËXÇ¸ˇG;˚|‰ãµ<ˇˇˇã]ÑãE¥ã}¿Pˇµlˇˇˇˇu∞ãœˇu∏jZË!Ö¸ˇÎ7j ˇuê∫Ö   ãœˇuåËÇ¸ˇÈ?ˇˇˇj ˇuÄ∫Ñ   ãœˇuåË˛Å¸ˇj ˇuÄÎ∫ã}¿ãEúÄ}« tAˇµxˇˇˇÖ¿uãïhˇˇˇãŒË ‘˝ˇÎãç`ˇˇˇQˇuåãœj\ZËæÅ¸ˇj j ˇµxˇˇˇãœjZË™Å¸ˇÄ}£ ãE¨uÖ¿u9ÖtˇˇˇÑÁ   Ö¿tã”ãŒË;÷˛ˇã¯Î3ˇˇuãïtˇˇˇãŒSjj ˇu®ËÕÏˇˇ¯3¿âΩDˇˇˇ3ˇf;C"çÑ   ãµDˇˇˇ3…âM¥ãCã◊∑DãÀâÖDˇˇˇËû@˛ˇø–ïˇˇˇÉ˛ˇt-Éˇ }3¿ãœ@”‡Ö∆u3¿@ÑÖDˇˇˇuãM¿j Rj jIZËıÄ¸ˇÎãM¿RWˇu∏ã”ËFø˝ˇãM¥GøC"É¡âM¥;¯|çãµ<ˇˇˇÄ}« uÉ}ò uãM¿j ˇµxˇˇˇˇuêjNZË™Ä¸ˇˇuãïtˇˇˇ3¿S@ãŒPPˇu®Ë¯Îˇˇãç8ˇˇˇ3“âÖDˇˇˇ3€ãEÑã˘f;P"çŸ   3…âM¥ø@ ;ÿÑÅ   ãUÑãB∑D®`t® Ñê   OÈä   ãEºãòÖ…x>É}ú ÆËt!Ä}∆u∑B"Î	ãÖ(ˇˇˇ∑¿Wò¡Pˇuåj\Î7ãE®k—ãŒWãTË*“˝ˇÎB3¿@ÖÖPˇˇˇt#É˚ãÀ”‡ÖÖDˇˇˇuj Wj jIãM¿ZË–¸ˇÎãM¿WSˇu∏Ë#æ˝ˇÉ•ˇˇˇ ãEÑCÉE¥GãM¥ø@";ÿãEÑå2ˇˇˇãç8ˇˇˇã]ÑˆC`t
ã—ãŒSËäﬂ˛ˇ3…AÑçPˇˇˇÑ  ˇµ8ˇˇˇã}¿ã”ãœËâ›˛ˇˇu∞ãïtˇˇˇ3¿ˇu@ãŒˇuêSPˇu®hÄ   Ë#ÍˇˇÄ}∆Ñ6  É}ò ãœtˇµ$ˇˇˇˇuÄˇu∞ˇu∏jZËÇ¸ˇÎˇuêˇu∞ˇu∏j!ZË¸ˇãEÑ3“ãç8ˇˇˇ3ˇãŸf;P"}g3…ãâçPˇˇˇãF∑D®`t® çCˇD√ãÿÎ&ãEºÉ<∏ }øF ;¯tãM¿ã÷SWˇu∏ËΩ˝ˇãçPˇˇˇøF"É¡GâçPˇˇˇC;¯|Øãµ<ˇˇˇãç8ˇˇˇã]ÑˆC`tã—ãŒSË{ﬁ˛ˇÎ
Ä}∆ÑÀ  ã}∞çEj ˇuºã”ãŒPWˇuˇµTˇˇˇˇuêˇµxˇˇˇˇµ4ˇˇˇˇu∏ˇµXˇˇˇËûÒ˛ˇÉ} u	ÄΩTˇˇˇ t8É}ò tˇµ$ˇˇˇˇuÄWˇu∏ã}¿ãœjZË˘Ä¸ˇÎˇuêWˇu∏ã}¿ãœj!ZËÔ}¸ˇÎã}¿É}¨ tˇµˇˇˇã”ãŒˇuºj ˇuêËŒ˛ˇjˇˇµXˇˇˇã”ãŒˇµ4ˇˇˇˇu∏ËYù˛ˇÉΩˇˇˇ tj j ˇu∏∫ç   ãœËó}¸ˇãE¨3…A;¡	ÄΩTˇˇˇ tj j ˇu∏∫Ä   ãœËq}¸ˇãE¨Ö¿tˇµˇˇˇã”ãŒˇuºˇµxˇˇˇj ËŒ˛ˇÉ}§ã”j j jYjXD¡ãŒPˇµXˇˇˇˇµxˇˇˇˇµ4ˇˇˇˇu∏ËﬂˇˇÉ}¨ tˇµˇˇˇã”ãŒˇuºˇuêˇu®ËŸ˛ˇ3…AãÖˇˇˇÖ¿tj QPjTZãœËÁ|¸ˇˇu∞ãïtˇˇˇãŒˇuˇuêSjˇu®hÄ   ËßÁˇˇãE§3€C;√t;ãU∞ãœÉ¯uË7Ä¸ˇãç ˇˇˇË¸æ  Îã}¿ÎúË Ä¸ˇj ˇµˇˇˇãœˇuåjZËÅ|¸ˇãï|ˇˇˇãœË˛¸ˇÄ~ uÉ~x uÉΩLˇˇˇ uÉ~p tãŒËÖﬂ˛ˇãÖˇˇˇÖ¿Ñ%ˇˇj SPjQZãœË6|¸ˇã”ãœËë¸ˇj hÑ	j 3“ãœËaë¸ˇÈ˜ÔˇˇãUºÈ¯ÔˇˇUãÏÉ‰¯ÉÏT°∞	3ƒâD$PãEâD$0ãESãŸâD$(ãEâD$0ãEVãuâD$<ãã»Wã{âT$4ã÷â\$Lât$â|$HâD$Ë<  ãL$4øV"Éd$, jâD$TX–ãA4ãK(j RQâD$çAjsâT$4âL$8ãœZâC(Ëx{¸ˇãK,âD$ çAâD$ãD$$¡ãL$4âC,âD$DÉ9éD  3“ˆFÄâT$ u%ãD$0RRÖ¿tã–ãL$Ë∑ï˝ˇÎ
jKZãÀËVê˝ˇã–ÎQãŒËP:˛ˇâD$ ãHãD$8∑1øŒãàÖ…xãD$<k…ãTÖ“tj j Î≥3“ÎRRjKZãÀËê˝ˇã–Ö“tçFfâB ãËvù˝ˇã3…ãD$3“âL$f;P"}oã¯ãD$8ãàÖ¿x$ãL$<k¿ãTÖ“tãL$j j Ëï˝ˇã»Î!3…Îj j jKZãÀËßè˝ˇã»Ö…t	ãD$@fâA Qã÷ãÀËΩù˝ˇãL$ãøG"AâL$;»|óã|$HãT$(QQˇt$HãL$@QVˇt$4ãÀËüÊˇˇÖˆtãL$ã÷Ëlü˝ˇÉd$0 ãt$(Èß  3ˆÉ¿VjVVˇt$Pã—âD$(ãÀâC,Ë˘±  âD$,Ö¿Ña  ãD$3…f;H"}UãD$8ãL$É¡Œã∞QÖ¿xk–ãÀãD$@ãTË€À˝ˇÎVˇt$∫¨   ãœËúy¸ˇ3“ãœBËÍ~¸ˇãD$Fø@";|ØãD$ˆ@ÄãT$çru=j Rˇt$∫Ö   ãœËay¸ˇãD$0Ö¿tVã–ãÀË{À˝ˇÎOj Vãt$∫Ö   VãœË9y¸ˇÎ=ã»Ëh8˛ˇR∫¨   ãœã@ø0Vˇt$Ëy¸ˇãL$j çAPçAãœ∆PjOZË˛x¸ˇãt$ãD$,É¿jPçD$\Pˇ bãD$8Éƒãœ∂@.âD$0Ö¿tãT$ Ë|¸ˇj j VjxZãœË∏x¸ˇÈù   É{t ã√ECt∆@ãD$D@Pˇt$(ˇt$$j_ZËèx¸ˇãt$(ãœj ˇt$Vj}ZËzx¸ˇˇt$ãD$Hãœ@PVj~ZËex¸ˇãD$4É8u	ãL$,Ë≠∫  j j Vj&ZãœËDx¸ˇ3ˆâD$ 9t$$~"ã\$(ãD$ãœ∆PVSj\ZË!x¸ˇF;t$$|Êã\$LãT$ãÀË  ˇt$ãœˇt$(j j
ZË˜w¸ˇjÙˇt$Tã–ãœË=¸ˇãEãœ∑–É¯jXD–Ë*}¸ˇãCtÖ¿EÿÉ|$0 ∆Cu5ãt$ ã\$(j çFPSjZË®w¸ˇã÷ãœË±¸ˇãwtj j SjxZâpËåw¸ˇÎ	ãL$,Ë€π  ãL$\_^[3ÃËˆ ãÂ]¬ SVWãÚã˘ãã^Ö“tãœË®ú˝ˇãVÖ“tãœËáê˝ˇãVÖ“tãœËåú˝ˇãVÖ“tãœËkê˝ˇãVÖ“tãœËwÕ˙ˇã÷ãœËnÕ˙ˇãÛÖ€u©_^[√UãÏÉ‰¯ÉÏSVWã˙ãŸÖˇu3¿ÎfãW3ˆÖ“tVVËkë˝ˇâD$Îât$ãWÖ“tVVãÀËQë˝ˇâD$Îât$ãWãÀË™ˇˇˇãWãÀPˇt$VËKî˝ˇããÀPˇt$ VË<î˝ˇã–ãÀË   _^[ãÂ]√UãÏQSVWj j0ã⁄ãÒËœ˙ˇã¯ÖˇuIÖ€t	ã”ãŒË±õ˝ˇãUÖ“tãŒËêè˝ˇãUÖ“tãŒËïõ˝ˇãUÖ“tãŒËtè˝ˇãUÖ“tãŒË∫˛ˇˇ3¿Î$ãEãMÖ…âGãEâGï¿àGãEâGã«ââO_^[Y]¬ UãÏÅÏÿ   °∞	3≈âE¯SVãuçÖ\ˇˇˇW3€âçXˇˇˇj ã˙âµ(ˇˇˇSPâΩHˇˇˇâùLˇˇˇˇbãÖXˇˇˇÉƒâÖ\ˇˇˇâΩ`ˇˇˇÈ.  ãÖ“Ñ,  çç\ˇˇˇË)~˝ˇÖ¿Ö  ãVçç\ˇˇˇËL}˝ˇÖ¿Ö  ããçHˇˇˇãâÖPˇˇˇˆGÄãI4âç@ˇˇˇuÉ8uã@Ä8¶ufÉx ˇÑ≠  jhçÖ|ˇˇˇj PˇbçE∞∆Ö|ˇˇˇpâEàÉƒãÖHˇˇˇ∆E∞¶ã@4âEÃãâΩ,ˇˇˇÖˇÑd  Ä6 Ñ>  ãïPˇˇˇ∑G29Ö,  É$ t-ãVÖ“Ñ  ˇµ@ˇˇˇãçXˇˇˇˇw$ËG—˝ˇÖ¿Öˇ   ãïPˇˇˇ∑G23€âÖ0ˇˇˇâù8ˇˇˇÖ¿Ñ€   3…ãâç4ˇˇˇãG ãòâEÑãGfÉ<X˛uãG(ãDâÖTˇˇˇÄ8pt"âEàÎçE∞âEàãGfãXfâE–çÖ|ˇˇˇâÖTˇˇˇãùTˇˇˇ3¿âÖDˇˇˇçBãΩDˇˇˇâÖ<ˇˇˇˇµ@ˇˇˇããçXˇˇˇSËù–˝ˇÉ¯|ãÖ<ˇˇˇGÉ¿âÖ<ˇˇˇ;˛|”ãù8ˇˇˇ;˛ãΩ,ˇˇˇ}$ãç4ˇˇˇCãïPˇˇˇÉ¡âù8ˇˇˇâç4ˇˇˇ;ﬁå;ˇˇˇãµ(ˇˇˇãÖ0ˇˇˇ;ÿ}ãâΩ,ˇˇˇÖˇÖß˛ˇˇÎâ~ãùLˇˇˇ3¿9Ft1ãvCãΩHˇˇˇâµ(ˇˇˇâùLˇˇˇÖˆÖ ˝ˇˇ3¿ãM¯_^3Õ[Ë÷{ …¬ Ö€u
9FuàEËÎçCPhî	çEËPjË¿Ë˙ˇÉƒçMËQhò	ˇµXˇˇˇË©Û˙ˇ3¿Éƒ@ÎÆUãÏÉ‰¯ÉÏ,SVãŸWã˙â\$(â|$$ããsãO(âD$ãEât$âL$ É? t9GtãÖˇuÔâ|$Ö¿Ñ  9MÑ  ãEˆ@Äu>ãÀË4‹˝ˇãL$ãj Vˇu∫å   Ëìr¸ˇãL$Vj ˇt$(j ZËÄr¸ˇã÷ãÀË!‹˝ˇÈÕ   ã»Ë£1˛ˇãK,ã–Éd$, âT$4∑B2çy»â|$ã|$âD$0âK,Ö¿tBã}ã\$,ãBãœfãXË|1˛ˇø»ãD$√PQˇuãŒj\ZËr¸ˇãD$0CãT$4;ÿ|Õã|$ã\$(Pˇt$ ãŒj ˇt$,jZËﬁt¸ˇãL$ãj jjjEZË÷q¸ˇãL$ã–jˇhP˝Ëy¸ˇÉ{t ã√ãL$ã÷ECt∆@ËΩy¸ˇãItâHãT$$ãL$j ãR ËÇê˝ˇãM3ˆâD$43¿f;A"}Kã]3…ã|$âL$ ãCÄ|EuãD$$ãœj j ã@$∆PjUZËSq¸ˇãL$ øC"FÉ¡âL$ ;| ã|$ã\$(ãW3ˆÖ“tãL$VVË´ã˝ˇÎã∆ãWWVVjPQãL$0VË±é˝ˇãT$LYPãÀËÕﬂˇˇ_^[ãÂ]¬ UãÏÉ‰¯QQSVj çD$âT$ãUãŸPj hÄ   jˇË˝GˇˇÖ¿ÖÑ   ÎKj ˇt$Ëª∂¸ˇãÖˆt:jh‰	Vˇ–bÉƒÖ¿tjhË	Vˇ–bÉƒÖ¿uãT$ãÀVËáˇˇˇÖ¿uˇt$Ëb±¸ˇÉ¯dtß3ˆÉ¯eEÖˆtSËk< ãL$ã”PËÃ˙ˇˇt$Ëß¸ˇã∆^[ãÂ]¬ UãÏãUçESVãuWã}ãœPË„„˙ˇãÿÖ€ujXÎSã÷ãœËˇˇˇã”ãœãËX∆˙ˇã∆_^[]√UãÏÉÏ°∞	3≈âE¸SVWã}ãÒâU¯ËÊhˇˇ3€âEÙÖ¿tm9^$uhãE¯Ö¿tçM¯ã–QPãŒËv-˛ˇãÿÖ€xMÉ˚tH3¿âE¯Öˇt&PWP3“ãŒËy˝ˇÖ¿uˇF,ã◊ãF,ãŒPâE¯Ë™¡˝ˇãE¯ãMÙj PSjZËlo¸ˇãMÙã”Ë˘y¸ˇÖˇt	ãã◊Ëîà˝ˇãM¸_^3Õ[ËÀw …¬ UãÏÉ‰¯ÉÏT°∞	3ƒâD$PÉd$( SVãuãŸãMWã˙âL$ÄQ uhÏ	ãÀË√ ˙ˇ3¿@È  Éøº   ~h 	Î·ãG<âD$PÖ…t.∑AÉ‡?Ä∏@¿th@ 	Îø≤Ë£h¸ˇãO<ã–É·˛É…âO<Î∫ÿ4	ãO ãG$âL$,ãOhâL$@ãOlâL$DãOpâD$0ãGâL$HãOtâD$<É»âGãD$0âL$LÉ‡˛äOZàL$ãL$,âG$Å·ˇØˇÔãGÅ…  ¡ÊâO ∆GZ ât$8ã0ãD0âL$ âD$ãHã	Ë®é˚ˇRhT 	âD$0ãGSWâD$,Ëﬂ˝ˇˇãL$`ãÉƒâO<ÖˆÖó  ãD$¡‡GÉ|$ âD$4ãpât$$tZãFW¿ã ã@@fD$PãÖ…t?ãqçT$PRPãŒˇ0cˇ÷Ö¿u9D$T|9D$Pv3ˆã◊hl 	ãÀFËV…˙ˇÈ)  ãt$$ÉOãL$Ë?Ÿ˚ˇãOãT$8âD$PãT
ãŒãRPËæ◊˚ˇãL$3“Ëı◊˚ˇã–ãŒËÏ◊˚ˇj!ZãŒËIÿ˚ˇh	ã”ãœËK¸ˇˇãÖˆÖ…  ãL$3“9T$PjXD–Ë›˚ˇãÖˆÖ©  ãL$ãAã Äxu	9t$u!w`ãAãt$$ãŒj ˇt$TãP$Ëÿ˚ˇÖ¿Öo  9D$(uãW`ãŒPˇt$TËÍ◊˚ˇÖ¿ÖR  ÄS ÖH  äGVÑ¿xæ¿Î	ãL$ËNŸ˚ˇã–ãŒËÛÿ˚ˇˇt$ ãD$ hà 	SWàá∞   ËG¸ˇˇãÉƒÖˆÖ  ˇt$ hÙ 	SWË*¸ˇˇãÉƒÖˆÖÈ   ˇt$ àá∞   h0!	SWË¸ˇˇÉg˚ãÉƒÖˆÖ¬   ˇt$ h»!	SWËÊ˚ˇˇãÉƒÖˆÖ•   ã\$$ât$∂ñwçD$(ãL$PË0=¸ˇ∂ÜwãÀD$(∂ñwPË[=¸ˇãÖˆuhãt$É∆ât$É˛
|ª9D$uãL$ã”Ë¶V¸ˇãÖˆuAãÀËèÁ˚ˇãÖˆu49D$u.ãÀË?ÿ˚ˇãL$ã–Ë‚◊˚ˇãCãL$jˇt$TãP$Ëî÷˚ˇãÎj^ãD$<É ˇãL$âGãD$,âG ãD$0âG$ãD$@âGhãD$DâGlãD$HâGpãD$LâGtäD$jj ∆á∞    àGZË>÷˚ˇã\$4∆GQÖ€tãKË»‘˚ˇÉc Éc ãœË≠$˛ˇã∆ãL$\_^[3ÃËns ãÂ]¬ UãÏQQÉ} SVWã⁄ã˘u3ˆÎ]ãÀË*Í˙ˇâE¸É¿j PËFø˙ˇãÖˆu
WË°∆˙ˇ3¿ÎwãE¸çN@âM¯PSQˇ bãEÉƒã]¯Éf âãEâFãEâ^âF«F   VçèÄ  ã”ËK˚ˇãÿÖ€t);ﬁuWËG∆˙ˇã”ãœË§¿˙ˇ3ˆÎã”ãœË•  ã”ãœËç  ã∆_^[…¬ UãÏSVWã˘ãÚˇwËÌ∏˙ˇã]ã÷SˇuãœˇuË"ˇˇˇÄS u3ˆÎ 3“ãœËe∆˙ˇãÖˆtÖ€tˇuãÀˇ0cˇ”ˇwËπ˙ˇ_ã∆^[]¬ ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃUãÏãMË˚˙ˇÖ¿tãUÖ“tãMj ˇuˇuËkˇˇˇÎ
πÕ4 ËãE ]¬ ÃÃÃÃÃÃÃÃÃÃUãÏãMËœ˙˙ˇÖ¿tãUÖ“tˇuãMˇuˇuË*ˇˇˇÎ
π›4 ËJE ]¬ ÃÃÃÃÃÃÃÃÃUãÏÉÏWã}ãœËâ˙˙ˇÖ¿uπÈ4 ËE ÎoVã∑à  ÖˆtaSã]ãVã6âU¯âuÙÖ€t9ã3¿Ö…t+ã¯ãÚˇvQˇÃbYYÖ¿tGãªÖ…uËãuÙãU¯â}¸ã}ãE¸É<É uãRãœj j j Ëâ˛ˇˇÖˆu§[3¿^_…¬ SVãÚãŸÉnu!Wã~Öˇtˇvãœˇ0cˇ◊_ã÷ãÀ^[È‘æ˙ˇ^[√ãB4Î9tã@Ö¿uı√SWã˘Éoãu.ãWãÀVãwË•ˇˇˇÖˆtãVãpãŒˇ0cˇ÷^ã◊ãÀ_[ÈÜæ˙ˇ_[√UãÏQVãr4ã¡W3ˇâE¸!z4Öˆt.SããN;ÿuâr4ã˛Éf ÎãÉò  âFãE¸â≥ò  ãÒÖ…u‘[ã«_^…√Wãπò  Öˇt É°ò   3“Ëuú¸ˇVãwãœËTˇˇˇã˛Öˆu^_√UãÏSVãÚWã9ãF,çÖ   É¿;áÄ   |ˇ6hD˛QËË˙ˇÉƒãV0ãœj SË.¡˙ˇã–Ö“uãUÖ“t ãœËªΩ˙ˇÎãN,çAâF,ãEÉdä âäâV0_^[]¬ UãÏQQSVWˇuã˘jj j ˇuË4'˛ˇãüË   Ö€tyãuã÷∆C+ãã»âE¸Ë0$˛ˇPã”ãœËLˇˇˇj ã”ãœËAˇˇˇããM¸Ë»¡˙ˇPã”ãœË-ˇˇˇãF+á∏   âáº   ãs0Öˆt#ãS<ãM¸Ë∆9ˇˇã¿ãIˇ4¡ãœˇ6ˇ3jZËè˛ˇ_^[…¬ VãÒãé¯   Ö…t)ÉæË    t ãÜ¸   ôRã—ãPËõ¡˙ˇãñË   ãŒPËµ˛ˇˇ^√UãÏÉÏSãŸâU¸VWãªË   ã3â}Ùâu¯ÖˇÑ<  ËüˇˇˇÉ£¯    É,å&  Äæ±    ÖÁ   É{t çì∏   ãM¸ã√ECt∆@Ö…tãA+âÉº   RhL"	VË)⁄˙ˇãW<ÉƒãŒâE¸Ë‰8ˇˇˇsXãNã–ˇu¸“âEÙˇ7ˇ7ˇ4—hh"	SË˛ˇÉƒãÀËº^ˇˇãUÙãÀâE¯ËP4˛ˇãM¯3¿PPP∫§   Ëèe¸ˇˇu¸ˇ7hÃ"	VËæŸ˙ˇãUÙÉƒãM¯j PËh¸ˇãE¸Ö¿t	ã–ãŒË∑ª˙ˇˇC,ãs,ã÷ˇ7ãM¯Ë£e¸ˇãM¯∫©   j VˇuÙË9e¸ˇÎ2ãw<ãUÙãM¯ã?ËG=˛ˇˇuÙçNã◊Ë˝˙ˇÖ¿t
ˇu¯Ë¡˙ˇÎÉ£Ë    _^[…√UãÏÉÏ@°∞	3≈âE¯ãEÉeÙ SVãÚâE‡ãEãŸâEÿWãF,ã}âE‘ãF0âE–ãÉê  âu»â]¿â}‹Î9ptã@Ö¿uÙãËÖø˙ˇâEƒÖ¿ujÎˇ6h‡"	SËÕÿ˙ˇÉƒâjXÈJ  j jËÔº˙ˇã¯ÖˇuSË_¿˙ˇj^È!  ãE‡ãÀââG∆GãV<ËX7ˇˇãN0ã–ãC“ã–âAçMÙãÉê  Ée âEÏçE‰QãMÿâÉê  çGPˇu–ãE‡ˇu‘âuËâ}‰ˇpSˇ0cˇUÿãMÏâEÃâãê  É¯uSË›ø˙ˇÎÖ¿Ñ∫   É}Ù uˇuƒh#	SËÿ˙ˇãM‹ÉƒâÎsˇuÙh∏B	SËÛ◊˙ˇãM‹ÉƒãuÙâÖˆtVÉ=@∞	 t<ˇ5ò‡	Ëd≤˙ˇãŒË‹∏˙ˇ)†ﬁ	ˇƒﬁ	Vã5d∞	ãŒˇ0cˇ÷ˇ5ò‡	Ëï≤˙ˇÎVã5d∞	ãŒˇ0cˇ÷ã◊ãÀËüπ˙ˇãuÃãUƒãÀËíπ˙ˇã∆ãM¯_^3Õ[Ë≠k …¬ É Ñí  jj ˇwˇbãU‡ÉƒãOãâˇB«G   É} uSˇ6h,#	SË$◊˙ˇãM‹ÉƒâÉoãâE–u+ãWã»ãwË˙ˇˇÖˆtãVãpãŒˇ0cˇ÷ãM–ã◊Ë π˙ˇ3ˆFÈ\ˇˇˇãF4Ée‘ Ée– âG3¿â~4f;F"ç<ˇˇˇ3€â]ÿãN∫ÿ4	ÀËÂ·˙ˇã»âE‹Ë∆·˙ˇ3ˇâE‡Ö¿é£   ã]‹ãu‡É√ÆËjçC˙PhH	ËN‰˙ˇÖ¿uÖˇtÄ{˘ u
äÑ¿t
< tGC;˛|“;˛ãu»}_ã]‹3…ﬂÆË8Kï¡É¡ç9;E‡ã¡ã”+E‹âE‘ãä
àBç;E‡~Úãu»Ä; uÖˇ~∆Cˇ ãFã]ÿjY«E‘   f	L	NÎã]ÿãE‘∑¿	FãM–É√øF"AâM–â]ÿ;»åˇˇˇã]¿ÈD˛ˇˇãÈ@˛ˇˇUãÏÉÏSVãÒWã˙ããÀâ]¯ËÚ¯ˇˇÖ¿t3¿ÎsãG0çãÄ  j ãË|¯˙ˇãHÖ…uãG0ˇ0h\#	VËÃ·˙ˇ3ˇÉƒGÎ@Ée¸ çE¸Pãã◊ˇpQãÀË¸ˇˇã]¸ã¯ÖˇtSh∏B	VËò·˙ˇÉƒâ~Ö€t
ãM¯ã”ËJ∑˙ˇã«_^[…√SVWã˘j[ãè|  ã¡ô˜˚Ö“uKj[ã¡˜Îjãã X˜Î ãóî  QVãœËh∫˙ˇãÖˆujXÎãá|  jj çÜPˇbÉƒâ∑î  3¿_^[√UãÏQSVãÒ“WãFˇ4–ãUËù˛ˇãÿj ãK0ã9çéÄ  ã◊Ë˜˙ˇãHÖ…t_ãÉx tWÉx tQˇuã”ˇpQãŒË.˚ˇˇã¯ÖˇuRã”ãŒËß˜ˇˇÖ¿tEË,ˇˇˇã¯Öˇu:ã”ãŒËè˜ˇˇãñ|  ãéî  âëˇÜ|  ˇ@ÎWh\#	VË ‘˙ˇãM3ˇÉƒGâã«_^[Y]¬ ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃUãÏÅÏ,  °∞	3≈âE¸Sã]VãuãŒW3ˇ!Ωÿ˛ˇˇËÔ˙ˇÖ¿Ñˆ  Ö€ÑÓ  ˇvËMÆ˙ˇãÜê  âÖ‹˛ˇˇÖ¿Ñ∂  9xÖ≠  ã@h  âÖ‡˛ˇˇçÖË˛ˇˇWPˇbäÜ±   3…ÉƒàÖÁ˛ˇˇAâµË˛ˇˇçÖÿ˛ˇˇàM¥âçpˇˇˇã”PççË˛ˇˇ∆Ü±    ËÒ Ö¿Ö≈   ã]–Ö€Ñ∫   8FSÖ±   8C+Ö®   ãç‡˛ˇˇ9yÖä   ãCâAãS4Ö“tãŒËÑ˝ˇãç‡˛ˇˇ∑C"ãï‹˛ˇˇfâA"fâA$ãC%Ä  	A3¿!CˆCÄfâC"t1ãã@ã 9x4t%ãKÎãA8$<tãIÖ…u3¿@f9A2ãç‡˛ˇˇE¯ãCÖ¿tâAÉc âHÎãï‹˛ˇˇ«B   Î/ãΩÿ˛ˇˇ3…Öˇ∏∏B	WD¡PjVË9ﬁ˙ˇÉƒÖˇt	ã◊ãŒËe¥˙ˇ3ˇGãç˛ˇˇ∆E¥ Ö…tË~¸ˇˇu–VË¿˛ˇççË˛ˇˇË1ˇˇÄ~S äÖÁ˛ˇˇàÜ±   u	Öˇu#~DÎã◊ãŒË/∫˙ˇã¯ˇvËÁ¨˙ˇã«Î&jZãŒâV@ËK›˙ˇˇvËŒ¨˙ˇπí7 Îπä7 Ëä9 ãM¸_^3Õ[Ë f …¬ UãÏQQSãŸ“VWâ]¸3ˇãCˇ4–ãUËé˛ˇãÖˆtfÄ~+u`ãN4Ö…tYãA9xZãIÖ…uÒã÷ãÀËıˇˇã¯ãGã ãXÖ€uãXˇFãÀˇwˇ0cˇ”âE¯Ö¿u!Gãœ!F4ËìÙˇˇVˇu¸Ëƒ˛ˇã}¯ã«_^[…¬ jXÎÙUãÏÉÏSVãÒâU¯ãûî  Ö€tcÉ¶î   W3ˇ9æ|  ~@ãªâM¸ãQÖ“t!ãM¯ãããM¸âEÙÖ¿tRã»ˇ0cˇUÙãM¸Éa ËÙˇˇG;æ|  |¿ã”ãŒË«≤˙ˇÉ¶|   _^[…√UãÏÉÏSVWã˙âM¸3“çôî  9ë|  ~9ujXÈ®   ÖˇÑû   ãGã0âu¯9V8Ñâ   3“9ë|  ~ã98t}BÉ¿;ë|  |Ë˚ˇˇã–Ö“ubãv8ãŒˇwˇ0cˇ÷ã–Ö“uLãu¸ãÜ¯  ÜÙ  ãé|  âE¸ãâ<àˇÜ|  ˇGãE¸Ö¿tãu¯9VPtâGHãvPãŒPˇwˇ0cˇ÷ã–ã¬Î3¿_^[…√UãÏÉÏVã±î  3¿âUÙâM¸âE¯ÖˆÑÖ   ãUS3€W;ô|  }tã<ûÉ ãGãt[É9|VãEÙˇGÉË tHÉËtãqTÎãqXÎ	ãqPçBâGÖˆt9W~RÆËˇwãŒˇ0cˇ÷âE¯ãœËöÚˇˇãM¸ãUã±î  ÎãM¸ãE¯CÖ¿tÑ_[^…¬ UãÏÉÏ°∞	3≈âE¸Ée¯ ÉeÙ SVã⁄ãUWã˘Ö“Ñ°   Ä:¶Öò   ãR,Ö“Ñç   Äz+ÖÉ   ËÚˇˇãHããpHÖˆtrçEÙPçE¯Pˇs ˇuQãŒˇ0cˇ÷Ö¿tUãK Ë≈Ÿ˙ˇÉ¿)ãœj PË¯≤˙ˇÖ¿t<j
Yã¯ãÛÛ•ã¯çw(âw ãK ËõŸ˙ˇ@Pˇs Vˇ bãE¯ÉƒâGãEÙÉOâGã«Îã√ãM¸_^3Õ[Ëäb …¬ SVãÒã⁄WãFtÖ¿E3…ãñ–   çæ   Ö“~ã;t;AÉ¿; |Ùãã¬¡‡ôÉ¿É“ RPËà∞˙ˇÖ¿tãé–   ââàˇÜ–   Îˇ6Ëîµ˙ˇ_^[√UãÏÉÏSã⁄ã¡3“âE¸VWãã0âMÙâU¯9SÖ◊   ãAÖ¿t;AuRj@ãŒË≤˙ˇã¯Öˇu3¿È∑   ãSãŒË*¥˙ˇâãŒÖ¿u	ã◊ËïØ˙ˇÎﬁâ{ã«G   ∆G+ãFã@ÅO Ä  âG<É»ˇfâG ËÌ≥˙ˇãM¸ã◊PËQÒˇˇãM¸ã◊j ËEÒˇˇããŒËÕ≥˙ˇãM¸ã◊PË1ÒˇˇçE¯ã◊PãEÙãŒˇpSËœÛˇˇÖ¿t*ã}¯Wh∏B	ˇu¸ËMŸ˙ˇÉƒÖˇt	ã◊ãŒËØ˙ˇã”ãŒË   3¿@_^[…√VãÚãFÖ¿tÅH @  PQËT˛ˇÉf ^√ÃÃÃÃÃÃÃÃÃÃÃÃÃÃUãÏVãuãŒËºÈ˙ˇÖ¿uπc9 ËQ4 Î∂FX∂Ä…^]¬ ÃÃUãÏSVãu3€ãŒËâÈ˙ˇÖ¿u^πv9 []È4 ˇvËÊ¶˙ˇãñê  Ö“uπ{9 ÎãEÉËt4ÉËt(ÉËtπç9 ËÊ3 ãÿÖ€t"ã”ãŒË¢◊˙ˇÎã∆@ÎãàXÎãäMàJˇvËÈ¶˙ˇ^ã√[]√ãAøPÉ˙˛u∏p#	√É˙ˇu∏‘	√ãA“ã@ã–√UãÏÉÏÉ} SVWâU¯ãÒtjhx#	VË…»˙ˇã]É˚~jhÄ#	VË¥»˙ˇ3ˇâ}¸Î	3ˇâ}¸Ö€~Cã}¸Öˇtjh‹ˇVËê»˙ˇãUãM¯çËoˇˇˇPVËÀ»˙ˇG;˚|’j _É˚~jhp‡VËa»˙ˇjˇuVËV»˙ˇÉ˚~jhÄ#	VËD»˙ˇÎÖ€~5Öˇtjh‹ˇVË-»˙ˇjht‡VË »˙ˇG;˚|›É˚~jhp‡VË	»˙ˇ_^[…¬ UãÏÉÏSVãÚãŸWâuÏãF ∑N*âE¸∑FâE¯âMÙfÖ¿u
ˆF$0Ñº   jhÑ#	SË¬«˙ˇãE¯3ˇ∑¿âE¯Ö¿tPãEÙãu¯∑¿âEãM¸ã◊Ëä˛ˇˇâEÙÖˇtjhx#	SËâ«˙ˇãEÙ;}πê#	P∏à#	B¡PSË^Ã˙ˇÉƒG;˛|øãuÏˆF$ ã«âEÏt∑FãÀãU¸hò#	WWPËX˛ˇˇãEÏ3ˇGˆF$tãU¸ãÀhú#	WP∑FPË6˛ˇˇjhp‡SË«˙ˇ_^[…√UãÏÅÏ§   °∞	3≈âE¸SVãÚã—3…âï`ˇˇˇã¬W9Jtã}EBtÄ∏À   Ö4  ∂G4ãHk¿Hã_$É¿∆âÖlˇˇˇãBâÖpˇˇˇãâÖtˇˇˇ˜√    Ö  ˆE Ö  ã√É‡0âÖdˇˇˇ∏   uãÛ#uf9Ow
ˆEuã—Î3“ãÛB#ˇµlˇˇˇçEêâMàâÖ|ˇˇˇÖ“ãÖtˇˇˇπ®#	âÖxˇˇˇ∏†#	D¡âïhˇˇˇPçÖxˇˇˇ«EÄd   h∞#	P«EÑ  ö;f«Eå Ë¸ ˙ˇÉƒ˜√   Ö£   ãÖlˇˇˇãO âçtˇˇˇã@ˆ@Ät#ãA8$<u3¿æ∞¯9ÖhˇˇˇDÖˆÑ‹   Î.˜√   tæ∏#	Î˜√ @  tæ‹#	Îˆ√@æ¯#	∏$	Djh$	çÖxˇˇˇPËÅ≈˙ˇãÖtˇˇˇˇ0çÖxˇˇˇVPË\ ˙ˇÉƒççxˇˇˇã◊ËZ˝ˇˇÎrˆ√ï¡∫„í¿Ñ»tCˆ√t∏ $	Î ÉΩdˇˇˇ0u∏$$	Îˆ√ ∏ò#	πú#	D¡PçÖxˇˇˇh4$	PË˚…˙ˇÉƒÎÖˆtˇw çÖxˇˇˇˇwh\$	PË€…˙ˇÉƒççxˇˇˇË§≈˙ˇãùpˇˇˇã3¿∫¥   PãÖ`ˇˇˇãÀˇ∞ÿ   ˇstËTS¸ˇj˘Vã–âÖpˇˇˇãÀËóZ¸ˇãçpˇˇˇã¡ãM¸_^3Õ[Ë∞[ …¬ 3¿ÎÎVWã˘3ˆÎSÉ? tãˆ@tLãOPãGT#J(#B,»u<Öˆt∑B
©   t   fâB
ÎfÉJ
ãJÖ…xãBk—0PÄjuFˆB
tß_^√UãÏQSãYVWã}Öˇt@ãuÎÄ?ANBGÖˆÙÎÄ|7ˇA
NÉ˛ÛÖˆ~j VRj^ZãÀÆËË{R¸ˇVWã–ãÀË≈Y¸ˇ_^[Y]¬ UãÏQQSVã⁄ã¡3ˆâE¯Ö€~:Wã}ã÷ã»ËË`˝ˇä>ã»âE¸Ë]_˝ˇ<Atä>ãM¸Ë¬{˝ˇÖ¿t∆>AãE¯F;Û|À_^[…¬ UãÏÉ‰¯ÉÏ,ã¡âT$SâD$3€VããEâL$WÖ¿tSSã–Ënl˝ˇãL$ãât$0ÎãÛâ\$0ÄyS ÖΩ  ãFã”ã˚âT$â|$ã@âD$$ãFã@âD$(ãE∑@(9D$ç  ãL$ãEã@0ã4àãE9Öﬁ   ãFHkãD$$ât$,ãDâD$4Ö¿Ñø   Ö“uãt$ ã–ãË t˝ˇâD$Î<ã
çq9r}ãt$ PãË,t˝ˇÎ‚k¡â2æÏÇjYçx˙Û•ãL$4ã|$ãt$ âLãD$$ãL$,â\ãD$(ãTÖˇuãËüs˝ˇã¯â|$Î1ãçH9O}ãRã◊ËÀs˝ˇÎ‚k¿æÏÇâjY«çxÛ•ã|$âPãL$,ãD$(ãT$â\ãL$ãEAâL$∑@(;»å˙˛ˇˇãt$0ãL$ãD$$Ö¿tã–Ë u˝ˇãD$(Ö¿tãL$ã–Ë∑u˝ˇãFãL$âxãFâHÖˇt&É?u!ãGâ_ãVâD$4Ö“tãL$Ëqi˝ˇãD$4âFãFã@0Ö¿t9~çH3“CfâçI;|Û_ã∆^[ãÂ]¬ UãÏÉÏ<SVWã˙ãŸãMâ}‰â]¸ããCâEÙâUÏä<5Ñã  <-ÑÉ  3ˆ<2uã]ãMÙVSVjIZË∏O¸ˇÈ;  ãYHã}«Eÿ   â]‘˜C$   âu‹âuËuãC Ö¿tã@Ä< t
3¿9Eî¿ÎãEâEã∆Öˇ~7ãK0âM»ãÅÖ…tã]»ãÉã]‘9ãMt
@;«}ãK0ÎﬂãU‰Ë¸ˇˇãEÈ‰  ∑S(;˙}-ãC0+◊ãuÏç∏ã}‹ãçOç[90Eœã˘ÉÍuÏã]‘3ˆâ}‹ã}ãMÏã∆âE¯âE‡˜A   ÑÑ   ãAã@É8tyãE¸QSã»ãâUÏã◊Ë∏¸ˇˇãMÏâE‘ÄyS u?ãM¸ãE‹¡‡Vã	PËPß˙ˇãU‘çM‡QãM¸PVjâEËË?y˝ˇãM‡âEÿãE‰âM¯ã âHãE‘ãMÏÖ¿tã–Ëµg˝ˇãE‰ãM¯ã âEÏãEÿÎçE‡ã—ãM¸PVVjË˚x˝ˇãM‡âEÿâM¯É¯u3¿9Eî¿âEÎãEVVQj&Zj"YÖ¿E—ãMÙË N¸ˇãMÅK$   9q@uãE¸ˇH8ã@8âAÖˇ~ãC$©   u   âC$ãA@ãQDâE»E‹âA@k¿VPãE¸ãË}®˙ˇãUã»âJDÖ…Ñ-  kE»â}»»∑C(âM‹;¯çÛ   ãEã◊ãMÏ+«ÆËâE–âE‡ãEËâE‘âEƒãC0ãê9Ö∞   É}ÿuãE–ãMÙ¬VPˇu¯∫Ö   âEÃË_M¸ˇã»Î9É}Ë tãM‘ã	ÎãŒãE–¬PQˇu¯ãMÙj\ZâEÃË4M¸ˇãUƒã»É}Ë çBD¬âE‘ãE‹VVˇuÃâHãMÙj2ZËM¸ˇãU»ãM‹;◊u&É} ãE¯âî¿àAÖˇ~
ãE‡âAã¬Îã∆âAÎ∆A≥É¡âM‹ãMÏ∑C(BˇM‡;–ãE‘âU»å)ˇˇˇãUÖˇ~!˜C$  uãMÙWVÆËˇrj{ZËñL¸ˇÎâr@ãEËÖ¿tã–ãE¸ãË◊¢˙ˇã}‰ã]ãuãNH˜A$    t∏   fÖGu	ã◊ãŒË0˘ˇˇã√_^[…¬ ˇuãRãÀËé˝ˇãÿÎ√UãÏÉÏ0SãŸâUÙãJHVâM‹ãCãQ ãs,âE¯∑A*∑IâE‰ãE¡âM‡ãWâE‘ç~∆â]¸â}âC,Ëh©˛ˇãã–Ë∆¶˙ˇãÿãE‰â]ÿfÖ¿Ñ≠   ãMÙãu¯∑¿âEÏãIâMËçHˇœQWj jIZãŒË±K¸ˇÉ} ãŒj j ˇuËj&Zj"XE–ËñK¸ˇ3¿ãŒPPPjZËáK¸ˇˇuÏÉ} ããM¯Wj ˇuËjZjXE–Ë[N¸ˇãMÙã÷âAãM¯ËiS¸ˇãIt3ˆâH9uÏvã]ÏãM¯ç>PVˇuËj\ZË4K¸ˇF;Û|Ëã]ÿãE‰∑¯;}‡É√  É}‘Ö÷   ãuãE‹˜ãM¸Vˇuã@0WˇuÙã∏âUÿË˙ˇˇ;∆âE‘ãu¸tãUãŒËà¥˝ˇãE‘âEãMÿ∑A®tã˜@   tvÖ€Îl©   ukã∫   ã@âE‘fÖQ
u$ã»Ëœs˝ˇÖ¿tãEÙãM¯j ˇpãE«Pj2ZËÄJ¸ˇãÄxS u,É~$ u&ãu‘ãŒäËàW˝ˇ<AuàäãŒËÎs˝ˇÖ¿t∆AG;}‡å/ˇˇˇÈ„   ãEç4ãM¸+√âE‰ãE‹ã@0ã∏ãE‰∆âU‘PˇuWˇuÙË˙ˇˇã»ãE‰∆;»tj PQãM¯jNZË˜I¸ˇãM‘∑A®tã˜@   tyÖ€ãM¸tu∆AÎp©   ufã∫   ã@âEËfÖQ
u$ã»ËÊr˝ˇÖ¿tãEÙãM¯j ˇpãE‰∆Pj2ZËóI¸ˇãM¸ãÄxS u'Éy$ u!äãMËËüV˝ˇ<AuàäãMËËs˝ˇÖ¿ÎâãM¸GF;}‡å+ˇˇˇãE_^âãE[…¬ UãÏãEVãÚ∫   fÖP
tÉ ˇËAQ¸ˇãN,—ÈâHäN,Ä·∂…fâH^]¬ UãÏÉÏSVãÒâU¸Wˇu3ˇ∫ã   ãWˇuãCã»ÉN0âE¯ËÊH¸ˇˆF( tt9{tã√ECt9xPufãu¸ãWãFâE¸ø@"çÖ   PËW°˙ˇãÿÖ€tCãE¸øH"â∑N4IÖ…~#ãF∑xGfÖ“xãM¸Ë¯˛ˇòâ|É∑F4H;¯|›ãM¯É ˇjÒSË¡O¸ˇ_^[…¬ UãÏSVWã˘Ö“t^ã Ë–V˝ˇÉ¯~R˜B   ÆËtãwãœËŸ|˝ˇãUãŒJRˇuPjNZË$H¸ˇÎ1ãZ3ˆ9u~'É√ãEãœã∆PË2ö˝ˇFç[;u|ËÎ
ˇuãœËö˝ˇ_^[]¬ UãÏÉ‰¯VãÒWj ã˙ãNj<Ö…tËÕ†˙ˇÎËSú˙ˇã»Ö…t!ãFj4Wã@DâãFâHDçAPâyˇ bÉƒ_^ãÂ]√ÃÃÃÃÃÃÃÃÃÃÃÃÃUãÏãE3…Vãuã÷Wãxˇwˇ7Ë§˝ˇÖ¿u4ã÷ãœËzˇˇˇãŒËR˝ˇàF∆¶ãGâFfãGÅfˇÔ˚¸Éf, fâF 3¿@Î3¿_^]¬ ÃÃÃÃUãÏVãuÄ>¶uCãEWãxãF;Gu3øF ;Gu*ã÷ãœËˇˇˇøV ãN,ËìQ˝ˇàFãGâFfãGÉf, fâF _3¿^]¬ UãÏÉÏH°∞	3≈âE¸Sã]VãÒWã˙ãF(âE¿Ö¿u˜F8   Ñ˙   ãFjâEºçEƒj PˇbçE‡â}‰âE‹ÉƒãE3ˇâEËãâ]Ùã âE¯3¿f;F4Éº   ãM¿É¡âM¿ãF∑xfÉ¯˛uã	3“j BâM‡Ë¬m˝ˇÖ¿u«E»ê™ÎNfÖ¿xqãMºòã–âE∏¡‚ãA∑D® tY©   tÆËãI Ë%˛ˇ∫§çã»Ë‘«˙ˇÖ¿u5ãE∏âE«E»™ãSâ}ÏÖ“tçMƒË≤-˝ˇãSçMƒËE.˝ˇãSçMƒË:.˝ˇÉE¿G∑F4ãM¿;¯åMˇˇˇãM¸_^3Õ[Ë"N …¬ UãÏQQSVãÒâU¸WÄ>,uã}ãNWË‚ˇˇˇãvãU¸Ä>,tÏãE3€ãx9X~)ˆG
uRã3…VËÒ°˝ˇÖ¿ãEufÉO
ãU¸CÉ«0;X|◊_^[…¬ UãÏÉ‰¯ÅÏƒ   °∞	3ƒâÑ$¿   Sã¡3€ãMVâD$ãÚã ãUWã}âD$`âå$ê   ãMãGHâD$8∂G4âå$å   çJPâå$î   k»HãBÉ¿âT$0ât$lâ|$t¡â\$pâD$xçäË  ã@,ã–âD$TËœ7  ãL$0˜–#Ñ$ê   ˜“#î$å   âGPâWTãAHãQLãMËøh 3…A#¡âL$LãL$âD$HãA8HâA8âGâGâD$ãA8HâA8âÑ$à   âG8_4v$ãD$xˆ@$tãA,S@PSâA,ãŒjFZâË$D¸ˇãL$ãEã–Ö¿~ã|$0k¿XÅ«  «ã|$t9uJÉËXÖ“Ùk¬XãT$0ãÑ¸  âD$<ãD$xˆ@(t4ˇpãpãL$pSVjZË»C¸ˇãL$lSˇt$ VjZË∂C¸ˇjâG<XàG5È„  ãD$8ãP$˜¬   ÑZ  ∑@(âD$$çPËH≠˝ˇã»ãGâL$@âD$9\$$vXãt$ÆËãD$8ã@0ãòÖ“t6çA3…A√ÑJtPˇt$LãŒSWË@ÛˇˇãGâD$ÎãQPãŒãRË∆˙ˇˇãL$@C;\$$|µãt$l3€ãD$8SQãŒˇpjFZËC¸ˇãD$@ãŒS@Pˇt$,jFZËÚB¸ˇãL$8É»ˇj˘ZÄy E¬Pˇq ãŒˇt$Hˇt$ˇt$dj	ZË‹C¸ˇãL$8ãD$`àYÄxS tâY ãD$TãT$0âG8j>XÄz. çPuE¬àG5ãFtâG<˜A$   tãW@Îã”ãL$$ÉÈâL$à¨  k¬âD$ãD$@É¿¡âD$<ãD$8ã@0ãàâT$fãBf#D$LfâÑ$Ä   tÉl$É˘s*ãD$8fã@f”Ë3…AÑ¡tãœËÙÓˇˇÈø   ãL$fãÑ$Ä   fÖ¿ÑÆ   ã
ãIËsP˝ˇ3…A;¡Öï   ãD$`ÄxS u#ãD$ãŒãWDãTË‡I¸ˇˇp∂ˇpˇpËΩA¸ˇãL$SSj5ZË‚V˝ˇã»âL$Ö…tPãD$∫Ø   Sã ã@âAãL$dË3V˝ˇã»ãD$âHÖ…tãT$<jâQˇwPˇt$ Ë˙ô˝ˇãD$ãL$`ã–âXËîZ˝ˇãL$IˇL$<âL$Ö…â„˛ˇˇÈv  ˆ¬ï¡∫‚í¿Ñ»tUãD$8ã@0ããD$ˇ@,ãH,Qˇt$LâL$ã»SWËÒˇˇãT$âD$;¬tãL$Ëö™˝ˇãD$PˇwãŒˇt$\j ZË⁄@¸ˇÈÿ  π  ã¬#¡;¡Ö  «D$$≥   ãÀâ\$Pã√âL$ˆ¬ tãD$8jã@0ãXâD$ã√âL$Îâ\$ˆ¬tãD$8ãT$ã@0ããT$HÖ“D»DD$âL$LâD$dÖ¿Ñ±   ã«D$âT$ãJË∆N˝ˇÉ¯~2ãL$Ë≈©˝ˇãRjPâD$DâD$Ë¬˜ˇˇãL$∂3…@AÉ‡¡äLÎ2çD$<ã—ãL$PË≤ë˝ˇãT$dãœâD$ËÕÏˇˇãL$∂äL‚ãD$<âD$<ˇt$∂—ãŒˇt$ ˇt$\Ë…?¸ˇãT$<ãL$Ëf©˝ˇãD$H3“B3¬âD$Î&3…ã¬A3¡ãŒSˇt$@âD$ˇt$\çÖ"   Ëã?¸ˇãL$ãD$LÖ¿tmã ˇA,ãQ,jâT$TRãPâD$ËˇˆˇˇãT$ãJË÷M˝ˇÉ¯ä<8t<6uãD$çE7   âT$$ÎãD$HçE6   âD$$Ë¢M˝ˇ3…A;¡ãT$LãœËÌÎˇˇ9\$HãNtãT$Tî¿âW8Å|$$≥   àG5âO<Ñ&  ãD$ãL$lSˇ@,ãp,VR∫Ö   Ë–>¸ˇãT$$ãL$lVˇt$ ˇt$XË∫>¸ˇãL$ljSZËD¸ˇÈ‰  ˜¬   Ñé  ãD$8â\$,â\$hâ\$4∑H∑pâL$PãŒâL$d∑HâL$∑…âL$@ãH âL$pãOâL$\ãL$P∑˘ãÀâ\$<à\$#àú$Ä   â\$(â\$â|$Dâ|$ˆ¬ tã@0ãœât$4ãàAâD$,ãD$8âL$ãŒã|$tãt$lˆ¬Ñ”   ã@0ã|$âT$Lã<∏ãD$∑¿;»â|$hG¡ã ∫   âD$fÖW
ã|$ttQãL$SãA,@âA,ãŒPâG,3¿@PjFZË¥=¸ˇãFt3…—g,ãT$DâG0ãD$pã@Ä<ãD$8î¡3L$H	O,ãH$ãD$âL$Lã—âD$49\$,uCãT$pãL$DãBøHâL$Ö…xãB…ã@ˆD»Ñ.  ãL$ãD$ãT$LâD$4É˘˛Ñ  3…AÅ‚0  Å˙   u7ãD$âL$4àL$#ˇ@,ãH,âL$(âO$9tSQSjFZãŒË˜<¸ˇãD$ˇH8ã@8âG(ãL$pãD$Pf;A4sJãA3…ãT$D8î¡9L$Hu5ãD$hãL$,ãT$@âD$,äD$#àÑ$Ä   ãD$dâL$h∑ ∂¿à\$#âL$dâD$@9]~ãD$8˜@$   tSSˇt$d∫Ü   ãŒËn<¸ˇãL$çD$LPˇt$8ã◊ˇt$PËˇˇãT$Lã»âL$XÖ“tf9\$@tT$DãL$`Ëó˙ˇãL$XâD$<9\$(t!ãW(âT$ÎãD$ãT$L3…AâD$4àL$#È÷˛ˇˇãGâD$ãD$,Ö¿tˆ@(uâ\$$Î3“BâT$$ãT$hÖ“tˆB(u	3“â\$BÎ3“BâT$Ö¿u"f9\$PwãT$Dâ\$P8\$#ÑÀ   â\$$ÈŒ   âT$PãT$DâT$4Ö¿t›ã ãL$dT$X∑…ã@QãL$Rã–âD$Ë	Ûˇˇˇt$,ã◊ãŒËÚˇˇãD$,ˆ@
Äu%ãL$ËÄd˝ˇÖ¿tãD$DãŒD$XSˇt$Pj2ZË2;¸ˇãL$LÖ…tãD$D¡ãL$PãD$h∑–Ë´ËˇˇãL$d∑¡D$4ãL$Ë}I˝ˇ3…A;¡ãT$,ãœË»ÁˇˇÎâL$$ãD$4à\$#Î,ã¬âD$49\$(t Sç
ãŒPSjIZË¡:¸ˇ3¿@âD$PãD$D@âD$4∂L$#ˇt$LãT$\+¡âL$hãL$PË”ÁˇˇãD$8∑@*fÖ¿t
9D$4Ñ◊   ãD$(Ö¿tSP3¿ãŒ@PjFZËe:¸ˇãL$$ãD$PçAãL$H∂åAp»ãD$8âL$˜@$   t-É˘u(ãD$pj
YSã@Sø É¿	ô˜˘ãŒPjzZË:¸ˇãL$âD$ˇt$4ã—ãŒˇt$\ˇt$ ˇt$hËÎ<¸ˇãL$(Ö…tMãFtãŒSÉ¿PSjXã–Ë⁄9¸ˇãD$4+D$$ãL$HPˇt$\3¿ˇt$ @;D$@ˇt$h¿É‡∂îr»ãŒËö<¸ˇãL$(ãD$Dã–âT$,9\$hÑŸ   ãD$hã ãHâL$9\$tãFtâG<ãD$@T$X∑¿PRã—ãL$Ë¯ˇˇˇt$hãt$pã◊ãŒËˇˇãD$hˆ@
Äu%ãL$Ëkb˝ˇÖ¿tãD$DãŒD$XSˇt$Pj2ZË9¸ˇãD$<Ö¿t2ãL$PãD$D∑–ËúÊˇˇãL$<ãT$@QãL$H∑¬ãT$\PçãL$Ë"ÊˇˇãL$@∑¡D$,ãL$ËMG˝ˇ3…A;¡ãT$hãœËòÂˇˇÎ1âL$Î+8ú$Ä   t"Ö…uD$XãŒSPSjIZËó8¸ˇãT$,â\$BâT$,ãD$LÖ¿tãL$`ã–Ë–é˙ˇãD$<Ö¿tãL$`ã–ËΩé˙ˇ9_<uãFtâG<ãD$,Ö¿tZãL$(Ö…tãFtSÉ¿PQjZãŒË68¸ˇãD$,ãL$HPˇt$\ãD$$ˇt$ ˇt$h∂îHÉãŒË;¸ˇãD$Ö¿tã–ãŒË@¸ˇãNtâHãL$(Ö…t=ãFtSÉ¿PQjZãŒË‹7¸ˇãD$,ãŒãT$d¬Pˇt$\ãD$Pˇt$ ˇt$h∂îBÉË¶:¸ˇãD$8˜@$   tãD$DãŒPPˇt$dj{ZËë7¸ˇãD$8ˆ@$@ãL$0tçA(ˆ  u3“BâT$$ãT$\È‹   ãT$pçA(âD$ãJˆAÄuˇt$\ãL$4ˇt$XË1Óˇˇâ\$$È¢   ãT$\â\$$9T$TÑò   Ë^ˆ˝ˇãL$âD$∑P2Ëÿ†˝ˇãL$!\$<âD$â\$$∑A2ã–f9D$<s@â\$$ã˚ãAãL$pfãxË2ˆ˝ˇø»ãD$«PQˇt$dãŒj\ZË…6¸ˇãL$G∑Q2;˙| ã|$t∑¬ãŒPˇt$ˇ¥$ê   ˇt$`jZËè9¸ˇãT$\ãD$ãL$09u/ˆ  uQãL$tRãT$\Ë†ÔˇˇãD$pãH$Ö…tˇ¥$î   ãT$XË¡ˇˇãL$8˜A$   t∆G5≥Î9\$Hî¿àG5ãD$\3“âG8BäA&"¬àG6ˆA$uàW79\$$ÑS  â\$pÈJ  ˜¬    Ñ¸  ãT$â\$Lâ\$dâ\$$ãB(âD$\@âB(ãB,@â\$XˇJ8âB,âD$ãB8âD$HãD$xâ\$,ãHãD$8âL$4ã@0ã âD$Dã@âD$<ãD$âG8ãD$0∆G5Bä@,<Ü¯   ãL$`∂¿+EHâD$k¿HSÉ¿PPÖ…tËqé˙ˇã»âL$@ÎËÒâ˙ˇã»âD$@Ö…uãÑ$ê   ãî$å   ÈÄ  äD$˛¿∂¿jHˇt$|âAâçAPˇ bãL$<3¿@ÉƒãIÉ¡âL$P9D$|EãD$@ç∑å   ã\$É¿PâD$ã¯∂k¿HjH¡PWˇ bãL$\çvXÉƒÉ«HÉÎu‹ã|$t3€ãt$lãL$4ãT$ãD$0ˆ@(upˆAÄu&ˇB,ãŒãB,SPSjIZâD$pËú4¸ˇÎCãD$0ã@âD$@Î Ë¿Û˝ˇããB(SâD$hçHâJ(∑N2QãL$tPjsZËf4¸ˇãL$ã÷ËS<¸ˇãt$lãD$ˇ@,ã@,âD$$Sˇt$ãŒSjFZË94¸ˇãT$0âD$|3¿@9B\éà   ã˚â\$ãÀãBd¡ã;D$Dt>ˆ@
u8æˇ  fÖpãt$t)Ö“tãL$`SSËtN˝ˇÎã√ãT$,ãŒPËÇJ˝ˇãL$âD$,ÎãD$,ãT$0GÉ¡0âL$;z\|†ã|$tãt$lÖ¿tãL$∫,  PSË‘H˝ˇâD$,3“hx$	BRˇt$Ëû5¸ˇãT$HÉƒãÀâ\$9Zé›  ã|$k¡0BãT$T9Pt∫   fÖPÑ£  ãâ\$PÖ“tãL$`SSË∆M˝ˇãL$âD$Îã√â\$ãT$`âÑ$Ñ   ÄzS tÖ¿Ñe  ÈQ  ãT$,Ö“tâBâT$çAP3¿hà$	@PWË5¸ˇãT$PÉƒãœˇt$\j SSˇt$Ëﬂj  âD$Ö¿Ñ˛  ãT$@çà  SQãœË
›ˇˇãD$0ˆ@(Ö:  ãD$<ãL$jˇã@H;»XD»ãD$4âL$ˆ@Äu;Sˇt$(Ö¿ãŒˇt$\j\ZçB)E–Ëj2¸ˇˇt$ãŒˇt$(Sˇt$pj.ZËG5¸ˇâD$PÈ›   ã»Ë{Ò˝ˇãœâÑ$Ä   ∑P2âT$(Ëõ˝ˇâD$hâ\$8Ö“t?ã|$(ã\$8ÆËãT$4√PãÑ$Ñ   ãŒã@øXPˇt$\ËWp˝ˇãD$hC;ﬂ|÷ã|$3€ãT$(É|$ tRPSˇt$pãŒjZËæ4¸ˇÉ|$ âD$P|Cˇt$$ãŒˇt$,ˇt$pj_ZË©1¸ˇˇt$(∫à   ãŒˇt$lˇt$,ˇt$pËÅ4¸ˇÉ|$ t
jZãŒË‘6¸ˇˇt$(ãT$lãœËfõ˝ˇSˇt$LãŒˇt$jZËZ1¸ˇãD$PÖ¿tã–ãŒË[9¸ˇãNtâHãD$ãL$XjZˆ@0E âL$Xãà8  ˜A$   t3É|$ t	ãT$L9Q u#ãT$4ˆBÄtãA ã@8$<ãD$t	ãI âL$LÎâ\$L3“BÑP0tãL$0	Q0ã»Ë+s  ãœË?3¸ˇãÑ$Ñ   Ö¿tãL$`ã–ËÛI˝ˇãL$ãD$<AâL$ã–;Hå+˝ˇˇã|$tãL$Ë3¸ˇãD$LâG@Ö¿tãD$\âGãD$,Ö¿tãL$`ã–âXË¶I˝ˇãT$|ãŒËn8¸ˇãNtSâHãŒˇwSjXã–ËE0¸ˇãT$HãŒËƒ3¸ˇãD$03…A8H,vãD$@Ö¿tãL$`ã–ËtÜ˙ˇÉ|$X uOãT$DãœË‰‹ˇˇÎBãD$xˆ@( t∆G5≥Î2ãL$HSˇt$@äÅ∞∆∂ë<¿ãŒàG5ãD$\PâG8Ëœ/¸ˇ@âG<3¿@àG73…9L$pî¡AâL$ãD$0ãÀâL$ãPdã@\âT$âD$(Ö¿é@  ∑B
â\$ãât$|ãt$l®Ö   ãJ(ãB,#OP#GT»tãD$0ÉH0Èﬂ   ãL$xãâÑ$Ñ   ˆA$t3…AÑHÑ¿   ãL$É˘u"ˇt$pãWã»Ëjí˝ˇãT$Ö¿ujYâL$Èô   ãD$|∑¿É˘}∑B
âD$|©   tãL$Ö…uvjÎœãD$|©   t(ãW,Ö“t!ã¬ãŒS—ËSP3¿@#–ÆËçU   Ë¿.¸ˇâD$jˇ¥$å   ˇ¥$å   ˇt$ Ë6á˝ˇãD$Ö¿tã–ãŒË§6¸ˇãNtâHãT$jXf	B
ãL$ãD$(É¬0HâT$âD$(Ö¿èŒ˛ˇˇãD$0ãPdã@\âD$(âL$Ö…èî˛ˇˇÖ¿é  çrãT$(ât$ˆF˛Ö‡   ∑®Çjï¡_f£¯í¿Ñ»Ñ∆   ãL$T9NÖπ   ãD$xˆ@$Ö´   ãFÙã—ãå$î   ShÉ   ˇ¥$î   âÑ$à   ˇ¥$ú   ˇvËÙ#  ã–âî$Ñ   Ö“tkˆB
ue3…AÑJtã˜@   t
ã@ã@9Hã2çº$ò   ãD$|jYjˇ¥$å   Û•ã@âÑ$¨   çÑ$†   Pˇt$ Ë˜Ö˝ˇãÑ$Ñ   ãt$jYf	H
ãT$(JÉ∆0âT$(ât$Ö“èˇˇˇã|$tÉ? tcãL$lSˇ7ãAtâG3¿@PjFZË-¸ˇãT$0ãrd9Z\~>ˆF
u/ãN(ãF,#OP#GT»ujˇ¥$å   ˇ6ˇt$ ËuÖ˝ˇãT$0jXf	F
CÉ∆0;Z\|¬ãGPãWTãå$Ã   _^[3ÃË:5 ãÂ]¬ UãÏQQSVãÒã⁄WãVç~9VåÄ   ãâE¸ãj ã ãk¬`âM¯PË|Ö˙ˇã»âÖ…u ˆEtÖ€t
ãM¯ã”Ë†E˝ˇãE¸â3¿È≥   kF0PãE¸PQˇ bãM¸çFÉƒ;»tÖ…t
ã—ãM¯ËÉÇ˙ˇããM¯ËÜÅ˙ˇj03“Y˜ÒâFãFã?k–0âE¸@âFâU¯Ö€t$˜C   tãCôRPË¿˙ˇãU¯π  f+¡∑¿Î3¿@ãÀfâD:Ëé7˝ˇfãMÉL:ˇfâL:
çOj$ â:j Qât:ˇbãE¸Éƒ_^[…¬ É˘1tÉ˘5|É˘9~É˘2tÉ˘-t3¿√3¿@√SVWã˙ãŸãWÄ:∞t!ãGÄ8∞tPË9˝ˇˇwãWãÀãË9˝ˇ;tÅw   ãGãOâGäâO<6r,646à_^3¿[√É˘1u3¿@√É˘2u∏   √É˘-uçAS√jXÉ¡Àf”‡∑¿√UãÏÉ‰¯ÉÏ<°∞	3ƒâD$8ãESVWãÚâD$<ãEçT$@ã˘âD$(ãE3€!\$$Rãã÷Pâ|$â\$ âL$(Ëo˛ˇÖ¿u3¿Èc  ãNãAãIâD$0Ë<6˝ˇã»âL$,äàD$<õu`ãD$ ã@ %  Ä É» Ö  øq Qãè‡   ã÷Ë,_¸ˇã¯â|$$Öˇt∑GÉ‡?Ä∏@¿u≤ãœË$¸ˇãÿâD$ãL$ã÷ãIË6_¸ˇÎ<tÖ…  ãYâ\$Ö€Ñ∫  ä3ˆä¬Ñ¿Ñ™  äL$Cäd$B:D$@t:D$At:ƒtF:¡uÄ< tFäÑ¿u›ÖˆÑw  Ä|ˇˇÑl  É˛:—Ñ_  :D$@uÄ| u3¿@Î3¿ãL$(SjtZâãL$$Ë2>˝ˇâD$Ö¿Ñ∆   ãx3“Éd$ ∆7 Öˆ~&ã\$æ:∂D$C;»uBä:à;CB;÷|Êâ\$ã\$ãt$ãD$0∆> Ä8¶u%ã»ËË3˝ˇ<BuãD$0˜@   uaã@,Ö¿tZÄx+uTjVçT$8ãœË¿´˙ˇÖ¿'É˛uÄ?-tjÆË˛D>ˇçT$4VãœËù´˙ˇ˛L>ˇÖ¿~ãT$ãL$ ËB˝ˇãL$$Ëc&¸ˇÈ˛ˇˇãD$Ä|$õãL$<âu[ãD$ãxãœãD$,øP Ë®]¸ˇãD$(É8 t<ãT$,ãBÄx t/ãL$Ë í˝ˇãVË9j˝ˇãWtãœJËt0¸ˇãL$ã÷É` Ë˝ë˝ˇÎ3€ãL$$ËÈ%¸ˇ3¿Ö€ï¿ãL$D_^[3ÃË¥0 ãÂ]¬ UãÏÉÏ°∞	3≈âE¸ãESã]VãÚâEÏãEâEËWäâM‰<´Ö–   ã~ÖˇÑ¡   É?Ö∏   ãGâEÄ8¶u4ã@,Ö¿t-Äx+u'3¿âE¯ã≈éãNËï©˙ˇÖ¿ãE¯tg@âE¯É¯|·ãM‰ãGâE‰Ä8¶unãP,Ö“tgÄz+uaËøˇˇãHãã@HâEÖ¿tMçU¯RçUÙRˇvjQã»ˇ0cˇU=ñ   |-àãGã}ËâãE‰Îä≈éàãGã}ËâãEãMÏâ3¿@Ît3¿Îp<4t<™t<3uã~3“ãNÄ?¶uãG,Ö¿tÄx+«E   DUÖ…tÄ9¶uãA,Ö¿tÄx+uã«Bã˘ã»ãEÏâ8ã}ËâÄ>4u∆DÄ>™u∆EÄ>3u∆Fã¬ãM¸_^3Õ[Ë0/ …¬ UãÏãAVWk˙0ãUkÚ0âT8ãQfãDfâD:ãA_˛D0^]¬ ∏   f9At3¿Ö“D¡√ãA;P}ÆËãIk¬0A√3¿√UãÏÉ‰¯ÉÏSVãuWã}âL$âT$∑V∑Oã¡¬∑ÿäF

G
à’   ˆ¬>ÑÃ   ˆ¡>Ñ√   ã√É‡f;√tã√É‡&f;√Ö´   ã3…ãjˇˇpãRËzÇ˝ˇÖ¿Öê   ã3…ãjˇˇpãRË_Ç˝ˇÖ¿uyãÀçAˇÖ¡tj ˆ√[jXEÿãD$ãã ã Ö“tVã3ˆVVË@˝ˇã–Ö“tE∑˚j5XÉˇtPâT$ZBFjXãŒ”‡;¯uÛâT$ãT$ãD$ãL$jàË¢¯ˇˇãT$ãL$PË°  _^[ãÂ]¬ UãÏÉ‰¯ÉÏLã¬âL$Sk]0VãâL$WXã	j âD$(ãâL$<ã	h†  âL$â\$\âD$DËô}˙ˇã¯â|$4â{ÖˇÑò  fÉK
çwhÄ  j VˇbãD$,ÉƒãT$<ãœâ3¿àG	j+âGâG«G   âwË=  ãL$(ã◊Ë  ãt$Ä~S Ö>  É»ˇã»âD$ã–âD$ãGÉËâL$âD$0ãGâT$âD$,à  ãÿã¡¬Ñ  ∑CâD$H©ˇ  ÖP  j W¿ãŒhò  fD$PË'}˙ˇãât$ÖˆÑ  fÉK
 W¿ÉKˇ∏   hÄ  âsÉ∆j VfD$LfâCˇbãL$ ÉƒãD$$j,ã â3¿àA	âAâA«A   âqãËV  ãt$ã÷ãL$(Ëî  ãD$$âFãD$ÄxS u]ãFã^âD$Ö¿~OãT$@ã˙ãt$Dã∂Ë·˜ˇˇÖ¿u	j@Xf9CuãL$ ãSçâË  ËÜ  ¯ÚÉ√0Él$u…â|$ã|$4ãT$Îãt$DãT$@ãL$ãD$L# ãT$ã\$,#÷ãt$HâL$âT$âD$ât$È™   ãD$Lãt$HãL$ãT$âD$ât$Èç   ∑C
®ÖÖ   ãL$ ãSÅ¡Ë  Ë˙  ãã¬∑S
ât$,âD$@ˆ¬tks0ãWãTË’  ãt$,ãD$@¬ãL$ãT$#Œ#–âL$ˆD$HâT$uW¿fD$HãD$LâD$ãD$HâD$Î!t$!D$ãt$ãD$0É√0Hâ\$,âD$0Ö¿âÍ˝ˇˇã\$Tâèò  ∏   âóú  ÉKˇ fâCthãD$$∆@	ÉuZ3€3“ÎFãOCÉd$T É¡03“â\$HËÄ˚ˇˇÖ¿t)ã\$TãT$$CãL$(PVËì˚ˇˇãOã”É¡0Ë[˚ˇˇÖ¿uﬂã\$Hã”ãOËI˚ˇˇãÖˆu¨ãD$D$Ña  É ˇ3¿!D$0πøˇ  âT$Ö¿Ö  ãwã_Î3f!N
9Vt'ãL$ ãVçâË  Ëõ  #D$#T$¬uãT$πøˇ  É∆0ÉÎy»È  ãFãVâD$TãâT$ãHâL$HÖ€à„  ã|$T3¿@É∆
âD$,Ö¿ÑÅ   9V
t
πøˇ  f!Î^9~uSÉˇ˛uãVˆjˇQãL$@ãRËç}˝ˇÖ¿u8ãNˆãIËú+˝ˇãNˆæ¿âD$TãIËä+˝ˇæ»ãD$TÖ¿t;¡uj@Xf	ãD$,Î3¿âD$,ãT$É∆0ÉÎãL$HâwˇˇˇãL$0ã|$4AâL$0É˘πøˇ  å‚˛ˇˇÖ¿Ñ)  ãw3€ã3“ÉÔât$4â|$,àß   ˆF
@txããPÖ“tãL$j j Ë»:˝ˇã–Î3“ãD$ ãÖ€uã	ËÿB˝ˇãÿÎBãçx9{â|$Tã|$,}ã	Rã”Ë C˝ˇÎﬁãL$TæÏÇk¿âjYçx˚Û•ãt$4ã|$,âTããPOÉ∆0â|$,ât$4ÖˇânˇˇˇÖ“tãt$ãŒj j Ë?:˝ˇÎãt$3¿ãL$8j Pj1ZË”4˝ˇÖ¿tAãT$<jãJÉ·	HãJ$ã–âXã\$(âH$ãÀË∆ÚˇˇãL$(ãVã”Ë≈  ˇuã÷ãÀË¥¯ˇˇÎÖ€t	ã”ãŒË†D˝ˇ_^[ãÂ]¬ SVWã˘ãÚãˆ@LÄÖÑ   ä<5t<-uzˆFutãNË’)˝ˇãNäÿËÀ)˝ˇ:ÿt	Ä˚C|Y<C|Uã÷ãœËÈ,˝ˇÖ¿tCÅxê©t:ãVãœã^Ë«*˝ˇãÖˆuããpã”ãœË≥*˝ˇÖ¿uãã@ããËï†˙ˇ˜ÿ¿@Î3¿@Î3¿_^[√UãÏÉÏSVW¿ã⁄fEã¡ãuÙWã}â]ÏâE¸Ö€Ñ∑   ãK ãSâMÙã»ËÚ  ãM¸ÚãS(¯Ë„  ãM¸ÚãS0¯Ë‘  ãM¸ÚãS$¯Ëü  ãM¸ÚãS,¯Ëê  ¯ÚãEÙÖ¿tRÉe¯ É8 ~IçX8ãS‰ãM¸ËiˇˇˇãM¸Úã¯Ë`  ¯ÚˆC¯tãSãM¸Ëq  ¯ÚãE¯É√HãMÙ@âE¯;|Ωã]Ïã[4ãE¸â]ÏÈAˇˇˇã«ã÷_^[…√UãÏQQãESVãuW3ˇâU¯Ö¿t¨∆G—ËÖ¿wırÉ˛wÓk«HãT4ãDâU¸ãpÖˆtKj˛YÉ~( t;3¿3ˇf;F2s13€ãFf9xuãMRãV(ãTË≥|˝ˇÖ¿t"ãU¸j˛Y∑F2GÉ√;¯|—ãvÖˆu∏3¿_^[…¬ ãE¯ãM¸â«@˛ˇˇˇ3¿@ÎÂUãÏQQSVãuã⁄âM¸ä<∞uÉ}6|#É}9ãFãpä<¶uãFâøF âC3¿@Î1ãUã¬Et%ãEã É¡ˇÉ–ˇ# #E»uãM¸VˇuRã”ËÔ˛ˇˇÎ3¿^[…¬ UãÏÉ‰¯ÉÏtã¬âL$S3€âD$VãW¿WfD$8â\$4ã
âL$â\$Pâ\$\ã	âL$$à\$8YSÖÎ
  kM0ãpçÇË  âD$,ÒâL$ ã»ât$ã>â|$xãWËé  âD$läàD$∂¿âT$pâD$HÉ¯1u2ãL$ã◊ËS˝ˇÖ¿Öì
  ãW∏   ãL$,ÖGtËF˝ˇˇÎ+Ëj  Î$É¯2uW¿fD$`ãT$dãD$`ÎãWãL$,Ë  ãŒj ^Vâ1ãt$0XâTã◊ãŒâË  9ãt$âD$LâT$0t	∏   f	F
ˆGt_ãW$ãL$,Ë¢  	T$0ã»ãD$L¡âL$8ÉD$8ˇâD$LâD$`ãD$0âT$DÉT$Dˇ¨D$`—Ë;¬r-w9L$`r%hú$	ˇt$ Ë¿õ˙ˇYYÈµ	  ãD$<âD$DãD$8âD$8ãD$LÉNˇÉNˇãL$HâF(ãD$0âF,3¿fâFËVÔˇˇÖ¿Ñd  ãOËç&˝ˇãOâD$4ËÅ&˝ˇãT$lãŒj âD$dX#ãL#L$p—u
«D$Pˇ  Î	∏   âD$PãFÖ¿~k»ãD$4ã@ãDÙâD$4ÎãD$4ˇt$HãL$,çT$|Pˇt$xˇt$xËT˝ˇˇãT$HÖ¿tãD$xã âFãD$|âFË,Ôˇˇf#D$PfâFÄ|$-u	∏   f	F
ãD$`Ö¿ÑR  RPj Yã∆çî$Ä   ˇtˇ4ãL$8ËÙ¸ˇˇÖ¿Ñ,  ãD$`ˆ@Ö  â\$H9^å°   ãt$$ã◊SSãŒËc4˝ˇâD$`8^StÖ¿ÑY  ã–ãŒË 3˝ˇÈK  ãt$ã–jãŒË¸Ïˇˇã–Ö“Ñ2  ˇuk¬0ãŒFâD$`ËÊÚˇˇÄ|$-uãD$\π   f	H
ãvt$ ãT$`ãL$jXf	F
ât$Ë˙ˇˇÖ¿t∏   f	FâD$HÎâ|$`ât$\ãt$`ã÷ãL$Ë∑ÌˇˇãT$\ãL$pL$Df	B
ãD$xâBãD$|âBãD$lD$8âB ãD$LâB(ãD$0âJ$âB,∂ËÃÌˇˇfD$Hf#D$PfâBãT$Èi  Ä|$2Ö\  ãGâD$x®ÖM  ãL$4ËËA˝ˇã÷Ö¿Ö<  ãD$x    ∆©âG3¿«GÿÁâ^(â^,fâFÈ  äÄ˘0ÖŸ   ãD$Äx,ÖÚ   ãGãt$É¿â\$pâD$`ãÖ“tãL$$SSË—2˝ˇâD$lÎâ\$lãWÖ“tãL$$SSËµ2˝ˇÎã√ˇt$lãL$ PãD$x∂êHìËC-˝ˇÖ¿tãOÉ·	HãO$âH$jã–ãŒËAÎˇˇãT$ããL$(VË>˚ˇˇãL$ã÷ˇuãÒãAD$$âD$ËÒˇˇãL$pãD$`AÉ¿âL$pâD$`É˘åPˇˇˇãT$È5  Ä˘+uˇuãt$ã÷ãL$,ËNÚˇˇãVT$ È  ãD$Ä˘3ÖÃ   ãGâD$xÄ8¶ÖÔ  f9X åÂ  ˆGÖ€  Ö¿tãL$$ã–SSËƒ1˝ˇãÎãÛãL$$SSjxZË¡*˝ˇãL$PVj6ZËM,˝ˇãt$ã–hÉ   ãŒËWÍˇˇâD$pÖ¿ÑRˇˇˇãT$xk0ãD$jpâ^ â^$ãJâNøB ãT$tãL$âFXˇufâFËˇˇãQT$ jXf	B
ãB(ãJ,âF(âN,È5  Ä˘´Ö*  Äx,Ö   ãL$çD$\PçD$Tã◊PçD$<PË~ÎˇˇÖ¿Ñ˛  ãGãL$4ã@âD$lÖ…tSã—ãL$(SËŸ0˝ˇãL$4âD$LÎâ\$L9\$\t\ãD$ã 8XSuQ∏   f	F
ãÛãAâD$päÑ…t9ã\$4ã¯∂—äÇêà$ ˆ–"¡à7ãD$LãHäÇêìàFã{ä7Ñ…u”ã|$x3€ãL$$ÄyS u>ãt$LãNË-ï˙ˇãVãL$P–É|$\ äBˇt3ˆ<@∂¿DŒäÄêì˛¿âL$pãL$$àBˇÎãD$PâD$pÉ|$\ ∏§çæ»$	DãD$lât$xÖ¿tSSã–ËÚ/˝ˇÎã√ˇt$4ã–QãL$$VË“ ˝ˇYãL$ Pj9ZËz*˝ˇÖ¿tãOÉ·	HãO$âH$ãt$ã–h  ãŒËqËˇˇãL$(ã÷PâD$dËn¯ˇˇãD$lÖ¿tãL$$ã–SSËÖ/˝ˇÎã√ˇt$Lã–Qˇ¥$Ä   ãL$(Ë_ ˝ˇYãL$ Pj8ZË*˝ˇÖ¿tãOÉ·	HãO$âH$h  ã–ãŒËËˇˇãL$(ã÷PâD$|Ëˇ˜ˇˇãVT$ É|$p âT$t%ˇuãT$dãŒË⁄ÌˇˇˇuãT$|ËŒÌˇˇÈ»¸ˇˇã÷ãt$ä<5t<-Ö”   ãOË‘"˝ˇâD$pÉ¯éº   ãOËø"˝ˇãL$p;¡Ö®   ãG˜@   tãG˜@   Öå   Ä~,ÖÇ   ÆËãWQãL$ SËÿ"˝ˇˇt$pãWããL$ SË≈"˝ˇ∂ãL$PVË)˝ˇÖ¿tãOÉ·	HãO$âH$ãt$ã–jãŒË
ÁˇˇãL$(ã÷PË˜ˇˇãL$pC;Ÿ|öãFãL$ fÉL
3“fâTÈ	  ä<1ÖÑ   9ZuãOÄ9∞uw∏   ÖGtmãG9X4ue9XDu`Ä~,ÖÕ  ËŒ!˝ˇÖ¿é¿  jã◊ãŒËåÊˇˇãCãD$k÷0VãHâ\
ã–ãL$,Ë|ˆˇˇˇuã÷ãt$ãŒËgÏˇˇãOËÜ!˝ˇ;ÿ|ºÈw  Ä~,Öm  ãL$$çD$xPçD$tâ\$|PçD$â\$xPã◊Ë®Íˇˇã–Ö“éA  ÆËãD$xãL$pâD$`âL$\JâT$xÖ¿tãL$,ã–Ë  ãL$\âT$lÎW¿fD$pãD$tâD$lãD$pâD$pÖ…tã—ãL$,Ë“  ÎW¿fD$PãT$TãD$P#D$p#T$l¬Ö©   ãD$`Ö¿tãL$$ã–SSË¿,˝ˇÎã√ãL$PSj.ZËY'˝ˇˆGtÖ¿t
ÉHãO$âH$jã–ãŒËVÂˇˇã–ãD$kÚ0j@pãD$tâF ãD$pâF$ãD$`ãHâNø@ ãL$âFXˇufâFäD$àFËÎˇˇãIL$ jXf	A
ãA(ãI,âF(âN,ãt$ãD$\ãL$`ãT$xâL$\âD$`Ö“è“˛ˇˇãL$ ãF¡ãL$8	H ãL$D	H$_^[ãÂ]¬ UãÏSVWã˘ã Ë˝ˇã]Îãœ8uãVSË›ˇˇˇãVã Ë¸˝ˇãà_ÖˆuﬁÎj Ëx‰ˇˇ_^[]¬ UãÏQQãSVãqã WãyÉÔâM¯ãâ]¸xKˆF
tãÖ“tãÀË/*˝ˇ∑F
®tã^ãÀËºˇˇˇÖ€tã”ã]¸ãÀË'g˙ˇÎ	® tÎﬁã]¸É∆0ÉÔy∏ãM¯ãQçA;–tÖ“tãÀË¸f˙ˇ_^[…√UãÏÉÏSVãÚâM¸Wä<¶uˆFuãVË•  Èœ   ˜F @Ä t	3¿3“ÈΩ   <≤uãVËÇ  ã¯ã⁄ÎW¿fEã]Ùã}ãVÖ“tËõˇˇˇãM¸¯⁄ãVÖ“tËàˇˇˇÎ+˜F   tˆF t«   ãVË_ÒˇˇÎãVÖ“t	Ë|   ¯⁄ä<´t<ßu?˜F   t6ãV,ãM¸ãRËW   ãM¸⁄ãV,¯ãRËE   ãM¸⁄ãV,¯ãR(Ë   ¯⁄ã«ã”_^[…√UãÏÉ‰¯QQÖ“tËÙ˛ˇˇÎW¿f$ãT$ã$ãÂ]√UãÏÉÏSVãÚâMÙW¿fEËWÖˆt93¿âE¸9~0ã}ÏçNã]ËâM¯ããMÙË°ˇˇˇãM¯ÿãE¸˙@É¡âE¸âM¯;|ﬁÎã}Ïã]Ëã◊ã√_^[…√UãÏÉ‰¯QSVWã˙ãŸãwÎ
Vã◊ãÀËZÚˇˇÉÓyÒ_^[ãÂ]√UãÏÉ‰¯ÉÏSVãÚâL$WˆF(t_ã^@ãVâT$Ö€tQ3¿3ˇâD$9~EçKâL$øJ";˘}"ãBãœ¡·É¡¡øJ"ˆ u)GÉ¿;˘|ÛãD$Pˇ2h–$	ˇt$Ëè˙ˇÉƒ_^[ãÂ]¬ ãL$∫¶   j j ã	Ë˜!˝ˇã–âT$Ö“tŸãN,ãD$âB,ãD$fâz GâJããD$ãÖ“tj j Ë±(˝ˇã»ãD$Î3…j Q∫≠   ã»ËC#˝ˇãL$Pˇt$ j5ZË2#˝ˇˆF$âD$tãV,ã»ËÏ˛ˇãD$ãMã–jË*·ˇˇãD$ÉD$@âD$;çJˇˇˇãT$ÈˇˇˇUãÏQSVW∑9çAfã⁄ãã◊fÖ“t^∑Ff;√|'ãEã~#}#â}¸∑9;EuãE¸;EtV∑Ff;√ã~ã#}#Eâ}¸∑9;uãF9E¸t{Å¬ˇˇ  É∆fÖ“u•çAfÉˇs@∑˜çG¡ÊÉ∆fâfãEÒfâF
ãEãMfâ^fã]ââNf9^
~fâ^
3¿@_^[…¬ ãÉ¡çGˇ∑–fãFf;AOÒÉ¡ÉÍuÌf9^µ3¿Î—VWãy3ˆÖˇ~çA9tFÉ¿;˜|Ù3¿3“_^√3¿3“´É˛ C–3¬É˛@C–ÎÊUãÏÉÏ4SVãÒWâu‘ãNã^∂Fâ]âM¯∑TFFãDÜâU–âEÙk˘0{Èy  9GÖf  ø¬9GÖW  fÉ˙˛uãˇuÙãVãIËúk˝ˇãM¯Ö¿Ö6  Ä~vãˆ@Ö$  ∑W˜¬   Ññ   äFàEˇ<Éà   ããIË∏˝ˇã»Ö…txÄ9¶usˆAum∂Eˇ3“âEËÖ¿tEãYçA âEÿçFHã}ÿâE‡çFãu‡âEÏ9ufãf;tãEÏBÉ¿É∆âEÏ;UË|‚ãu‘ã}‰ã]ãEË;–uãAâDñfãA fâDVH˛F∑W∑¬ÖFtsÉ~ tG˜¬   u?ãäVã âEËãã»âEÿË¨˝ˇÖ¿tKãUÿãMËË-˝ˇÖ¿uãEËã ã@ãVãËç˙ˇÖ¿u&ˆGÇtcããHÖ…tZÄ9¶uUãA;FuMfãA f;FHuCãM¯ãEÙãU–AâM¯É«0â}‰;Kå{˛ˇˇã[3…â]âM¯Ö€Ö]˛ˇˇäF:Fsã˛¿àFÈ0˛ˇˇãM¯ã«Aâ^âNÎ3¿_^[…√VãÒãNËV˝ˇàFãŒ^ÈÒ˝ˇˇUãÏQãESVãÒ3…Wã}âFãEâNf«F âNââVâNâF∆FÖˇtxãGã]j˛øXX;–u&ãG(kÀj˛ãDãŒâFãG ãòâFXfâFHËˇˇˇÎãGø@ ;–uÉ ˇãŒfâVHËk˝ˇˇ_^[Y]¬ Ö“xÈãGã …ã@äD»àFãG ãòâFÎÕãUÉ˙˛u≈3¿ÎÃUãÏÉÏl°∞	3≈âE¯ãEVWPˇu3ˆˇuRã—çMîËˇˇˇÎ/ãz ãœãB$#M#E»uz$u∑B#E®Çu%ÖˆDÚçMîË›¸ˇˇã–Ö“uÀã∆ãM¯_3Õ^ËÎ …¬ ã¬ÎÏUãÏÉÏãESâM¯ãMã@ V3ˆâU¸WãàâEÙ92~fçZãËÛ˝ˇã¯ÖˇtNä<¶t<®uDãEãUãHfãG f;QãU¸u.ãE9Gu&ã}¯ãœãËﬂ˝ˇÖ¿uãã@ãUÙãË¿ä˙ˇÖ¿tãU¸FÉ√;2|ùÉ»ˇ_^[…¬ ã∆ÎıãAøPÖ“xÆËãA“ã@ãD–É‡√3¿É˙ˇî¿√UãÏÉÏÉ:SVWâM¯Ö«   ã]3…ãB4ãzã—âE¸9~?çsãË/˝ˇÖ¿t$äÄ˘¶tÄ˘®uãM¸9Hu3…f9H }
3¿@ÈÉ   3…BÉ∆;|«ãE¸ãwÖˆtmÄ~6 tY9N$uTã˘3…f;N2sBãMã–VjjˇjˇWË5˛ˇˇÖ¿u ãM¯ã”WVˇu¸Ëò˛ˇˇÖ¿xã◊ãŒË#ˇˇˇÖ¿t∑F2G;¯ãE¸|æ∑F2;¯tÖãvÖˆtãE¸3…Îì3¿_^[…¬ ∑¡fÉ˘
3¿√òôRPË¬õ˙ˇfÉË!∑¿√UãÏSVãÒWã˙ã^ãÀËù¸ˇãÄyS uHãSt;˙}AãuçH+◊ã}9y¯u)äAÙ<\uãA¸EâA¯ãÉ! ∆AÙNâA¸Î<Öu∆AÙ|âq¯É¡ÉÍu _^[]¬ UãÏVãÒãF;B,uM∑Nˆ¡ÇtDˆB$tãˆ@uÑ…x2ãMãF$#N #E»u"ãNÖ…xãB…ã@äT»ãË@˝ˇ˜ÿ¿˜ÿÎ3¿^]¬ UãÏÉ‰¯ÉÏ\SVWã˘ãÚ3…ât$HQQã_QjàL$#âL$8âL$lâL$pãÀZâ|$dâ\$ Ëî¸ˇãMW¿ãvÉd$ âD$dãAâD$0ãD$Hât$$fD$Pk@0∆âD$8ãEãPHâT$,;t$8É„  ãD$TâD$ãD$PâD$ ÎãMãT$,ãBÖ∆   ˆF
Öº   ãâD$Pˆ@Ö¨   ˇq,ã»jZËÉ-˝ˇÖ¿Ñó   ãT$Pãj j Ëu ˝ˇãT$(ã»ãâL$PâD$LÖ“uâL$(ÎnÖ…tjãB%   =    tãA%   =    u<ÄøÃ   s3RãWDãœËˇ(˝ˇˇt$Pã–âGDãœËÔ(˝ˇãL$L∫ö   hÎâGDË ˝ˇÎQRj,ZãœËú˝ˇâD$(ˇuãUãŒˇuË!˛ˇˇÖ¿Ñ∆   ãV3ˆÉ˙@|
«D$<   ÄÎã¬3…´∆É¯ CŒ3ÒÉ¯@CŒâL$<Ä|$ u%ãL$0“ãAˇ4–ˇ1hÙ$	h  Ë/{˙ˇÉƒ∆D$ãD$<ãŒãT$ # #D$»uSãD$ãT$,@ãPâD$TË  Ö¿Ö¬  ãD$,ãT$ãL$$ã@0âêãT$ ãL$÷L$<ãD$Pãt$$âD$âT$ âL$Îãt$$ÎãT$ ãL$É∆0ât$$;t$8Ç1˛ˇˇÎãL$TãT$Pãt$,˜—ãD$Å…   Ä∑¿˜“j?fâF(fâFãE«F$AB  3ˆ#P8#H<ãD$4âT$$âL$ Y∑P"âT$P∑¬f; }âL$<Îø âL$<3…f;»}>ã\$<ã|$3“3…ã∆´¬É¯ C 3—É¯@C #T$ #œ—tˇD$F;Û|÷ã|$Xã\$ãT$PãE3ˆ9p<|9p8sãL$ø¬É¡¡»âL$ãT$çD$PãPVçRË¿Ò˝ˇâD$$Ö¿ÑÇ  ãL$,W¿fD$PâA ãL$0« %	âHãD$Hã@âD$4;D$8É«   ãL$Tã\$$âL$DãL$PâL$@ˇuãUã»ˇuË˘˚ˇˇÖ¿ÑÇ   ãD$4ãH3¿É˘@|∫   ÄÎ3“´»É˘ C–3¬É˘@C–ã»âT$P#L$@#T$D âD$LuDãL$@L$LãD$4âL$@ãL$DL$Pãfã@âL$DãKfâqãœË¶˝ˇÖ¿tãÎπ§çãC â∞FãD$4É¿0âD$4;D$8ÇQˇˇˇã\$Éd$P É|$< ~Lã\$$ã|$P3“3…ã«´¬É¯ C 3—É¯@C #T$ #L$—tãCfâ<pãC «∞§çFG;|$<|ƒã|$Xã\$ãEÉx< :|Éx8 s2ãD$0j?Zf;P"}%ãL$$ãÿãAfâpãA «∞§çFøC"B;–|Âã\$ãD$$É…ˇj ã@fâpãD$(ãMã@ «∞§çãG(âAˇG(ãD$@PˇqãÀjrZË≤¸ˇãT$$ãœËü	¸ˇãM∂A4kÿHãD$Hã ã@âD$HˆD0t?ãD$ãL$âD$X3¿PPPjFZËp¸ˇãL$HâD$`ˇt ãL$j ˇt$`jZËR¸ˇãD$XjÎãAj&ãL$Zj j PË6¸ˇâD$<ãD$(Ö¿tˇO8ãO8jQPWâL$lË©Y˝ˇãD$,ÅH$   ãœËèj˝ˇãT$$3…QQQQPâD$lãœãEˇpËf!˛ˇãL$∫à   âD$PãEj ˇt$\ˇpË  ¸ˇãL$jZË¸ˇÉ|$( tãT$\Ë8¸ˇãL$ãD$HˆD0tKãT$`t$PË§¸ˇãT$<ãœâpãEãt$Hˇpˇt3(ˇpË‘¯ˇˇãL$j ˇt$@j jZË_ ¸ˇÉd30Ôã\$Î&ãD$<ã\$@j PãEãÀˇpjZË8 ¸ˇjZãÀËÜ¸ˇãT$<ãÀË5¸ˇãKtãT$XâHãœËºi˝ˇãT$dãÀË¸ˇãKtâHãD$(Ö¿t	ãã–Ë/˝ˇ_^[ãÂ]¬ UãÏÉÏ ã¬âMÏSVWãx3ˆãPâEÙãEÉ¿,âuËâu¯âE¸Öˇ~;ãÉ¬ ãu9ZÙu"ãBãŒ#
#E»u∑BÏ©ˇ˜ˇˇt	ˆBÍÄuˇE¯É¬0ÉÔu—3ˆÎâE¸ã}ãﬁâ]Öˇt4É? ã÷~%ã]¸çOãA¯Ä8¶uã@;uˆuBÉ¡;|‰ã];Dâ]ãE¯ãÀÉ¿¡·k¿V¡ãMÏPã	Ë√W˙ˇã¯â}‰ÖˇuhtÂˇuÏËû˙ˇYY3¿Èå  kE¯çOPãUÙâ_âOâWH¡âGâE‡çÿã]ÙâGãEÏâGLã∆9sãRã]âE¯âuÏé  ã]ÙçyãM¸ãB;Ö‚   ãMãB$#J #E»ÖÀ   ∑B©ˇ˜ˇˇÑº   ˆB
ÄÖ≤   ãEˆ@$tãˆ@Ñù   ãBπˇ  âG¸3€ãEÏCâGfãBf#¡∑¿ã»f;√u>j[àˆ√<tgã
ãIË∞˝ˇ3…A;¡~VjX;}ãMË∑¡´∑¿jâEËXf;ÿu)∆Î3ã¡É˘@uäBÎ%ãÿ©Ä  t∞π   f;¡ï¿GÎ∂fÉ˚j YD¡àã]ÙFÉ«ãM¸ãEÏÉ¬0@âEÏ;Cå ˇˇˇã]ã}‰âu¯3ˆãE¯âÖ€~#ãMãU‡É¡ãA¯ø@ âÚäçI$àDÚF;Û|ÊãEãMËfâã«_^[…¬ ∑¬Ö…tV∑qfÖˆçÎ	ˆA
ÄuçBÏ∑¿^√VãÚWã˘˜F$ D  tG˜F$   tÄ~ tˇv ËS˙ˇ∆F Î&˜F$ @  t!ãV Ö“tãRÖ“tË\S˙ˇãV ãœËRS˙ˇÉf  _^√SVãÚWã˘ãV0ç^8;”tË5S˙ˇã÷ãœËàˇˇˇÉf$ 3¿jfâF(X_â^0fâF,^[√UãÏQQSVãÚâM¸Wã}∑F,;«}LÉ«ÉÁ¯ã«¡‡j PËèU˙ˇãÿÖ€ujXÎ0∑F,¡‡Pˇv0Sˇ bãV0çF8Éƒ;–tãM¸Ë∑R˙ˇâ^0fâ~,3¿_^[…¬ UãÏSVWã⁄ãÒËÙ˛ˇˇã}ã”ãŒ∑G(PËsˇˇˇj,Ö¿tj SˇbÉƒjXÎ@WSˇ b∑C(Éƒ¡‡Pˇw0ˇs0ˇ bÉƒ˜G$   t∆G Î˜G$ @  tÉg  3¿_^[]¬ UãÏQSVãÚ3€ã¡WâE¸8^,v2çæ4  ãOÖ…t˜A$   tãÖ“tã»ËÒQ˙ˇ∂F,CÉ«X;ÿãE¸|‘çNPË_Íˇˇã]¸ã~@ãÀÖˇtãG4ã◊âF@Ëv˛ˇˇã◊ãÀË∏Q˙ˇÎﬂã÷ËØQ˙ˇ_^[…√VWã˘Î"ãâGDçFj4Pˇvˇ bãÉƒã÷ã	ËÇQ˙ˇãwDÖˆu◊_^√UãÏQSVã⁄Wã˘â}¸∑C*∑s(∑W*+∑O(+ ;Œ}sfãGf;C~
fãGf;C_∑C*f;¬wV∑O(ÉÈx7ãG0ç4àÉ> t$∑S(ÉÍx9ãC0ã>çê98tÉËÉÍyÙã}¸Ö“xÉÓÉÈyœˆG$@tãC$¡ËÉ‡Î3¿@Î3¿_^[…√UãÏQSã⁄Wã˘˜C$   Ñ°   ÖˇÑô   äCV8GÖÄ   ˜G$   twã”ãœË"ˇˇˇÖ¿t,∑W∑KãÚf;—ã¡øKM∑¡fâsøwN;Ò∑÷M–Î7ã◊ãÀËÈ˛ˇˇÖ¿t.∑W∑KãÚf;—ã¡øKN∑¡fâsøwF;Ò∑÷N–fâSäCã4ÖˇÖlˇˇˇ^_[…√UãÏQSVã1WÖˆÑ®   äB8FÖè   äF:BÖÄ   ˜F$ @  t)fÉz* u"ãB$%  =  uãã~##z;u;zt^ããz##~;u#;~ufãFf;BfãFf;B
fãFf;B~4;u;zufãFf;B|
fãFf;B}äBçN4ã1ÖˆÖ[ˇˇˇã¡_^[…√3¿Î˜UãÏÉÏSVãÒWã˙ããã âE¸ãFÖ¿uãFÖ¿t3…fâjeXÈı   HâFãK@ËC˛ˇˇãNÖ…tfÉ( t&∑GfãWPˇwˇ7ËÂÍˇˇÎã◊çK@Ë“˛ˇˇâE¯Ö¿u3¿ÈÆ   ã03€âuÙÖˆu5ãM¸SjHËpQ˙ˇããE¯â0ÖˆujÎéçF8â^$âF03¿jfâF(XfâF,â^4ÎBçF49t;ãã◊ãŒËr˛ˇˇãÖˆt'ãâM¯Ö…tãA4ã—ãM¸âË%˚ˇˇãU¯ãM¸ËeN˙ˇ9u ãuÙãM¸ã÷WË¨˚ˇˇ˜F$   ã»uãF Ö¿tã@8É‡<uâ^ ã¡_^[…√UãÏÉÏ$°∞	3≈âE¸SVWã˙ã—â}‹âU‡ãGãO˜–O3€ãr˜—âEÏãBâM‰â]ÙÈ’   ˆF
Ö÷   ãV(ã ãF,#O#G»ÑÆ   ãF,#UÏ#E‰–Öù   ∑O(ÉÈx6ãG0ã]‡çàãÖ¿t;∆tã@Ö¿x
k¿0C;∆tÉÍÉÈy›ã}‹ã]ÙÖ…y^∑N∑GfÖ…¡fâGÎIHfâGˆFÇt>ãçU¯ãHÉe¯ Ë¨˝ˇÖ¿tãE¯@É¯wj
ÎjYø√âM¯;¡}∏    ∑Ÿf	F
â]ÙãEHÉ∆0âEÖ¿è ˇˇˇãUø√ø +»øG;¡~+”fâWãM¸_^3Õ[Ëˇ  …¬ UãÏÉÏ âUÏãUSâMËVã
WãIËÍ˝ˇãMã]∑I4+À;¡L»3ˆFâM‰;ŒéÚ   çù   âEç]   jÆË_âE¯ã
ãAã@ãT8ãAâUÙ˜@   ãHt	ãAãD8ÎãDÄ:¶âE¸Ö°   ãEÏ9BÖï   ãMã]¯fãB ãIf;ã]uãEãHç1ä:unã Ë} ˝ˇãM¸ä–Ë€˝ˇäÿãEÙøP ãEãHËC ˝ˇ:ÿuEˇu¸ãUÙãMËËJ˝ˇã»Ö…t1ãEã]ã	ãP ãËTw˙ˇÖ¿uÉE¯FãUÉ√É«â];u‰å(ˇˇˇ_ã∆^[…¬ UãÏÅÏ‹   °∞	3≈âE¸ãSã]Vã âÖLˇˇˇâUÄ3“Wã ãyâç|ˇˇˇâùHˇˇˇâÖtˇˇˇâïlˇˇˇâUÑâUàâΩDˇˇˇ8PStjXÈ√  ãG$® ∑OâÖTˇˇˇ∏ø  jZD–âçXˇˇˇ∑GâÖ8ˇˇˇ∑GâÖ4ˇˇˇ∑G*âÖ0ˇˇˇ∑G(âÖpˇˇˇãâÖ@ˇˇˇãGâÖ<ˇˇˇ∑GãâÖ\ˇˇˇãC8âµ(ˇˇˇ∑Òã É·√âuå®ãEÄSD Qãç|ˇˇˇVˇp,ãQçMòËÃÈˇˇã3¿fâGãCâuî∑ ã»âÖ,ˇˇˇËÇÏˇˇ∑¿âÖ`ˇˇˇãEâÖxˇˇˇÖˆÑ£  ∑FçV
3…âÖdˇˇˇâMêπ   âïhˇˇˇf;¡tˆÄtâïhˇˇˇãÀãUåË%ÎˇˇÖ¿ÖJ  ãïhˇˇˇãOãG#N #F$»Ö0  ∏   fÖtjXf9FÑ  ãEÄˆ@$tãˆ@Ñ  Ä{6 t∑C2H9EåuãÖ|ˇˇˇÄHÎ
ãÖ|ˇˇˇÄHãÖTˇˇˇã◊ãçtˇˇˇâG$ãÖXˇˇˇfâGãÖ8ˇˇˇfâGãÖ4ˇˇˇfâGãÖpˇˇˇfâG(∑¿@PË{ˆˇˇÖ¿Ö≠  ∑O(ãG0ãï<ˇˇˇâ4àfãG(ãµ@ˇˇˇf@∑»fâG(ãEîâçPˇˇˇãO˜—p P$#ÒãGãçdˇˇˇ˜–#–â7âWˆ¡ÑÉ  ãEîã˜B   ÑC  3¿«Eê.   ã»ãÖPˇˇˇ∑NÖˆéL  ã_0ã}êããÖ¿tÉ•Pˇˇˇ 9DΩPˇˇˇA;Œ|‰ãùHˇˇˇâ}êãΩDˇˇˇãEêˆC8Ätbj
Yf9ç`ˇˇˇ|V∑ãŒËüÍˇˇãUåfã»ãCj
fãPf+∆f+Ö`ˇˇˇf»Xf»y*jXf9Öxˇˇˇçé  ãÖtˇˇˇ˜@L   Ö{  ÅO$   ÉO$ãuîãMàˆG$Ñ  ∑WøÚËÄÙˇˇãMÑ∑–ËuÙˇˇãUà∑»Ö“t 3¿f9B~ãEÑÖ¿t3€f9XãùHˇˇˇ~ÉÈ3¿Ö“j
ï¿+3¿9EÑï¿+Xf;»L»∑¡;∆ã–∑∆M–∑¬fâGÈ˜  ãBÖ¿Ñ ˇˇˇã Ö¿Ñˆ˛ˇˇôRPËÉÖ˙ˇòâEêÈË˛ˇˇj.XÈ‡˛ˇˇˆ¡ÇÑÉ   ãCãMåãW$øH3…A—âW$É¯ˇtFã Ö¿xKfÉΩxˇˇˇ uA∑C2ãH9Eåu5ˆC8u$3¿@f;uÄ{6 tjXf9Ödˇˇˇt
ã Å…   Îã Å…   âO$Ä}™ÜŒ˛ˇˇÅ…    âO$È¿˛ˇˇãG$˜¡   tÉ»âG$È™˛ˇˇãuîˆ¡$ãçLˇˇˇVˇuåStwÉ»"âG$ãEÄãP,Ë	˙ˇˇfâG∫   3¿ãŒâEÑãÖhˇˇˇâMàfÖÑj˛ˇˇãçtˇˇˇçF0âEÑã◊∑G(@PËõÛˇˇÖ¿ÖÕ  ∑O(ãG0ãUÑjâàfˇG(X	G$3¿@fâGÈ#˛ˇˇÉ»âG$ãEÄãP,Ëí˘ˇˇˆG$ fâGâuÑt∑O(ãG0ãLà¯âMàÈı˝ˇˇ3¿ã»ÎÚfˇG∑N∑WfÖ…!ãC3ˇãuåf9<pãΩDˇˇˇ|+MêfO∑GÎ4ãCfãPf+LP˛fO∑¡âEî∏   ∑—fâOÖÖdˇˇˇtçB
fâG∑¿âEîøC0k»ãEÄã@øp(ã¡ô˜˛ãMîA¡ãç`ˇˇˇ∑–ËÉ˙ˇ˜G$@  fã»fâOu∑WjXf–Ë¸Ç˙ˇfâGãEêãïxˇˇˇ∑wˇµ,ˇˇˇ∑»çfGçãç|ˇˇˇ¬fâGã◊ãIË4˜ˇˇãç|ˇˇˇã◊Ë¸ıˇˇãç(ˇˇˇâÖlˇˇˇãG$®∑—ãŒD—fâW®u5∑Gf;C4s+f;C2r	ãC8$<tãUêãç|ˇˇˇ∑¬ÖxˇˇˇãUÄPSËS˘ˇˇãÖ\ˇˇˇfâGçMòËÙ·ˇˇÉΩlˇˇˇ ãâuîÑU˙ˇˇãÖ@ˇˇˇãµXˇˇˇãç0ˇˇˇâãÖ<ˇˇˇâGãÖ8ˇˇˇfâGãÖ4ˇˇˇfâGãÖTˇˇˇâG$ãÖ\ˇˇˇfâGãÖpˇˇˇfâwfâO*fâG(f;ÒÖÎ   ãUå∑K2çB;¡ÉŸ   f;µpˇˇˇÖÃ   ˆC8@Ö¬   ˆC8ÄÑ∏   ãçtˇˇˇ˜AL @  Ö•   ãCfÉ|P*åñ   ãÖpˇˇˇã◊∑¿@PË ÒˇˇâÖlˇˇˇÖ¿uzÆËfˇG3“∑O(ãG0fˇG*âàfˇG(ÅO$ Ä  ãsãMåãUÄfãNf+DNãçxˇˇˇ∑¿É¡f)G¡ãç|ˇˇˇPSË¯ˇˇãÖ\ˇˇˇfâGãÖXˇˇˇfâGãÖ0ˇˇˇfâG*ãÖTˇˇˇâG$ãÖlˇˇˇãM¸_^3Õ[Ëßı  …¬ UãÏÉÏSVãÚWˆF8Ö“   ããxÖˇÑ≈   3“âU¸9é∏   çGâEãË•¯¸ˇãÿÖ€Ñå   Ä;¶u5ãE9Cu-∑[ fÖ€àê   ∑F23…âEÙÖ¿teãFf;t{AÉ¿;MÙ|ÚÎRãF(Ö¿tK3“3…f;V2ãU¸âM¯s;çPâUÙãFfÉ<H˛uˇuããÀËÕK˝ˇÖ¿t9ãM¯ãUÙ∑F2AÉ¬âM¯âUÙ;»|ŒãU¸ãEBÉ¿âU¸âE;åNˇˇˇ3¿_^[…¬ 3¿@ÎÙUãÏÉÏSã]VãuWãã˘âUÙÄ>,â}ãâM¸uˇvãœSË“ˇˇˇÖ¿tpãvãUÙÄ>,tÊãM¸ã3ˇã@ %  Ä «tâ}¸ãCâE¯9{~DããJÉ·tã]9Z$ã]u#É}Ù tÖ…tˇuãM¸VËãL˝ˇÖ¿ãE¯tˆ@
ÄtGÉ¿0âE¯;{|º3¿_^[…¬ 3¿@ÎÙUãÏÅÏî   °∞	3≈âE¸É»ˇSãŸfâE¯3¿â]ò@VãsãâÖ|ˇˇˇW∂F3ˇk»HãBÉ¿âUÑâµxˇˇˇ»ãCâM†âEÄˆA(ãQâUàtãYDÎlˆBÄtãZÎajHçE®j PˇbãUà3¿ãM†@fâE⁄ÉƒfâE‹çE¯âE¨çEÙâE∞∆EﬁâU¥fãB(ÉM‡fâEÿfãB&fâEÙ3¿fâEˆˆA(u	ãAã@âEºç]®ãEòâUå9xÖ>  ãEÑˆ@( Ö1  ã ã ã@ % Ä  É» Ñ  ˆA(+Ö  jã¬YˆÄÖ  ãMÄãAkI0âE§»∑B&âMêã»âEîËÖ‚ˇˇ∑¿âEúãE§;EêÉ—   ãN#H ãU§ãF#B$»Ö§   ãU†QQãM§Ë◊‚ˇˇÖ¿Ñè   ã}§3¿!F 3…fâF*AãF0fâNfâN(ãMúMîâ8ãEàfâNÄx+tãEåjZ˜ @  çAtçAˆ∑¿fâFfÖ¿y3¿fâFãMúj+Xã–fâFËV}˙ˇãMã÷fâF«F$ @  O ãG$EâãMòâFËwˇˇã¯ãE§É¿0âE§ÖˇÑ+ˇˇˇÈ†  ãE†Ö€Ñï  ∂P$¡ÍÉ‚É{$ tˇs$ãH,ˇuÄË
˝ˇˇÖ¿ãE†ÑQ  ˜C8   ÖD  ãC3…ã}†ã”∑ âNfâNâN(àNfâNãMâãMâNãMòfâFâ^ ˇw,âEúËø˚ˇˇãK8É·âE§Ä˘u%ãç|ˇˇˇ3“Ö¿∂…«F$   E—ãMúàVçAÈ|  ˆC8 t$W¿∏@  fÖpˇˇˇãïtˇˇˇãçpˇˇˇâUêâMîÎ ãK@#O8ãSDã¡#W<¬âMîâUê∏@  tÉ¿¿É}§ âF$ukãEåj^ˆÄãµxˇˇˇuYÉ{$ uSˆG(uMã¡¬Ö*  ˆC8Ö   ãMàfãC0f;A(ç  ãEÑˆ@(Ö  Ä=G∞	 Ñı   ã ã ˆ@L ÖÁ   ãÖ|ˇˇˇ3…9M§∂¿E»àNøC0ãMàk¿øI(ô˜˘ãMú@¡fâFãEîEêÑá   Éeê çAãO,ã}Ñ∑–âçtˇˇˇÉ\ ~[3¿ãÚâEîãdã—¯SãË¡J˝ˇÖ¿t5∑GfÖ¿Î
NˆGÇtÉÓãMêã}ÑAãEîÉ¿0âMêâEî;O\ãçtˇˇˇ|∏âu§ãµxˇˇˇãU§fãNËÌz˙ˇãMúfâFQãMÄã÷ËMÔˇˇãMòã÷ËÓˇˇã¯ãEúfâFÖˇuLã}†ãEòã◊j Sã»∆@ Ë¢Òˇˇã¯ãEòÄxuãEåjYÅ   ãE†ˆ@(t3€Îã[ˇÖ|ˇˇˇÖˇÑc˝ˇˇãM¸ã«_^3Õ[Ë2Ô  …¬ UãÏÉÏP°∞	3≈âE¯ã¡fâUﬁãU SVãHãuãXâM¿âE¥ãNâMºãWã>âuƒãâE‘∂Ck¿HâUâ]ÿâ}ÃAÉ" ãMâE–ãEââKãNÖˇ~Ufã]ﬁÉ¡ã˜kQ0ãE¿P∆ ãz$ãB #Eâ}‡ã}!}‡;B uãB$9E‡ufÖZ∂jZD¬àÉ¡ÉÓuΩã]ÿãuƒã}Ãã«¡‡Pj ˇuºˇbãU–3¿Ú¯F	ÉƒâFâFâF ÚF(«F0   âF4âF8ãB@ãJDâNDãM‘âF@ãRã	Ë!}ˇˇVãHâM‡QããpãŒˇ0cˇ÷ãÖˆt<É˛t7É˛uãE‘ˇ0Ë[A˙ˇÎ&ãE‡Éx u
ãŒË^§  PÎˇph∏B	ˇu‘Ë÷e˙ˇÉƒãE‡ˇpË;˙ˇãE‡É` Öˆt3¿É˛Dã∆È1  ÉM‹ˇ3…Öˇ~aÉˇrPçC0ã0çWˇçñ;w;–s=ã«%  ÄyHÉ»¸@+¯É¡;œ|˘çGâMÿôã˛É‚ç3¿¡˘¡·¡ÈÛ´ãMÿã}Ã;œ}ãC0É$à A;œ|Ùã}ƒ3¿ãuÃ3“fâCâU‡ãGÖˆé   É¿âEÿãMºã—ÉÈâMËà∆   ;Œç  ãxâ}»Öˇå  ãU¿ã˜;rãU‡çÚ   ãs0É<é ãuÃÖ‚   Ä8 ÑŸ   k«0ã}¿Gã{0âE»ã@ 	ãE»ã@$	CãE»;M‹âèã¡ãMºNE‹ã}ƒâE‹Ä|— t*É˙}%ãM‡3¿çP∑E”‚Ö–ã—u∑CãMË´»fâCãE‹ãM»ˆAtãMÉg  Ég8˛âE‹«   ãEÿBÉ¿âU‡âEÿ;÷åˇˇˇãU‹3…çBfâC(Ö“xãC0É8 tIAÉ¿; ~ÛãG3…âCäGàCãGâOâC 9O t/ãGÎ,ãE–ãHˇ1h%	ˇu‘Ë·c˙ˇ3¿Éƒ@ÈY  ãE–ã@ˇ0Îﬁã¡Ú8F	àC3¿fâCÚO(f/¡ÚMÏÉÑ   Ú¿F	f/¡rNW¿fEÏÚF	f/»rÚ\»f/¡vãuÏãEÒ   ÄÎãEãuÏ(¡âE–Ë« ∆U–RPË”v˙ˇÎ%jçEÏPçE‰Pˇ bãEËπ˛  ¡ËÉƒf+¡òk¿
∑¿fâCˇw4ˇw0Ëöv˙ˇãs$ãM¥fâCã∆ãW8%ˇÔˇˇÅŒ   ˆ¬ã”Dâs$ËVÈˇˇÄ{ ã¯taãs ÖˆtVÉ=@∞	 t<ˇ5ò‡	Ë1˙ˇãŒË}7˙ˇ)†ﬁ	ˇƒﬁ	Vã5d∞	ãŒˇ0cˇ÷ˇ5ò‡	Ë61˙ˇÎVã5d∞	ãŒˇ0cˇ÷∆C ã«ãM¯_^3Õ[Ë`Í  …¬ ÃÃÃÃÃÃÃÃÃÃÃÃUãÏãEV3ˆWã}Ö¿x5;}1k»ÆËãGkL0ãGHã@ã9rtãOLËÉÔ¸ˇÖ¿tã0Îæ§ç_ã∆^]¬ UãÏÉÏdSVWã˘â}‡ã_ãGã7âE–∂Ck–HãFãÉ¿âM®â]∏¬çUËRˇwãU–PˇuˇuËR·ˇˇãâu»ÖˆujXÈq  ãM®3¿fâCã”«C$   fâC(àCãã	PâEÿËG‰ˇˇÖ¿tj_È1  çE¯3“PˇuËãEãœVjˇjˇPãEPË.˙ˇˇã¯â}‹ÖˇÖ˘  ãUã¬ãM˜–âM˜Uãu#sâE‘#âE§∆ãE¯âu†ãu»uÖ¿Ñ∆  Ée‰ W¿fE¿fE∞Ö¿tDçE¯PˇuËVjˇjˇQãM‡R3“BË¿˘ˇˇãMã¯ãE‘##KâE¥¡â}‹âM¨u«E‰   ÖˇÖo  ÎãE¥âE¨ãE∞âE¥ãEƒãU‰âEºãE¿âUÙâEƒÉM¸ˇÉ»ˇÉ}ÿ âEÏ~_ãvã}ÿÉ∆k0ã]–ãU‘ãKã]¸#T âUÃãT$#UãMÏ;UºrãEÃw;Eƒv;”wr;¡sâEÏâU¸É∆ÉÔuπãu»ã}‹ã]∏ãUÙãEÏãM¸âEƒ#¡âMºãMÉ¯ˇtrãEÏ;E§uã]†9]¸ã]∏tW;E¥uãE¨9E¸tJã}¸çE¯ãUÏ˘PˇuËãE–VWRQãM‡3“PË≤¯ˇˇãMã¯ãEãUÙâ}‹9u9Ku3¿@É}¯ âE‰D–âUÙÖˇÑˇˇˇÖˇuWã]‡9}‰u+çE¯3“PˇuËãEVQPQPãÀË_¯ˇˇÉ}¯ ã¯ãUÙjXD–Öˇu$Ö“u ãMçE¯PˇuËãEVPQP3¿QãÀçPË*¯ˇˇã¯É~ tˇvË®4˙ˇãE®ã÷ãË5˙ˇã«_^[…¬ UãÏÅÏ§  °∞	3≈âE¸ãASãYVkP0ã1W3ˇâÖÑ˝ˇˇj8PçE¿WPâçp˝ˇˇâΩî˝ˇˇâïå˝ˇˇâù`˝ˇˇˇb∂CÉƒãNãµÑ˝ˇˇk¿Hâçd˝ˇˇãvâÖh˝ˇˇãD4âÖl˝ˇˇãÖå˝ˇˇÈ	  ÖˇÖ  π   fÖNÑÔ  ãVãäò  ãÇú  #K#C»ÑÃ  kJ0çΩ4ˇˇˇãµp˝ˇˇçEàj«ÖÄ˝ˇˇ   Jâçt˝ˇˇYÛ•É•<ˇˇˇ ãΩt˝ˇˇâÖDˇˇˇãrÈ÷  ∏   fÖFtãFÎ@ãÖl˝ˇˇ9FÖ¥  ãçÑ˝ˇˇãâÖò˝ˇˇçÖò˝ˇˇâçú˝ˇˇ∆Ö†˝ˇˇ,«Ö§˝ˇˇ   âµ¨˝ˇˇãçd˝ˇˇâÖ8ˇˇˇ3¿fâEàãÖh˝ˇˇãDçç4ˇˇˇÄx+uˇuˇuˇuˇuË•˚ˇˇÎˇuˇuËúÒˇˇâÖî˝ˇˇÖ¿uˇuçç4ˇˇˇˇuˇuˇuËF˛ˇˇâÖî˝ˇˇfãEàfÖ¿Ñ  ÉΩÄ˝ˇˇ t(fâE¿∑¿¡‡PçEêPçE»Pˇ bÉƒÉ•Ä˝ˇˇ Èÿ   fãE¿fâÖPˇˇˇ∑¿¡‡PçE»PçÖXˇˇˇPˇ bfãçPˇˇˇ3¿3“fâE¿Éƒâïx˝ˇˇf;¡Éî   ∑uàçΩ`ˇˇˇÉ•|˝ˇˇ Öˆt\ç]òfãSfãOËp˙ˇfãfã∑¿PËÙo˙ˇãK¸O¸ãS¯W¯QRã–çM¿ËfŒˇˇãÖ|˝ˇˇç[∑uà@âÖ|˝ˇˇ;∆|¥fãçPˇˇˇãïx˝ˇˇB∑¡É«âïx˝ˇˇ;–|àãù`˝ˇˇãµê˝ˇˇãΩt˝ˇˇÉ∆0âµê˝ˇˇ;˜Ç˛ˇˇÎ3¿fâE¿ãµà˝ˇˇ3¿@fâC(ãC0jâ03¿PfâCàCçCP«C$    ˇbãΩî˝ˇˇ3…Éƒâçê˝ˇˇÖˇuVçu“∑E¿;»}?fãF˛ã”f@fâCfãfâCãN˙ãFˆâKãçp˝ˇˇâËJ‚ˇˇãçê˝ˇˇã¯AÉ∆âçê˝ˇˇÖˇtπãµà˝ˇˇâΩî˝ˇˇãÖå˝ˇˇÉ∆0âµà˝ˇˇ;ÇÈ¸ˇˇãM¸ã«_^3Õ[ËÑ„  …¬ UãÏÉÏ<SãŸW¿VW3ˆâ]ãã{!u‹j∂A,ãQk¿HfE–â}ƒÉ¿¬âEÙãã !w$âE»çG8âG03¿fâG(XfâG,«C N  çZ;]ÙÉ>  ãE‘Å¡Ë  âE‡ãE–âE‰ãE‹âMÃãuW¿àGfE¯ÅFË  ãS,ËåÕˇˇâGâWˆC$
tãM‰ãU‡ÎfE–ãU‘ãM–ãCâMËâUÏÄx+uYãM¯çsHãﬁ;]Ùâ]‘ã]¸âM¸s.ã}Ùã¡√uˆF$
tãV,ãMÃË.ÕˇˇãM¸»⁄âM¸É∆H;˜rÿã}ƒSQˇuÏãMˇuËËb¯ˇˇãM¸ÎRQãŒËXÓˇˇãM¯É√Hâ]‘ã]¸ãÖˆuãUãBÄx	 tSQˇuÏã ˇuËËˆ˙ˇˇããE‰GâE‰ãE‡GâE‡Öˆu	ãE»ÄxS tÉ˛eu&h8%	jËßO˙ˇYY3ˆãE‹ã]‘@ãMÃâE‹;]ÙÇ⁄˛ˇˇãM»ã◊Ë^‹ˇˇ_ã∆^[…√UãÏÅÏà   Sã¡âUƒ3…âE¿W¿ãŸVWfE§f9Mtã ã ˆ@L@Öπ  ∑âE‘É¯?á™  ∑¿3“¬ã}®´¬fEÑ3ˆfE¨3…â}ÙAÉ¯ j CÚâMË3÷É¯@CÚÉ»ˇ–âïxˇˇˇ˜E  Xï¿âµ|ˇˇˇãu§Ç  ∑¿âEÄ3¿ã–âuÏãEàâEêãEÑâEîãE∞âEúãE¨âE†âUÃãÖ|ˇˇˇ;¯áó  r;µxˇˇˇÉè  ∑E;–èö  Ö“~ã}†{â}†ã}ú{â}úã}Ù;–}˜E   ãEã@ãêâ]–Ö5  Îã]â]–˜C$   ÖC  ãE%Ä   âEàt3¿fâC∂Ck»HãE¿ã@ãT43¿âUòãU‘∑ âE‡Ö…Ñ?  ãuƒÉ∆âu‰3…3€¡3“´√É¯ C”3⁄É¯@ãÀC”#MÏã¬âU»#«»ÖÍ   ãË]„¸ˇãÖˆÑŸ   ä<¶t<®ÖÀ   ãUò9VÖø   ãM†3¿PãEÄ˜—∑¿PãEú˜–PøF QãM¿PçIPË|Õˇˇã¯â}ºÖˇÑâ   ∑O3¿@âM∞f;»u&ãU–3¿∑R(Ö“tãM–ãI0;9t@É¡;¬|ÙãM∞;¬}Tˆ¡ÇtA3¿f9F |9ãE¿ãU‰ã0ãŒãËŸ‚¸ˇã¯ÖˇuããxãUºãŒãË ‰¸ˇÖ¿tããË©X˙ˇÖ¿uã}Ù	]Ï}»â}ÙÎã}ÙãE‡ãU‘@ÉE‰ãu‰∑ âE‡;¡åÕ˛ˇˇã]–˜C$   Öª  ˜C$   t3“3¿âUÿ@âU∞ÎAãK âMÿÖ…Ñ  ˆA8Ö  Äy6 ∑A2âE∞∑A4t˜C$ Ä  u
3…A3“àMËÎ3“àUË∑¿ä àU˘ã˙àU˙âM‡â}‰âE®Ö¿ÑH  âUº∑K3¿@äàu˚;˘}o∑C*;¯|gãs0ãEÄãæ∑J#¡fÖ¿tãEË˜¡Ä  j Y∂¿D»àMËÈŸ  3¿@Ñ»∑KtqãE‰ã:çP;—}çHçé∑sã98tHBÉ¡;÷|Ú∑Käu˚ã}‰ãEÿÖ¿tAã@jˇø4xãEÿã@ä3¿@"–ãEÿàUÛã@ø@ ;XDãEÿÎ∑K3¿äàE˚Î∫äu˚Î∏ÉŒˇ∆EÛ Ä}Ë âu»t0Öˆx;˘|(ã@ãŒ…ã@ˆD»u∆EË ÎãEË3…É˛˛∂¿D¡âEË3ˆÑˆÑ  ãEƒÉ¿âE∏ãM‘∑¡;çÌ   3…3“ç1´¬É¯ C 3—É¯@C #UÏ#MÙ—Ö:  ãM∏ã	Ë~‡¸ˇã»Ö…Ñ&  äE$¿ˆÿ¿"E˚äÉ»ˇä÷àu˚àUﬂ9E»å≠   ä<¶t<®Ö˘   ãEòäÚàu˚9AÖË   øA ãM»àu˚;¡Ö÷   É»ˇ;»Öç   fÉ}à tçGfâCˆE@Öı   ãMƒk∆äT3¿@"–Ä}˘ Ñ¨   äuÛ3…2u˙:Ú∂¿äU˘D»àU˘äE˙àE˙Ñ…Ö∏   ÖˇtãE∞∑¿;¯ç	  3“àUËÈ  ãEÿˇuòàu˚ãUºã@(ãTË,3˝ˇÖ¿u;ãE¿ã8ãœãE∏ãËûﬂ¸ˇÖ¿uãã@ãMÿäUﬂã}‰àU˚ãQ ãã∫ËpU˙ˇÖ¿Ñ8ˇˇˇäu˚ÉE∏FÑˆÖÇ˛ˇˇÈxˇˇˇ2UÛàU˙t%ãEÃ3…¡3“´¡É¯ C—3 É¯@ãEC—		P3¿@àE˘ãMƒk∆ˆDt∑C;¯Ö/ˇˇˇÅK$   ãE‡É…ˇ9M»∂¿jYD¡3…âE‡3¿´É˛ C»3¡É˛@C»	EÏ	MÙÉEºGâ}‰;}®å–¸ˇˇ3“ãM‡Ñ…t3¿çHâMËÎ3“ãMËÑ…Ñ…   ãEîCâEîãEêCã⁄fÉ}‘ âEêÑß   ãUƒÉ¬âU‡3…3ˆ3ˇç´∆É¯ C˛3˜É¯@ãŒC˛#MÏã«#EÙ»uKãã–ãM¿Å¡Ë  âE®ËΩ¬ˇˇã âEà¡âM∞uãM®çPPË«˘¸ˇÖ¿tãMîãEê˜—#Mà˜–#E∞»u	uÏ	}ÙãM‘CÉE‡ãU‡∑¡;ÿåwˇˇˇãUÃã]–BãMËã}ÙãuÏÈv˘ˇˇã]–ãUÃãuÏã}ÙBâUÃÑ…Öa˘ˇˇãÖ|ˇˇˇ;µxˇˇˇu;¯uäE‘ÎvÄ{ tˆEÄÎÌÑ…u_ãM‘∑¡çXˇÖ€~WÉ˚@}!3…3“ç´¡É¯ C—3 É¯@C—É»ˇ»–ÎW¿fE§ãU®ãM§ã¡#∆ãÚ#˜;¡u;Út
KÖ€~ãuÏÎ≤ä√ÎÉ»ˇÎ2¿_^[…¬ UãÏÅÏå   °∞	3≈âE¸SVWã˘ãÚ3…âu‹j
â}êãâEåâM†âMÿã âEÑäG,∂–àEÓÉ˙XãÿâM∞jXDÿâM§3¿âU–@;–FÿãGâ]»Ö¿tfÖˆtãã¬âM¥¡‡âE¨É¿ Ø√¡ãMÑ¿ôRPË«)˙ˇâEàÖ¿ujXÈò  ãÛâEƒ¡Êj j çSâ]‡ˇbãE»çãUàÉƒãu¨¿É¬â
HŒçR Ö¿ÙãU¥Ö“tçâM§Pj QˇbãU¥ÉƒãEåj0YãÄà   ;¡B»3ˆFfâKäMÓã∆âE¿Ö“t∂¬É ˇÑ…E¬àCã∆Éeº Ñ…Ñ∞  ãU–3…âMËÖ¿é_  ãU¿çCâE‰ã_@â]úÖ€Ñ0  äHW¿ãpÙÉ¿àMÔâE∏fEãã ã∆˜—#˜–#C»ãE‰ÖP  #S#s÷ÖB  ˜C$ @  t
fÉ8å/  ∑SffãKËTc˙ˇãu‰∑»fãVËEc˙ˇ∑¿çNâE‘fãCf∑¿âEîãCâÖ|ˇˇˇãACÄ}Ô âÖxˇˇˇç∏   çURãWçG(SˇuºâEÃ∑ PQãœËÓıˇˇàEÔÑ¿â•   ãE‘∑ÉËâE‘ãEË3…ãUƒÖ¿é+  ãΩ|ˇˇˇãùxˇˇˇ9:u9ZuäB2EÔãEË}AÉ¬ ;»|‰ã}êã]úâUÃ;»çÚ   ∑Bf;∆å‰  Ö!  ∑BãMîf;¡åŒ  Ö  ãE‘f9Béª  È˘   ãF¯ãN¸âEçG(âEÃäEÔâMÙãM¥∂;ÒçMˇˇˇãE§ÆË∑pã–fÖ¿umãE‹∑¿âEòã¡+∆k¿dô˜˘ôRPËhb˙ˇãMÃfE‹âEÄãE‹∑˜¬ @  t	∑O*f;»|∫‚sj
Yf;¡~É¿ˆ∑»ÎãMòËR∆ˇˇãMÄÉ¡Œf¡ãM§∑–fâqãM‘Ë≠a˙ˇjYf¡∑È≈˛ˇˇãE»ãMË;»|ãUÿf;ÚèÏ   uãU∞f9U‘ç›   ;»ã—çAMU†¡‚Uƒ;M»âUÃM¡âEËãE∏ãã@CKâBâ
ãEãMÙâBãEîfâBãE‘fâBäEÔfârãuºàBãE‰¡ÊVâJˇpˇrˇ bãEÃÉƒãMËã@â3ˆãE»F;»|]ãUƒÉe† ∑JâMÿ∑JâM∞ãŒ;∆Üû   ãu»çB4ã}ÿã]∞∑P˛f;◊uf9~∑ã˙âM†AÉ¿ ;Œ|‡â]∞ã]úâ}ÿã}êãMË3ˆFãE‰ã[4â]úÖ€Ö”¸ˇˇãU¿É¿ ÉÍâE‰âU¿Ö∞¸ˇˇã]‡ãU–ãEƒˇEºâ]ƒãÿã¡â]‡âE¿9Uºåx¸ˇˇÖ…u!h\%	ˇuåËM˙ˇYYÈR  ãMËÎõãMË3ˆFÎñ;∆~çK çPˇfãCf;AOŸÉ¡ ÉÍuÌâ]‡3ˆçKÄ}Ó âMÿv9çó$  ãŸãã∞âBä@àçRX∂¿k»HFãGãD4âÇxˇˇˇ;u–|◊ã]‡çKÎâMÿfãG(∫Ä  f#¬É¬Äf;¬u=Ä/ u7fÉ}‹ t0ãWçEPããM¨ˇt¸ãE–ãœHPhÄ   SË}Úˇˇæ»ãG;u∆G/ãG0ã_É‡˚âE∏âG0Ö€Ñf  ãM‡∑W(äAàEÔÑ“yæ¿;u∆G/ãÛçG-ç_HÈ„   Ä}Ô çWHàG-ãÛãAãIââJèÑ   Ä}Ó ∆G- vrãEÿãM¨ã ãD¸π  âE∏ãP$ã¬#¡;¡ï¡∫‚ì¿Ñ»tDçEW¿Pˇu∏ãE–ã”HfEPãE‡ãœh   PË∑ÒˇˇãwçWHæ¿;uãEãMÙÉO0ââJÎçWHçG-âUËÎ<Ä}Ó çG-âE‹âUËt*Ä}ÔãÛâE‹âUËu∑O(âE‹âUËˆ¡tãM∏ã⁄É…âO0ÎãE‹ã]ËãM‡∫   fÖW(tOæ ;uHÄ}Ó vBãU¨çEPãEÿW¿fEã ˇt¸ãE–ã÷HPj QãœËÒˇˇæ»ãG;uãEãUÙÉO0ââSãE‡3ˆfã@fâG4ãUàãMÑË| ˙ˇã∆ãM¸_^3Õ[Ëó“  …√UãÏÅÏÑ   °∞	3≈âE¸SãVWâ]ÄˆC( Ö∞  ãCâÖ|ˇˇˇãxÄ+Ñö  ˆ@0Öê  ãqçSPã@43…QhÇ   Éf$ jˇfâN*çMòPâEêâUàËøˇˇÎãJ J$tçMòËÚºˇˇã–Ö“uÍãÈ´   ãF03…«F$  Aj!âXfâN(fâNfâFÈ‘   Ä6 tÉ$ uy∑O2É˘wpãG83“!Uå¡ËÉ‡âUî¡‡É»âEÑf9MåsHã⁄ãUàçMòWPSˇuêËàæˇˇÎãJ J$tçMòËgºˇˇã–Ö“uÍÎãF0âòC∑G2;ÿãEÑ|√â]îã]ÄãUî∑G2;–tãÖˇÖpˇˇˇÎ?«F$  ˆG8 uãÖ|ˇˇˇãH@ã@D#O@#GD»u«F$A  ∑¬j'fâF(fâFXâ~ fâF3…AÉ~$ tIãEêfâNâ≥8  Éf âNâÉÙ  ãCfâK4Ö¿tä àC-∏   fÖC(tàK/Ä}™vÅN$    ã¡Î3¿ãM¸_^3Õ[Ë±–  …√ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃUãÏãEÄ8´u˜@   uãE3…jfâHXÎ3¿]¬ UãÏÉ‰¯ÅÏú   °∞	3ƒâÑ$ò   SVWâT$ãŸâ\$ãuã}∑«âD$$ãEâD$ãEâD$ãCâD$0ãjâD$,çD$pj Pât$@ˇbÉƒj@YÖˆt3¿9Mât$4ãT$(ÅÁˇ˛  ãD$$ât$t∑¿ãRLˆ¬∑œD»∑¡ã»âL$<ãL$j@Zã	; ~Rhp%	SËŒG˙ˇÉƒÈJ  É‡ ã–âD$TjXE»âT$hk¡Xj âL$0ãL$,âD$(˜  É‡¯âD$DÉ¿HPË˘˙ˇã¯ãD$(â|$LÄxS tÖˇÑ˘  ã◊ã»Ë2˙ˇÈÎ  ãD$âGãD$âGãD$âGãD$,ââwÉOˇÉOˇàG,ãC8HâC8âGâG ãD$<fâG(ãEâD$PfâG*ãÉà   j#âG$çG-j PˇbãD$0çè  ÉƒÉ¿HPj QˇbãL$LçGPâD$|çóË  œâ|$xâå$Ñ   ÉƒâD$8âT$$çA8âA03¿fâA(jXfâA,3¿âA$çOPâBãT$àA	âAâAçAj,â9«A   âAËà¥ˇˇÉ|$, u/ÖˆtäàG-˜D$<   t3¿@àG/hå%	j SË÷«˚ˇãD$ ÉƒÎ;ãt$3ˇÉ∆ãT$$ãF,ˇt$8ãJâDäãÀˇBã÷Ë°∂ˇˇãD$GÉ∆H;8|÷ã|$Lãt$4çWPã»ËZ∂ˇˇãD$(ÄxS Ö_  ãL$pÉd$ Éy éø   3“ãÛâT$ ãY⁄ˆC
Öá   ãC(C,u9D$,t]ãjâD$(çÑ$å   j Pˇb3¿«Ñ$ò    *@«Ñ$ú   –fâÑ$®   ÉƒãD$$Ö¿tã–çå$à   Ëπ¨¸ˇfÉº$ú    tjˇw ˇ3VËX˝ˇjXf	C
ãT$ ãL$pã\$É¬0CâT$ â\$;YåQˇˇˇãt$4ã\$ãD$<%   âD$$t1ˇt$ãT$çGPPãÀË“ªˇˇÖ¿t∆G/ÎÖˆu∏Ä   f	G(ãD$âGÉ|$,uçL$lË3˙ˇˇÖ¿uqçL$lË;ÈˇˇÖ¿u,3“ãœËÿÚˇˇãt$(Ä~S uÉ tU∑W4ãœfBËªÚˇˇÄ~S t<ãœË∞»ˇˇãL$ã◊ãG$âÅà   ãL$(Ë»ˇˇ3¿ãå$§   _^[3ÃËYÃ  ãÂ]¬ ãt$(É uãF %   É» tÉOHˇÉOLˇÉ{$ u£Ä~S uùÉL$HˇÉL$4ˇÄ,Ç’  ãL$Ö…Ñ…  ãD$<3“%   f;–Öµ  ˜FL   Ö®  ã—ç∑Ë  ãŒËÿ≥ˇˇâT$ãT$tâD$ Ö“tãŒË¡≥ˇˇ	D$ 	T$∂G,HâD$É¯åh  ãÿk√X  «âD$ãHHãWâL$dâT$\∂Ak¿HâD$XˆD,Ñ  fÉ|$$ u˜A$   Ñ  ãAãQã»#L$ âD$Dã¬#D$»âT$8Ö‡   ãD$pãPãÚk@0âT$`¬âD$@;sFã\$Dã¯ãT$XãF,ãÀ#N(#D$8»tãˆ@tãL$\ã@$;D
4uÉ∆0;˜r‘ãT$`;˜ã|$Lã\$rãL$DãD$8˜—!L$H˜–!D$4ãt$@;÷s6ã|$Dã\$8ãB,ãœ#J(#√»tjXf	B
ãD$dãxãXÉ¬0;÷r⁄ã|$Lã\$∂O,çAˇ;ÿt+Àk¡XãL$ÉËXPçAXPQˇbÉƒ˛O,ˇL$,ãD$KÉËXâ\$âD$É˚ç¨˛ˇˇã\$ã3ˆøG4ât$Åà   ãD$<®tvãó8  ãJ$˜¡   u2ât$®t]ãD$ât$ã@Äx+tL˜¡    tˆD$<ât$t9˜¡   î¿ât$˛¿àG.ãD$ã@ˆ@Äuât$ˆ¡@tãD$<É·øÉ‡âJ$âD$ãL$,Ö…éò  çá8  âL$$âD$∂@ÏãL$(kHãD$ât$8ã\ãS<Ë˝ì˛ˇ˜C @  ã–ãL$âT$DãâD$ uVäK+Ä˘tJ˜@$   Ñè   ãL$(ã”ËBXˇˇãL$ããD$8∫´   j j ˇt4ãL$<Ëö¿˚ˇãL$0ã–jÙVË·«˚ˇãD$ ãL$ãt$˜@$   ÑØ  ã@ jdZâD$@çBÑCã\$@ÑÙ   ãC8$<ÖÁ   fÉ|$T Ñ€   ãIº3“È   Ä˘t©ˆ@$@ÖÆ   fÉ|$h Ö¢   Ä. jdYtãD$jeYãD4âGãD$QSRãT4ãt$$ãŒËÚ˛ˇÄ. uUj@Xf9C"}LˆC‡uFãD$8ãL$Éd$ ãT@ãLDã¬¡tã|$¨ —Èã¬G¡uÛâ|$ã|$LãL$0É ˇj˝ˇt$ËË∆˚ˇãT$ãL$0Ëﬁƒ˚ˇãL$ãD$ È˘˛ˇˇˇ3ãt$ãŒj ˇsËão˝ˇÎﬂÄ. t)ãL$ãD$8ãDãL$Pã@Î;√tã@AÖ¿uÙjeZâOÎ ãD$PÖ¿tfÉ|$T tjcã»ZÎ	ãN(çAâF(ãD$âH¿Ö“tGˇt$Dˇs,QãL$<Ë˙æ˚ˇã”ãŒËÈ∆˚ˇãD$ ˆ@$t#˜@$Ä u3¿@ÑG(uÄ/tãL$0jZËƒ˚ˇãD$Dã\$Ö¿xÆËÉ{t ãÀã–EKtËÏ√˝ˇãD$É¿XÉl$$âD$Ö|˝ˇˇãL$,3ˆãD$0ã@tâG8ãD$(ÄxS Öh˙ˇˇât$Ö…é≠   ç∑$  É{$ ÖL˙ˇˇãFç^Ã˜@$ @  t3∂çWPãL$Sˇt$8k¿HÉ¡ˇt$P¡ãL$$PËN∑ˇˇãD$(ÄxS Ö
˙ˇˇˇt$<ãT$ãL$SËUhˇˇˇt$4ãL$4ã—ˇt$LSˇt$ãAtã\$(ãÀWâFÏË¶xˇˇãN‰É∆XâD$HãD$@âT$4âOâD$;D$,åYˇˇˇãD$0ã@tâG<ã«Èø˘ˇˇUãÏÉÏ4SVãÒWâu¯ã∂V,ãNÉÍâE¸ãXã âEÏâ]‹ãCtâMâEÿâU‡àÑ  k˙XÅ«,  ˛Ä˘≥ãOâMÙÑ  3¿Ä~/âEËÖü   ∂F,H;–Öí   ˜A$   ÑÖ   ãA ˆ@8Ät|∑IâM‰Ö…tqã@fÉ<H$|gãM¸ÆËãA,@3ˆâEË∆ãÀPVˇwÃj\ZËÍº˚ˇãM‰FãEË;Ò|‰ãU¸çAjB,Ä˘ZjXQˇuËD–ãÀj ˇwÃË≠ø˚ˇj ˇ7ãÀâEËjjZË¶º˚ˇãu¯ãW‹ãÀË#¿˚ˇ∂G˙ãÀ∂W˘Pˇ7ˇw¸ËÑº˚ˇ∂W˚ãÀË—¡˚ˇÉË tãWÏËıø˚ˇããÀj HPˇwËj<ZËXº˚ˇãEËÖ¿tã–ãÀËZƒ˚ˇãKtâHÎ
ãW‹ãÀË¿ø˚ˇãEÙ˜@$   Ñ˙   É é   ãW‘ãÀËúø˚ˇãWãGk É¿ÏâU‰¡âEËÖ“é    ããVãÀBË˚√˚ˇãKtâHÄ~≥Ñá   3“9VtnãEÙ˜@$   u˜@$   t3…AâMËÎã âUË9WƒtãCtRÉ¿¡ãÀPˇ6jZËïª˚ˇÉ}Ë t+ˇvãCtãÀˇvÉ¿PˇwÃjZËiæ˚ˇãVãÀBË|√˚ˇãKtâH∂VãÀj ˇvˇ6ËRª˚ˇãVãÀJËY√˚ˇãKtÉÓâHãE‰HâE‰Ö¿è;ˇˇˇãu¯ãW–ãÀË¨æ˚ˇÉÿ t4j ˇwÿãÀj jZËª˚ˇãWÿãÀË√˚ˇãKtâHãÀãWÿÉÍË √˚ˇãKtâHÉÙ tãGãÀj ˇwÙ—ËPj<ZËÕ∫˚ˇÉƒ Ñ…   ãEÙãÀj j ˇwƒã@$j1ZâE‰Ë©∫˚ˇâEËãE‰®@uj j ˇw»∫Ü   ãÀËå∫˚ˇãE‰©   u©    tRçGÉ8 tJÎ
©    çGt+ã0ãMÏãVËdç˛ˇPˇv,ãÀˇwÃjcZËI∫˚ˇãM¸ã÷Ë7¬˚ˇãu¯j j ˇwÃ∫Ü   ãÀË)∫˚ˇÄ˘BuãG¸jÎj3¿Zj ˇw‡ãÀPË
∫˚ˇãUËãÀË¬˚ˇãKtâHãU‡ÉÔXJâU‡Ö“âá¸ˇˇãV ãÀËhΩ˚ˇ3“âUÙ8V,Üw  çæ8  â}Ë∂GÏãMã]k¿HãLˆD0ã]‹âM‘ãtãMãWÿj ˇt(ãM¸ˇwºËÒ±ˇˇÈ  ˜A$@  tãA Î˜A$    Ñ  ãG¯âE‰Ö¿ÑÛ   ãMÏÄyS ÖÊ   Ä~. tã@ˆ@ÄuãF<ÎãEÿãwÿãÀFâE‡ã÷Ë@¡˚ˇãM‡+ŒkŸçpÿâ]–ã;GºÖê   äF¸<\usãM‘ãVˆAÄtË3x˝ˇã@∑PÎGˆA ∑¬ãÿt6Ée‡ 3“f;–+ãQã}‡É¬ˆ çC∑»çR∑√D»G∑…ø¡ãŸ;¯~·ã}Ë∑”ã]–ãM‰ËÛw˝ˇòÖ¿xâFÎ<Öu	ãG¿∆F¸åÎ<uãG¿âÉ∆çF¸;√ÇWˇˇˇãu¯ãUÙ∂F,BÉ«XâUÙâ}Ë;–åí˛ˇˇÉ~D tãŒË˚ºˇˇãM¸ã÷ãF$âÅà   ãMÏËfºˇˇ_^[…√ÃÃÃÃUãÏjˇuË˚˚ˇÖ¿tÉ ÉP ]¬ ÃÃÃÃUãÏÉ‰¯ÉÏVãujVË€˙˚ˇÖ¿tãã@ÎW¿fD$ãD$ãL$PQãËp¨˚ˇ^ãÂ]¬ ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃUãÏjˇuËì˙˚ˇÖ¿tÉ` «@   ]¬ UãÏÉ‰¯QVãujVËm˙˚ˇÖ¿t#ãHHtÉ j YHâHâHˇpãˇ0Ë ¨˚ˇ^ãÂ]¬ ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃUãÏÉ‰¯ÉÏSVWjˇuË˙˚ˇãÖˆÑí   ã}ˇwË•¸ˇÉËt7ÉËuFãOËN®˚ˇÚD$Ë‹  ã»âD$ã⁄Ë´‹  f.D$üˆƒDzãD$Î
ãOËπß˚ˇã⁄Ö€|Ö¿ujˇh†%	ˇuË¶Ú˚ˇÎ&ÉÉV ;u;^uˇ7ËÒ˚ˇâFÖ¿uˇuËNı˚ˇ_^[ãÂ]¬ ÃÃÃÃÃUãÏVWã}j WË`˘˚ˇãÖˆtãVÖ“tãËB¨˚ˇãNË¥˚ˇÉf _^]¬ ÃÃÃÃÃÃÃÃÃÃUãÏVjˇuË"˘˚ˇãÖˆtÉ~ uãMˇ1Ëå˚ˇâFÖ¿uˇuËÕÙ˚ˇ^]¬ ÃÃÃÃÃÃÃÃUãÏVWã}jWË‡¯˚ˇãÖˆtãVÖ“tãË¬´˚ˇãNËÑ≥˚ˇÉf _^]¬ ÃÃÃÃÃÃÃÃÃÃUãÏjˇuË£¯˚ˇã»Ö…t ãQãÉ¬VãqÉ÷ âQAâquââq^]¬ ÃÃÃÃÃÃÃÃÃUãÏÉ‰¯VWã}jWË]¯˚ˇãÖˆtˇvãˇ6Ë™˚ˇÉ& Éf _^ãÂ]¬ ÃÃÃÃÃÃÃÃÃÃÃÃUãÏjˇuË#¯˚ˇÖ¿tÉ@ÉP ]¬ ÃÃÃUãÏjˇuË¯˚ˇÉ@ÉP ]¬ ÃÃÃÃÃÃÃUãÏÉ‰¯QQVWjˇuË‹˜˚ˇÖ¿t[ãxãHãPãpââPÖˇ|4É˛v-Ëá⁄  ÉÓÚD$ãŒÉﬂ ã◊Ër⁄  ÚL$Ú^»QQÚ$Î
QQW¿Ú$ˇuË=˚ˇ_^ãÂ]¬ ÃÃÃÃÃUãÏÉ‰¯ÉÏVj ˇuË\˜˚ˇãÖˆt5ãVãNË⁄  ãVãNÚD$Ë
⁄  ÚL$Ú^»QQÚ$ˇuË·Ô˚ˇ^ãÂ]¬ ÃÃÃÃÃÃÃÃÃÃUãÏVjˇuË˜˚ˇãÖˆt7ãNu)ãEãË„§˚ˇâFâVÖ“|Ö¿wjˇhÿ%	ˇuËÃÔ˚ˇÉÉV ^]¬ UãÏjˇuË≥ˆ˚ˇÉ@ÉP ]¬ ÃÃÃÃÃÃÃUãÏÉ‰¯ÉÏSã]VWjSËâˆ˚ˇã¯ÖˇÑ›   ãOãGâD$âL$Ö…å«   Ö¿ÑΩ   ãWã7QPRVât$ âT$ËÈ‘  ãwãâD$Ö¿uÉ∆¯WVÈÜ   ˇt$ôˇt$ã âD$,QPâL$0Ëe’  ãL$+»ãD$âL$T$@ˇt$ôQRPâD$(âT$,Ë=’  ;˙|;sˇt$ÆËˇt$WVËq‘  Îˇt$ +ˇt$(˙WVÆËËY‘  D$T$É¿É“ RPãË\ß˚ˇ_^[ãÂ]¬ ÃÃÃÃÃÃÃÃÃUãÏVjˇuËÇı˚ˇãÖˆt$ãË5∞˚ˇãMˇ1ËÎÏ˚ˇâÖ¿u
ˇuË-Ò˚ˇÎˇF^]¬ ÃÃÃUãÏVjˇuËBı˚ˇãÖˆtÉnu
ãËÔØ˚ˇÉ& ^]¬ ÃÃÃÃÃÃÃUãÏVãuj VËı˚ˇÖ¿tãÖ“tãËˆß˚ˇ^]¬ ÃÃÃÃÃÃÃÃÃÃÃUãÏVWã}jWË‡Ù˚ˇãÖˆtãÖ“tãË√ß˚ˇãËÜØ˚ˇÉ& _^]¬ ÃÃÃÃÃÃÃÃÃÃÃÃÃ¬ UãÏQVWãÚã˘ÎãUãËè3˙ˇÖ¿tãv$ÖˆuÎˇuh&	WË.2˙ˇÉƒ_ã∆^Y]¬ UãÏÉ‰¯ÅÏå   °∞	3ƒâÑ$à   SVãuWã˘É> ç^ÑÉ   Ä; u~ˇ6ËãˇˇˇãÿÖ€Ñ  ãSãj ËÂŒ¸ˇâFãSãj Ë÷Œ¸ˇâFãSÖ“tãj j Ë£À¸ˇÎ3¿âFãSÖ“tãj j ËäÀ¸ˇÎ3¿âFäCàFäCàFäCàFäCç^àFÎRã÷Ë  Ä;YuÉ~ uÉ~ tãFÖ¿tÉ8th &	Î!ãM˜A   Ñn  É~( ãâD$thh&	WË1˙ˇYYÈP  jU_jYZj\âT$(âT$8ZâT$DâT$TjZZâT$\âT$lâT$xâT$|âî$à   ãQ çL$â|$â|$,â|$<â|$Hâ|$hâº$å   3ˇ«D$ …«D$L   «D$Z   «D$ †â«D$(Z   «D$0x«D$8Z   «D$@Ù∆«D$LZ   «D$PàÃ«D$XV   «D$`Ë≠«D$dL   «D$p,««D$tL   «Ñ$Ä   ê|«Ñ$Ñ   L   ;tGÉ¡Éˇ|ÛÎ\ãVÖ“tã»Ë¡»¸ˇãD$ãVÖ“tã»ËØ»¸ˇˇ3…âNâNàNäD¸äT¸àäD¸àVàFÄ˙VuãL$∫ö   h¥ÏË‡√¸ˇâFã]â^,ãå$î   _^[3ÃË†∑  ãÂ]¬ ÃÃÃÃÃÃÃÃÃÃUãÏÉ‰¯ÉÏãESVãuãWãxâL$É t0Ä>¶Ö∞   ãW3¿;}ã^çJ4;t@É¡H;|ÙãL$;Ñâ   ∂-¶   t#ÉËtÉËuu˜F   tlãÎ9F,t[ã@$Ö¿uÙãÉÀˇÄxS Öˇ   ãOÖ…tS3¿âD$9~I3“âT$ãT
3…SVË˘
˝ˇÖ¿ãD$t(ãO@ãT$É¬âD$âT$;|‘Î3¿@Èµ   3¿ÈÆ   ãÿÖ¿y-ãL$ã÷j j ã	Ëù»¸ˇÖ¿tÄ8ßu∆ ´ãWãL$PË^—¸ˇâGÉ t_ãFã÷ã»   âFÅ·   ãD$âL$ãË«¸ˇÅfˇˇˇ˜j4j VˇbÉƒ∆¶Ö€yãGãKfâ^ ãã@0âFãGâF,ãD$âFãD$jZã3¿8ASE¬ÎjX_^[ãÂ]¬ ÃÃÃÃÃÃÃÃUãÏãMãUVWãqã~;˙u3¿ÎâVËóñ¸ˇ3¿â~@_^]¬ UãÏÉÏ@°∞	3≈âE¸ãESVãuã⁄Wã}âE¿ãEjâE»çEÃj PâMƒˇbjçEËj PˇbãE»çMÃãU¿Éƒâ]Ëâ}Ïã âEãEƒâEÃçEËâuÙ«E–C«E‘∞DâE‰Ë;ï¸ˇãM»ãE_^âãM¸3Õ[Ë/µ  …¬ UãÏÉ‰¯ÉÏ°∞	3ƒâD$Sã]âL$VãÚWÖ€Ñ“   ÖˆtãÎ3¿Éd$ É; é∫   k¿âD$çCâD$ãP¯ã	âL$Ö“tj j ËÃ∆¸ˇãL$ã¯Î3ˇÄyS u{É} t,ãœËË∑¸ˇçT$ âD$ã»Ë”‘¸ˇÖ¿tãD$Å`ˇ˚ˇœÉ` ∆ xãL$ã÷WËXœ¸ˇã|$ãÖˆt
ãD$ä àD7ãT$É«ãD$BãL$É¿âT$âD$â|$;åaˇˇˇÎÖˇtã◊ËÌƒ¸ˇãL$$ã∆_^[3ÃË!¥  ãÂ]¬ ÃÃÃÃÃÃÃÃÃÃÃUãÏãUÄ:ßuãESäZ∂À;H|˛√àZ[3¿]¬ ÃÃÃÃÃÃÃÃÃÃUãÏãEÄ8ßuÉx( uˇpãEhÌˇ0ËÕ+˙ˇÉƒ3¿]¬ UãÏÉ‰¯ÉÏ\°∞	3ƒâD$XSVWã˙3€â|$4ãÒâ\$89_DÑ2  9_4Ö)  ˜G   Ö  Ëˆ£˛ˇãO !\$âL$ãO$âL$(ãO(âL$@ãO,âL$<ãODâL$ãOâD$0ãSâL$Hã»j@âD$(ËH˙ˇâD$$Ö¿u(ãL$ jXÖ…Ñ¿  ãâ  Ö…Ñ≤  ˇA$âAÈß  ã÷çL$HË˝ˇã◊çL$HË´ì¸ˇˆGuãW0çL$H!\$P«D$L¿FËºí¸ˇ3¿3“âG ãŒâG$âG(âG,ãGÉ‡˜   âGãD$jˇpËl˝ˇˇãL$ã–jˇqãŒËZ˝ˇˇã–âT$Ö“tDãO0Ö…t=ãã	âD$,;»1â
ãW0ãL$jˇË¬˝ˇÖ¿uãW0Ö“t	ãL$ Ëœ¸ˇ!_0ãL$ãD$,âãL$ã—ãF(ã\$$âA0çD$ÉF(ãŒPSˇwˇt$$ËL¸ˇˇçD$ãŒPSˇw0ã|$ã◊ˇt$$Ë2¸ˇˇãT$Ö“tãÎ3¿j ˇwãŒâGLË≠¸ˇˇj ˇwã–ãŒËü¸ˇˇãÿâ\$ãOHãQãO,˜A   t0çD$ãŒPˇt$(Rˇt$$ãT$ Ë÷˚ˇˇã\$Ö€tãÎ3¿âGP∆G`ÎÖ€tãÎ3¿j Rã”âGPãŒË>¸ˇˇãÿâ\$ãW(Ö“tãL$ j j ËT√¸ˇPã”ãŒË$Ã¸ˇãÿâ\$ˇF,ãF,ãL$0j âG4ˇF,ˇw4ãF,j jIZâG8Ëó®˚ˇã$ÖˇÖKˇˇˇã|$4Ö€â\$ã\$8uãL$ ∫ö   hÎËΩ¸ˇãã–ËÀ¸ˇÎãD$j j ˇt$$ã–ãŒˇt$Hˇt$Pˇt$<ˇt$0Ë+É˛ˇj j 3“âD$ãŒË/®˝ˇâG Ö¿ÑÛ   ãL$âHãW âT$(Ö“tN3¿âD$9~DçJ4âL$9}%ãF(âˇF(ãAËÖ¿tãP ãŒË°®˝ˇãL$ãT$(ãD$@É¡HâD$âL$;|«ãL$ÅI@  ã—j@ãŒË†˛ˇãT$Dã»ãD$É‚âL$(	PÖ…ujXãÿÎzj@Qˇt$,ˇ bãL$0ÉƒÅI @  ãG jj âHçD$PãL$0PâL$0ˇbãT$çL$TÉƒ«D$LêF«D$P0‹«D$T@‹Ëwê¸ˇÎãD$Ö¿tãL$ ã–jË?Å˛ˇjXãL$ ∫–Hˇt$$ÄyS ãŒEÿã˚ËÆz˛ˇÖˇt É~$ uãÖ¿tãÄ  Ö¿t
ˇ@$«@   ã√ãL$d_^[3ÃËDØ  ãÂ]√ãQ Ö“tãA$âãQ$Ö“tãA âB Éa  √VãÚWã˘ÖˆtgãŒË—ˇˇˇãV(ãœËZ¿¸ˇãVÖ“tãœË»À¸ˇãVÖ“tãœË∫À¸ˇãVãœË4¿¸ˇãVãœË*¿¸ˇãÖ“tãœË†¸˘ˇãVÖ“tãœËí¸˘ˇãœã÷_^Èá¸˘ˇ_^√VãÚ3“Wã˘Bj ãŒËòÕ¸ˇÖ¿u/ÄøÃ   r	ã÷ãœË∏˝ˇÖˆt	ãã÷Ë5ø¸ˇãj j jxZËÅπ¸ˇã_ã∆^√UãÏQQSã]Ö“VWjYXE¬âU¯âE¸ãÒãEÉ¯UuÉ˚XtÉ¯VuÉ˚XtÉ˚Uuh®&	VË2&˙ˇYYÎãj jdË2˛˘ˇã¯Öˇu ãUÖ“tãËªæ¸ˇãUÖ“tãË≠æ¸ˇ3¿ÎNãE¸äMàGãEàGà_Ñ…uãjB∂…ˆ@LXE»É}¯ ãUàOî¿ãŒàGËˇˇˇãUãŒâGËˆ˛ˇˇâGã«_^[…¬ UãÏQVãÚWã˘Öˆt&ãEãUâFãEâFÖ“t/ãj ˇrãË ˙ˇâFÎãUÖ“tãË% ¸ˇãUÖ“tãË ¸ˇ_ã∆^Y]¬ UãÏQQSVãÚãŸWÉ~ Ñâ   ãˇvãUâE¸ËÃÚˇˇã¯Öˇts3¿9Ft∏»&	Î9Gt9Ft∏‹&	Î
8Gu∏Ï&	ˇvPh '	SËÎ$˙ˇÉƒÎ6ã]¸ãÀãWPËÎ¡¸ˇâFãWÖ“tj ãÀËÿ¡¸ˇâFãVÖ“tãÀËz˙˘ˇÉf _^[…¬ UãÏVÖ“t+ãuÅJ   âr,âVHˆBtÄ~•th$'	QËz$˙ˇYYÎ
ãUã	Ë:˝ˇˇ^]¬ SWã˘ã⁄ÖˇtJVçwDãÖ“t*j S3…Ë9   Ö¿tããKjˇãRËê˝ˇÖ¿tÅO   ÎãçK$âãÖ¿tâH ââs ^_[√UãÏSVWã˙ãŸÖˇÑã   ãuÖˆÑÄ   äG:FuxäG:FupäG:FuhäG:Fu`ãWjˇˇvË–ˇ¸ˇÖ¿uOãWãÀjˇˇvËΩˇ¸ˇÖ¿u<ãVãOjˇË¸˝ˇÖ¿u.ãVãOjˇËÎ˝ˇÖ¿u9EtãW(ãÀjˇˇv(ËÉˇ¸ˇÎ3¿Î3¿@_^[]¬ UãÏÉÏãB SVWã@ãŸãzDã@ã0Ë∆õ˛ˇj VâE¸çG0ˇ0ãu¸ãŒjsZâE¯Ëù¢˚ˇãM¯j ããŒP@PjpZËâ¢˚ˇãM¯j ããŒPÉ¿PjpZËs¢˚ˇãM¯j ããŒPÉ¿PjpZË]¢˚ˇãWçs,Ö“t!ãã@âGDçBˇãOD¡PQãM¸j jIZË2¢˚ˇˇããM¸j PjjFZâGTË¢˚ˇÄ tSˇãâGXˇã3ˆâG\ãC(VâG<ˇC(ˇwXã]¸ãÀjjFZËÈ°˚ˇVˇw\ãÀVjFZË⁄°˚ˇãE¯ãÀVˇ0ˇw<jpZË«°˚ˇÈÿ   ãG,˜@   tpÄZtjãGHãÀj j ãPËıé˛ˇãK(ã–âO<ãˇC(@âG@ÉâUÙÖ“tãG,ã@ ÄxiuãB∆ ãM¸j jˇw<jsZË`°˚ˇãUÙãM¸j˜Ë©˚ˇãG@j @Pj jFÎHã@ =LÅt =Ãît=,«t=ê|u2ãC(âG<ˇC(Îã@âG@ãC(âG<ˇC(ÉãE¯j ˇ0ˇw<jpãM¸ZËı†˚ˇã$ÖˇÖ(ˇˇˇ_^[…√UãÏQQSVãÚãŸWâu¸Ëﬂô˛ˇãÀã¯ËS
˝ˇj Pj jFZãœâE¯Ë∂†˚ˇÉ}|LãÀË4
˝ˇj ããœVj jtZËò†˚ˇjˇhÿ4	ã–ãœË›ß˚ˇˇu¸ãGtãœÉ¿PVj9ZËs†˚ˇjSZãœË¡•˚ˇãu¸ÎãGtãœj É¿PVjZËP†˚ˇãGtãœVãu¯É¿PãEVãÖ(ÅË3†˚ˇjCZãœËÅ•˚ˇÉ{t ã√j ECtjjjEZ∆@Ë†˚ˇãEãœjˇãÖÑxË¿ß˚ˇã÷ãÀËõ	˝ˇ_^[…¬ UãÏÉÏSVãqWâU¸ã^â]ÙÖ€tCã	Ëÿò˛ˇãN3ˇâE¯Ö…tã	ÎãœãvLÒ9;~!ã]+ﬁãM¯ç3PVˇu¸j\ZËóü˚ˇãEÙGF;8|‰_^[…¬ UãÏÉÏ ãã»SVãÚâE¯WâuË{ò˛ˇãÿã˛ÖˆÑ∞  Ä` ãO,âMÙuUãGHãPÖ“tKã3ˆâU¸Ö“~EâU¸É˛uÅy LÅuãEãH0ÎãMãE∆PãGP∆PQj\ZãÀËü˚ˇãU¸FãMÙ;Ú|≈Î3“âU¸ãEãuâuÏÉxX Öº   ˜A   ÑØ   ÄZÑ•   j j Vj2ZãÀË¬û˚ˇÉ} âEËuQãO@j jAQjTZãÀË¶û˚ˇj ˇw@ãÀVjOZËñû˚ˇãO@çAPjQj_ZãÀËÇû˚ˇãG@∫à   j É¿ãÀPˇw<Ëjû˚ˇÎ4jV3ˆãÀVˇw<jZËI°˚ˇVVˇw<∫Ä   ãÀËDû˚ˇãstãÀçV˛ËI¶˚ˇâpãUËÈc  ãG@Ö¿t+EãÀj j@PjTZËû˚ˇÈQ  ÅyP@ÑD  ãM¯3¿âEË9G(t7Ëy˝ˇãOPãV QˇuãÀj\ZËÿù˚ˇjj VjZãÀË…ù˚ˇãM¯ã÷âEËËf˝ˇÄ` tWãGHãstã@ã ã–âE¸Ëd˝ˇãWHãM¯j j ãRPâEÏËå¸ˇãCtâE‰;}"ã÷ãÀËä•˚ˇÄ8\uãH;O0uãMâHF;u‰|ﬁãEÙˆ@ t:ãGHãM¯ã@ãPË,©¸ˇãÖˆuãE¯ã ãp3¿ãÀPPPjSZË(ù˚ˇj˛Vã–ãÀËq§˚ˇˇw4ãUãÀãuÏ˜⁄Vˇu“Å¬†   Ë˛ú˚ˇãUÙãÀj¯Ë∏§˚ˇãE¸ãÀ∂–Ë=¢˚ˇÄ` tˇu¸ãM¯ã÷ËÀ˝ˇãEËÖ¿tã–ãÀË‘§˚ˇãKtâHã$ÖˇÖP˝ˇˇ_^[…¬ UãÏÉÏSVWãyãÚã	âu¸Ë†ï˛ˇãÿÖˇÑÌ   çGXâE¯É8 uZãG,˜@   tNÄZtHj ˇw8ãÀj jIZËZú˚ˇ3ˆãÀVVˇw<j"ZËIú˚ˇˇw8ãÀVˇw<j\ZË8ú˚ˇãstãÀçV˛Ë=§˚ˇâpãu¸ÎzÉ@ utãGHã@Ö¿tã Î3¿ãÀÖˆtAj Pˇw4∫£   Ë˜õ˚ˇãW,ãÀj¯Ë±£˚ˇj ˇw8ãÀˇw4jNZËŸõ˚ˇj ˇw4ãÀj jIZË»õ˚ˇÎˇw8∫¢   Pˇw4Ëµõ˚ˇãW,ãÀj¯Ëo£˚ˇã$ãE¯ÖˇÖˇˇˇ_^[…√UãÏÉÏ,ÉeË ã¡ÉeÏ SVãXãpWã8ãSâE‰ãC<â}ÿâE¯Ö“tãÎ3“ãG8ãœHâU‹âE¸HâG8Ëÿ˝ˇâEË–˝ˇâEÙÖ“tË¸˝ˇãœâEËËÚ˝ˇâEÏj ˇu∫Ö   ãŒˇs0Ëõ˚ˇˇuËãS0ãM‰Ë ˚ˇˇã˚j ˇw4ãŒj jIZË˜ö˚ˇã$ÖˇuËˇsXãE¸ãŒHPˇu¯jZË€ö˚ˇãFt∫Ö   Wã}ÙãŒWˇu¯âE‘Ë¡ö˚ˇãE¸ãŒWHPˇs\j6ZËÆö˚ˇäCã}ÿ<UuˇuÙãŒˇu¸ˇuj5ZËëö˚ˇÈ°   <BÑô   ãS3¿âEÿâE‡Ö“tPPãœË¬á˛ˇâE‡3¿Ä{^uˇuÙãŒPˇuj5ZËPö˚ˇâEÿÉ}‡ t5ˇuÏãU¯ãM‰ËO˙ˇˇˇu‹ãŒˇuËˇuÏjXZË&ö˚ˇãU‡ãŒj˜Ë‡°˚ˇãFtj@Îj3¿ZPˇu¸ãŒPËö˚ˇãEÿÖ¿tã–ãŒË¢˚ˇãNtâHãE‰ã”ã»ˇpj ˇu¯ËP˙ˇˇãU¸ãŒËWù˚ˇã]‘ãŒj Sˇu¯jZË∫ô˚ˇçSˇãŒË¬°˚ˇãNtçSâHãŒË≤°˚ˇãNtãUÙâHãœË:˝ˇãUË2˝ˇã]‹Ö€tãUÏSËq˝ˇãUËSËh˝ˇãM‰3“BË∫¸ˇˇ_^[…√UãÏÉÏ,SãŸVWâ]‘ãSãsâUÙâu¯ÉzX t
Ë§˝ˇˇÈ%  ãã˙â]‰ãG,âEÿã@ =LÅÑ,  =ÃîÑ!  =,«t=ê|Öﬂ  ãGHãÀã@ã âEÏãG<ˇK8âE‡ãC8âE‹Ëg˝ˇÉ}ÏãO8âE¸ãB0âEË}Ée ã¡jI3…ÎâEãGPj\É¿ZQPˇuãŒË¶ò˚ˇj ˇu¸∫Ö   ãŒˇuËËíò˚ˇÉ}ÏãEÿãH }!j jÉ»ˇÅ˘,«YD¡ãŒPˇu¸jTZËgò˚ˇÎI3€Å˘,«ãM‰ï√Ë›˝ˇãOPãVAQˇuËãM¯j\ZË<ò˚ˇãE¸çSjãM¯PPVË+ò˚ˇã]‰ã÷ãÀË…˝ˇãu¯ˇu¸ãŒˇu‹ˇu‡j ZË	ò˚ˇˇw8ãŒˇwPˇu‡j\ZËˆó˚ˇãU‹Èº   ãG<ãÀˇK8âE‹ãC8âE‡Ëc˝ˇj ˇw8ãŒâE¸j jIZËƒó˚ˇãEÿãŒÅx LÅu$ˇu¸ãGP@PãEÙˇp0j\ZË†ó˚ˇãU¸ãÀjËØˆˇˇÎj ˇu¸3¿@PjFZËÅó˚ˇãE¸ãŒPˇw@PjjZËoó˚ˇˇu¸ãG@ãŒˇu‡@Pj6ZËZó˚ˇˇu¸ãŒj ˇu‹j ZËHó˚ˇˇw8ãŒˇwPˇu‹j\ZË5ó˚ˇãU‡ãŒËµö˚ˇãU¸ãÀËÀ ˝ˇãUÙã$ÖˇÖÂ˝ˇˇã]‘j ˇsãŒˇsjZË˛ñ˚ˇ_^[…√UãÏÉÏSVãŸãÚWâ]ÙËÚè˛ˇ3ˇâE¸ÖˆÑ≈   ã]¸çFXâE¯ãF,ãÀj ˇv4âE¸j jIZË∑ñ˚ˇãFHã@Ö¿tãÎ3…;˘
Ö¿tã8Î3ˇãE¯É8 uqãE¸Åx LÅt	Åx Ãîu'j ˇv@ãÀj jFZËkñ˚ˇãF@ãÀj @Pj jFZËXñ˚ˇãE¸˜@   t,É~< t&j j ˇv<∫ê   ãÀË3ñ˚ˇãF@ãÀj @Pj jFZË ñ˚ˇãv$ÖˆÖGˇˇˇã]ÙãK,ç9_âC,çA^[…√UãÏÉÏSVã⁄ã¡Wâ]¯âEÙË˜é˛ˇãâu¸Ö€tOã;3€ãU¯ãMÙSSË%É˛ˇã]ããM¸WSˇujXZË∫ï˚ˇã÷ãu¸j˜ãŒËrù˚ˇãFtãŒ@PˇuPjZËôï˚ˇãEOjNÎ	ãE3€jã˚ZWPSãŒË}ï˚ˇ_^[…¬ UãÏÉÏ,SVWã˘âUÙã7ãŒâu‹Ëjé˛ˇãwãÿãM‹ãFâE‡Ë‘˛¸ˇãâuË ˛¸ˇˇA,ˇI8jjâE¯ãA,ZâE‰ãA8ãœâUÏãUVâEËË/ıˇˇˇu¯ãUãœË"ıˇˇãM‡j9ZäAàEˇ®t%ãMÙÉ˘6tj7; XE¬âEÙäEˇÎ«EÙ8   jkZâUÏã}®Ñï   j j Vj3ZãÀËΩî˚ˇãuÙãŒâEÿÉÈ6tÉÈtIÉÈu!QWQjÎj Wˇu¯j2Îj Wˇu¯j3ZãÀËÑî˚ˇj ˇuËãÀj jZËsî˚ˇãUÿãÀË{ú˚ˇãKtj Wˇu¯âHãÀj2ZËSî˚ˇÉ˛6tÉ˛9uÉ ˇãÀËQú˚ˇãMËâHÎãuÙj ˇu‰ãÀj jtZË#î˚ˇjˇhÿ4	ã–ãÀËhõ˚ˇˇuãÀj ˇu‰j9ZËî˚ˇâEÿãEÏÉ˛9uÉ¯jt
É˛7uÉ¯kuˇuã÷ãÀWˇu¯Ë◊ì˚ˇãEãÀãUÏPPˇuË≈ì˚ˇãUÿãÀËÕõ˚ˇˇuãKtã÷Wã}¯âHãÀWË§ì˚ˇãE‡ãu‹ãŒãPË{ü¸ˇÖ¿uãã@j˛ã–ãÀËFõ˚ˇ∫Ä   ãÀËÃò˚ˇãUËËˆñ˚ˇãUãŒË˝¸ˇã◊Ë˝¸ˇ_^[…¬ UãÏÉÏ,Ée‡ SVãÒâUWã^ãã~âM¯äCàEˇãA8Hâ]ÏâA83…âEÙçCâM‹âEËÉ˙uÄ8Zu
3¿È∑  âEËãMÖ…~oÄ{YuSãOtâM‹çN(É˙u'Ä8VçV ÆËu	ã	j7âM‰Îãã—â]‰ã]Ïj9ã
ãU‰Î
ÆËãV0ã	j6XˇuÙQˇuãŒRã–Ë1˝ˇˇÎjˇuÙÆËQj1ZãœËíí˚ˇãUÉ˙uÉ{X u3“ãŒË—ıˇˇãUãGtâEÿãEËä :CÖï   É} Ñã   Ä{YÖÅ   ãM¯Ë”˚¸ˇãÿËÃ˚¸ˇâEËÉ˙u/j Sˇv ∫Ö   ãœË'í˚ˇj ˇuË∫Ö   ãœˇv0Ëí˚ˇSˇuÙˇuËÎÉ~ t&j Sˇv0∫Ö   ãœËÚë˚ˇSˇuÙˇvj9ZãœË·ë˚ˇãM¯ã”ËÅ˚¸ˇãUËËy˚¸ˇãEÉËtaÉËt.ãF43…ã^0âE‰ãEÏâ]Ë9HXtQjˇp\jTZãœËúë˚ˇÎGˇvQÎ"ãF$ã^ âE‰ãEÏâ]ËãHXÖ…tj jQÎ—ˇvjSã–ãŒË·ÒˇˇÎã^(ãŒãF,â]ËâE‰ËÙ˜ˇˇãE;Fuj j S∫Ä   ãœË:ë˚ˇjZãœËàñ˚ˇÉ} ãOtj t/çAãœPSjZËë˚ˇ3¿ãœPPPjZËë˚ˇÄ}ˇLãÿâ]‡ÑÖ   Î/3¿Ä}ˇLï¿@¡ãœPSjZËﬁê˚ˇÄ}ˇLtbj ˇuÙãœj jZË«ê˚ˇãEÏãXÖ€tãÖ€tãM¯ã”Ëp˙¸ˇÎ3€3¿ãUËãŒPâEËØˇˇˇuÿãEÏˇu‰ãuãM¯ãPVËÄ˙ˇˇãM¯ã÷SËo˙¸ˇã]‡ãE‹Ö¿tj Pj jZãœË]ê˚ˇãUÙãœË›ì˚ˇã√_^[…¬ UãÏQQSVWã}3ˆâU¸ãŸÖˇÑΩ   VjdË Ë˘ˇãÖˆÑ´   ããÀËÙÍ˘ˇâãÀãWËËÍ˘ˇâFãÀãW(j ËÇ≠¸ˇâF(ãÀãG,âF,ãWj Ëã≠¸ˇâFãÀãWj Ë|≠¸ˇâFãÀäGàFäGàFäGàFäGàFãG8âF8ãG4âF4ãGPâFPãG0âF0äG`àF`ãWj Ë≠¸ˇâFãÀãWj Ë
≠¸ˇâFãE¸âFHäGàF_ã∆^[…¬ UãÏQQ°∞	3≈âE¸ã	VW3ˇã˜âu¯Ö“t*QçE¯P∂APjCPËhâ˚ˇãu¯Öˆt'ãŒËÄ˚ˇãu¯3…AÖ¿O˘ÖˆtãŒËÄ˚ˇãN ã÷ËfÂ˘ˇãM¸ã«_3Õ^ËÇó  …√UãÏÅÏê   °∞	3≈âE¯ãESVãÚâÖxˇˇˇWâM†ã~Dâ}îãGâEòË÷á˛ˇãN ãÿãu†j8â]ÑãA4ãIâE§øA"3…âE¨ãF8HâMåâEÄâF8çE¿QPâçtˇˇˇâMêâMúâç|ˇˇˇâMºâM∏ˇbãE3“âE–ÉƒãEBâEÃâu¿â}ƒâ]»ãO0âMËçAâE®çAâE‡çAâEäG<Vte<Zt	«Eÿ   ÎvÉX upãœãA,ã@ =LÅta=ÃîtZ=,«tS=ê|tLãI$Ö…u◊ÄXuÄYt9ãWãŒËÅ˛ˇˇÖ¿t+jXâEÿÎ#âUÿÎÄYtãWãŒË`˛ˇˇãMÿÖ¿jXE»âMÿãF,çHâMàãM¨A¡âE¥@âF,âE‹äOÄ˘XtÄ˘Vu@âEºâF,äOÄ˘XtÄ˘Vu@âE∏âF,ÄLtMãMòÖ…tãÎ3“ãOLMàâMêãOÖ…tã]êâ]êã]ÑçHâMúççA âE‰çA âEÏçAâEÙçâF,É•pˇˇˇ ãE¨Ö¿~)ãΩpˇˇˇãuàç7ãÀPWˇu§j\ZËˇå˚ˇãE¨G;¯|Êã}îãu†ˇu¥ãÀPˇuàj_ZË‡å˚ˇãWÖ“Ñí   ãwLuàãM†ãj j âu§Ëz˛ˇãMÑã¯ãE†Sˇ@,ã@,âÖ|ˇˇˇãEîˇpDVjXZËöå˚ˇã◊ãã}Ñãœj˜ËPî˚ˇçNQçFPQjZãœËwå˚ˇj j ˇµ|ˇˇˇãœjZËcå˚ˇã}îçKˇã]ÑQãÀâEåˇwDˇu§jNZËFå˚ˇãu†j ˇu‹ãÀˇu®j}ZË1å˚ˇˇu‹ãÀˇu¥ˇu®j~ZËå˚ˇˇu‹ãÀj ˇwTj4ZËå˚ˇã◊âE§ãŒËıˇˇâE‘ãEºÖ¿t"ãWãŒPËﬁ¸ˇãUº3¿ÄYjYD¡ãŒPËÔÍˇˇãM∏Ö…t&ãWQãŒËÓ›¸ˇãU∏3¿@ÄYjYD¡ãŒPË≈ÍˇˇãM∏ÄYÑá   äG:GàE≥ãEºu|Ö¿txÄ}≥VQj Pj7Zj9XD–ãÀËsã˚ˇ3“çM¿ãËΩÓˇˇj 3¿ãÀ@PˇuËj&ZËTã˚ˇçM¿ËÌÒˇˇj j ˇuË∫ê   ãÀË9ã˚ˇj ˇuÄãÀj jZË(ã˚ˇã÷ãÀË1ì˚ˇãKtãu†âHãEºÄVuÄYtãM∏Ö…tPQPjkZãÀËÛä˚ˇÄZtj 3¿ãÀ@Pˇu‡j&ZË⁄ä˚ˇj 3¿ãÀ@PˇuËj&ZË«ä˚ˇj 3¿ãÀ@Pˇuj&ZË¥ä˚ˇãMúÖ…t^ãEòÖ¿tWã HPQˇuêãÀjNZËîä˚ˇãMòããÀHPˇu‰ˇuújNZË}ä˚ˇãMòããÀHPˇuÏˇuújNZËfä˚ˇãMòããÀHPˇuÙˇuújNZËOä˚ˇj ˇuÄãÀj jZË>ä˚ˇãU§ãÀËFí˚ˇãKtâHãEúÖ¿tˇuÄãUòãŒPˇuêËÙˇˇäG<VÖó   j j jXã–çM¿Ë¶ˆˇˇÄZÑÿ  ÄYçM¿u_ˇN8ã~8ãstWˇuˇu∏ˇuËj9Xã–ËTÙˇˇãEºçM¿j PjZËeˆˇˇ3¿çM¿j j çPËTˆˇˇj Vj jZãÀËôâ˚ˇã◊ãÀËç˚ˇã}îÈp  3¿j ˇu∏çPË%ˆˇˇãuºÎaÄXun<XuÄYu
3¿@ãâE¥Î3ˆâu¥j ˇu∏çM¿jXã–ËÔıˇˇÖˆãuºtj VjZçM¿Ë⁄ıˇˇ3¿çM¿j j çPË…ıˇˇÉ}¥ Ö˛   j VjZçM¿Ë±ıˇˇÈÎ   3¿çM¿PPjâE¥Xã–ËòıˇˇÄZÑ    ÄYusãCtÉe¥ âE§ãE∏Ö¿tˇN8ãN8QˇuâM¥çM¿PˇuËj9Xã–Ë7Ûˇˇ3¿çM¿3ˆVVçPËHıˇˇVãuºçM¿VjZË8ıˇˇÉ}∏ tqj ˇu§ãÀj jZËuà˚ˇãU¥ãÀËıã˚ˇÎTãE∏Ö¿tjj Pj1ZãÀËSà˚ˇâE¥3¿çM¿j j çPËÎÙˇˇãuºçM¿j VjZË⁄ÙˇˇÉ}∏ tãU¥ãÀË0ê˚ˇãstâpãuºãUÄãÀËïã˚ˇãçxˇˇˇËZ ˇˇ3¿9Gt*Pˇµ|ˇˇˇãÀPjFZËÁá˚ˇãUåãÀâÖtˇˇˇËÈè˚ˇãKtâH3¿PPˇu®ãÀâE‹j&ZËΩá˚ˇÄXäOâÖxˇˇˇuSÄ˘XuÄYu3¿@âEåÎÉeå j ˇu∏çM¿jXã–Ë1ÙˇˇÉ}å tj VjZçM¿ËÙˇˇ3ˆçM¿3¿VVçPËÙˇˇÈA  Ä˘VçM¿Öﬂ   j j jXã–ËÌÛˇˇÄYçM¿u'ã{t3¿@PVjZË‘ÛˇˇãçM¿3¿@Pj ã–Ë¬ÛˇˇâE¨ÎCÄZãCtâE®u3ˇGWVã◊Ë•ÛˇˇWj Î3ˇâE®GWˇu∏ã◊ËèÛˇˇWVjZçM¿âE¨ËÛˇˇã}®ãj Wj jZãÀËøÜ˚ˇã÷ãÀË»é˚ˇãKtâH3¿ãstçM¿@Pj ã–ËIÛˇˇj V3ˆãÀVjZã¯ËãÜ˚ˇãU¨ãÀËìé˚ˇãKtã◊âHãÀËÑé˚ˇÎM3ˆVVjXã–ËÛˇˇã{tçM¿3¿@PVã–Ë¸Úˇˇj ãçM¿ãEºPjZËÈÚˇˇj Wj jZãÀË.Ü˚ˇã÷ãÀË7é˚ˇ3ˆãKtã}îâHãïxˇˇˇãÀËé˚ˇãKt∫ê   VVâHãÀˇuËËˆÖ˚ˇ9wtLÉX t!VˇwX3¿ãÀ@PjFZËŸÖ˚ˇVˇw\ãÀVjFZË Ö˚ˇãïtˇˇˇãÀËœç˚ˇãKtVVˇµ|ˇˇˇâHãÀjBZË•Ö˚ˇãM¯_^3Õ[Ëé  …¬ UãÏÉÏSVãr4Wã˘ÖˆÑâ   Éb8 çJ3€âM¯CÅ	   ãF0CâE¸Ö¿u9F<uâV8ã÷ÅN   ãv4Öˆu›Î,∂
Ë's˛ˇÉ}¸ π((	P∏¨	D¡Ph0(	WË≥˙ˇãM¯Éƒ˜   uããÄà   Ö¿~;ÿ~h\(	WËä˙ˇYY_^[…√UãÏÉÏ°∞	3≈âE¸ãESã]VWã˘âEËâEçC5j PãâUÏâ]ÙËª›˘ˇãÖˆÑ†   ãEÏ3…àÉ»ˇjfâF"çFQPàN«F  Ä âNâNâN(ˇbÉƒçF,jj PˇbÉf Éƒ3¿∆F fâF çF4âFSˇuËPˇ bãFÉƒ∆ ãF∂ Ä∏êà }ãŒË{˙ˇ«F   ÄøÃ   rçEã÷PãœË¯¸ˇÎã∆ãM¸_^3Õ[ËÜå  …¬ UãÏVãuWã9Öˆt)Ö“t%Ä:xu ÄπÃ   säEãVàÖ“tãœËù¸ˇÉf _^]¬ UãÏSVWj ãÒËß¸ˇÉ} ãÿã}uÉ}ˇtãÄπ±    uˇ7ˇwhÄ(	VË˙ˇÉƒjWã”ãŒËu®¸ˇ_^ã√[]¬ UãÏãI∑¬5ˇˇˇWÉ¯pá«   ∂Ä¬oˇ$ÖíoãEãÖ“Ñ¨   ã	jË]]˛ˇÈû   ãEãÈâ   ãEãÖ“Ñá   ã	Ëb®¸ˇÎ~ãUã	ãËÑ˝ˇÎpãEˇ0ˇ1Ëè˝ˇÎbãEã9ãÖ“tWVãr$ãœË=‹ˇˇã÷Öˆu^ÎCãUãã	ËÅ˝ˇÎ5ãUã	ãË‹ˇˇÎ'ãUã	ãËó“˛ˇÎãUãRÎ”ãEãPÖ“tã	Ëœõ¸ˇ_]¬ ‘nÔn˘noo+oJoXofoto|oço    	


∏;  ÆËf;–vfã¬√SV∑Ú∑¡W∑uÄ¿√f9EÆt∑˘∑}@≈fÖ“tçã f9EÆu·fãE`ú_^[√je+«Z¬f9EÆufÖ…uﬁÆËfãu∞|ÎŸSVãÒWã~ç^9vÆËãçAÙâçAfãQãŒPË◊˝ˇˇ9wÊh®(	WË ˙ˇYYâ~_^[√UãÏãSVWçp∑˙â1;±∏  v	âË°ˇˇˇÎ-çÇî  ª;  ∑»f;”ã«F»fãEfâãMfâFãEâFâN_^[]¬ UãÏÉ‰¯ÉÏ<°∞	3ƒâD$8âT$ã¡ãMâD$SãVãuWã}â|$Å˙R  áÜ  ∂Çƒêˇ$Öç∆áÀ   Èl  ∆áÀ   È`  ãœË1˝ˇÈT  ãS¯ãœË—É˝ˇÈE  «C   È9  ∑CâCÈ-  ∑SˆãœËKÑ˝ˇÈ  3“çCPãœËàÑ˝ˇÈ  3“BÎÎçCPjZÎÊˇsÏ3¿çS¯PPˇs‘çCãœPË	@˝ˇÈ‡  ã˛GˇÄ0  3…fâà4  È«  «CÏ   Èª  ã3…8à±   î¡âKÈ¶  j ˇsçC¯ãœPçSÏË¬X˝ˇÈé  ˇs3¿3“PPãœË≠X˝ˇãSÖ“Ñs  ãjË´Y˛ˇÈe  ãC	CÏÈZ  É{ujh‘	ˇsËo˙ˇÖ¿u«C¯Ä  È5  ˇsÉc¯ ˇsh¿(	WË ˇ˘ˇÉƒÈ  É{çsujhd	ˇ6Ë+˙ˇÖ¿u∏   Îˇ6ˇsh¿(	WËêˇ˘ˇÉƒ3¿âÈ⁄  ˇsãœˇsˇs¸ˇs¯Ë‡C˝ˇÈ¬  3¿âCâCÈµ  ãC+C‡CâC‰È§  ãC+C»CâCÃÈì  ãC+C¯CâC¸ÈÇ  âsÈz  âsâKÈo  ãCãKâGHâOLÈ^  ãC¸C¯Pˇs¯ãSãœË›G˝ˇÈE  ãCÏˇsãS¯@PÎÁãC¯C¸PˇsÏÎÿj ˇs∫¨   ãœËeì¸ˇãK¯ã–K¸QˇsÏÎºˇsãœˇsjtZË$˘ˇˇãÖˆtãŒË§¸ˇãKã÷KQˇsÎëãSãœË˜E˝ˇÈ”  ˇsÏ3“ˇsˇs¯ãœËÃH˝ˇÈº  j3¿PPPPˇsPPP3“ãœË≠l˝ˇÈ†  ˇsãS¯ˇsÏãœË2J˝ˇÈã  ˇsçCÏ3“ˇs¯ãœPËùe˝ˇÈs  ãáË   Ö¿Ñe  Äx+ Ö[  ãH0Ö…ÑP  äCàAÈE  çSãœËÖJ˝ˇÈ6  ãS¯j ãœËK˝ˇÈ%  ãSÏçCPÎÎãC˜–#C¯CâC¯È	  3¿âC¯Èu˛ˇˇ3¿âCÏâCÈÚ  ãCâCÏ«Cˇ   È‡  ãC¡‡âCÏ«C ˇ  ÈÀ  «C¯   Èø  «C¯	   È≥  «C
   Èß  «C   Èõ  ÉcÏ Èí  ÉgL Èâ  ãS‡j ˇsÏˇsÈ±˛ˇˇj3¿PPPPˇsˇsÏÈ∂˛ˇˇˇs¯ãSÏˇs‡È¡˛ˇˇˇs¯ãSºçC‡ˇsÏãœPËid˝ˇÈÃ˛ˇˇ«C   È3  ãCâCÏÈ(  «C   È  «C   È  ˇs¯j ãSãœËJb˝ˇÈ¸  ˇs»çC‡ãœˇs∞çS§ˇsˇsÏPçC‘PË	[˝ˇÈŸ  ˇs¯jÎ«ãS3¿âD$<W¿âD$@ãœçD$(∆D$(	PD$0ËÍ≠˛ˇÈ)¸ˇˇãsãC¯Öˆtã÷âF@ãœËˆˇˇÎPˇ7Ë±á˝ˇâsÏÈ  ãsãC¯Öˆtã÷âF@ãœËÏıˇˇÎPˇ7Ëâá˝ˇâs‡ÈW  ãsÖˆt	ã÷ãœË ıˇˇâsÈ?  ãKãSÏâL$âT$Ö…tn3ˆ9q4tAã—ât$$ãœËúıˇˇVVˇt$çD$,3“PVVãœËÎ|˝ˇVVVVVVP3“ãœË¸U˛ˇãT$ã»âL$Ö…t&äC¯à∏ˇ˚ˇˇâQ4Ö“t!B!AÅ{¯Ü   t∆GÎÖ“tãjËÛT˛ˇãL$âKÏÈ¶  «C¯Ü   Èö  ˇsãSºãœˇs∞ˇs¯ˇsÏˇs‡ˇs‘ˇs»ËÑU˛ˇâC§Ès  ˇsãS∞ãœˇs§ˇs¯ˇs‡ˇs‘ˇs»ˇsºË]U˛ˇãSÏâCòÖ¿tâPHÈB  ã?Ö“Ñ8  ãr$ãœË¶”ˇˇã÷ÖˆuÈ#  ãS¯3¿Ph   PPPPPãœËU˛ˇâC‡È  ãS¯3¿ãs‘ãœPh   PPPPPËÛT˛ˇÖˆtÅfˇ˚ˇˇÖ¿t∆ Üâp4ÈÕ  ã∆È∆  ˇsÏãS‘ãœË5ù¸ˇã–3¿âS‘9CvjçKQãœË∑û¸ˇ3¿ãs‘ÖˆÑñ  kâL$9D1¯ÖÖ  ˇs¯ãS‡ãË˚‘˘ˇãL$âD1¯ã1É‡˝É»â1È_  ã∫≥   j Ëé¸ˇPãSÏãœËøú¸ˇÈ˝ˇˇ3¿∫≥   PPãœË{é¸ˇjçKÏãQãj;ZËœå¸ˇVP∫å   ãœË[é¸ˇãS‘PãœËú¸ˇÈ˛  ãCãKâC¯âK¸È  ãKâK¯ËA|˝ˇÈ‡  ãS¯Ö“Ñ’  ãÖ¿éÀ  k»HäCàD‰Èº  ˇsãSºçC‡ˇs¯ãœj PçC‘PçC»PËÜz˝ˇçKÏâCºQã–ãœËV{˝ˇÈâ  ˇsãS§çCÏˇs¯ãœj PçCºPçC∞PËSz˝ˇãS‘âC§Ö¿tkHÉLËâÈQ  Ö“ÑI  ãË´ù¸ˇÈ=  ˇsçCÏˇs¯ˇs‘P3¿PPãSºãœË
z˝ˇâCºÈ  ãSº3ˆÖ“u9su9s¯u
9suãC‘Î€ãK‘çCÏÉ9uyˇsãœˇs¯VPVVË…y˝ˇã–âSºÖ“tPkHãK‘âD$ã¯ãAâD»ãAâDƒãAâD‘ˆA0ã|$tã|$ãAHâã«Éa0˚ã|$âqHÉLËâqâqâqãS‘ãËûx˝ˇÈy  Ë–z˝ˇVh   VVVVˇs‘3“ãœËgR˛ˇˇsˇs¯PçCÏPVVÈ ˇˇˇ3¿âCâCÈ?  çC3“j PãœËNw˝ˇÄøÃ   ãÇ⁄˚ˇˇÖˆÑ“˚ˇˇãVçCPãœË'Î¸ˇÈø˚ˇˇçK3“QçCÏãœPËw˝ˇÄøÃ   ãÇ_˚ˇˇÖˆÑW˚ˇˇãVçCPãœËÏÍ¸ˇÈD˚ˇˇçsj V3“ãœË⁄v˝ˇÈ÷˜ˇˇçCçsÏPÎËçCÏçs‘PV3“ãœËªv˝ˇâÖ¿Ñì  ãçSË»3˝ˇãâAÈ  çsÏj Î—3¿çS¯PPãœËåR˛ˇÈT˘ˇˇj çC¯ãœPçSÏËwR˛ˇÈ ˙ˇˇçC¯ãœPçCÏPçS‡Ë`R˛ˇÈ-¸ˇˇãCãKâCÏâKÈ(  Éc¯ «C¸   È  ãC¯È¸ˇˇˇsÏãS‘ãœË|ô¸ˇâC‘ˇsãS¯ã»Ë÷ö¸ˇÈÓ  ãSÏãË™ò¸ˇâCÏÎﬂÉKˇÈ÷  «C¯   È   ∫ì   j ˇsãœËã¸ˇÈ£¯ˇˇˇsˇsÏ∫ì   ãœËÏä¸ˇÈë˚ˇˇˇsÏˇsÎÁãSÏçC¯PãœËOx˝ˇãSÏ3¿PPˇsãœË»â˝ˇÈq  ãSãœËæ9˝ˇÉc¯ È^  ãSãœË´9˝ˇãCÏÈ@˚ˇˇãS»çC‘PãœËx˝ˇãCÏÖ¿tãã ;ÅÄ   ~h‹(	h®ÎWË≈ı˘ˇÉƒˇs¯ãS»ãœËx˝ˇ3…âC»QQQˇsºã–ãœˇsˇsÏË◊„˛ˇÈÏ  ˇsãS‘ãœËXò¸ˇjçKÏâC‘Qã–ãœË·ô¸ˇÈ»  ˇsãSºãœˇs‡Ëâò¸ˇÈë¸ˇˇãSãËoó¸ˇãL$çsÏã¯jVã◊Ë™ô¸ˇâ>Èè  ˇs3“ãœˇs‡ËQò¸ˇÈx  ˇsãS‡ˇs»ˇsÏˇs¯ãœËfÿ˝ˇÈ`  ãS‘3¿Pˇsºˇs‡PÎÂÉc¯ ãSãœËö8˝ˇÈ>  ˇsãS§ˇs¯ãˇsÏˇsºËπ˝˛ˇâCÄÈ   ˇsãS»3¿ãPPˇs‡Ëù˝˛ˇÈå˘ˇˇã3¿PPPP3“Ëâ˝˛ˇÈ  ã3¿Pˇs¯3“ˇsÏPËq˝˛ˇâC∞Èÿ  ãC¯È†˜ˇˇãSÏçCPãœË§q˝ˇÈç˜ˇˇçs3“VãœËíq˝ˇÈ Ùˇˇˇsˇsj;ZãœË¬ÓˇˇÈaÛˇˇãçsÏjVj;ZË6á¸ˇãjâD$çCPj;ZË"á¸ˇÄøÃ   âD$rçKã–QãœËtÁ¸ˇãT$ãœVËhÁ¸ˇãD$Pˇt$∫å   ãœËÅà¸ˇÈQÙˇˇãçs‘jVj;ZË“Ü¸ˇãjâD$$çCÏPj;ZËæÜ¸ˇãjâD$çCPj;ZË™Ü¸ˇPˇt$∫å   âD$ãœË/à¸ˇÄøÃ   âD$r"ãT$çKQãœËÂÊ¸ˇãT$çKÏQãœË÷Ê¸ˇãD$Pˇt$$Èiˇˇˇˇs∑SˇsÈ˚˛ˇˇãçsjV∫ö   Ë;Ü¸ˇÈ•ÛˇˇãCÄ8#ul∂@ˆÄêàt_Ä ãCãKâD$ âL$$uçD$ PhË(	WË˜Ú˘ˇÉƒÉc ÈA  3¿∫Ø   PPãœË{á¸ˇâCÖ¿Ñ&  ãL$ çPçIËë˝˘ˇÈ  ãs∫õ   VˇsãœË&ÌˇˇVã–âCãœËıâ¸ˇÈÌ
  ãSÏçCjPãœË=}¸ˇÈ®ıˇˇãçC¯jPj$ZËxÖ¸ˇã»ãC‡âK»Ö…uÖ¿Ñ¥
  ã–È  Ö¿tâAã@%  	AËóÑ¸ˇÈë
  ˇsÏãS¯çs‘VãœË¬à¸ˇÈöÚˇˇçs‡j 3“ÎÍˇs‡ãSÏç{»ãL$WË°à¸ˇˇsãL$ãã÷ËPÕˇˇâ7ÈH
  ç{‘3“j Î÷çsÎ¬ˇs¯ãS‡ãœË¶î¸ˇ3ˆâD$VV∫∞   ãœËcÜ¸ˇã»ãD$âK‘Ö…t!âA90Ñ
  ã@ãK‘ã@%  	AÈÎ	  Ö¿Ñ„	  ã–Èì¯ˇˇˇsãSÏãœËåá¸ˇÈöÙˇˇˇs∑SˆˇsÏãœËÜ¸ˇÈÑÙˇˇãKãCâK¸ÅK¸   ÄâC¯Èú	  ãs¸ã∆ãS%ˇˇˇâC¸ãËKì¸ˇˇsÏã–ãœËÚì¸ˇj çK¯ã–QãœË¨á¸ˇâCÏÖˆy3…QPjZãœËüÖ¸ˇâCÏãCÏÖ¿ÑG	  ÅHÄ   È;	  ãs‰ã∆ãSÏ%ˇˇˇâC‰ãËÍí¸ˇˇs‘ã–ãœËëì¸ˇˇsã–ãœËÖì¸ˇj çK‡ã–QãœË?á¸ˇâC‘Öˆy3…QPjZãœË2Ö¸ˇâC‘ãC‘Îë∑Sj ˇs¯È˙ˇˇj ˇsÏj3ZÈˇˇˇˇsãœˇsÏj-ZËˇÑ¸ˇâCÏj2ãSãœPËΩÎˇˇÈ†  ˇs∫™   ãœˇs‡ËÿÑ¸ˇâC‡j3Î◊∑SˆÈπ˘ˇˇ3“fÉ{ˆjî¬Å¬¨   È§˘ˇˇãSÏãË%í¸ˇˇsã–ãœËÃí¸ˇ3ˆâD$Vˇs‘ãœj0ZËâÑ¸ˇã»ãD$âK‘Ö…tâAÎÖ¿t	ãã–Ëâî¸ˇ9s‡Ñ  Vˇs‘ãœjZËSÑ¸ˇÈ  ãC¯Ö¿uEãs‘ÖˆtÄøÃ   r	ã÷ãœË∞Â¸ˇãã÷Ë1à¸ˇÉ{‡ πÎ∏¥Ï∫ö   D¡ãPË}É¸ˇÈµ  3ˆÉ8uaã@3“VBâD$$ã»Ë5ñ¸ˇÖ¿tKçC‘âD$ã Ä8∞t=ãC¯âpãS¯Ö“tãË‚ì¸ˇVˇt$$∫≠   ãœË≤É¸ˇPˇs‘ãœj5ZË§É¸ˇçK‘âÈÄ   VçC‘ãœˇ0âD$j1ZËÜÉ¸ˇã–çK‘âÖ“uãS¯Ö“tZãËåì¸ˇçK‘ÎNãBÄ8∞u0ã@ãœˇs¯ãË˙É¸ˇâD$ Ö¿t(ã–ãœËyËˇˇˇt$ ãS‘ãœË™É¸ˇÎãC¯âBããœËeÅ¸ˇçK‘âL$9s‡Ñ«  Vˇ1ãœjZËÉ¸ˇãL$âÈØ  3¿∫â   PPãœËÈÇ¸ˇâCÏˇs¯ã–ãœËRÉ¸ˇÈã  3ˆãœVˇs‘j1ZË≈Ç¸ˇˇs¯ã–âC‘ãœË.É¸ˇÈG˛ˇˇçC¯3“PçCÏãœPËtm˝ˇ3ˆâD$ VVVVVVP3“ãœËIH˛ˇãSâD$Ö“t!3…Ö¿EL$ Ö…tkHÉLËâÎãË}í¸ˇVˇs‘ãœj1ZËPÇ¸ˇˇt$Îà3¿ãœPPjZË<Ç¸ˇâC‡ÈNˇˇˇj ˇs‡∫ú   ãœË#Ç¸ˇãSÏâC‘Ö¿t'É{¯ tˇs¯ãœË8ê¸ˇã–ãC‘ãœâPãS‘Ë;Ä¸ˇÈ®  Ö“tãËí¸ˇãS¯Ö“Ñí  ãË·Ö¸ˇÈÜ  ˇsÏãS‘ãœËÚè¸ˇˇsâC‘ã–È_ÛˇˇãSÏãË(è¸ˇˇsã–âC‡ãœËÃè¸ˇÈBÚˇˇˇsÈˆÚˇˇãSãËè¸ˇÈÏˇˇ3…çCÄQˇs§çs‘3“QˇsPˇsåˇsÏQQVãœË2l˝ˇYPçCºãœPçS∞Ë[˝ˇÄøÃ   Ç˜  ãóÏ   Ö“ÑÈ  ããœVË˚ﬂ¸ˇÈ⁄  «C   ÈŒ  ˇsãS‘çCÏˇs¯ãœPËËˇˇÈ≤  ˇsçsÏ3“ˇs¯ãœVË˜ÁˇˇÈºÏˇˇˇs¯ãSãœË:g˝ˇÈã  3“ˇsãœËû˚˛ˇÈz  çS¯ÎÏ3¿çS¯PPçCPãœË	˛ˇÈ^  j çCPçCÏçS‡ÎÂj çC¯PçC‡çS‘Î◊jÎ‚jÎÏãCãK‡CãS¯+¡âD$$çD$ âL$ ãœPË”¿˛ˇÈ  ˇs§çsºãœˇsåçS∞ˇsˇsÏˇsÿˇs‘ˇs»VËº˛ˇÉ{¿ uãC∞ãK¥ÎããNâCåâKêÈ“  «C¯A   È∆  «C!   È∫  ∑CÉc âCÈ™  ãC«CÏÄ   È°ÌˇˇÉc Èí  ãCÏãH,ãC¯âA(ãKÏãC¯âA,Èx  ãC¯â@,Èm  ãCãKâCÏâKh )	WË Î˘ˇYYÈO  h`)	ÎÏh∏)	ÎÂˇs∂C∞çSºˇs§ãœPˇs¯ˇs‡ˇsÏË√˛ˇÈ£Ôˇˇˇs∂CºçS‘ˇs∞ãœˇs¯PˇsÏˇs‡ËN¬˛ˇÈˆˇˇˇsçS‡ãœˇs»ˇs¯Ë(«˛ˇâC»È‡  ãC3ˆâD$ ãCÏâD$ãC¯âD$ãã»Vj0âD$Ër¬˘ˇã¯ãD$ÖˇuÖ¿Ñ ÓˇˇãL$ã–jË€C˛ˇÈÓˇˇˇt$ ãT$ãL$f«ââGË¡˛ˇâG$ã˜ÈÎÌˇˇ3¿ãœPPjGZËÆ~¸ˇâC‡Ö¿ÑY  ∆@ÈP  ãçC¯jPjGZË|¸ˇâC»Ö¿Ñ5  äK‡àHÈ*  «C   È  «C   È  ˇs¯ãSãœË«˛ˇÈ   ˇsˇs¯ˇs‡ˇs‡h¨ÜjZãœË∑˝ˇÈ‡  ˇs3¿PPˇsh$|jÎ‡ãœËÁ:˛ˇÖ¿Öæ  3“ãœËq˝ˇÈ∞  çCãœPçS¯Ëhq˝ˇÈù  j 3“ãœË≠˝ˇÈç  çCPçS¯ÎÎãS‡çCPãœË¨”¸ˇÈq  ãáƒ   çS¯á¿   ãœ+âC¸Ë˜’¸ˇÈQ  ãS‡çCPãœËq˘¸ˇÈ>  ã3…˛GˇÄ0  fâà4  ãœãSË{ÿ¸ˇÈ  ãS»çCPçCÏãœPËJ⁄¸ˇÈ  3“ãœË≠ˇˇÈˆ   çSÎÔˇs‘çCãœPçCÏPçS‡Ë± ˇˇÈ◊   ãœËJˇˇ3¿âá¯   âá¸   ÈΩ   ãè¯   ãCÖ…uâá¯   ãCÎ›+¡CÎ÷ãSãœjË2á˛ˇÈç   ∆CÈÑ   ∆C¯ Î~∆CÏÎx∂C‡çS»Pˇs¯ãœˇs‘Ër˝ˇÈv˝ˇˇˇs3“ãœËòr˝ˇÈÁˇˇˇsãSÏãœËÜr˝ˇÈÎˇˇˇsÏãSãœËâ¬ˇˇãKãCÏâA$ÈÌÍˇˇ3¿9C¯tãS‘ãPˇsÿËH¬˘ˇãK¯âãC¯âC‘ãD$_∑4EÿîæÄPÉk–∑øEäŒ∑M`úçJãT$Àâ
fâqfâãL$@^[3ÃËNo  ãÂ]¬ ãsãC¯ãSÏâD$ ÖˆtâVâFÎÖ“tãËÛã¸ˇãD$ Ö¿t	ãã–Ë‚ã¸ˇâs‘Èqˇˇˇçs»Vˇs¯ˇsÏãSãœË_¡ˇˇÈwÁˇˇãsãS¯ÖˆtÉf âVÈ„ÍˇˇÖ“Ñ€ÍˇˇãËúã¸ˇÈœÍˇˇçs‘Vˇs¯j Îºçs¯3¿VPPÎ≤3¿3“PPjUPjZãœË=¿ˇˇÈEÁˇˇ∂CãœãSÏPj jUˇs¸ˇs¯Ë¿ˇˇÈ¥Èˇˇ∂CãœãS»Pˇs¸ˇs¯ˇs‰ˇs‡ËˇøˇˇÈ‹˚ˇˇ∑CˆÉc¸ âC¯È¥˛ˇˇ∑KãC¯âK¯ÈÁˇˇ∆C Èú˛ˇˇäCàC¯Èë˛ˇˇäCˆÎÛäCàCÈÅ˛ˇˇãCãS¯Ö¿tâP(ãCÈ[ËˇˇÖ“tÙãË∑~¸ˇÎÎãj jdËæ˘ˇãÖˆt∆F•ãKâN(È¯ÈˇˇãSÖ“ÑÌÈˇˇãËÉ~¸ˇÈ·Èˇˇã3ˆVjdË’Ω˘ˇâC¯Ö¿Ñ˛ˇˇãSãVˇsË@¿˘ˇãK¯ÈE˜ˇˇêéqöq¶q≤q¡qÕqŸqÈq˚q r	r&rká?rKr`rxr°r¨rÓr,sDsQsbsssÑsåsós®s¡sŒs⁄s˘s$t3tJtft{tìt¡t–t·t‹àÍt˝tuu&u;uGuSu_uü|kuíå0|tu}uçu†uÆu«u”uﬁuÍuˆu
v-v4v_vávØv«v`wlwìw„wx,Ü=xßx≈xyy&yJy}y…yÏy∫z«z {;{O{X{á{é{°{∂{Õ{ﬁ{Ó{ˆ{|º'|<|R|i|q|ï|®|∫|}>}S}w}ã}¶}µ}»}Ê}ˇ}~π}.~6~I~[~p~‘~ZiÄÄ.ÄuÄãÄîÄæÄ«ÄÃÄ*Å<ÅRÅjÅÀÅ&Ç4ÇAÇfÇÇàÇùÇÉWÑ{ÑüÑÖÖÄÖöÖã∏Ö¿ÖœÖ8ÜQÜiÜ{ÜåÜëÜ®Ü∂ÜƒÜ»ÜÃÜÛÜ4á@áLá\átáéáôá∑áæá≈áËáà&àîà∂àËàÙàâ&â9âVâiâyâÇâïâµâ»âÎâäää/äIähäyäÇäàäéä®äπäÀäÊäXãïãÆãÿã„ãÌãå"åBåRåaåjåuåzåÖåßåﬁå ã 	
 !"#$%&'()*+,-./01234567489:;<=>=6?@A7BCDEFGHIJKLM*NOPQRSTUVWXYRZ[\]^_*`ab6Ycde>fgh*i47i>6jklm66nopqrstuvwxyz{|6@}~}ÄÄÅÇÉÉÑÖÜáàâäãåçéèèèèèèèêëíìîïñóóòh7ôh7öõúùûü†°6¢£§}•N}¶ß7®©™6´¨≠ÆØRR∞±≤≥¥¥µ6∂∑∏π∫ªºΩæø¿*N¡¬√ƒ6≈∆«»… ÀÃÕŒœ–—“““””‘’÷◊ÿŸ¢⁄€‹›ﬁﬂ¢‡·‚„¢‰¢‰Â‰ÊÁËËÈ6Í¢ÎeÏÌUãÏÉÏ°∞	3≈âE¸SVãÒã⁄W∑Àâ]ÏãFâEÙã∑ËÔ›ˇˇã}ã]Î5∑–+—Ä∫PÉ u
ã;Ü∏  sIWSˇuÙãŒˇuÏË—ﬁˇˇãMÏ∑–∑…Ë≤›ˇˇπ—  ∑¿f;¡sæÉ¡¸f;¡w ãUÏW∑ ã–SQãŒÆËËDﬁˇˇÎjãŒË˚›ˇˇÎaπœ  f;¡uãFÉÙâFÎLÆËâ}Ùâ]Ä; â}Ëã~â]‰tçEPhË(	WËøﬂ˘ˇÉƒÎh*	WËØﬂ˘ˇYYãMÏçE‰∑—ãŒPâ~Ëó€ˇˇãM¸_^3Õ[Ë|g  …¬ UãÏÉÏSVãÚãŸâ]ÙÉ˛åØ   ÆËä3“∂D3ˇàMˇ∂…j∂Äêìk¿∂âêì¡·3¡3∆Y˜Ò∂ä0…ÉÈxtW∂Åê{;∆uM∑<MXÅäEˇ$ﬂçó‡xâU¯:u3äC$ﬂ:á·xu&jZ;Ú~-+]¯çø‚xä;$ﬂ:uBG;÷|Ò;÷}ã]Ù∂â∞ÃÉÈyúÎãE∂âËÑâ_ã∆^[…¬ ÃÃÃÃÃÃÃÃÃUãÏãUÅ˙í   w#ãE∑UXÅÅ¡‡xâãE∂äê{â3¿Î3¿@]¬ ÃÃÃÃÃÃÃÃ∏ì   √ÃÃÃÃÃÃÃÃÃÃUãÏQãUçE¸ãMP«E¸;   Ëæ˛ˇˇ3¿É}¸;ï¿…¬ UãÏQQ°∞	3≈âE¸VWã˘ã7çU¯ãŒËG   ãE¯=∂   tÍj;Y;¡t"É¯ttÉ¯ut=£   t=§   t
f9E@≈uã¡ãM¸â73Õ_^Ë≈e  …√UãÏQSVãÒWä∂˘â}¸∂áH«É¯á  j[ˇ$Öçô∂F3ˇGˆÄêàtG∂7ˆÅêàuÚ«∂   ã«ÈS  Ä~-u"∂NjXÎ
É˘
t	@∂0Ö…uÚ«∂   È+  «k   È  «   È  «   È  3¿@âÈ   «j   ÈÚ  «l   ÈÁ  Ä~*u-äFÑ¿t&jY∂¯Éˇ*uÄ<1/t∂<1ÖˇtAÎÍÖˇçAD¡ÎÅ«m   È©  «n   Èû  3¿«5   Ä~=î¿@Èå  äF<=u«7   jXÈw  <>tG<<u«h   ÎË«8   ÈY  äF<=u«9   ÎŒ<>u«i   Î¬«6   È3  Ä~=Ö#  «4   Î•Ä~|t«g   È  «o   Îå«   È˝  «f   ÈÚ  «q   ÈÁ  ∂^3…AÎ;ﬂu
∂D;«u
AA∂1Ö€uÈÉ˚'u«t   çAÈ∑  Ö€t«;   ÎÏ«∑   ã¡Èû  ∂FÑòêàu«å   ÈÑ  «ö   Ä˘0u=äF<xt<Xu2∂FˆÄêàt%∂FjZˆÄêàtB∂2ˆÅêàuÚã¬È?  ãE¸3ˇÎG∂7ÑòêàuÛÄ<7.uG∂7ÑòêàuÛ«ò   ä7<et<Eu>äL7∂¡ÑòêàuÄ˘+tÄ˘-u%∂D7ÑòêàtÉ«ÎG∂7ÑòêàuÛ«ò   ∂7ˆÄêàFÑ^˝ˇˇG«∑   ∂7ˆÅêàFuÏÈE˝ˇˇ3¿@Î	∂<0Öˇt@Éˇ]uÚj;Éˇ]π∑   ^DŒâ
Èw  ∂F«õ   3“j[BÑòêàÑˇˇˇB∂2ÑôêàuÛÈˇˇˇ∂N3¿3ˇ«õ   @Ö…t2ˆÅêàFtGÎÉ˘(uÖˇ(É˘:u8Lu
@@∂0Ö…u÷ÖˇÖ  «∑   È˘   @ä0∂ÀÑ€tˆÅêàuÉ˘)uÁÄ˚)u◊ÈD˝ˇˇ∂F3…AÎA∂1Ä∏H«vÚ∂1ˆÄêàFÖÇ   «;   Rã—ãŒË@˙ˇˇÈô   Ä~'ub∂Fj«ô   YÎA∂1ˆÄêàuÚä1<'uˆ¡t«∑   Î<'tAä1Ñ¿uÙÄ<1 çAD¡ÎJÄ~ªuÄ~øu«∂   jÈ¥¸ˇˇ3…AÎA∂1ˆÄêàFuÚ«;   Èn˝ˇˇ«∑   3¿Î	«∑   3¿@_^[…√fêÌò∞òUôˇñ=ò=òòïúñÁóbñ3ï˙ï*ñÂïPñúïfïqï|ïÜïëï⁄ï{ñÜñëñËñUô}ôsô<ôUãÏÉ‰¯ÅÏÏ  °∞	3ƒâÑ$Ë  ãEÉL$ˇSVãÒâD$W3…ã⁄âL$ã>ãG|âD$9èº   uâè(  çD$8âNâD$0çT$,3¿âû‰   âD$8ãÀçÑ$‹  ât$4âÑ$Ë  ãá  âD$ â∑  ËF˙ˇˇã»âL$È8  ãT$,Å˙£   åÓ   Éø(   ÖÑ  ãD$,=∂   uŸÈ¯   Ä; u#ãD$$É¯u3“ÎÖ¿Ñ   3“B3…âL$È£   =£   u4çCçL$$âD$$Ëg˘ˇˇj;Y;¡tã—Î}çL$$ËS˘ˇˇÉ¯∫£   j;XE–Îd=§   u*É|$$çCâD$(uJçL$(Ë%˘ˇˇÉ¯tj;Y;¡u5∫§   Î3=•   Öæ  É|$$çCâD$(uçL$(Ë¯ˇˇÉ¯u∫•   Îj;Xã–ãL$âT$,Qâéƒ   çL$4Sâû¿   Ë`ˆˇˇ\$É~ ãD$,âD$$u"çT$,ãÀË	˘ˇˇã»âD$)L$âæ˛ˇˇ«F   ãL$0çD$8;»v'ÆËçAÙâD$0çAfãQçL$0PËú“ˇˇãL$0çD$8;»w‹ÄS t«F   ãNÖ…t"É˘etÉ~ uË„  Ph∏B	WË ˘ˇÉƒâFãFÖ¿t)ãL$âˇ∂‰   Ph@*	ˇvË€À˘ˇÉƒ«D$   Éf ãNâû‰   Ö…tÉ~$ ~Ä~ u%ËÏv˚ˇÉf Ä~ uãVlÖ“tãœËº´˘ˇÉfl Éfh ˇ∂   Ë3´˘ˇÄæÃ    uˇ∂Ë   WË˝ˇÄæÃ   sãñ   ãœËÃ≤˛ˇãñ‹   Ö“tãœËm´˘ˇãD$ ãå$Ù  âá  ãD$_^[3ÃËx]  ãÂ]¬ SQh$*	VËu’˘ˇÉƒÈ®˛ˇˇ«F	   Èú˛ˇˇÃUãÏSVãu2€WÖˆuπƒâ Ë¥0  3¿ÈÍ  äÑ“Ñÿ  j_æ É˘'8ÑH  ã¡ÉË	Ñ§  ÉËÑõ  +«Ñì  ÉËÑä  ÉËÑÅ  +«Î(ã¡ÉË-Ñô  +«Ñ@  ÉËÑ3  ÉË Ñ  ÉËÑË   ∂¬ˆÄêàFÑ  ∂F3ˇGÎG∂7ˆÄêàFuÚÉÈCÑî   IÉÈt\ÉÈtÉÈÑÄ   IÉÈtHÉÈÖä   ÉˇuWh,	VË·’˘ˇÖ¿uujÎsÉˇuWhT*	VË»’˘ˇÖ¿u\jÎZÉˇ	uSWh\*	ÎÂÉˇuWhh*	VË¢’˘ˇÖ¿u6jÎ4Éˇu-Whl*	VËâ’˘ˇÖ¿ujÎÉˇuWhL*	VËp’˘ˇÖ¿ujÎjYOj˜_ÎjFäÑ“Ñã˛ˇˇä¬ä–æ¿;¡t	Fää¬Ñ“uÓÑ“Ño˛ˇˇÎ<]tFäÑ¿uıÈ]˛ˇˇ3…Î-Ä~*tãœÎ#˜Îççq<*uÄ>/täÑ¿uÏÈ2˛ˇˇçq3…AF∂√ääú¡†»Ñ“Ö+˛ˇˇ3¿Ä˚î¿_^[]¬ Ä~-uØÎÄ˙
tÃFäÑ“uÙÎ€ÃÃÃÃÃÃÃÃÃUãÏÉ‰¯SVËá   Ö¿uC3…ËñL˚ˇãÖˆtãUãŒj jjˇjˇË’H˚ˇ≤ãŒË@L˚ˇÖ¿t
PËç˝ˇˇãÿÎj[ãŒËÔO˚ˇ∂√^[ãÂ]¬ ÃÃÃÃπÙ  Ë!—˘ˇ¬ ÃÃÃ∏êâ√ÃÃÃÃÃÃÃÃÃÃ∏JW. √ÃÃÃÃÃÃÃÃÃÃ3¿@√UãÏÉ‰¯QÉ=±	 SVWt3¿È„  Ë=ü˘ˇãÖˆÖ‘  jYËQ†˘ˇã¯WË£†˘ˇ3€Câ±	95±	uËa§˘ˇãÖˆu3É=(±	 â±	uãÀË†˘ˇÄ=D∞	 £(±	t	Ö¿uj^Îˇ$±	WËÆ†˘ˇÖˆÖe  ˇ5(±	Ë;†˘ˇ95±	Ö  95±	Ö
  j\Vh ﬂ	â±	ˇbÉƒπ≈	jZËÑ`˝ˇjZπ(ø	Ëw`˝ˇjZπÄº	Ëj`˝ˇjCZπ∞±	Ë]`˝ˇ95 ±	u4ã5¨∞	ÖˆuhúwjË‚   ã5¨∞	YYˇ5®∞	ãŒˇ0cˇ÷ãÖˆu|j
â ±	Ëø•˘ˇÖ¿uj^ÎfPËê¶˘ˇË\˙ˇãÖˆuUPËú˘ˇã»Ö…uãÛÎEãAjâÑ«	Y;¡j B¡hp«	£t«	ËÛú˘ˇãÖˆuˇ5 ±	ã¸∞	ã¯∞	Ë/(˙ˇâ±	É%±	 ˇ5(±	Ënü˘ˇWËü˘ˇ°$±	H£$±	Ö¿ˇ5(±	Ëæû˘ˇÉ%(±	 WËAü˘ˇã∆_^[ãÂ]√UãÏÉ‰¯ÉÏS3€VW9±	tπrå ËÂ+  È—  ãEHÉ¯áø  ˇ$Ö§fâD∞	ÈØ  f«D∞	 È°  f«D∞	Èì  j	øÄ∞	ãuYÛ•ÈÅ  j	æÄ∞	ã}ÎÏjø`∞	Î‡9`∞	uËﬂÎ˘ˇjæ`∞	Î‹ãE£@∞	ÈI  äE¢H∞	È<  ãE£¯∞	ãE£¸∞	ãE£ ±	È  ãE« †   È  jø§∞	Èyˇˇˇ9¨∞	uhúwjË˝˛ˇˇYYjæ§∞	ÈiˇˇˇãE£T∞	ãE£X∞	ÈŒ   ãE£,±	ãE£0±	Èπ   äE¢F∞	È¨   äE¢G∞	Èü   ãuø  ˇãMãUãE;Û|;√r
;Û|
;«vã«ãÛ;”|;ÀsW¿fD$ãT$ãL$;÷|
;»vã»ã÷£∞	â5Ù∞	âË∞	âÏ∞	Î4ãE£‹∞	Î*ãE£±	Î ãE£\∞	ÎãEãM£8±	â<±	Î3€Cã√_^[ãÂ]√ Q¢]¢k¢ó¢†¢	§–¢	§∂¢y¢ã¢	§)£§	§>£S£˚¢£`£	§m£ÿ£Ì¢‚£Ï£√¢	§ˆ£UãÏÉÏSVWã}ãÒâUËã«˜mâU¸3“âEË“{˘ˇÖ¿~jXÈ  Äæ8   tÆËˇ∂`  Ë.£˘ˇÉÁ¯3…ÉˇOœ3€âM¯Ö…Ñ	  ãU3¿Ö“I¬Ö¿Ñ˜   ãEËÖ¿u.Ë:ö˘ˇˇu¸ˇuËñ°˘ˇã¯Ë?ö˘ˇÖˇtãœËJ¢˘ˇôâEâU¸ãM¯Îã¯âM¯ã—ã«âUÏâE‰Å˘Ä  |<çÅÄ  ôRPˇu¸ˇuËDn  ã»ØE¯âMÙãMô+»ãE¸¬3€ShÄ   PQË!n  ãM¯ÎLã¯ã¬âE¯Å˙   |Eã}çÇÄ   ôRPˇu¸WË¯m  ã»ãEÏØ¡âMÙô+¯ãE¸¬3€ShÄ   PWË÷m  ã}‰ãMÏãUÙâEÎ,Ö¿~ôRPˇu¸ˇuË∂m  ãM¯ã–3€ÎãÀã˚ÎãM¯ã”âUÙâ]∑¡âæ`  âûL  âûP  fâÜ4  fâÜ6  ÖˇtcÖ“~â]ÏâU‰âã«âæL  ãÿ˘ÉÍuÌãUÙ3€ãMâûT  âûX  âæ\  Ö…~ã”âã«âæT  ã–ÉÔÄÉÈuÏãUÙãMÉ}Ë çî¡Î*3¿âûT  âûX  äÀfâÜ4  ã˛ã√â∂`  3€â∂\  Câæd  âû0  àé8  âÜ<  3¿_^[…¬ ÃÃÃÃÃÃÃUãÏVãuãŒËå‹˘ˇÖ¿uπé Ë!'  3¿ÎãF^]¬ ÃÃÃÃÃÃÃÃUãÏQQSVWã}ãœËX‹˘ˇÖ¿uπ é ËÌ&  ÎpˇwË∂ô˘ˇÄ[ uãœËHó˙ˇ3€9_~=ãÀâ]¸ãGãDÖ¿t!ã@ã5‘∞	ãŒã ãÄ‰   ˇp,ˇ0cˇ÷ãM¸CÉ¡âM¸;_|»Ä[ uãœË0ó˙ˇˇwË∞ô˘ˇ3¿_^[…¬ ÃÃÃÃÃÃÃUãÏÉÏSVãu3€WãŒâ]Ùã˚Ë∞€˘ˇÖ¿uπ:é ËE&  È—   ˇvËô˘ˇ8^[uãŒËûñ˙ˇãÀã”jâM¸âU¯[;NçÖ   ãFãDÖ¿thÄxubã@ã âEÄx ãx,uBãà‰   Ëe!˙ˇÖˇu-ãu3€Ö¿tãHâMf9XuPVËlT˙ˇãMã¯ã¡Öˇtﬁãuj[ãU¯ãM¸;˚u3¿«EÙ   ã¯AÉ¬âM¸âU¯ÖˇÑrˇˇˇÄ~[ uãŒË/ñ˙ˇˇvËØò˘ˇÖˇu9}Ùuãﬂã√_^[…¬ ÃÃÃÃÃÃÃÃÃÃÃUãÏQãMã¡SVãuW-Ë  Ñ¢   ÉËÑÖ   3ˇG3€9›ËÜtCÉ˚rÒÈä   ãF ãV$âE¸ãEÖ¿~ã›ÏÜ3¿M¸¬Îu*ã›ÏÜ3¿˜—˜–#M¸#¬âF$âN 9M¸u;–t	3“ãŒËÑ}˚ˇãUÖ“t5ã›ÏÜ3¿#N #F$»u3ˇâ:ÎˇuãUãŒˇuË˚ˇˇã¯Î
ãNãEâ3ˇã«_^[…√ÃÃÃUãÏãEVãu;L∆Pˇuˇuˇ(bÉƒÖ¿uã∆+E^]¬ ÃÃÃUãÏãEãUÖ¿tÄ|ˇ uÉËuÙãMVãuÖ…tÄ|ˇ uÉÈuÙVQRPˇuËîˇˇˇ^]¬ ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃUãÏãEVãu;L∆PˇuˇuË ˘ˇ+uÖ¿Eã∆^]¬ ÃÃÃÃÃÃUãÏVãuãŒË,Ÿ˘ˇÖ¿uπ‰é Ë¡#  3¿3“ÎãF(ãV,^]¬ ÃÃÃUãÏVãuãŒË¸ÿ˘ˇÖ¿uπÒé Ëë#  ÎˇvËZñ˘ˇãEãMˇvâF(âN,Ë¶ñ˘ˇ^]¬ ÃUãÏVãuãŒËºÿ˘ˇÖ¿uπ è ËQ#  3¿3“ÎãFhãVl^]¬ ÃÃÃUãÏ]È«ˇˇˇÃÃÃÃÃÃÃUãÏVãuãŒË|ÿ˘ˇÖ¿uπè Ë#  3¿3“ÎãFpãVt^]¬ ÃÃÃUãÏ]È«ˇˇˇVãÒÎãAã—ãŒâÜË  Ë6ù˘ˇãéË  Ö…u‰3¿âÜÙ  âÜ¯  àFY^√SWãz$ãŸÖˇt"É/uVãwãŒˇwˇ0cˇ÷^ã◊ãÀ_[ÈÏú˘ˇ_[√UãÏQVãÒÄ~[ uËí˙ˇW3ˇ9~~UãœâM¸SãFã\Ö€t7ã[Ö€t0ãCÄx+uçP4Î91tçQã
Ö…uÛÎ
ãAâË–›˛ˇãÖ€u”ãM¸GÉ¡âM¸;~|≤[ãæà  Î*ãGãPÖ“tÉ¬4Î91tçQã
Ö…uÛÎ
ãAâËä›˛ˇã?Öˇu“ãŒËﬁ˛ˇÄ~[ _uãŒËÅí˙ˇ^…√Éy Vu'ãq3“Öˆ~ãAÉ¿ãÖ…tÉy uBÉ¿;÷|Ï3¿^√3¿@^√SVWã˘ã⁄ÖˇÑá   Ë!◊˘ˇÖ¿uπuè _^[È{!  ˇwËFî˘ˇˆGZtã∑ÿ   ãŒj Wˇ∑‹   jˇ0cˇ÷ãœËª˛ˇˇjDZãœËaË˛ˇÖ€u(ãœËcˇˇˇÖ¿thx*	jWËB≈˘ˇÉƒˇwËMî˘ˇjXÎãœ∆G]ßËœ   3¿_^[√ÃÃÃÃÃÃÃUãÏVWã}ÉŒˇãœËH÷˘ˇÖ¿uπ©è Ë›   ÎfSˇwË•ì˘ˇãUÖ“tãœË˝ˇãÿÖ€çSˇI”ÎãW3€J;⁄0ÆËãGãÀ¡·É¿+”»BãÖ¿t∂@Î3¿;∆N∆É¡ãÉÍu„ˇwË©ì˘ˇ[_ã∆^]¬ UãÏQãM3“Ëø˛ˇˇY]¬ ÃÃÃÃÃÃÃÃÃÃÃÃÃUãÏãM3“BËü˛ˇˇ]¬ UãÏÉÏSVWã˘Ä]ßÖ  ËN˛ˇˇÖ¿Ö  3“ãœË  ãœË˝ˇˇ3€ãÛ9_~7ãÀâ]¸ãG¡âE¯9XtãHË§≠˙ˇãE¯ãM¸âXÉ˛tâXFÉ¡âM¸;w|ŒãG9XtˇpËU˝ˇãœË”€˛ˇãœËF¸¸ˇãœËï,  Ëc+  ãœË¯*  Ëf+  ãá§  âE¸Ö¿t*ãXã”ãœË∫¸ˇˇãsã”ãœË«ô˘ˇãﬁÖˆuÂãE¸ã âE¸Ö¿u÷çèú  ËŸ˘ˇã∑¥  ÖˆtJãFjYâEÙçXâM¸ãCâE¯Ö¿tˇ3ã»ˇ0cˇU¯ãM¸É√ÉÈâM¸u€ãUÙÖ“tãœË^ô˘ˇã6Öˆu∏3€çè¨  Ëøÿ˘ˇãáà  Ö¿tãÿãsãœã÷ËAÍ˛ˇã÷ãœË)⁄˛ˇãÖ€uÂçèÄ  Ëçÿ˘ˇâ_@9ü$  t	3“ãœËT¬˘ˇãè$  ËD@˚ˇ9ü–   ~"ãá‘   ãˇ4òãq4QãŒˇ0cˇ÷C;ü–   |ﬁãó‘   Ö“tãœËøò˘ˇãG∆G]’ãPÖ“tãœË™ò˘ˇã∑  Öˆtˇ∑   ãŒˇ0cˇ÷ˇwËbë˘ˇˇw∆G]ŒË∆ê˘ˇÄø8   tˇ∑`  ËÚó˘ˇWËÏó˘ˇÎˇwË2ë˘ˇ_^[…√UãÏÉÏÉe¸ SVWâUÙãÒËè˘ˇÄ~[ uãŒËHé˙ˇ3¿ˆFt8Ü±   uçxÎ3ˇ3€9F~B3…âM¯ãFãTâUÖ“t#ÄzãE¸ãUÙjYD¡âE¸ã«3¡ãMPË"æ˙ˇãM¯CÉ¡âM¯;^|√jDZãŒËå‰˛ˇË£é˘ˇÖˇt3“ãŒË	v˚ˇãŒË˚¸ˇÄ~[ uãŒËÒç˙ˇÅf ˇˇ˜ˇ3¿Éf$˝ãæÙ   âÜ   âÜ  âÜ  âÜ  Öˇt9E¸u8FQuˇ∂   ãœˇ0cˇ◊_^[…√ã—∏ƒ,	ÉÍdt6ÉÍt+ÅÍü  t∂…É˘s&É<ç(w tÆËãç(w√∏‘,	√∏-	√∏Ï,	√ÃÃÃUãÏãEVWã}ã∑  É¯}ÆË∂ê\ì∂à‡ÇÎk»djdZÅÈh  ç;∆~ã÷+—Ö“3¿Îãi¬Ë  ãq<PQãŒˇ0cˇ÷3¿@_^]¬ ÃÃÃÃÃÃÃÃUãÏVãuãŒËå—˘ˇÖ¿uπë Ë!  Î2ˇvËÍé˘ˇãEˇvÉ¶ƒ   É¶   âÜº  ãEâÜ¿  Ë"è˘ˇ3¿^]¬ ÃÃÃÃÃÃÃÃÃÃÃUãÏQSã]VãuãŒWã}Ë#—˘ˇÖ¿uπòë Ë∏  Î:ˇvËÅé˘ˇ3…ã«ÖˇN¡ÖˇNŸãM3“ÖˇN âép  âÜx  âût  ˇvËØé˘ˇ_^[…¬ ÃÃÃÃÃÃÃÃUãÏVãuãŒWËª–˘ˇÖ¿uπ±ë ËP  Î'ã}Öˇ~Vhp±VË˛˛ˇˇâæ  Î
j j VËÏ˛ˇˇ3¿_^]¬ ÃÃÃÃUãÏVãuãŒËl–˘ˇÖ¿uÖˆtÄ~]ßtπ√ë Ë˜  Î
«Ü(     ^]¬ UãÏÉ‰¯ÉÏâT$SVWã˘Ö“Ñ  É} ãutÖˆÖ˚  3…9Mî¡3¿Öˆî¿;¡Ö‰  3…9M î¡3¿9E$î¿;»ÖÃ  ãEâD$É¯ˇåº  É¯è≥  ã ËŒΩ˘ˇ=ˇ   è°  ã]ã”ãM(É„Å‚ 8 ã√ÅÚ    âT$ÉËÑò   ÉËÑè   ÉËÑÜ   ÉËt~ÉËt3€CÎwã\$É Qˇu$ÅÚ    ãœˇu ÆËVˇuãt$$ˇuˇuRVã”ËˇˇˇÖ¿u8ˇu(ãD$ã”ˇu$É»ãœˇu 5    ˇuÆËˇuˇuˇuPVË—˛ˇˇÖ¿uj[ÎÆËÈ   j[ãt$ä√ãœj PVãt$ ã÷ÆËâD$(ËEM˝ˇã»Ö…t\ãAÉ‡;√ã\$uRæ;√uKÉøº    th-	jWËqΩ˘ˇÉƒjXÈì   3“ãœËÔq˚ˇjˇt$ ã÷ãœSÆËËÌL˝ˇãÖˆujÎ‘ã\$É} uŸÉ} u”3¿ÎYã÷ãœÆËËCˆˇˇãE(Ö¿tˇ ãMâF$ãFÉ‡àD$âFãEÖ¿E»ãEâFãE âFãE$âFãEâNâFÎ≠πÍë Ë∂  _^[ãÂ]¬$ UãÏÉ‰¯QSVW3€âT$ã˘ãÛËÒÕ˘ˇÖ¿uπií ËÜ  ÈÆ   ˇwËLã˘ˇ9](t9SjË¯ê˘ˇãÖˆuWËSò˘ˇˇuãu(ãŒˇ0cˇ÷3¿@ÎZãE(âFãEââFÎãEãT$ãœVˇu$ˇu ˇuˇuˇuPˇuˇuË0˝ˇˇâD$Öˆt9uˇuãM(ˇ0cˇU(VËÿë˘ˇãD$8_SuÖ¿tã–ãœËPò˘ˇãÿˇwËã˘ˇã√_^[ãÂ]¬$ ÃÃÃÃÃÃÃÃÃÃÃÃÃUãÏãU3¿ãMPPPˇu$ˇu ˇuˇuˇuˇuËÎ˛ˇˇ]¬  ÃÃÃÃÃÃÃUãÏˇu(ãUãMj j ˇu$ˇu ˇuˇuˇuˇuËπ˛ˇˇ]¬$ ÃÃÃÃÃUãÏˇu,ãUˇu(ãMˇu$ˇu ˇuj ˇuˇuˇuËà˛ˇˇ]¬( ÃÃÃÃUãÏQVãuãŒË{Ã˘ˇÖ¿tsÉ} tmSWˇvË›â˘ˇãUQjˇãŒËoπ˘ˇ3ˇâE¸WWWˇu$ã–ãŒˇu ˇuˇuˇuˇuËÙ˚ˇˇãU¸ãÿÖ“tãŒË#ë˘ˇÄ~S uÖ€tã”ãŒË(ó˘ˇã¯ˇvË‡â˘ˇã«_[Î
πƒí Ëù  ^…¬  ÃÃÃÃÃÃÃÃÃÃÃUãÏQVWã}ãGˇph\-	ËWØ˘ˇYYjˇãVWËJv˚ˇVËDê˘ˇ_^Y]¬ ÃÃÃÃÃÃÃÃÃÃÃÃÃUãÏSã]ãÀVWËöÀ˘ˇÖ¿tnã}ÖˇtgãuÉ˛˛|_ÆËˇsËÚà˘ˇj jVã◊ãÀË—I˝ˇˇsãË:â˘ˇÖˆt3¿Î>WË‹Æ˘ˇYÖ¿ujXÎ.h H3…ã◊QQQQhê∑PjˇuãÀÆËË ˝ˇˇÎ
π˛í Ë¡  _^[]¬ ÃÃÃÃÃÃÃÃÃÃÃÃÃUãÏWã}ãœË¸ ˘ˇÖ¿uπì Ëë  3¿Î9VˇwËWà˘ˇãUÖ“ã∑‹   ˇwî¡âóÿ   ˛…Ä·@àOZãMâè‹   Ëäà˘ˇã∆^_]¬ ÃÃUãÏSã]VãuãŒËò ˘ˇÖ¿uπ2ì Ë-  Î6ˇvËˆá˘ˇˇv3“∂√Ö€EU3…Ö“âñÿ   E»ãEàNZâÜ‹   Ë*à˘ˇ3¿^[]¬ ÃÃUãÏVãuãŒË< ˘ˇÖ¿uπQì Ë—  3¿Î?WˇvËóá˘ˇäVZãMÄ‚ãæ‰   ãEâé‡   âÜ‰   àVZÖ…tÄ ÄàVZˇvËƒá˘ˇã«_^]¬ ÃÃÃÃÃÃÃÃÃÃÃÃUãÏWã}ãœËÃ…˘ˇÖ¿uπoì Ëa  3¿Î,VˇwË'á˘ˇãMã∑Ë   ˇwâèÏ   ãMâèË   Ëgá˘ˇã∆^_]¬ ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃUãÏWã}ãœËl…˘ˇÖ¿uπàì Ë  3¿Î,VˇwË«Ü˘ˇãMã∑¯   ˇwâè¸   ãMâè¯   Ëá˘ˇã∆^_]¬ ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃUãÏWã}ãœË…˘ˇÖ¿uπ°ì Ë°  3¿Î,VˇwËgÜ˘ˇãMã∑   ˇwâèÙ   ãMâè   ËßÜ˘ˇã∆^_]¬ ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃUãÏVãuãŒË¨»˘ˇÖ¿u ãuÖˆtˇuãŒˇ0cˇ÷πœì Ë-  ÎISWˇvËÙÖ˘ˇãû  çæ   Ö€tˇ7ãÀˇ0cˇ”ãEˇvâÜ  ãEâãEâÜ  ËÜ˘ˇ_3¿[^]¬ UãÏãE;E|ËÚÉ˘ˇˇuˇuËµ  Ë˘É˘ˇ3¿]¬ ÃÃÃÃÃÃÃÃÃÃUãÏQVãuãŒË˚«˘ˇÖ¿uπî Ëê  ÎãEÖ¿~
ÆËπ@ªÎ3…ã¡PQVË   3¿^Y]¬ ÃÃÃÃÃÃÃÃÃÃÃÃUãÏQVWã}ãœË™«˘ˇÖ¿uπî Ë?  3¿Î*ˇwËÖ˘ˇãMã∑  ˇwâè  ãMâè  ËFÖ˘ˇã∆_^Y]¬ ÃÃÃÃÃÃÃÃÃÃÃÃÃUãÏSã]VãuãŒWËG«˘ˇÖ¿uπ=î Ë‹  È∏   ã}ÖˇtÉˇãEÖ¿tÉˇÉ˚áò   ÆËˇvËÇÑ˘ˇã]Ö€t*Ä; t%ã”ãŒË‚Ú¸ˇÖ¿yS3ˇhê-	GWVÆËË†µ˘ˇÉƒÎ(jXˇuÆËÉ¶ƒ   ã–WˇuãŒËk   ã¯ãŒã◊Ë!µ˘ˇÄ~S uÖˇtã◊ãŒË¥ë˘ˇã¯Éæº    u
«Ü(      ˇvËYÑ˘ˇã«ÎjX_^[]¬ ÃÃÃÃÃÃÃÃÃÃÃUãÏ3¿PPPˇuˇuË˝˛ˇˇ]¬ UãÏÉÏâU¯3¿ã—âEÙSV3…âUÏ3ˆâMW9Bé–   3ˇjâ}¸[ÖˆÖ¿   ;M¯t
É}¯Öñ   ãB3ˆã|8ÖˇtmãwãœËyÄ˙ˇÄ~ tj^ÎKã3ˆ9±Ë   t?9uu3“Îãë¿   ˇu∂Aˇuˇ±‡   ˇ±®   Pˇ±ƒ   ãâË   RˇuãËF~˙ˇããœËûÄ˙ˇãMãUÏÉe Ée ã}¸;Ûu
3¿@3ˆâEÙÎãEÙAÉ«âMâ}¸;Jå@ˇˇˇÖˆuÖ¿uãﬁ_^ã√[…¬ ÃÃÃÃÃÃÃÃUãÏÉ‰¯VãuWÖˆu
jYËﬁÚˇˇÎYãŒËb≈˘ˇÖ¿uπ”î Ëø  ã»Î‡ˇvËÜÇ˘ˇÄ~S tjYÎÉ~@ tãé$  ≤Ëq-˚ˇã¯Öˇu
ãN@ËèÚˇˇã¯ˇvË∞Ç˘ˇã«_^ãÂ]¬ ÃÃÃÃÃÃUãÏVãuÖˆu∏x»ÎqãŒËÈƒ˘ˇÖ¿u∏∞ÕÎ_WˇvËÇ˘ˇÄ~S tøx»Î>ãé$  ≤Ë-˚ˇã¯Öˇu$ãN@Ë ÚˇˇPˇv@VË+≥˘ˇãé$  Éƒ≤Ë⁄,˚ˇã¯ãŒË5è˘ˇˇvË Ç˘ˇã«_^]¬ ÃÃÃÃÃÃÃÃUãÏVãuÖˆt%ãŒË`ƒ˘ˇÖ¿uπï ËΩ  ÎÄ~S uãFD#F@ÎjX^]¬ ÃÃÃÃÃÃÃÃUãÏVãuÖˆt"ãŒË ƒ˘ˇÖ¿uπï Ë}  ÎÄ~S uãF@ÎjX^]¬ ÃÃÃÃÃÃÃÃÃÃÃUãÏãEÖ¿tã@HÎ3¿]¬ ÃÃÃÃÃÃÃÃÃÃÃUãÏãMË:Òˇˇ]¬ UãÏÉÏS∂]âUÙVãÒWÉ˚tÉ˚tçCˇÉ¯vπNï Ë   È˚   j[j Rä”ËŒ?˝ˇã¯â}¸ÖˇÑí   É Ñà   Éæº    th®-	jVËﬁ±˘ˇÉƒjXÈ∂   3“ãŒË\f˚ˇ∂GÉ‡˜;√uSãUÙçé¨  j Ëæ»˘ˇãM¸jZãxÉ«âU¯äGÙ:Au!ãâEÖ¿tˇw¯ã»ˇ0cˇUãM¸ãU¯Ég¸ É«ÉÍâU¯uÃjˇuÙä”ãŒË!?˝ˇã»Ö…ujÈxˇˇˇãEâAãEâAãEâAäE$
√àAÉf@ Éæ$   t	3“ãŒË™∞˘ˇ3¿_^[…¬ ÃÃÃÃÃÃÃÃÃÃÃÃUãÏQVãuWã}ãœË7¬˘ˇÖ¿uπ«ï ËÃ  É»ˇ_^Y]¬ É˛wÒãEÆËãT∑xÖ¿xãµ`à;¡~ã¡Î3…A;¡}ÖˆD¡âD∑xã¬Î√UãÏÉÏ,ãEÉeÏ SVã ã⁄âM‘ãÀWâEÙËÕØ˘ˇˆEÙ@ãuÄ=F∞	 Ñô  É˛åê  jhÏ-	SÆËˇ(bÉƒÖ¿Öt  !E¯çFÉMÙ@3…ôÄ<&u	3ˇGÉeË ÎW¿fEÿã}‹â}Ëã}ÿ«UËA;Œ|÷RPË&Ö˘ˇã¯ÖˇÑ=  jj WˇbÉƒÉ«Ä{/j^uaÄ{/u[çKäâM‹j^Ñ¿tL</tFäÑ¿uÙÉ˛t;É˛uj	QhÙ-	ˇ(bÉƒÖ¿t!ãM‹QçF˘Ph .	«EÏ   ËY§˘ˇÉƒÈ%  ÆËä3“âUÑ…Ñ6  Ä˘#Ñ  FÄ˘%Öô   ∂ˆÄêàÑà   ∂DˆÄêàtzääLä¬¿¯É∆$∂¿k¿*–ä¡¿¯É‚$¡‚∂¿k¿*»É· ãUÖ§   Î3<#Ñ§   Ö“u<?Ñò   É˙u<=Ñã   <&ÑÉ   É˙u<&tzFäÑ¿u∆ÎpÉ˙uFÄ˘&tÄ˘=uWãE¯Ä|ˇ tÄ˘&u#ã»∆ AâM¯ã¡Î<#t@Ä|ˇ&t9FäÑ¿uÌÎ/jZâU2…ÎÖ“uÄ˘?t
É˙uÄ˘&u3“2…BâUãE¯à@âE¯äÑ…ÖŸ˛ˇˇãE¯É˙u
∆ @ÎãE¯j«j PˇbÉƒãœËm≠˘ˇçp˜È$  ãŒË\≠˘ˇâE‡çXﬁãÀËM≠˘ˇâE‹ãE‡É¯u PVh.	ˇ(bÉƒÖ¿ÖÂ   â]‘È›   É¯u-PVh .	ˇ(bÉƒÖ¿Ö¿   π   «EË .	ãÒ∏Ë∆	Î9É¯Ö¢   PVh8.	ˇ(bÉƒÖ¿Öä   ãMÙ∫á   ãÚ«EËL.	∏∏∆	# âM‡3…âEã Î*ã»Ë§¨˘ˇãM‹;»uQˇu‰Sˇ(bÉƒÖ¿t"ãM¯ãEAã»âE‰âM¯Ö¿uÃSˇuËhT.	ÈÖ˝ˇˇãEãM¯ãL»Ö…t‰ã¡%ˇˇˇ;E‡˜÷#uÙÒâuÙãu‹FÛÄ> Ö”˛ˇˇÎaSˇuË«EÏ   hh.	ÈB˝ˇˇçFôRPËÂÅ˘ˇã¯ÖˇujXÎ{jj WˇbÉƒÉ«ÖˆtVSWˇ bÉƒjç7j PˇbÉƒÉeÙøãu‘VËKx˘ˇã»ãEâÖ…u!VhÄ.	«EÏ   Ë.°˘ˇYYãMâWËÅ  3ˇãMãEÙâãMãEÏâ9_^[…¬ SVWã⁄ãÒË{´˘ˇç~Î)Ä? t(SWˇÃbYYãœãË^´˘ˇ¯ÖˆtçOËP´˘ˇÉ«¯u”3¿_^[√çGÎ˜UãÏÉ‰¯ÉÏSVW3ˇâL$ãMã¬âD$$ãﬂâL$ â|$â\$Ö¿uπó Ë•  Èq  â8ËêŸˇˇÖ¿Öb  ãu8D∞	t˜∆ Ä  tâ|$Î˜∆   t
«D$   Î∂E∞	âD$˜∆   tÅÊˇˇ˝ˇÎ9±	tÅŒ   WÅÊÁ ˆˇh(  âuË†É˘ˇã¯ÖˇÑõ  çGâD$9\$t3…AËÉy˘ˇâGÖ¿uWË‡Ä˘ˇ3ˇÈr  âD$ÎçGˇ0Ëπy˘ˇã∆«G   %   ∆G]m˜ÿ«á0     j0¿% ˇˇˇˇ   âGDçá»  âG3¿fâá4  çGxh`àPˇ b3“∆GQÉƒâó§   ∆GVˇ°Ë∞	ãÏ∞	ÅO ‡Ä‡Rhê©RâG0ãG$âO4ãœâW`âó¥  âó∞  âó¨  âó∏  âóà  âóÑ  âóÄ  âóå  ∫§çj«á∏   ø	âG$ËÂ˜ˇˇj hê©j j∫§çãœËŒ˜ˇˇj hê©j j∫§çãœË∑˜ˇˇj h™j j∫»$	ãœË†˜ˇˇj h¿©j j∫ê.	ãœËâ˜ˇˇ8_SÖ  jXãŒâw<#»3¿@”‡®Fuπﬁó Ëë  Î#ãT$çD$ãL$ PçD$PWçEPËÁ¯ˇˇãuã\$âD$Ö¿Ñé   jY;¡uWËFÖ˘ˇ3…∏∏B	Ö€SD¡Pˇt$WËX©˘ˇÉƒÖ€Ñ°  É=@∞	 t?ˇ5ò‡	ËÔw˘ˇãÀËg~˘ˇ)†ﬁ	ã5d∞	ãŒˇƒﬁ	Sˇ0cˇ÷ˇ5ò‡	Ë x˘ˇÈY  ã5d∞	ãŒSˇ0cˇ÷ÈC  ãGÅŒ   ãT$3€ãÉ¿VSPWË\å˙ˇÖ¿tj=
  YD¡ãœã–Ëh®˘ˇÈ	  ãOãIËlt˙ˇãWãœãRËt:˝ˇãOâA8_SuãGãœSh§çã@äPMàWPË<6˝ˇâGãOãIËØt˙ˇ3“ãœË9:˝ˇãOâAãG« |ÊãG∆@ãG«@T*	ãG∆@∆G]v8_SÖÇ   â_@9ü$  t	3“ãœË•ß˘ˇjh‘	WË£ÌˇˇjY;¡uWË÷É˘ˇWË ıˇˇÖ¿u!ªxÅ˚x}bã3ãŒWˇ0cˇ÷É√Ö¿t‰ã–ãœËzß˘ˇˇ5X∞	3“ãœˇ5T∞	Ë	⁄ˇˇhË  WË‚ˇˇãL$ˇ1Ë∑v˘ˇWË°ÙˇˇãÿÄ˚u 3“ãœËŒ·ˇˇ3ˇÎãœË1¿˝ˇWËÄÙˇˇÖ¿u Î®Ö€t∆G]∫ãD$$â8ãD$Ö¿tã»ËU
  É¿¸PË}˘ˇã√_^[ãÂ]¬ ÃÃÃÃÃÃÃÃÃUãÏãUãMj jË/˚ˇˇ]¬ ÃÃÃÃÃÃÃÃÃÃUãÏˇuãUˇuãMË˚ˇˇ]¬ ÃÃÃÃÃÃÃÃUãÏÉ‰¯QSVãuWÖˆuπuò Ë¬  ÈÄ   3€âË´‘ˇˇÖ¿us3…Ë∫ ˚ˇã¯Öˇt9]∫ò.	SEUãœjjˇjˇËÒ˚ˇ≤ãœË\ ˚ˇÖ¿t2Sjã÷ã»Ëî˙ˇˇãÿÖ€u#ããHãIˆANu∆@Pãã@ã@∆@MÎj[ãœË„#˚ˇ∂√_^[ãÂ]¬ ÃÃÃÃÃÃÃUãÏj ˇuˇuˇuˇuˇuË   ]¬ ÃÃÃUãÏVãuãŒË\∑˘ˇÖ¿tKÉ} tEWˇvËøt˘ˇˇuãUãŒˇuˇuˇuË®ÛˇˇÄ~S uÖ¿u3ˇÎã–ãŒË0Ç˘ˇã¯ˇvËËt˘ˇã«_Î
π´ò Ë¶  ^]¬ ÃÃÃÃUãÏQSVãuãŒW3ˇãﬂËÂ∂˘ˇÖ¿ta9]t\ˇvËJt˘ˇãUQjˇãŒË‹£˘ˇâE¸Ö¿tWˇuã–ãŒˇuˇuË"ÛˇˇãU¸ãŒãÿËù{˘ˇÄ~S uÖ€tã”ãŒË¢Å˘ˇã¯ˇvËZt˘ˇã«Î
πƒò Ë  _^[…¬ ÃÃÃÃÃUãÏVãuãŒË\∂˘ˇÖ¿uπ›ò ËÒ   Î+ˇvË∫s˘ˇãEˇvÉ¶   âÜ  ãEâÜ   Ë˘s˘ˇ3¿^]¬ ÃÃUãÏVãuãŒË∂˘ˇÖ¿uπÚò Ë°   Î+ˇvËjs˘ˇãEˇvÉ¶   âÜ  ãEâÜ   Ë©s˘ˇ3¿^]¬ ÃÃUãÏVãuãŒËºµ˘ˇÖ¿uπô ËQ   3¿Î∂FQ^]¬ UãÏVh</	RˇuãÒhú.	VË]ö˘ˇÉƒã∆^]¬ Qh</	Qh∏.	hú.	jË;ö˘ˇÉƒjXY√Qh</	QhÃ.	hú.	jËö˘ˇÉƒjXY√Qh</	Qh‘.	hú.	jË˚ô˘ˇÉƒjXY√ÃÃÃ¬  ÃÃÃÃÃÃÃÃÃÃÃÃÃUãÏÉÏP°∞	3≈âE¸ãEâE‰ãEâEÃãEâEËãEâE¿ãESâEºãE VãuãŒâE∏ãE$W3ˇâE¥ãE(ãﬂâuƒâE∞â}¯â}â}Ïâ}‹â}ÿâ}‘â}–Ë°¥˘ˇÖ¿Ñ  9]ÃÑ  ˇvË˛q˘ˇ8^[uãŒËëo˙ˇçU¯ãŒËåÙ˝ˇâE»Ö¿Ö  ˇu‰ãUÃãŒË1◊¸ˇãÿâ]‡Ö€Ñ˚   Ä{+ÑÒ   ãUËÖ“Ñœ   øC"ãœâMÙâE‰Ö¿~0ã[ã˜ãâ]Ëó§˘ˇÖ¿ãE‰tãUËFÉ√;|‰ã]‡ãUËâuÙãuƒãMÙ;»u4ˆCÄÖò   ã ËúL¸ˇÖ¿Ñâ   øK âMÙÖ…xã¡¡‡CâEÎâ}ãEÖ¿tP3“ã»Ë °˘ˇãMâEÏËh›¸ˇˆAã–j Xï¿âU‹âEÿ∑AÉ‡âE‘øC ;EÙuˆCt3…AâM–Îâ}–Ö“uÎ«EÏ@3	«E‘   «E‹§çÎãﬂÄ~[ uãŒËën˙ˇãM¿Ö…tãEÏâãMºÖ…tãE‹âãM∏Ö…tãEÿâãM¥Ö…tãE‘âãM∞Ö…tãE–â9}»u0Ö€u,ãU¯Ö“tãŒËÏw˘ˇˇuËˇuÃhË.	VË¡ï˘ˇã»3€ÉƒâM¯CÎãM¯ã]»3“∏∏B	Ö…QD¬PSVËw°˘ˇãU¯ÉƒÖ“tãŒË¢w˘ˇÄ~S uÖ€tã”ãŒËß}˘ˇã¯ˇvË_p˘ˇã«Î
πoô Ë˝ˇˇãM¸_^3Õ[Ëî)  …¬$ UãÏVj ËÂl˘ˇãÖˆtiEË  PVãv<ãŒˇ0cˇ÷ôπË  ˜˘^]¬ ÃÃÃÃÃÃÃÃÃÃÃÃUãÏVãuãŒË≤˘ˇÖ¿uπﬁô Ë±¸ˇˇÎ$ˇvËzo˘ˇˇvÉ…ˇ∏ˇ   É} E¡âFDË¿o˘ˇ3¿^]¬ ÃÃÃÃÃÃÃÃÃUãÏQSVãuãŒW3ˇGË∆±˘ˇÖ¿uπÓô Ë[¸ˇˇÈ–   ˇvË!o˘ˇãUãŒËZ  ãÿÖ€Ñ™   ãÀËl˙ˇãCãUããy@É˙uãEâ8Î/É˙uã	Î!É˙uãÅË   Ö¿tãHÎãIDÎÉ˙#uãIlãEâ3ˇÎRÉ˙&u0ãuãÀãâE¸Ëèã˙ˇâ3ˇãE¸=ˇ   wWP3“ãÀÆËËŸä˙ˇãuÎˇuã∂ƒ  ãœËåi˘ˇã¯ãEâ∞ƒ  ããÀËÒk˙ˇˇvËªn˘ˇã«_^[…¬ ÃÃUãÏQãEVÉ¿˚3ˆÉ¯á  ˇ$ÖÃ‘h  hêﬂ	h∏‡	ˇ bÉƒÈÍ  h  h∏‡	hêﬂ	Î·ãEãMÖ¿tã@ã@90EVVâP±	ËÉï˘ˇÈ≤  ãUãMËÔ˘ˇãÈ†  ãE3…£@±	Ëÿù˘ˇÎËãE£Ñﬂ	ãE£àﬂ	Èz  ãEã5‡∆	Ö¿Ñi  £‡∆	È_  âu¸ãu¸ÈT  ãuÈL  æ‚ ÈB  ãEãMâHLÈ4  ãE£D±	È'  ãEÉp È  ãE£P∞	È  äE¢I∞	È  ãE£H±	ÈÙ   ãEãMâà®   È„   95±	Ö◊   3ˆFÈœ   Wã}ˇwËÔl˘ˇãUãœËZ€¸ˇÖ¿x@àá∞   ãE¿3á¥   É‡3á¥   âá¥   —Ë$àá±   ãEâá¨   uÖ¿tãœËÄ◊¸ˇˇwË˘l˘ˇ_ÎjãMã∑B®t]%˚ˇ  fâBãfÉH ÎKãEâ0âpÎAãE+∆t/ÉËtÉËtÉËu+ãEã £åﬂ	Îãåﬂ	ÎãEã £ﬂ	Îãﬂ	ãEâã∆^…√ Ω“⁄“ƒ‘”$”5”J”e”p”ƒ‘Ç”ƒ‘ù”ê”√”©”ƒ‘x”·”–”ı”ƒ‘Z‘Î“∂”y‘É‘Äyˇ uÄy˛ uÄy˝ uÄy¸ tIÎÂã¡√UãÏQSVã⁄âM¸WSˇ‹bã¯çwVãu¸SVˇ bÉƒçF«_^[…√ÃÃÃÃÃÃÃÃÃUãÏQQSVWˇuˇ‹bˇuã¯ˇ‹bˇu¯ˇ‹bÉ¿
Éƒ¯3€ãE3ˆ¿âE¸Ö¿~ãEˇ4∞ˇ‹b@¯YÉ” F;u¸|ÁSWËaq˘ˇãÖˆtZjj VˇbãUç~Éƒâ}¯ãœËCˇˇˇã]¸3ˆÖ€~ã}ã∑ã»Ë-ˇˇˇF;Û|Òã}¯ãUçH3€àËˇˇˇãUã»Ëˇˇˇfâã«_^[…¬ ÃÃÃÃÃÃÃÃÃÃUãÏãMÖ…tË…˛ˇˇÉ¿¸PËàq˘ˇ]¬ ÃÃÃÃUãÏãMÖ…tãUÖ“tË¢˛ˇˇã»Ë[ÔˇˇÎ3¿]¬ ÃÃÃÃÃÃÃÃÃÃÃUãÏãMWÖ…tGã}Öˇx@VËp˛ˇˇããŒËÆö˘ˇFÎ Ä> tã«OÖ¿~ãŒËòö˘ˇçNËéö˘ˇÉ∆u‹3¿8E∆^Î3¿_]¬ ÃÃÃÃÃÃÃUãÏˇuˇuËbˇˇˇ3…9Mï¡Ö¿t3“QBã»Ë∆¥˝ˇ3…Ñ¿ï¡ã¡]¬ ÃÃÃÃÃÃÃÃÃÃÃÃÃÃUãÏÉÏ°∞	3≈âE¸ãEãMPQËˇˇˇÖ¿tçUÙã»Ë•˘ˇÖ¿uãEÙãU¯ÎãUãEãM¸3ÕË	#  …¬ ÃÃÃÃÃUãÏãMÖ…u3¿ÎËÖ˝ˇˇ]¬ ÃÃÃÃÃÃÃÃÃUãÏãMÖ…u3¿Î3VËd˝ˇˇããŒË¢ô˘ˇFÎÄ> tãŒËìô˘ˇçNËâô˘ˇÉ∆u„çF^]¬ ÃÃÃÃÃÃÃÃÃÃÃUãÏVˇuË§ˇˇˇãÖˆt
ãŒËVô˘ˇFã∆^]¬ VãÒÖ“tË&◊¸ˇã–Ö“y3¿^√3“ÆËãF“^ãD–√ÃÃÃÃÃÃÃUãÏãMË´˘ˇÖ¿uπîú Ë§ıˇˇ3¿]¬ ãUãMË©ˇˇˇÖ¿tÎã»Ë—¯˙ˇÎ‰ÃÃÃÃÃÃÃÃÃUãÏãMËœ™˘ˇÖ¿uπ§ú ËdıˇˇÉ»ˇ]¬ ãUãMËhˇˇˇÖ¿tÍã@∑@É‡Î·ÃÃÃÃÃUãÏQVãuÖˆuπ@ù Ë'ıˇˇ3¿Î]Sjh/	VË(õ˘ˇÖ¿ç^EﬁãÀËhò˘ˇâE¸æp¨Wã>PWSËõ˘ˇÖ¿uãE¸∂ˆÄêàFtÉ∆Å˛≠}
ãE¸Î“3¿@Î3¿_[^…¬ ÃÃÃÃUãÏãEÉ¯'wÆËãÖp¨Î3¿]¬ ° ﬁ	∫ ﬁ	VãÒÎçà$  ;∆t
ã—ãÖ¿uÓ^√ãâ^√° ﬁ	Væ ﬁ	Ö¿t"Wãπ   ã–ã¬9∫   tç≤$  ãã–Ö¿uË_âÅ$  â^√jYË≠f˘ˇPËg˘ˇ√jYËûf˘ˇPËRg˘ˇ√ÃUãÏQQ°∞	3≈âE¸ãESã]VãuWâE¯3ˇˇvË»f˘ˇË¥ˇˇˇÖ€u!ãŒËEˇˇˇâæ  âæ  âæ   âæ  ÎTãé  Ö…ujçE¯ãÀPˇ0cˇ”Î8ã¡;∆t/ãÄ  Ö¿uÚãE¯âé  ãŒâû   âÜ  Ë„˛ˇˇãŒËˇˇˇÎj_ËEˇˇˇ3¿π/	ÖˇD»QWVË{ó˘ˇÉƒˇvËÜf˘ˇãM¸ã«_^3Õ[Ë«  …¬ VWã˙ãÒË˘˛ˇˇÉæ   uÉæ   uãŒË•˛ˇˇâæ  _^È‚˛ˇˇUãÏÉÏ\°∞	3≈âE¸SVçE∏âM®3€âE¥!]∞3ˆWË´˛ˇˇã= ﬁ	∫ ﬁ	âU¨ÖˇÑx  ãM®9è  uÉß   ãá  ;¡Ö  9∑   tÖ€tSˇu¥ãŒˇ0cˇ÷3€Ëµc˘ˇãE∞Ö¿u
É˚tÈ±   ã»Ë k˘ˇ¡Ë;ÿÖü   ã√¡‡j PËÏj˘ˇâE§Ö¿t{ãÀ¡·Qˇu¥Pˇ bãu∞ÉƒÖˆtVÉ=@∞	 t<ˇ5ò‡	Ë˛d˘ˇãŒËvk˘ˇ)†ﬁ	ˇƒﬁ	Vã5d∞	ãŒˇ0cˇ÷ˇ5ò‡	Ë/e˘ˇÎVã5d∞	ãŒˇ0cˇ÷ãE§âE¥âE∞ÎSˇu¥ãŒˇ0cˇ÷3€Ëc˘ˇãM¥ãá  ãU¨âôCã∑   3¿âá  âá   âá  ÎãM¥Éø   uÖ¿uãá$  âÉß$   Î	çó$  âU¨ã:ÖˇÖò˛ˇˇÖ€tSQãŒˇ0cˇ÷ˇu∞Ë4k˘ˇË˝ˇˇãM¸_^3Õ[Ë¬  …√∏(/	√j∏|6Ë„(  ã˘â}3€çwâââ^j0âuÏÆËË”  â â@â@f«@ââ]¸çwââ^j0âuÏÆËË´  YYâ â@â@f«@ââ_â_â_ˇuçO ∆E¸Ë€  ˇuçO8∆E¸ËÃ  ˇuçOP∆E¸ËΩ  3¿â_hfâGhã«â_x«G|   Ë	(  ¬ ÈÄ  j∏æ6ËZ(  ã˘ãuçU‰ãE3€â]¸ãŒâu‹âE‰ãEâEËãEâEÏçEÏPâ]‡çEËâPâ^Ëy  â]¸ã«E‡   Vâ8ãO;OtËyz¯ˇÉGÎ	QçOË¥  ã∆Ëû'  ¬ jX∏%7Ë‡'  âMºãEãuã]âE∏âE»ãEjTâEÃËú  Yã»âM»Ée¸ ã˘ˇuÃ3¿´´´3¿@«¨E	çyâAâAãœâ}ƒË∆  çO∆E¸VËπ  çO0∆E¸SË¨  ãu»W¿fE¿â}¿âuƒˇuÃ«E¸   çM†3€«E¥   â]†â]∞Ëï¨¯ˇçE†PçM–Ëû˘ˇâ}ËâuÏãU¥É˙rãM†çU   ËpH¯ˇ3¿â]∞«E¥   fâE†ãMºçE–PçE¿∆E¸PÉ¡Ë√  ã]∏ãM¿É# Éc ãA,Ö¿tˇ@ãA(âãA,ãMÏâCÖ…tËì¯ˇçM–ËP≥¯ˇã√Ëf&  ¬ jT∏z7Ë®&  âM¿ãEã]ãuj<âEºâEÃËj  Yã»âMÃÉe¸ ã˘3¿S´´´3¿@«¿E	çyâAâAãœâ}»Ëñ  çO∆E¸VËâ  ãuÃW¿fEƒâ}ƒâu»«E¸   çM§Ée§ Ée¥ S«E∏   Ët´¯ˇçE§PçM–Ë}˘ˇâ}ËâuÏãU∏É˙rãM§çU   ËOG¯ˇ3ˆ«E∏   3¿âu¥fâE§ãM¿çE–PçEƒ∆E¸PÉ¡Ëì  ã]ºãMƒâ3âsãA,Ö¿tˇ@ãA(âãA,ãMÏâCÖ…tËˆë¯ˇçM–Ë/≤¯ˇã√ËE%  ¬ UãÏÉÏ,°∞	3≈âE¸ãEÉe‰ ÉeÙ SVWã˘«E¯   ãMâM‡çM‰PË≠™¯ˇçE‰PçE‘PçOË˝  ãu‹Ä~ uçFPçE‰PË7  Ñ¿tãw;wï√tãF(É¿0Éxrã ãM‡âãU¯É˙rãM‰çU   ËRF¯ˇãM¸ä√_^3Õ[Ëá  …¬ ÈÇv¯ˇVãÒãˇpVË?  j0ˇ6Ëu  YY^√UãÏVˇuãÒÉ& Éf «F   Ëˇ©¯ˇã∆^]¬ j∏≈7Ëi$  ã⁄âMhå   Ëh  Yã»âMÏÉe¸ çq3¿ã˘´´´3¿@«òE	âAâAãŒãEˇ0ãEˇ0ˇ3Ë5˚ˇˇãMãEÏâAã¡â1Ë‡#  ¬ ÃÃÃÃÃÃÃÃÃÃVçqçNËæ∞¯ˇãŒ^È∂∞¯ˇÃÃÃÃÃÃÃÃÃÃÃÃÉ¡È  ÃÃÃÃÃÃÃÃÉ¡È  UãÏãEVÉxãprã ãMÉyãQrã	VPË¨˘ˇ¡Ë^]¬ ÃÃÃÃÃÃÃÃÃUãÏˆEVãÒ«¿E	t
j<VËT  YYã∆^]¬ ÃÃÃÃÃÃÃÃÃÃÃÃÃUãÏˆEVãÒ«¨E	t
jTVË$  YYã∆^]¬ ÃÃÃÃÃÃÃÃÃÃÃÃÃUãÏˆEVãÒ«òE	thå   VËÒ  YYã∆^]¬ UãÏÉÏSã]VãÒWøˇˇˇãF++¡¯¡˚;«tãN@+¡˘âE¯ã——Íã«+¬;»w
ç<
;}¯B}¯WË°  ˇuâE¸çÿã»âEÙËWu¯ˇãVãã]¸9Uuã√ÎãUVSËcç¯ˇãEÙãMÉ¿ãVVPËPç¯ˇWˇu¯ãŒSË  ãEÙ_^[…¬ ËÙG¯ˇÃUãÏQãESWã}ãŸâE¸Ä u,VˇwãÀPË›ˇˇˇã˜ã?çNËÍ˘ˇj0VË  Ä ãE¸YYt÷^_[…¬ UãÏãVWã}ãpÉg Ä~ â7âGu-Sã]SçFâ7PË$˛ˇˇÑ¿tãv3¿Î3¿âwã6@âGÄ~ tÿ[ã«_^]¬ VãÒçN0ËÜÆ¯ˇçNË~Æ¯ˇãŒ^ÈvÆ¯ˇVãÒçNhËkÆ¯ˇçNPËcÆ¯ˇçN8Ë[Æ¯ˇçN ËSÆ¯ˇçNËUs¯ˇçNËÀ¸ˇˇçN^È¬¸ˇˇUãÏVWã˘ã7Öˆt)Sã_ÎãNÖ…tË⁄ç¯ˇÉ∆;ÛuÌãW+ãÉ‚¯Ë«B¯ˇ[ãMãEâç¡âGãEç¡âG_^]¬ UãÏãMÅ˘ˇˇˇw¡·ÆËËA¯ˇ]¬ ËHB¯ˇÃj,∏8ËÛ   ã¡âEÏã]ãuã8âE‡Ée¸ Ée‰ j0ÆËËﬂ  YâEËâE‰É¿Vã»âEËT˘ˇãM3“âQâQãFâAãFâAãEËâVâVâ8âxâxfâPQãMÏçE»P«E¸   Ë_˛ˇˇãç}‘•••ãu‹Ä~ u çFPãEPËë¸ˇˇÑ¿uçM‡â3àCË,  Î/ãuÏÅ~UUUt-Ée‰ çM‡Ë  ãEËãŒPˇuÿˇu‘Ë'  â∆Cã√Ë„  ¬ Ëí  Ãj∏E8Ë    ãŸâ]‡ãEãuã;âE‹â]‰Ée¸ ÉeË j0ÆËËÈ  YVâEÏçHâEËâMË`˘ˇãM3“âQâQãFâAãFâAãEÏâVâVâ8âxâxfâP«E¸   ãã⁄ãx8_u+ã˜çFã˛PQËÆ˚ˇˇÑ¿t	ã63€C3“Îãv3“ã⁄Ä~ ãMt◊ãu‡Å~UUUt+çM‰âUËË&   ãEÏãŒPSWË?   ãM‹âã¡∆AË¯  ¬ Ëß  ÃVãÒãNÖ…tÉ¡Ë¬ ˘ˇÉ~ tj0ˇvËÿ  YY^√UãÏˇAãESãVãuâF;√uâ3âsâs∆FÈ∆   É} uâp;CuâsÎâ0;uâ3ãFWã˛Èé   ãGãPã;¬u7ãPãRÄz t1;xuã¯WË…   ãG∆@ãGã@∆@ ãGˇpËg   ÎHÄz u∆@∆BãGã@∆@ ãGãxÎ(;8uã¯WË9   ãG∆@ãGã@∆@ ãGˇpËc   ãGÄx ÑhˇˇˇãC_∆@ã∆^[]¬ UãÏVãuããBâãBÄx uâpãFâBã;puâPÎãF;puâPÎâârâV^]¬ UãÏãUVãrãâBãÄx uâPãBâFã;PuâpÎãB;uâ0Îâpââr^]¬ hÄE	ËV(  Ãjh∏ö8Ëó  ã˙â}∞ãŸ3¿Ö€u2¿ÈP  âEÏPâE¸çEÏPh‡E	ˇLbÖ¿à  ãEÏSPããqãŒˇ0cˇ÷Ö¿àÙ  ã73€âÖˆtãŒË∏˛¯ˇj VË÷  YY3¿ç}–´j´´´´â]–â]‘â]ÿâ]‹â]‡ÆËËÊ  YçM–âXâE–âW¿fE‰â]‰â]Ë∆E¸ãEÏããqçMƒQPãŒˇ0cˇ÷3ˇGÈY  ãEƒÉËÑ;  HÉËÑ‰   ÉËteÉËÖ  ãEÏj ããq8çM¿QPãŒˇ0cˇ÷ãE‹çu–E‡ãNˇu¿âEÃIçPˇã¬#◊—Ë#»ãFãàã–É¡ Ëd˛¯ˇÖ¿ÖŒ  ãŒË∏  È¬  ãEÏj ããq8çM¿QPãŒˇ0cˇ÷ãEÏj ããq@çMºQPãŒˇ0cˇ÷ãE‹çu–E‡ãNˇuºâEÃIˇu¿çPˇã¬#◊—Ë#»ãFãàçM§Qã–Ë5ıˇˇãM®Ö…ÑR  Ë*à¯ˇÈH  ãEÏj ããq@çMºQPãŒˇ0cˇ÷ãE‹çu–E‡ãNˇuºâEÃIçPˇã¬#◊—Ë#»ãFãàã—É¡hË‹†¯ˇÈ˚  ãEÏj ããq8çM¿QPãŒˇ0cˇ÷ãEÏj ããq4çM¥QPãŒˇ0cˇ÷ãEÏj ããq<çM∏QPãŒˇ0cˇ÷ãu∞É> Öé   j Ë  ã–YâU¨jY3¿∆E¸ã˙Û´ã Ë;
  çMÃ∆E¸âEÃ;Òtã>ÉeÃ âÖˇtãœËn¸¯ˇj WËå  YYçMÃËs¸¯ˇˇu¥ãçEúˇu∏ˇu¿PË(
  ãÀã8ãPÉ  É` ã√â}‰ã⁄â]ËÖ¿tË¯Ü¯ˇãM†ÎZãE‹çu–E‡ãNˇu¥âEÃIˇu∏çPˇˇu¿ã¬#◊—Ë#»ãFãàçMîQã–ËÚˇˇãÀã8ãPÉ  É` ã√â}‰ã⁄â]ËÖ¿tËúÜ¯ˇãMòÖ…tËêÜ¯ˇãEÏPããqPãŒˇ0cˇ÷Ö¿uçE‰PçM–Ëw  ã]Ëã}‰ãEÏPããq$ãŒˇ0cˇ÷Ö¿upãEÏj ããq8çM¿QPãŒˇ0cˇ÷ãEÏj ããq<çM∏QPãŒˇ0cˇ÷ãEÏj ããq@çMºQPãŒˇ0cˇ÷ˇuºçEåãœˇu∏ˇu¿PË¥ÒˇˇãMêÖ…tÉËÂÖ¯ˇÈyˇˇˇ3ˇGãEÏããqçMƒQPãŒˇ0cˇ÷Ö¿Ñü¸ˇˇÖ€tãÀË≥Ö¯ˇçM–Ë3  3€CÎ2€«E¸   ãMÏÖ…tãQãrãŒˇ0cˇ÷ä√Ë›  √È  hå   ∏Ë8Ë  âïhˇˇˇã˘Öˇu2¿ÈÈ   3€â]ÏSçEÏâ]¸Ph–E	ˇPbÖ¿à©   ãEÏWPããqãŒˇ0cˇ÷Ö¿àç   ãEÏjjPããqãŒˇ0cˇ÷ãEÏSPããqhãŒˇ0cˇ÷hÄ   çÖlˇˇˇSPË;  ãçhˇˇˇÉƒËU  PççlˇˇˇË\   ∆E¸çïlˇˇˇãMÏË  Ñ¿tãEÏPããq8ãŒˇ0cˇ÷≥ççlˇˇˇËYˆˇˇ«E¸   ãMÏÖ…tãQãrãŒˇ0cˇ÷ä√Ë«  √j∏g9Ëÿ  ãŸâ]ã}çKQãâçGPË§  çK3ˆQçGâu¸PËí  ∆E¸çKâ1âqâqçwçFã+P¡˙VRËÿ  çK ∆E¸3ˆçG Pâ1âqâqË?  çK8∆E¸çG8â1PâqâqË'  çKP∆E¸çGPâ1PâqâqË  çKh∆E¸çGhâ1PâqâqË˜  ã√ËÓ  ¬ UãÏQSVãŸWã˙ãçW8ÉzãplrãçG Éxrã çOPÉyrã	RPQSãŒˇ0cˇ÷Ö¿à€   ÆËãwã6ÎvãçNã@âE¸ãAçP0ÉzrãÉyrã	É¿Éxrã Rj QãM¸PSˇ0cˇU¸ãFÄx tãFÎ
;puãã@Äx tãÎããÄy uããÒã»Äx tÙÄ~ tÑÉx vããppçGhÉxrã PSãŒˇ0cˇ÷ãwãÎããÀË ˇˇˇÑ¿tÉ∆;˜uÏÆËãSãp<ãŒˇ0cˇ÷∞Î2¿_^[…√SVãÒ3€ÎãŒË}   9^uÙWã~ÎãFO9∏tjˇ4∏Ë†
  YYÖˇuÁãN_Ö…tãV¡‚Ë57¯ˇãjPâ^â^âËu
  YY^[√UãÏãEVWã˘ããpÉ  É` ãOââwÖ…tËÙÅ¯ˇã«_^]¬ VãÒãFãVH–ãFã É‚—ÈH#»ãFãàãL–Ö…tË¿Å¯ˇÉnuÉf ^√UãÏQSVãuWã˘É~ãFâE¸rã6É¯sjVWˇ bÉƒj[Î>ãÿ∏˛ˇˇÉÀ;ÿÆËGÿ3…ã√É¿í¡˜Ÿ»QË>6¯ˇãM¸âçM   QVPˇ bÉƒãE¸âGâ__^[…¬ UãÏÉÏ°∞	3≈âE¸ãESWã}ãŸâ]‰âEÏÖˇt\ÅˇˇˇˇwdVWÆËËYÛˇˇãâ]¯â3âsâuÙç˛ã}ÏâKãMã?ã;¯tãÿWãŒË˜f¯ˇÉ«É∆;˚uÓã]‰âuÙçMâuËì¯ˇâs^ãM¸_3Õ[Ë  …¬ Ë©9¯ˇÃj∏ù9Ë  ã˘3€â}Ïââ_â}j0ÆËË	  Yâ â@â@f«@âãuãœâ]¸ˇuPãˇpË  ãâAããFâGãr8^u,ã8YuããÒã»Äx tÙâ2ããBÎã¡ãHÄy tıâBÎâãâ@çMÏâ]ËÑ   ã«ËC  ¬ UãÏSVãÒWãFãN¡®uçA—Ë9FwQãŒËw   ãNçMˇˇˇˇ!FçYˇã~~ã«—Ë#ÿãFÉ<ò ujÆËË+  YãNâôãFÉÁˇuãòç¯Ë©e¯ˇˇF_^[]¬ VãqÖˆtãˇpˇ1ãŒË|ˇˇj0ˇ6Ë≤  YY^√UãÏÉÏSãŸ3…AVWãSÖ“E ã¡+¬âEÙÉ¯rÉ˘s∏ˇˇˇ+¡;¡Ç‡   …Î‹ã{—Ôâ}¸Ë˝~¯ˇã»Ëï2¯ˇãKãã«âu¯ç<ÜãsçÅ¡Ê+ÚÒVRWËL  ãM¸ç>ãuÙÉƒâE;Œw3ã˘¡ÁWˇsPË*  ã∆+E¸¡‡PãE«j PË  Wã}¯j WË  Î>ã˛¡ÁWÆËˇsPËÙ  ãsãU¸¡‚ç7+ÚVPˇu¯Ë⁄  Wã}¯j ç>PË≈  ãuÙãKÉƒ$Ö…tãS¡‚ËS3¯ˇsâ{_^[…¬ ËS*˘ˇÃÃÃÃÃj∏∫9Ë  ãÒâuËãEãÄx uQˇuËÉ¿ˇuPËl   ãMã¯ãEâGäAàGÄ{ EﬂÉe¸ ˇuâ]ÏWˇ1ãŒË©ˇˇˇâãŒˇuãEWˇpËñˇˇˇâGã√Ë  ¬ ˇuÏãMËË0¯ˇPË«Óˇˇj j Ë%  ÃÃÃÃÃÃj∏Ì9Ë  ãEãâEâMËÉe¸ ÉeÏ j0ÆËË  ã3¿YˇuâuÏçNâFâF âF$Ë©˚ˇˇãM3“âV(âV,ãAÖ¿tˇ@ãAâF(ãAâF,ã∆ââ^â^fâVËr  ¬ UãÏQVãÒ3¿W3ˇâu¸h Œâ>â~«F   fâË¸ï¯ˇâ~ã∆â~_^…√UãÏÉÏ°∞	3≈âE¸ãEVWã}ãÒâ}¯âE¯ãEâEãEPâEÙËæï¯ˇçEÙPçEPçU¯çM‰Ë≥ÎˇˇÉ∆PãŒËÜ˙ˇˇãMËÖ…tËï|¯ˇVãœË∞b¯ˇãM¸ã«_3Õ^Ë∆  …¬ UãÏãAÉÏÖ¿t…√hE	çMÙË|   hPó	çEÙPËŒ  ÃÃÃÃÃÃÃÃUãÏVˇuãÒË“0¯ˇ«ºrã∆^]¬ UãÏÉÏ°∞	3≈âE¸ãUçEÙVãÒâUÙ∆E¯çN«PrÉ! Éa QPˇbYYãM¸ã∆3Õ^Ë.  …¬ UãÏVˇuãÒËßˇˇˇ«ºrã∆^]¬ UãÏQSVWã}ã⁄âM¸ã7ÖˆuSVˇl`Pˇh`Îˇl`ãMÀQVj Pˇ``ãÖˆu!ÎãESˇu¸∆PË‚  3¿â7Éƒ@_^[…¬ UãÏÉÏ8ãESWâEÏ3€ãEã˘QQâUÿââ}‰â}â]¯â]Ùâ]¸â]‹âËÊe  âE‡Ö¿u
∏@ ÄÈ#  Vh   Sˇl`Pˇh`ãÿÖ€ÑŸ   ãEæ   ãMÏ;∆L+∆âEã¡ŒâEËâMÏÖˆé≠   ;˜á™   ÉÏãŒ¡˘ã”ÆËVPã∆+¡ãM‡PË<e  ãMÙã¯ãE¸ŒÉ¿âMÙ«âE¸;M‰wtQãMËã÷ÆËËTO  âE»;˛}Qã◊ãÀÆËË@O  ˇu¯çM»âE–ˇuâ}‘jZâuÃËó˛ˇˇÖ¿t4ãE¯ã◊ãMËÉ¿PˇuÆË;˛tãÀËv˛ˇˇÖ¿tãE¸ã}‰âE¯È,ˇˇˇ9}Ùt«E‹@ ÄQãM‡Ë>e  ãMÿãE¸Sj âˇl`Pˇd`ãE‹^_[…¬ UãÏÉÏ<°∞	3≈âE¸ãESWâE‰3ˇãEãŸâU–â]»âEËâ}‘â}ÃËyN  âEƒÖ¿u
∏@ ÄÈB  Vã]‰çEÏj^;ŒLÒV+ŒSPâMÿË  ﬁÉƒâ]‰É˛ÖÙ   ã]¯∏   ;ÿèË   ãu;è›   ;]»á‘   ;u–áÀ   ãMÿ;Ÿã¡N√+»âMÿãM‰ã—»âU‹âM‰;√Öß   ãEÙâE‡Ö¿tQãM‹ã”ÆËË‚M  ;E‡ÖÜ   ãU‹ãMÃãE‘É¡À∆âMÃâE‘;M»wkÆË;E–wcÆË;ﬁt@â}‡ãMƒSRãUËVVËÌK  ;∆uFãE‡ãU‹@âE‡É¯|ﬁã]ÏÖ€t!QãMËã÷ÆËËuM  ;√uÎVRˇuËË  ÉƒuËãMÿÈ‡˛ˇˇÖˆtø@ ÄãE‘^;E–uãEÃ;E»tø@ Äã«ãM¸_3Õ[Ë™   …¬ UãÏQVW3ˇâ}¸9}t|∫êq3…ãEãà;äuAÉ˘uÔãUã
Î@ãU3…3ˆ9Mv-SãDÚ3€ã}ãò;üã}¸uãDÚCÉ˚uËãÚF;urŸ[Ö…uø@ Ä3…ãEâÖˇuãPããqãŒˇ0cˇ÷ÎøW Äã«_^…¬ Èß  ÃÃÃÃÃÃÃÃ;∞	u√ÈÆ  UãÏˇuË⁄ˇˇˇY]√ÃÃÃÃUãÏˆEVãÒ«§qt
jVË‘ˇˇˇYYã∆^]¬ UãÏÎˇuË[  YÖ¿tˇuËH  YÖ¿tÊ]√É}ˇÑ,¯ˇÈ≤  ÃÃÃÃÃÃÃÃÃÃÃÃÃË"   j ËX  YÑ¿th–˚Ë÷  Y3¿√jËú  ÃVWh†  h‡Ÿ	ˇ0`h®qˇaãÖˆuhÏqˇaãÖˆtFhrVˇ ah$rVã¯ˇ aÖˇtÖ¿tâ=¯Ÿ	£¸Ÿ	_^√3¿PPjPˇÙ`£‹Ÿ	Ö¿uÁjË  ÃÃÃÃÃÃÃÃh‡Ÿ	ˇ∞`°‹Ÿ	Ö¿tPˇ‡`√UãÏVæ‡Ÿ	Vˇ‘`ã ∞	ãEAâ ∞	Vâd°,   ãL›	ãà° ∞	âÅ   ˇÿ`^]ÈR   UãÏVWø‡Ÿ	Wˇ‘`ãuÉ> uÉˇÎ)jdËc   YÎÏÉ>ˇtÒd°,   ãL›	ãà° ∞	âÅ   Wˇÿ`_^]√Vã5¸Ÿ	ÖˆthÿŸ	ãŒˇ0cˇ÷^√ˇ5‹Ÿ	ˇÏ`ˇ5‹Ÿ	ˇ,`^√UãÏVã5¯Ÿ	ÖˆtˇuãŒh‡Ÿ	hÿŸ	ˇ0cˇ÷Î$æ‡Ÿ	Vˇÿ`j ˇuˇ5‹Ÿ	ˇåaVˇ‘`^]√UãÏãEVãH<»∑AçQ–∑Ak(Ú;÷tãM;Jr
ãBB;»rÉ¬(;÷uÍ3¿^]√ã¬Î˘VËÉ  Ö¿t d°   æ⁄	ãPÎ;–t3¿ã ±Ö¿u2¿^√∞^√ËR  Ö¿tËu
  ÎËy¢ˇˇPË∫  YÖ¿t2¿√Ë≥  ∞√j Ë–   Ñ¿Yï¿√ËÕ  Ñ¿u2¿√Ë¡  Ñ¿uË∏  ÎÌ∞√ËÆ  Ë©  ∞√UãÏËÍ  Ö¿uÉ}uˇuãMPˇuˇ0cˇUˇuˇuË:  YY]√Ëπ  Ö¿th⁄	ËA  Y√ËKC˘ˇÖ¿Ñ>  √j ËH  YÈB  UãÏÉ} u∆⁄	Ë•	  Ë(  Ñ¿u2¿]√Ë  Ñ¿u
j Ë  YÎÈ∞]√UãÏÄ=	⁄	 t∞]√VãuÖˆtÉ˛ubË3  Ö¿t&Öˆu"h⁄	Ë´  YÖ¿uh⁄	Ëú  YÖ¿t+2¿Î0É…ˇâ⁄	â⁄	â⁄	â⁄	â⁄	â ⁄	∆	⁄	∞^]√jËÿ  ÃjhPï	ËŸ
  Ée¸ ∏MZ  f9   u]°<  Å∏   PE  uLπ  f9à  u>ãEπ   +¡PQË≥˝ˇˇYYÖ¿t'Éx$ |!«E¸˛ˇˇˇ∞ÎãEÏã 3…Å8  ¿î¡ã¡√ãeË«E¸˛ˇˇˇ2¿ãMdâ    Y_^[…√UãÏË2
  Ö¿tÄ} u	3¿π⁄	á]√UãÏÄ=⁄	 tÄ} uˇuË∑  ˇuËØ  YY∞]√UãÏÉ=⁄	ˇˇuuË}  Îh⁄	Ëe  Y˜ÿY¿˜–#E]√UãÏˇuË»ˇˇˇ˜ÿY¿˜ÿH]√UãÏ]È¥˙ˇˇÈ_˙ˇˇUãÏj ˇ$`ˇuˇ(`h	 ¿ˇ `Pˇ`]√UãÏÅÏ$  jˇ`Ö¿tjYÕ)£(€	â$€	â €	â€	â5€	â=€	få@€	få4€	få€	få€	få%€	få-€	úè8€	ãE £,€	ãE£0€	çE£<€	ãÖ‹¸ˇˇ«x⁄	  °0€	£4⁄	«(⁄		 ¿«,⁄	   «8⁄	   jXk¿ «Ä<⁄	   jXk¿ ã∞	âL¯jX¡‡ ã∞	âL¯h@rË‡˛ˇˇ…√UãÏjË   ]√UãÏÅÏ  jˇ`Ö¿tãMÕ)£(€	â$€	â €	â€	â5€	â=€	få@€	få4€	få€	få€	få%€	få-€	úè8€	ãE £,€	ãE£0€	çE£<€	ãÖ‰¸ˇˇ°0€	£4⁄	«(⁄		 ¿«,⁄	   «8⁄	   jXk¿ ãMâà<⁄	h@rË˛ˇˇ…√ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃUãÏãEÉË t3ÉËt ÉËtÉËt3¿@Î0Ëv˚ˇˇÎËP˚ˇˇ∂¿ÎˇuˇuË   YÎÉ} ï¿∂¿PË  Y]¬ jhpï	ËQ  j Ë•˚ˇˇYÑ¿Ñ—   Ëú˙ˇˇàE„≥à]ÁÉe¸ É= ⁄	 Ö≈   « ⁄	   Ë—˙ˇˇÑ¿tMËc  Ë  Ë6  h\chPcËâ  YYÖ¿u)Ëy˙ˇˇÑ¿t hLch8cËe  YY« ⁄	   2€à]Á«E¸˛ˇˇˇË=   Ñ€uCË   ãÉ> tVËº˚ˇˇYÑ¿tˇujˇuã6ãŒˇ0cˇ÷ˇD›	3¿@Îä]Áˇu„Ë!¸ˇˇY√3¿ãMdâ    Y_^[…√jËI  Ãjhêï	ËJ  °D›	Ö¿3¿ÎiH£D›	3ˇGâ}‰Ée¸ Ëà˘ˇˇàE‡â}¸É= ⁄	ukË?˙ˇˇË2  Ëé  É% ⁄	 Ée¸ Ë9   j ˇuËº˚ˇˇYY∂˜ﬁˆ#˜âu‰«E¸˛ˇˇˇË"   ã∆ãMdâ    Y_^[…√ã}‰ˇu‡Ëh˚ˇˇY√ãu‰Ë˝˘ˇˇ√jËô  Ãjh∏ï	Ëö  ã}Öˇu9=D›	3¿ÈŸ   Ée¸ Éˇt
Éˇtã]Î1ã]SWˇuË…   ãâu‰ÖˆÑ£   SWˇuËù˝ˇˇãâu‰ÖˆÑå   SWˇuËÕ¯ˇãâu‰Éˇu'Öˆu#SPˇuËÏÃ¯ˇÖ€ï¿∂¿PË∫˛ˇˇYSVˇuËj   ÖˇtÉˇuHSWˇuËB˝ˇˇãâu‰Öˆt5SWˇuËD   ãÎ$ãMÏãQˇ0h@ˇuˇuˇuË∑¯ˇˇÉƒ√ãeË3ˆâu‰«E¸˛ˇˇˇã∆ãMdâ    Y_^[…√UãÏVã5HrÖˆu3¿@ÎˇuãŒˇuˇuˇ0cˇ÷^]¬ UãÏÉ}uË.  ˇuˇuˇuËÆ˛ˇˇÉƒ]¬ ãMÙdâ    Y__^[ãÂ]Q√ãM3ÕËﬂÙˇˇÈ›ˇˇˇãMÏ3ÕË–ÙˇˇÈŒˇˇˇPdˇ5    çD$+d$SVWâ(ãË°∞	3≈Pˇu¸«E¸ˇˇˇˇçEÙd£    √Pdˇ5    çD$+d$SVWâ(ãË°∞	3≈PâEˇu¸«E¸ˇˇˇˇçEÙd£    √Pdˇ5    çD$+d$SVWâ(ãË°∞	3≈Pâeˇu¸«E¸ˇˇˇˇçEÙd£    √Pdˇ5    çD$+d$SVWâ(ãË°∞	3≈PâEÏâeˇu¸«E¸ˇˇˇˇçEÙd£    √Éa ã¡Éa «Adr«\r√UãÏÉÏçMÙË⁄ˇˇˇh‘ï	çEÙPËı  ÃUãÏÅÏ$  Sjˇ`Ö¿tãMÕ)jË˘   «$Ã  çÖ‹¸ˇˇj PËù  ÉƒâÖå˝ˇˇâçà˝ˇˇâïÑ˝ˇˇâùÄ˝ˇˇâµ|˝ˇˇâΩx˝ˇˇfåï§˝ˇˇfåçò˝ˇˇfåùt˝ˇˇfåÖp˝ˇˇfå•l˝ˇˇfå≠h˝ˇˇúèÖú˝ˇˇãEâÖî˝ˇˇçEâÖ†˝ˇˇ«Ö‹¸ˇˇ  ã@¸jPâÖê˝ˇˇçE®j PË  ãEÉƒ«E®  @«E¨   âE¥ˇaj çXˇ˜€çE®âE¯çÖ‹¸ˇˇ€âE¸˛√ˇ$`çE¯Pˇ(`Ö¿uÑ€ujË   Y[…√É%H›	 √UãÏÉ%P›	 ÉÏ$É∞	j
ˇ`Ö¿Ñ¨  Ée 3¿SVW3…ç}‹S¢ãÛ[êââwâO3…âWãE‹ã}‡âEÙÅ˜GenuãEË5ineIâE¸ãE‰5ntelâE¯3¿@S¢ãÛ[êç]‹âãE¸E¯«âsâKâSuCãE‹%?ˇ=¿ t#=` t=p t=P t=` t=p uã=T›	Éœâ=T›	Îã=T›	ãM‰jXâM¸9EÙ|03…S¢ãÛ[êç]‹ââsâKãM¸âSã]‡˜√   tÉœâ=T›	Îã]°∞	É»«P›	   £∞	˜¡   Ñì   É»«P›	   £∞	˜¡   ty˜¡   tq3…–âEÏâUãEÏãMj^#∆;∆uW°∞	É»«P›	   £∞	ˆ√ t;É» «P›	   £∞	∏  –#ÿ;ÿuãEÏ∫‡   ãM#¬;¬uÉ∞	@â5P›	_^[3¿…√3¿9 ∞	ï¿√ÃÃÃÃÃÃÃÃÃÃÃh@
dˇ5    ãD$âl$çl$+‡SVW°∞	1E¸3≈PâeËˇu¯ãE¸«E¸˛ˇˇˇâE¯çEd£    √ÃÃÃÃÃÃÃÃÃÃÃUãÏVãuˇ6ËB  ˇuâˇuˇuVh†˙h∞	Ës  Éƒ^]√UãÏÉÏÉeÙ çEÙÉe¯ Pˇ–`ãE¯3EÙâE¸ˇ`a1E¸ˇa1E¸çEÏPˇ<`ãEçM¸3EÏ3E¸3¡…√ã∞	VWøNÊ@ªæ  ˇˇ;œtÖŒu&Ëîˇˇˇã»;œuπOÊ@ªÎÖŒu
G  ¡‡»â∞	˜—_â∞	^√hX›	ˇ`√hX›	Ë≈   Y√∏`›	√Ë-¯ˇãHÉ$âHËÁˇˇˇãHÉâH√∏»Î	√SVæ`	ª`	;ÛsWã>Öˇt
ãœˇ0cˇ◊É∆;ÛrÈ_^[√SVæ`	ª`	;ÛsWã>Öˇt
ãœˇ0cˇ◊É∆;ÛrÈ_^[√ˇ%bÃÃÃÃÃÃÃÃÃÃˇ%Dbˇ%bˇ%bˇ%bˇ% bÃÃˇ%$bˇ%8bˇ%<bˇ%@bÃÃÃÃÃÃÃÃˇ%P`ÃÃÃÃÃÃÃÃÃÃˇ%X`ÃÃÃÃÃÃÃÃÃÃˇ%\`ÃÃÃÃÃÃÃÃÃÃˇ%``ÃÃÃÃÃÃÃÃÃÃˇ%d`ÃÃÃÃÃÃÃÃÃÃˇ%h`ÃÃÃÃÃÃÃÃÃÃˇ%l`ÃÃÃÃÃÃÃÃÃÃˇ%î`ÃÃÃÃÃÃÃÃÃÃˇ%ú`ÃÃÃÃÃÃÃÃÃÃˇ%§`ÃÃÃÃÃÃÃÃÃÃˇ%®`ÃÃÃÃÃÃÃÃÃÃˇ%–`ÃÃÃÃÃÃÃÃÃÃˇ%‹`ÃÃÃÃÃÃÃÃÃÃˇ%‡`ÃÃÃÃÃÃÃÃÃÃˇ%`ÃÃÃÃÃÃÃÃÃÃˇ% aÃÃÃÃÃÃÃÃÃÃˇ%aÃÃÃÃÃÃÃÃÃÃˇ%aÃÃÃÃÃÃÃÃÃÃˇ%aÃÃÃÃÃÃÃÃÃÃˇ%$aÃÃÃÃÃÃÃÃÃÃˇ%(aÃÃÃÃÃÃÃÃÃÃˇ%,aÃÃÃÃÃÃÃÃÃÃˇ%0aÃÃÃÃÃÃÃÃÃÃˇ%4aÃÃÃÃÃÃÃÃÃÃˇ%<aÃÃÃÃÃÃÃÃÃÃˇ%@aÃÃÃÃÃÃÃÃÃÃˇ%DaÃÃÃÃÃÃÃÃÃÃˇ%HaÃÃÃÃÃÃÃÃÃÃˇ%LaÃÃÃÃÃÃÃÃÃÃˇ%PaÃÃÃÃÃÃÃÃÃÃˇ%TaÃÃÃÃÃÃÃÃÃÃˇ%XaÃÃÃÃÃÃÃÃÃÃˇ%\aÃÃÃÃÃÃÃÃÃÃˇ%daÃÃÃÃÃÃÃÃÃÃˇ%haÃÃÃÃÃÃÃÃÃÃˇ%laÃÃÃÃÃÃÃÃÃÃˇ%paÃÃÃÃÃÃÃÃÃÃˇ%taÃÃÃÃÃÃÃÃÃÃˇ%xaÃÃÃÃÃÃÃÃÃÃˇ%|aÃÃÃÃÃÃÃÃÃÃˇ%ÄaÃÃÃÃÃÃÃÃÃÃˇ%ÑaÃÃÃÃÃÃÃÃÃÃˇ%àaÃÃÃÃÃÃÃÃÃÃˇ%åaÃÃÃÃÃÃÃÃÃÃˇ%êaÃÃÃÃÃÃÃÃÃÃˇ%îaÃÃÃÃÃÃÃÃÃÃˇ%òaÃÃÃÃÃÃÃÃÃÃˇ%úaÃÃÃÃÃÃÃÃÃÃˇ%†aÃÃÃÃÃÃÃÃÃÃˇ%`ÃÃÃÃÃÃÃÃÃÃˇ%®aÃÃÃÃÃÃÃÃÃÃˇ%¨aÃÃÃÃÃÃÃÃÃÃˇ%∞aÃÃÃÃÃÃÃÃÃÃˇ%§aÃÃÃÃÃÃÃÃÃÃˇ%L`ÃÃÃÃÃÃÃÃÃÃˇ%H`ÃÃÃÃÃÃÃÃÃÃˇ%D`ÃÃÃÃÃÃÃÃÃÃˇ%@`ÃÃÃÃÃÃÃÃÃÃˇ%<`ÃÃÃÃÃÃÃÃÃÃˇ%8`ÃÃÃÃÃÃÃÃÃÃˇ%4`ÃÃÃÃÃÃÃÃÃÃUãÏVˇuãÒË"¯ˇ«Ñrã∆^]¬ Éa ã¡Éa «Ñr√ÃÃÃÃUãÏVˇuãÒËÚ¯ˇ«∞rã∆^]¬ UãÏQVˇuãÒâu¸ËÊˇˇ«∞rã∆^…¬ ÃÃÃÃÃÃUãÏVˇuãÒË≤¯ˇ«§rã∆^]¬ ÃÃÃÃÃçA«PrPËc˚ˇˇY√ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃUãÏVãÒçF«PrPË=˚ˇˇˆEYt
jVËÍˇˇYYã∆^]¬ UãÏÉÏçMÙË0ˇˇˇhHñ	çEÙPË˚ˇˇÃUãÏÉÏçMÙˇuË@ˇˇˇhñ	çEÙPË˝˙ˇˇÃÃÃÃÃÃÃ∏år√VãÒËK   ∏   «8   çNâFâF«F   «FƒrËí⁄¯ˇÖ¿yˇaÖ¿thÿrˇa∆‰›	ã∆^√VWãÒ3ˇjWçFPËk˙ˇˇÉƒâ~,â~0ã∆â~4_^√VãÒçFPˇ∞`çN,^Èp   UãÏãUÖ“x;Q}ÆËãçê]¬ jhå  ¿Ëf   ÃUãÏVãÒWç~Wˇ‘`ãE;F0Ö¿x;F0uãvÎPçN,ÆËË•ˇˇˇã0Î3ˆWˇÿ`_ã∆^]¬ VãÒÉ> tˇ6ËN   É& YÉf Éf ^√UãÏj j ˇuˇuˇ a]√ÃÃÃÃÃÃÃÃÃÃÃÃË2¯ˇãHÉâHËÏ¯ˇˇãHÉâH3¿√ˇ%`bˇ%hbˇ%dbˇ%Ñbˇ%àbˇ%§bˇ%úbˇ%òbˇ%|bˇ%xbˇ%åbˇ%®bˇ%∞b∞√UãÏQÉ=P›	|fÅ}¥ ¿t	Å}µ ¿uTÆ]¸ãE¸É?®Åt?©  u∏é  ¿…√©  t*©  u∏ë  ¿…√©  u∏ì  ¿…√©   u∏è  ¿…√∏ê  ¿…√ãE…√3ÕËëÁˇˇÈ    ãMÙdâ    Y__^ãÂ]ã„[Q√QãL$â\$ç\$PçD$˜Ÿ#¡ç`¯ãCâ$ãC¯PãCÙPãC¸âl$çl$«D$ˇˇˇˇS#Ã+‡VW°∞	3≈PâA¸ãMâeãCâEˇuÙd°    âEÙçEÙd£    √ÃÃÃÃÃÃÃÃWVS3ˇãD$¿}GãT$˜ÿ˜⁄Éÿ âD$âT$ãD$¿}GãT$˜ÿ˜⁄Éÿ âD$âT$¿uãL$ãD$3“˜ÒãÿãD$˜Òã”ÎAãÿãL$ãT$ãD$—Î—Ÿ—Í—ÿ€uÙ˜Òã˜d$ã»ãD$˜Ê—r;T$wr;D$vN3“ã∆Ou˜⁄˜ÿÉ⁄ [^_¬ ÃÃÃÃÃÃãD$ãL$»ãL$u	ãD$˜·¬ S˜·ãÿãD$˜d$ÿãD$˜·”[¬ ÃÃÃÃÃÃÃÃÃÃÃÃSW3ˇãD$¿}GãT$˜ÿ˜⁄Éÿ âD$âT$ãD$¿}ãT$˜ÿ˜⁄Éÿ âD$âT$¿uãL$ãD$3“˜ÒãD$˜Òã¬3“OyNÎSãÿãL$ãT$ãD$—Î—Ÿ—Í—ÿ€uÙ˜Òã»˜d$ë˜d$—r;T$wr;D$v+D$T$+D$T$Oy˜⁄˜ÿÉ⁄ _[¬ ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÄ˘@sÄ˘ s•¬”‡√ã–3¿Ä·”‚√3¿3“√ÃSVãD$¿uãL$ãD$3“˜ÒãÿãD$˜Òã”ÎAã»ã\$ãT$ãD$—È—€—Í—ÿ…uÙ˜Ûã˜d$ã»ãD$˜Ê—r;T$wr;D$vN3“ã∆^[¬ ÃÃÃÃÃÃÃÃSãD$¿uãL$ãD$3“˜ÒãD$˜Òã¬3“ÎPã»ã\$ãT$ãD$—È—€—Í—ÿ…uÙ˜Ûã»˜d$ë˜d$—r;T$wr;D$v+D$T$+D$T$˜⁄˜ÿÉ⁄ [¬ ÃÃÃÃÃÃÃÃÃÃÃÄ˘@sÄ˘ s≠–”Í√ã¬3“Ä·”Ë√3¿3“√ÃQçL$+»¿˜–#»ãƒ% ˇˇ;»r
ã¡Yîã â$√-   Ö ÎÈÃÃÃÃÃÉ=P›	|ƒ‚y¿bÒ}z¿≈˘~¿ƒ„y¬√f~¿ô—‡=   ûsÛ,¿ô√=   æsã»∫Ë¡È¡‡ÄÈæ3¬+¬•¬”‡√uÖ“xÛ,ÄG	∫   Ä3¿√ÃÃÃÃÃÃÃÉ=P›	|≈˙~¿bÒ˝z¿≈˘~¿ƒ„y¬√ãÃÉƒ¯É‰¯Ú$ã$ãT$ã·∫Ú…Å˙  ‡As<Ú,¿ô√ã ∫Í¡ÈÅ‚ˇˇ ÅÈ3  }˜ŸS3€≠√tÛ,ÑG	[≠–”Í√•¬”‡√Å˙  ‡CsÖ…tæËπˇˇˇ˜ÿÉ“ ˜⁄√„wÖ¿tÛ,ÄG	∫   Ä3¿√ÃÉ=P›	|≈˘n¡ƒ„y"¬bÒ˛Ê¿√W…Ú* W¿Ú*¡¡ÈÚYêG	ÚXÕàG	ÚX¡√ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃçMÏÈ	¯ˇÃÃÃÃÃêêãT$çBãJË3»Ë`‚ˇˇãJ¸3»ËV‚ˇˇ∏ `	ÈLÛˇˇÃÃÃÃÃÃÃÃÃÃÃÃççî˝ˇˇÈ¯˜ˇçMÏÈÀ¯ˇÃÃÃÃÃêêãT$çBãäê˝ˇˇ3»Ë‚ˇˇãJ¸3»Ë‚ˇˇ∏T`	È˛ÚˇˇÃÃÃÃÃÃÃÃÃÃÃÃÃÃçç|˝ˇˇÈÃ˜˜ˇçMÏÈ{¯ˇÃÃÃÃÃêêãT$çBãäh˝ˇˇ3»Ë¬·ˇˇãJ¸3»Ë∏·ˇˇ∏ê`	ÈÆÚˇˇÃÃÃÃÃÃÃÃÃÃÃÃÃÃãE‡É‡Ñ   Ée‡˛çç\ˇˇˇÈÅ ¯ˇ√ãE‡É‡Ñ   Ée‡˝çç‰˛ˇˇÈe ¯ˇ√ãE‡É‡Ñ   Ée‡˚çMÑÈL ¯ˇ√ãE‡É‡Ñ   Ée‡˜ççˇˇˇÈ0 ¯ˇ√ãE‡É‡Ñ   Ée‡ÔçM¨È ¯ˇ√ãE‡É‡ Ñ   Ée‡ﬂçç4ˇˇˇÈ˚ˇ˜ˇ√ÃÃÃÃÃêêãT$çBãä‡˛ˇˇ3»Ë„‡ˇˇãJ¸3»ËŸ‡ˇˇ∏Ã`	ÈœÒˇˇÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃãMÈ˙ˇ˜ˇÃÃÃÃÃêêãT$çBãJÏ3»Ë†‡ˇˇ∏ a	ÈñÒˇˇêêãT$çBãJ3»ËÉ‡ˇˇ∏La	ÈyÒˇˇÃÃÃÃÃÃÃÃÃãMÈ¯ˇÃÃÃÃÃêêãT$çBãJÏ3»ËP‡ˇˇ∏pa	ÈFÒˇˇÃÃÃÃÃÃçMÏÈ÷¯ˇÃÃÃÃÃêêãT$çBãJË3»Ë ‡ˇˇãJ¸3»Ë‡ˇˇ∏úa	ÈÒˇˇÃÃÃÃÃÃÃÃÃÃÃÃçMËÈ∞¯ˇÃÃÃÃÃêêãT$çBãJ–3»Ë‡ﬂˇˇãJ¯3»Ë÷ﬂˇˇ∏»a	ÈÃˇˇêêãT$çBãJË3»Ëπﬂˇˇ∏(b	ÈØˇˇêêãT$çBãJÏ3»Ëúﬂˇˇ∏Äb	ÈíˇˇÃÃçM‰Èå=¯ˇçMËÈ¯ˇÃÃÃÃÃêêãT$çBãJ‘3»ËhﬂˇˇãJ¯3»Ë^ﬂˇˇ∏ÿb	ÈTˇˇÃÃÃÃçMÈ ¯ˇçMÈ¯¯ˇãMÏÉ¡Èõ[¯ˇãMÏÉ¡Èà[¯ˇãMÏÉ¡(Èì ¯ˇãMÏÉ¡0ÈJˇ˜ˇãMÏÉ¡4È¡¯ˇãMÏÉ¡8È∂¯ˇãMÏÉ¡<È:¯ˇÃÃÃÃÃêêãT$çBãJË3»Ë€ﬁˇˇ∏Hc	È—ÔˇˇÃçç¨   È}¯ˇçç®   Èr¯ˇççÑ   È*¯ˇçMÈÓ¯ˇãMËÉ¡È[¯ˇãMËÉ¡ÈÔZ¯ˇãMËÉ¡(È˙¯ˇãMËÉ¡0È±˛˜ˇãMËÉ¡4È(¯ˇãMËÉ¡8È¯ˇãMËÉ¡<È°¯ˇÃÃÃÃÃêêãT$çBãJ‰3»ËBﬁˇˇ∏∏c	È8ÔˇˇÃÃÃÃÃÃÃÃãMÈ∑¯ˇãMÉ¡$Èò¯ˇÃÃÃÃÃêêãT$çBãJÏ3»Ëﬁˇˇ∏8d	È˚ÓˇˇÃÃÃÃÃÃÃÃÃÃÃçM‘È¯Y¯ˇçMºÈË¯ˇÃÃÃÃÃêêãT$çBãJ∏3»Ë»›ˇˇãJ¯3»Ëæ›ˇˇ∏ld	È¥ÓˇˇÃÃÃÃçM‰È∏Y¯ˇÃÃÃÃÃêêãT$çBãJ‡3»Ëê›ˇˇ∏‘d	ÈÜÓˇˇÃÃÃÃÃÃçMÃÈàY¯ˇçMËÈ¶˝˜ˇçM‰Èû˝˜ˇçMÏÈñ˝˜ˇçM‹È(;¯ˇÃÃÃÃÃêêãT$çBãJ»3»Ë@›ˇˇãJ¸3»Ë6›ˇˇ∏ e	È,ÓˇˇÃÃÃÃÃÃÃÃÃÃÃÃçM¿È(Y¯ˇçMÿÈF˝˜ˇçMËÈ>˝˜ˇçM‡È6˝˜ˇçM–È»:¯ˇçM‰Èd¯ˇçM‹È\¯ˇÃÃÃÃÃêêãT$çBãJº3»Ë–‹ˇˇãJ¯3»Ë∆‹ˇˇ∏Pe	ÈºÌˇˇÃÃÃÃÃÃÃÃÃÃÃÃçM‹È∏X¯ˇçM‰Èp:¯ˇÃÃÃÃÃêêãT$çBãJÿ3»Ëà‹ˇˇãJ¸3»Ë~‹ˇˇ∏(f	ÈtÌˇˇÃÃÃÃçMÃÈxX¯ˇçM‰È0:¯ˇçMÏÈˆ¯ˇÃÃÃÃÃêêãT$çBãJ»3»Ë@‹ˇˇãJ¸3»Ë6‹ˇˇ∏\f	È,ÌˇˇÃÃÃÃÃÃÃÃÃÃÃÃçM–È(X¯ˇçMÏÈÆ¯ˇçM‰Èÿ9¯ˇÃÃÃÃÃêêãT$çBãJÃ3»Ë€ˇˇãJ¸3»ËÊ€ˇˇ∏†f	È‹ÏˇˇÃÃÃÃÃÃÃÃÃÃÃÃçM‘ÈÿW¯ˇçM‡Èƒ8¯ˇÃÃÃÃÃêêãT$çBãJ–3»Ë®€ˇˇãJ¯3»Ëû€ˇˇ∏‰f	ÈîÏˇˇÃÃÃÃçM–ÈòW¯ˇçM‡ÈÑ8¯ˇÃÃÃÃÃêêãT$çBãJÃ3»Ëh€ˇˇãJ¯3»Ë^€ˇˇ∏Lg	ÈTÏˇˇÃÃÃÃçM∏ÈXW¯ˇçM‡ÈD8¯ˇçM‹Èn˚˜ˇçM–È 9¯ˇçMÿÈ∆¯ˇÃÃÃÃÃêêãT$çBãJ§3»Ë€ˇˇãJ¯3»Ë€ˇˇ∏∏g	È¸ÎˇˇÃÃÃÃÃÃÃÃÃÃÃÃçM–È¯V¯ˇçM‡È‰7¯ˇÃÃÃÃÃêêãT$çBãJÃ3»Ë»⁄ˇˇãJ¯3»Ëæ⁄ˇˇ∏xh	È¥ÎˇˇÃÃÃÃçM‡È∏V¯ˇÃÃÃÃÃêêãT$çBãJ‹3»Ëê⁄ˇˇãJ¸3»ËÜ⁄ˇˇ∏‡h	È|ÎˇˇÃÃÃÃÃÃÃÃÃÃÃÃçM»ÈxV¯ˇçM‰Èñ˙˜ˇçMËÈé˙˜ˇçM‘ÈÜ˙˜ˇçM‘Èº0¯ˇÃÃÃÃÃêêãT$çBãJƒ3»Ë0⁄ˇˇãJ¯3»Ë&⁄ˇˇ∏i	ÈÎˇˇÃÃÃÃÃÃÃÃÃÃÃÃçM‘ÈV¯ˇçMÏÈ◊;¯ˇÃÃÃÃÃêêãT$çBãJ–3»ËËŸˇˇãJ¸3»ËﬁŸˇˇ∏åi	È‘ÍˇˇÃÃÃÃçMÿÈÿU¯ˇÃÃÃÃÃêêãT$çBãJ‘3»Ë∞ŸˇˇãJ¸3»Ë¶Ÿˇˇ∏¿i	ÈúÍˇˇÃÃÃÃÃÃÃÃÃÃÃÃçM‘ÈX7¯ˇj,ˇu¿ËåŸˇˇYY√çM‹ÈC7¯ˇÃÃÃÃÃêêãT$çBãä¨˛ˇˇ3»ËXŸˇˇãJ3»ËNŸˇˇ∏i	ÈDÍˇˇêêãT$çBãJ¯3»Ë1Ÿˇˇ∏La	È'ÍˇˇÃÃÃÃÃÃÃãMÉ¡È˙7¯ˇãMÉ¡Èï7¯ˇÃÃÃÃÃêêãT$çBãJ‰3»ËÚÿˇˇ∏»j	ÈËÈˇˇÃÃÃÃÃÃÃÃãMÉ¡È∫7¯ˇãMÉ¡ÈU7¯ˇÃÃÃÃÃêêãT$çBãJÏ3»Ë≤ÿˇˇ∏¸j	È®ÈˇˇÃÃÃÃÃÃÃÃãMÉ¡Èı7¯ˇãMÉ¡È7¯ˇÃÃÃÃÃêêãT$çBãJÏ3»Ërÿˇˇ∏0k	ÈhÈˇˇÃÃÃÃÃÃÃÃãMÉ¡È8¯ˇãMÉ¡È’6¯ˇÃÃÃÃÃêêãT$çBãJÏ3»Ë2ÿˇˇ∏dk	È(ÈˇˇÃÃÃÃÃÃÃÃçM‰È˛D¯ˇçM‰ÈD¯ˇÃÃÃÃÃêêãT$çBãJÃ3»Ë¯◊ˇˇ∏òk	ÈÓËˇˇÃÃÃÃÃÃÃÃÃÃÃÃÃÃçM‰È´D¯ˇçM‰È∞C¯ˇÃÃÃÃÃêêãT$çBãJÃ3»Ë∏◊ˇˇ∏Ãk	ÈÆËˇˇÃÃÃÃÃÃÃÃÃÃÃÃÃÃçM‡È«K¯ˇçM‡ÈqJ¯ˇÃÃÃÃÃêêãT$çBãJ‘3»Ëx◊ˇˇ∏ l	ÈnËˇˇêêãT$çBãJÙ3»Ë[◊ˇˇ∏4l	ÈQËˇˇêêãT$çBãJÿ3»Ë>◊ˇˇ∏La	È4ËˇˇÃÃÃÃçMÏÈ∆˝˜ˇÃÃÃÃÃêêãT$çBãJ‡3»Ë◊ˇˇãJ¸3»Ë◊ˇˇ∏`l	È¸ÁˇˇÃÃÃÃÃÃÃÃÃÃÃÃççÿ˝ˇˇÈ∆f¯ˇçç‹˝ˇˇÈN¯ˇÃÃÃÃÃêêãT$çBãäƒ˝ˇˇ3»Ëø÷ˇˇãJ¯3»Ëµ÷ˇˇ∏êl	È´ÁˇˇÃÃÃÃÃÃÃÃÃÃÃçM‡Èh4¯ˇçMÏÈ.˝˜ˇçMËÈ¸¯ˇçMÏÈ˝˜ˇçM‹ÈYf¯ˇÃÃÃÃÃêêãT$çBãJÃ3»Ë`÷ˇˇãJ¸3»ËV÷ˇˇ∏ m	ÈLÁˇˇÃÃÃÃÃÃÃÃÃÃÃÃçMòÈ4ı˜ˇçM¿È,ı˜ˇçMÏÈ∆¸˜ˇÃÃÃÃÃêêãT$çBãJê3»Ë÷ˇˇãJ¸3»Ë÷ˇˇ∏∞m	È¸ÊˇˇÃÃÃÃÃÃÃÃÃÃÃÃçMËÈÜ¸˜ˇçMÏÈ~¸˜ˇÃÃÃÃÃêêãT$çBãJ‡3»Ë»’ˇˇãJ¸3»Ëæ’ˇˇ∏Ùm	È¥ÊˇˇÃÃÃÃçMºÈ#¯ˇçM‰Èp3¯ˇçM‡È6¸˜ˇÃÃÃÃÃêêãT$çBãJ†3»ËÄ’ˇˇãJ¯3»Ëv’ˇˇ∏8n	ÈlÊˇˇÃÃÃÃÃÃÃÃÃÃÃÃçMºÈTÙ˜ˇçMîÈLÙ˜ˇçMËÈÊ˚˜ˇÃÃÃÃÃêêãT$çBãJÄ3»Ë0’ˇˇãJ¸3»Ë&’ˇˇ∏∞n	ÈÊˇˇÃÃÃÃÃÃÃÃÃÃÃÃçMÏÈ¶˚˜ˇÃÃÃÃÃêêãT$çBãJ‰3»Ë‘ˇˇãJ¸3»ËÊ‘ˇˇ∏Ùn	È‹ÂˇˇÃÃÃÃÃÃÃÃÃÃÃÃçMÏÈ<¯ˇçMËÈ°d¯ˇÃÃÃÃÃêêãT$çBãJ‡3»Ë®‘ˇˇãJ¸3»Ëû‘ˇˇ∏(o	ÈîÂˇˇÃÃÃÃh∏   ˇuËë‘ˇˇYY√ãMÈÎe¯ˇÃÃÃÃÃêêãT$çBãJË3»Ë`‘ˇˇ∏Ño	ÈVÂˇˇÃÃÃÃÃÃçM‡Èº¯ˇçM‰È¯¯ˇçMËÈ¯ˇh‹   ˇu‹Ë9‘ˇˇYY√ÃÃÃÃÃêêãT$çBãJÿ3»Ë‘ˇˇãJ¯3»Ë‘ˇˇ∏∏o	È¸‰ˇˇÃÃÃÃÃÃÃÃÃÃÃÃçM‡È\¯ˇçM‰Èò¯ˇçMËÈê¯ˇççHˇˇˇÈ¯ˇçMºÈ@¯ˇh‹   ˇµDˇˇˇË√”ˇˇYY√ãç0ˇˇˇÈ_¯ˇãç,ˇˇˇÈT¯ˇãç<ˇˇˇÈ¯ˇÃÃÃÃÃêêãT$çBãä(ˇˇˇ3»Ëv”ˇˇãJ¯3»Ël”ˇˇ∏Pp	Èb‰ˇˇêêãT$çBãJ3»ËO”ˇˇ∏(q	ÈE‰ˇˇÃÃÃÃÃçMÏÈ¨¯ˇÃÃÃÃÃêêãT$çBãJ‰3»Ë ”ˇˇãJ¸3»Ë”ˇˇ∏Tq	È‰ˇˇÃÃÃÃÃÃÃÃÃÃÃÃçMÏÈl¯ˇÃÃÃÃÃêêãT$çBãJ‡3»Ë‡“ˇˇãJ¸3»Ë÷“ˇˇ∏êq	ÈÃ„ˇˇÃÃÃÃÃÃÃÃÃÃÃÃçMËÈ,¯ˇçMÏÈ$¯ˇçM‰È¯ˇÃÃÃÃÃêêãT$çBãJ‡3»Ëê“ˇˇãJ¸3»ËÜ“ˇˇ∏‡q	È|„ˇˇÃÃÃÃÃÃÃÃÃÃÃÃçM‹È‹¯ˇçM‘È‘¯ˇçMÿÈÃ¯ˇçM–Èƒ¯ˇçMÃÈº¯ˇçMƒÈ¥¯ˇçM∏È¨¯ˇçM‡ÈU1¯ˇçM»Èú¯ˇçM¿Èî¯ˇçMºÈå¯ˇÃÃÃÃÃêêãT$çBãJò3»Ë “ˇˇãJ¯3»Ëˆ—ˇˇ∏hr	ÈÏ‚ˇˇÃÃÃÃÃÃÃÃÃÃÃÃçMÃÈL¯ˇçM‹ÈD¯ˇçM–È<¯ˇçM‘Èê/¯ˇçMÏÈV¯˜ˇçM‡È$¯ˇçM‰È¯ˇçMËÈ¯ˇÃÃÃÃÃêêãT$çBãJ¨3»Ëà—ˇˇãJ¸3»Ë~—ˇˇ∏àv	Èt‚ˇˇêêãT$çBãJ‰3»Ëa—ˇˇãJ¸3»ËW—ˇˇ∏px	ÈM‚ˇˇÃÃÃÃÃÃÃÃÃÃÃÃÃçMÿÈ¨¯ˇçM‰È§¯ˇçMËÈú¯ˇçMÏÈæ˜˜ˇçM‹Èå¯ˇçM‡ÈFÒ˜ˇÃÃÃÃÃêêãT$çBãJƒ3»Ë¯–ˇˇãJ¸3»ËÓ–ˇˇ∏∞x	È‰·ˇˇÃÃÃÃçMòÈS¯ˇçMÃÈD¯ˇçM‰È<¯ˇçMËÈˆ˜ˇçM‘ÈV˜˜ˇçMƒÈÄ.¯ˇçM‹Èx.¯ˇçM–È¯ˇçMîÈÊå¯ˇçM‹È`.¯ˇÃÃÃÃÃêêãT$çBãä@ˇˇˇ3»Ëu–ˇˇãJ¯3»Ëk–ˇˇ∏®y	Èa·ˇˇÃçMÏÈÃ¯ˇÃÃÃÃÃêêãT$çBãJ‹3»Ë@–ˇˇãJ¸3»Ë6–ˇˇ∏p{	È,·ˇˇÃÃÃÃÃÃÃÃÃÃÃÃçMÏÈ˘_¯ˇÃÃÃÃÃêêãT$çBãJ‰3»Ë –ˇˇãJ¸3»Ëˆœˇˇ∏¨{	ÈÏ‡ˇˇÃÃÃÃÃÃÃÃÃÃÃÃçMÿÈL¯ˇçM‰ÈD¯ˇçM‹È<¯ˇçM‘ÈˆÔ˜ˇçM‡È,¯ˇçMËÈ$¯ˇçMÏÈ¯ˇÃÃÃÃÃêêãT$çBãJ¿3»ËêœˇˇãJ¸3»ËÜœˇˇ∏ÿ{	È|‡ˇˇÃÃÃÃÃÃÃÃÃÃÃÃçM‰È‹¯ˇçMËÈ‘¯ˇçM‡ÈÃ¯ˇçM‹Èƒ¯ˇçMÿÈñã¯ˇÃÃÃÃÃêêãT$çBãJÃ3»Ë0œˇˇãJ¯3»Ë&œˇˇ∏`}	È‡ˇˇÃÃÃÃÃÃÃÃÃÃÃÃçMºÈÓ˜ˇçMÏÈûı˜ˇÃÃÃÃÃêêãT$çBãJ§3»ËËŒˇˇãJ¸3»ËﬁŒˇˇ∏∏~	È‘ﬂˇˇÃÃÃÃçM‰È<¯ˇçMËÈ4¯ˇçMÏÈ,¯ˇÃÃÃÃÃêêãT$çBãJÿ3»Ë†ŒˇˇãJ¸3»ËñŒˇˇ∏¯~	ÈåﬂˇˇêêãT$çBãJÏ3»ËyŒˇˇ∏4l	ÈoﬂˇˇÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃãM‡È∂J¯ˇãM‡É¡ÈIÌ˜ˇãM‡É¡@Èï£¯ˇãM‡É¡HÈä£¯ˇãM‡É¡XÈ∞ñ¯ˇçMËÈw£¯ˇçM∏ÈÌ˜ˇÃÃÃÃÃêêãT$çBãJ¥3»ËŒˇˇãJ¸3»Ë˙Õˇˇ∏ò	ÈﬁˇˇçM¨È√°¯ˇçM∏È‹Ï˜ˇÃÃÃÃÃêêãT$çBãJ®3»Ë»ÕˇˇãJ¯3»ËæÕˇˇ∏Ù	È¥ﬁˇˇÃÃÃÃçM†È§Ï˜ˇÃÃÃÃÃêêãT$çBãJú3»ËêÕˇˇãJ¸3»ËÜÕˇˇ∏\Ä	È|ﬁˇˇÃÃÃÃÃÃÃÃÃÃÃÃçMÁÈ0°¯ˇÃÃÃÃÃêêãT$çBãJ‡3»ËPÕˇˇãJ¯3»ËFÕˇˇ∏àÄ	È<ﬁˇˇêêãT$çBãä‹˜ˇˇ3»Ë&ÕˇˇãJ¸3»ËÕˇˇ∏(q	ÈﬁˇˇÃÃçMËÈ|¯ˇÃÃÃÃÃêêãT$çBãJ‰3»ËÃˇˇãJ¯3»ËÊÃˇˇ∏ËÄ	È‹›ˇˇÃÃÃÃÃÃÃÃÃÃÃÃçM‰ÈÚº¯ˇÃÃÃÃÃêêãT$çBãJ‹3»Ë∞ÃˇˇãJ¸3»Ë¶Ãˇˇ∏hÅ	Èú›ˇˇÃÃÃÃÃÃÃÃÃÃÃÃãMÏÉ¡È8,¯ˇãMÏÉ¡È+¯ˇãMÈ¯ˇãMÏÉ¡ÈL+¯ˇãMÏÉ¡ÈÁ*¯ˇãMÉ¡$ÈÃ¯ˇãMÏÉ¡È¶+¯ˇãMÏÉ¡È∆*¯ˇÃÃÃÃÃêêãT$çBãJ‡3»Ë#Ãˇˇ∏†Å	È›ˇˇÃÃÃÃÃÃÃÃÃçM‘Èÿ)¯ˇçMÃÈ–)¯ˇççPˇˇˇÈ˝¯ˇçM‹ÈΩ)¯ˇçMÃÈµ)¯ˇj,ˇu»ËÈÀˇˇYY√çMƒÈ†)¯ˇÃÃÃÃÃêêãT$çBãä,ˇˇˇ3»ËµÀˇˇãJ3»Ë´Àˇˇ∏Ç	È°‹ˇˇÃçM–Èh)¯ˇçM‹È`)¯ˇçM§Èê¯ˇçM»ÈP)¯ˇçM‹ÈH)¯ˇçM¿È@)¯ˇj,ˇuÃËtÀˇˇYY√çM»È+)¯ˇçM¿È#)¯ˇçMºÈÅÎ˜ˇçMÿÈyÎ˜ˇÃÃÃÃÃêêãT$çBãäˇˇˇ3»Ë(ÀˇˇãJ3»ËÀˇˇ∏òÇ	È‹ˇˇÃÃÃÃçMÏÈ∏¯ˇÃÃÃÃÃêêãT$çBãJ‰3»Ë ˇˇãJ¸3»ËÊ ˇˇ∏HÉ	È‹€ˇˇÃÃÃÃÃÃÃÃÃÃÃÃççpˇˇˇÈ≠∑¯ˇçM–Èç(¯ˇçMêÈÖ(¯ˇçMÿÈ}(¯ˇçMËÈu(¯ˇçMòÈm(¯ˇçM»Èe(¯ˇçMËÈ](¯ˇçM†Èb¯ˇçM‡ÈM(¯ˇçM∏ÈE(¯ˇçMËÈ=(¯ˇçM¿È5(¯ˇÃÃÃÃÃêêãT$çBãäH˛ˇˇ3»ËJ ˇˇãJ¸3»Ë@ ˇˇ∏xÉ	È6€ˇˇÃÃÃÃÃÃçM‰ÈW>¯ˇçM‰È=¯ˇÃÃÃÃÃêêãT$çBãJÿ3»Ë ˇˇ∏Ñ	È˛⁄ˇˇêêãT$çBãJÏ3»ËÎ…ˇˇ∏<Ñ	È·⁄ˇˇêêãT$çBãJ‘3»ËŒ…ˇˇãJ¯3»Ëƒ…ˇˇ∏îÑ	È∫⁄ˇˇÃÃÃÃÃÃÃÃÃÃçM–ÈyΩ¯ˇçM‰Èø¯ˇÃÃÃÃÃêêãT$çBãJƒ3»Ëà…ˇˇãJ¸3»Ë~…ˇˇ∏ Ö	Èt⁄ˇˇÃÃÃÃçM‘È9Ω¯ˇçM‰È˘˜ˇÃÃÃÃÃêêãT$çBãJ∞3»ËH…ˇˇãJ¸3»Ë>…ˇˇ∏TÖ	È4⁄ˇˇÃÃÃÃçMÿÈ∏æ¯ˇÃÃÃÃÃêêãT$çBãJ‘3»Ë…ˇˇãJ¸3»Ë…ˇˇ∏àÖ	È¸ŸˇˇÃÃÃÃÃÃÃÃÃÃÃÃçMÏÈ\
¯ˇçM‰ÈT
¯ˇçM‡ÈL
¯ˇçMËÈD
¯ˇÃÃÃÃÃêêãT$çBãJ‘3»Ë∏»ˇˇãJ¸3»ËÆ»ˇˇ∏∏Ö	È§ŸˇˇÃÃÃÃçM–È
¯ˇçM‘È
¯ˇçM®Èæ¯ˇçç`ˇˇˇÈæ¯ˇçMËÈÈ	¯ˇçM‹È=&¯ˇçM‰ÈÔ˜ˇçMËÈ—	¯ˇçM¿ÈÂΩ¯ˇçMÿÈ¡	¯ˇÃÃÃÃÃêêãT$çBãä<ˇˇˇ3»Ë2»ˇˇãJ¯3»Ë(»ˇˇ∏∏Ü	ÈŸˇˇêêãT$çBãJ‡3»Ë»ˇˇãJ¸3»Ë»ˇˇ∏(â	È˜ÿˇˇÃÃÃÃÃÃÃçM‰È\	¯ˇçMËÈ~Ó˜ˇçMÏÈL	¯ˇçMÏÈD	¯ˇÃÃÃÃÃêêãT$çBãJ‹3»Ë∏«ˇˇãJ¸3»ËÆ«ˇˇ∏`â	È§ÿˇˇÃÃÃÃçMËÈ	¯ˇççLˇˇˇÈ%Ω¯ˇçM∞È ˇ˜ˇçM‰ÈÒ¯ˇçM‹ÈÈ¯ˇçM‡È·¯ˇçM‡ÈõÁ˜ˇçM®È-%¯ˇçM‘È%%¯ˇÃÃÃÃÃêêãT$çBãä,ˇˇˇ3»Ë:«ˇˇãJ¯3»Ë0«ˇˇ∏Ëâ	È&ÿˇˇÃÃÃÃÃÃçMÏÈ˘V¯ˇÃÃÃÃÃêêãT$çBãJË3»Ë «ˇˇãJ¸3»Ëˆ∆ˇˇ∏pã	ÈÏ◊ˇˇÃÃÃÃÃÃÃÃÃÃÃÃçMÿÈL¯ˇçM‹ÈD¯ˇçM‡È<¯ˇçMàÈXº¯ˇçM–ÈÓÊ˜ˇçMÏÈNÌ˜ˇçMËÈ¯ˇçM‰È¯ˇÃÃÃÃÃêêãT$çBãäxˇˇˇ3»ËÖ∆ˇˇãJ¸3»Ë{∆ˇˇ∏†ã	Èq◊ˇˇÃçMîÈ º¯ˇçM‹È‘¯ˇçMËÈÃ¯ˇçM‡Èƒ¯ˇçM‰Èº¯ˇçM‰È¥¯ˇÃÃÃÃÃêêãT$çBãJÑ3»Ë(∆ˇˇãJ¯3»Ë∆ˇˇ∏Ëå	È◊ˇˇÃÃÃÃçMËÈÈU¯ˇçMÏÈt¯ˇÃÃÃÃÃêêãT$çBãJÿ3»ËË≈ˇˇãJ¸3»Ëﬁ≈ˇˇ∏é	È‘÷ˇˇÃÃÃÃçMËÈ<¯ˇçMÃÈtÊ¯ˇççDˇˇˇÈnÊ¯ˇççPˇˇˇÈ¶‰˜ˇççxˇˇˇÈõ‰˜ˇçM†Èì‰˜ˇçM‰È-Ï˜ˇÃÃÃÃÃêêãT$çBãä8ˇˇˇ3»Ët≈ˇˇãJ¯3»Ëj≈ˇˇ∏Pè	È`÷ˇˇêêãT$çBãJ3»ËM≈ˇˇ∏(â	ÈC÷ˇˇÃÃÃçM‰È÷Î˜ˇçMËÈ§¯ˇçM‡Èú¯ˇçM‹Èî¯ˇçM¿È—Â¯ˇÃÃÃÃÃêêãT$çBãJº3»Ë ≈ˇˇãJ¯3»Ëˆƒˇˇ∏@ê	ÈÏ’ˇˇÃÃÃÃÃÃÃÃÃÃÃÃçMËÈvÎ˜ˇçMÏÈnÎ˜ˇÃÃÃÃÃêêãT$çBãJÿ3»Ë∏ƒˇˇãJ¸3»ËÆƒˇˇ∏Hë	È§’ˇˇÃÃÃÃçMËÈ¯ˇçMÏÈ¯ˇÃÃÃÃÃêêãT$çBãJ‡3»ËxƒˇˇãJ¸3»Ënƒˇˇ∏êë	Èd’ˇˇÃÃÃÃãMÉ¡ÈRßˇˇãMÉ¡ÈGßˇˇãMÉ¡Èº™ˇˇãMÉ¡ È.\¯ˇãMÉ¡8È#\¯ˇÃÃÃÃÃêêãT$çBãJË3»Ëƒˇˇ∏ í	È’ˇˇÃÃÃÃÃÃÃãE‡É‡Ñ   Ée‡˛ãM‹È∏!¯ˇ√ÃÃÃÃÃêêãT$çBãJÿ3»Ëœ√ˇˇãJ¸3»Ë≈√ˇˇ∏Lí	Èª‘ˇˇÃÃÃÃÃÃÃÃÃÃÃjTˇu»Ë¥√ˇˇYY√ãMƒÈï[¯ˇãMƒÉ¡Èä[¯ˇçM¿ÈX!¯ˇçM–Èh∞¯ˇÃÃÃÃÃêêãT$çBãJò3»Ëh√ˇˇãJ¸3»Ë^√ˇˇ∏xí	ÈT‘ˇˇÃÃÃÃj<ˇuÃËT√ˇˇYY√ãM»È5[¯ˇçMƒÈ!¯ˇçM–È∞¯ˇÃÃÃÃÃêêãT$çBãJú3»Ë√ˇˇãJ¸3»Ë	√ˇˇ∏Ãí	Èˇ”ˇˇÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃhå   ˇuÏËÒ¬ˇˇYY√ÃÃÃÃÃêêãT$çBãJ‰3»Ë»¬ˇˇ∏ì	Èæ”ˇˇÃÃÃÃÃÃÃÃÃÃÃÃÃÃçM‡È{/¯ˇçM‡È¥ÆˇˇÃÃÃÃÃêêãT$çBãJƒ3»Ëà¬ˇˇ∏Dì	È~”ˇˇÃÃÃÃÃÃÃÃÃÃÃÃÃÃçM‰È;/¯ˇçM‰ÈtÆˇˇÃÃÃÃÃêêãT$çBãJÿ3»ËH¬ˇˇ∏xì	È>”ˇˇÃÃÃÃÃÃÃÃÃÃÃÃÃÃçMÏÈú¯ˇçM–È[¥ˇˇçM‰ÈË¯ˇj ˇu¨Ë¬ˇˇYY√ÃÃÃÃÃêêãT$çBãJà3»ËÛ¡ˇˇãJ¸3»ËÈ¡ˇˇ∏¨ì	Èﬂ“ˇˇÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃçMÏÈ<¯ˇççlˇˇˇÈA´ˇˇÃÃÃÃÃêêãT$çBãädˇˇˇ3»Ë¢¡ˇˇãJ¸3»Ëò¡ˇˇ∏ î	Èé“ˇˇÃÃÃÃÃÃÃÃÃÃÃÃÃÃãMÉ¡Èr§ˇˇãMÉ¡Èg§ˇˇãMÉ¡È‹ßˇˇãMÉ¡ ÈNY¯ˇãMÉ¡8ÈCY¯ˇãMÉ¡PÈ8Y¯ˇÃÃÃÃÃêêãT$çBãJÏ3»Ë&¡ˇˇ∏Lî	È“ˇˇÃÃÃÃÃÃÃÃÃÃÃÃçMÏÈEπˇˇÃÃÃÃÃêêãT$çBãJË3»Ë¿ˇˇ∏†î	ÈÊ—ˇˇêêãT$çBãJ‰3»Ë”¿ˇˇ∏Ãî	È…—ˇˇÃÃÃÃÃÃÃÃÃçMËÈã-¯ˇÃÃÃÃÃêêãT$çBãJ‰3»Ë†¿ˇˇ∏$ï	Èñ—ˇˇÃÃÃÃÃÃπ‘›	ÈxË˜ˇÃÃÃÃÃÃ«∏›	ºs∆≈Î	 √ÃÃÃÃÃÃÃÃÃÃÃÃÃÃπh›	È◊ˇˇ                                                                                                                                                                                                                                                                                                                                                                                                                                                      UãÏÅÏà   °∞	3≈âE¸SWj@çEºã⁄j Pâùxˇˇˇã˘ËäÀˇˇÉƒ∫   ∂LˇJã¡¡ÈÉ‡ˇDÖºˇDçºÖ“uÊãEº=   Ñx  =ˇ  ÑÇ  Eº3¿π   Ö|ˇˇˇEÃEåE‹EúEÏE¨Dçº®ÖL  —¯ÉÈuÌÉ¯Ö<   LÖºãLÖº@É¯|Úã]¯∫    ãçxˇˇˇV çrã∆¡¯∂¡ÍÖ“tˇLïºã∆ãLïº¬fâOãçxˇˇˇçVã¬¡¯∂4ÉÊtˇLµºã¬ãLµº∆fâOãçxˇˇˇÖ“u¨∏   π   ã–âçxˇˇˇã;–~@ ÉÍHã Å… Ä  fâG;÷Ïãçxˇˇˇãîç|ˇˇˇÉÍxfãL_˛KHÉÍfâGyãçxˇˇˇã÷IâçxˇˇˇÉ˘
¨æ   ;–~ÉÍNã Å… Ä  fâw;–ÏÖ€~(D  ∑L_˛Kã—∏   É·”¯ãŒ+»Nfâw;Òu˜Ö€›^_∏   [ãM¸3ÕËª∏ˇˇãÂ]√ãM¸3¿_3Õ[Ë©∏ˇˇãÂ]√ÃÃÃÃÃUãÏQSVWâM¸ãE¸VWRQSUãËã]ã}3ˆfã3¡ÊfãsÉ√µ;]É˚  ;}ÉÚ  Î'ã÷à¡ÍGøDU<±Ö¿|8"»¡Ë”Ê*È|S-   |€Îzã÷±¡ÍøDU<Ö¿|"»¡Ë”Ê*È|/-   |∑ÎV¡Ê
ˆÉ– øÑE<  Ö¿|Ô"»¡Ë*È|	-   |ëÎ0;]É¿  ;}É∑  äÕ3“fãˆŸÉ√”‚Ä≈Ú-   å_ˇˇˇä»ã÷¿ÈÉ ”Ê*È— ÄÒÉ‡”ÍV˜⁄É¯wpç4É˙˝s";uÇ&  ãâãVâW^ç|ÑÌç>ˇˇˇÎ};uÇ  äàäVàWäVàWäVàWäVàWäVàWäVàWäVàW^ç|ÑÌç¯˛ˇˇÎ7É¯t\ç4É¿ç;uÇ∞  ë;UÉG  Û§äÏ^;}ÉM  ÑÌçø˛ˇˇ;]ÉD  ;}É;  äÕ3“fãˆŸÉ√”‚Ä≈ÚÈï˛ˇˇ3¿äC<ˇç@uò3¿fãÉ√f=säÈH  @ fffÑ     ;}ÉE  ã÷à¡ÍGøDU<±Ö¿|8"»¡Ë”Ê*È|S-   |“Îqã÷±¡ÍøDU<Ö¿|"»¡Ë”Ê*È|/-   |ÆÎM¡Ê
ˆÉ– øÑE<  Ö¿|Ô"»¡Ë*È|	-   |àÎ';](É∂   äÕ3“fãˆŸÉ√”‚Ä≈Ú-   å_ˇˇˇ;}Éì   ä»ã÷¿ÈÉ ”Ê*È— ÄÒÉ‡”ÍV˜⁄É¯tHç4É¿ç;ur`ë;Uv
+U+ Û§^ÎfÛ§äÏ^ÑÌç;ˇˇˇ;](s?äÕ3“fãˆŸÉ√”‚Ä≈ÚÈˇˇˇ;]s!3¿äC<ˇç@uß;] s3¿fãÉ√f=sîÎX3¿Î;} uÖ¿u∏   âE4∏   âE0â],â}][YZ_^_^[ãÂ]√ÃÃÃÃÃÃÃUãÏ∏H  Ë—ˇˇ°∞	3≈âE¸ãESVãuãŸãMâïºÔˇˇâç∏ÔˇˇâùÿÔˇˇWã};Ñ)  è8  Öˆà0  =  é%  Å˛  å  =   è˘   ÖˇéÒ   ¬âïƒÔˇˇâÖ¿Ôˇˇç:âÖÃÔˇˇç1âï‘ÔˇˇçB˝âÖ‰ÔˇˇçJˇãÖºÔˇˇâç‡ÔˇˇâçËÔˇˇâÖ»ÔˇˇÅˇ  v¯˛ˇˇ«âÖ»Ôˇˇã¬âù‹Ôˇˇ+√=Ë   vçÇˇˇˇâÖ‹Ôˇˇãµ∏Ôˇˇçç¸Ôˇˇã÷Ëç˘ˇˇÖ¿tyçÜ   «ÖÔˇˇ    çç¿ÔˇˇâÖÿÔˇˇ«ÖÙÔˇˇ    Ë^˚ˇˇÉΩÔˇˇ tEãçÃÔˇˇ9ç–Ôˇˇw7ãÖÏÔˇˇ;Ö‘Ôˇˇw);ç¿Ôˇˇu	ÉΩÙÔˇˇ tÆËã«_^[ãM¸3ÕË∂≥ˇˇãÂ]¬ ãM¸É»ˇ_^3Õ[Ë†≥ˇˇãÂ]¬ ÃÃÃÃÃÃÃÃÃÃ∏   √ÃÃÃÃÃÃÃÃÃÃUãÏÉÏÉ=î‡	 SVWâU¸ãŸuL3¿âE¯@ ãø   ã÷ãŒ—Íã¬ãÚ5 É∏Ìˆ¡EÉÔuÊãE¯â4Ö¿·	@âE¯=   | ãU¸«î‡	   Ö“_^3¿[ãÂ]¬ çz‡É»ˇÖˇàÄ   ¡Íã âU¸˜Ÿ¡·˘â}¯çsø   fD  ∂V˛çv∂»3—¡Ë3ï¿·	∂V˚∂»3—¡Ë3ï¿·	∂V¸∂»3—¡Ë3ï¿·	∂V˝∂»3—¡Ë3ï¿·	ÉÔu¨É√ Ém¸uïã}¯É« Öˇ~∂ç[∂»3—¡Ë3ï¿·	ÉÔuÊ_^˜–[ãÂ]¬ ÃÃÃÃUãÏÉÏÉ=º·	 Öó   SVW∏ﬂõW«EÙ¿Â	æ!CeáfÑ     ãﬁ«E¸    ã»3ˇ ÅÔGÜ»aã÷œ¡˙—âM¯ﬂçÛ3—ç73—ãM¯¬ç¡ã»¡˘À3—ç3—ãM¯ÚÉm¸u¡ãUÙ∆ã»Å·ˇ  fâ
É¬âUÙÅ˙¿Î	rì_^«º·	   [ãÂ]√ÃÃUãÏQSVWâM¸UÉÏã]¸ã{ºãs¿çGâD$É¿â$3Ìµ3“È·   ãÑÉ§≠ˇˇ”ÂFË*È}äÕÄ≈ã$”≈fâ/ã|$”ÕâD$É¿â$∂“äå§µˇˇs≈Ñ†   äå§∂ˇˇâT$;sƒÉﬂ   ”Âä–¨É§±ˇˇã$*È}äÕÄ≈”≈fâ/ã|$”ÕâD$É¿ä Ä‚¿ÈÄ˙ÑÇ   ∂V”ÂÄ˘v∑VFÍ*È}äÕÄ≈”≈fâ/ã|$”ÕâD$É¿ãT$É∆â$∂“äå§µˇˇÉ(ˇˇˇÖcˇˇˇÎêã∂FÉ∆Ö“äå§µˇˇçU   ç ˇˇˇÈ<ˇˇˇ@ Ñ     äVFà@Ä˙ˇÖnˇˇˇfãVÉ¿É∆fâP˛È[ˇˇˇäã§∂ˇˇã$”ÂãT$´§±ˇˇ*È}äÕˆŸÄ≈”Õfâ/ã˙”≈ã–É¿äÕ”Âfâ/f«  âCºÉƒ]_^[ãÂ]√ÃÃÃÃÃUãÏÉÏ ãESVWh   ã˙ãÒj Pâ}Ïâu¸Ë„¿ˇˇãEh   j PË”¿ˇˇã]ÉƒÖ€t;ﬂth   j SË∏¿ˇˇÉƒã÷3…ãèâBÖ¿tçB«B    âfâJã–AÅ˘   |€ãEâUÙ«     çF;–w%;÷Ñl  ∑B¸ãM_^«É    —Ë[∆ãÂ]¬ çBãﬁçñ @  âE‰ÆË«     π   âU‡ã¬@ fÑ     âÄ   «     É¿ÉÈuÏâM¯ãC”Ë∂¿çÜãÅ D  ââô D  ããM¯Ö€uﬁ3…9
uã¬ç@AÉ8 t˜ãúé @  ã˘«Ñé @      Aâ]Å˘   }e∏ ¿ˇˇçë   +∆çΩ    çñâEËã2Öˆt-ãE¸ã˘ãÑ D  â0ãu¸çÜ @  √âÑ3 D  ã]Ë«    ⁄Îãu¸AÉ¬Å˘   |æã]çñ @  ãÑæ D  ãM¯É¡âM¯«     çá   çÜâÑæ D  É˘åˇˇˇfêãUÙãÛãE‰Öˆu;–tYÉ¿Öˆt;–tãN;Jwâ0ã^âXã6ÎâãZÉ¬âXÖˆt;–tãN;JwâpãNÀâHã6ÎØâPãJÀÉ¬âHÎüãMÉŒˇ3€ãPÖ“t+ã}¸Å« @  ç<∑CâWç∑ÀfâJFã fâHãPÖ“u‰ãM∑@àÖˆxãE¸ãÑ∞ @  N∑XÎ≤ã]fÉ{vãÀD  ãA@—ËâAã	Ö…uÒÈˇˇˇãu‡hÄ   j VË2æˇˇã]¸Éƒ∫    çã D  çÅ ¸ˇˇâçIÉÍuã”fÑ     ∑BçÉãÅ D  ââë D  É¬;UÙu„3…9uã∆ç@AÉ8 t˜ãºã @  ãŸAâ}ÙÉ˘ }:ã}¸çù    fD  ã4éçç    ÖˆtãÑ8 D  ãŸâ0ã¬Aç∑ @  É˘ |Ÿã}ÙãE¸ãUãÑò D  «     ;UÏuçç    Pj RËdΩˇˇÉƒ3ˆ«E   3€∑O∑Wã}Ïã¬Øèã}ÿã¡É·—Ë¡·“‚8ã}Ù∑O+M∑G”ÊãMâ4ÅF∑Gã?âEâ}ÙÖˇu¥ãEâ_^[ãÂ]¬ ÃÃÃÃÃÃUãÏSVWUãUãrÏãB‰∆âB¸r‹ãZƒãjÃ;rÏu$@ fÑ     ∂CFˇÑÇ§•ˇˇàCˇÌÇ›  ;r¸É'  ∂∂~∂Fç»çxã<Çâ4Çã+Ñ  ©ˇˇˇ u∏π   +˛˜ﬂΩ«ÉB§+<ÖX±	B®¡‡É√çD˝ˇÑÇ§©ˇˇàC˝=ê   ¿fâ{˛ÿB§˘çÌÇJ  ;B¯áÖ  Uçh˝∂∂N∂~;ıvbçÅçGâ4Ç∂FçèFçHâ4äF];r¸Éw  ∂Nç∏çAã<Çâ4ÇÈRˇˇˇçÅçGâ4ÇF;ıt∂FçèçHâ4äF]ÈˇˇˇfÑ     SçÅ∂Fç_â4öFçè∂NçXâ4öFç∏∂~çYâ4öF;ıv“É≈[;ıuû]È ˛ˇˇ ãF+Gtº»+˛¡ÈÉ¡ÈÁ˛ˇˇã∆ãJÉ∆É«+ŒÛ¶Ñè   çNˇ+˛+»ãÉ˘Ç¿˛ˇˇ˜ﬂÉÈΩ«ÉB§+<ÖX±	B®¡‡É√É¿ˇÑÇ§©ˇˇàC¸àK˝Å˘ˇ   rÉ√É¡∆C˚ˇfâK¸ÉÈÉ¡Èö˛ˇˇãJ»âZ»É√â)ˇB¨Ω   Èû˛ˇˇãJ»âZ»É√â)ˇB¨Ω   È˛ˇˇFGÈjˇˇˇ@ fÑ     SPãZ¯Î∂∂~∂Fç»çxâ4ÇF;ÛrÁ^[È–˝ˇˇâZƒâjÃ+rÏâr‹]_^[]¬ ÃÃÃÃÃUãÏSVWUãUãrÏãB‰∆âB¸r‹ãZƒãjÃ;rÏu$@ fÑ     ∂CFˇÑÇ§•ˇˇàCˇÌÇç  ;r¸ÉÛ  ∂∂N∂~∑E¿Â	∑M¿Á	∑<}¿È	3¡3«ãJÏ∑<B+Ò˘fâ4BÒã+Ñû   ©ˇˇˇ uóπ   +˛˜ﬂΩ«ÉB§+<ÖX±	B®¡‡É√çD˝ˇÑÇ§©ˇˇàC˝=ê   ¿fâ{˛ÿB§˘çÌÇŸ   ;B¯á  SUãﬁãË+ZÏ∂∂N∂~∑E¿Â	∑M¿Á	∑<}¿È	3¡3«FfâBC;ıuœ][Èˇˇˇ ãF+Gtº»+˛¡ÈÉ¡ÈXˇˇˇã∆ãJÉ∆É«+ŒÛ¶Ñè   çNˇ+˛+»ãÉ˘Ç1ˇˇˇ˜ﬂÉÈΩ«ÉB§+<ÖX±	B®¡‡É√É¿ˇÑÇ§©ˇˇàC¸àK˝Å˘ˇ   rÉ√É¡∆C˚ˇfâK¸ÉÈÉ¡ÈˇˇˇãJ»âZ»É√â)ˇB¨Ω   ÈˇˇˇãJ»âZ»É√â)ˇB¨Ω   È[˛ˇˇFGÈjˇˇˇ@ fÑ     SPãZ¯Î1∂∂N∂~∑E¿Â	∑M¿Á	∑<}¿È	3¡3«ãŒ+JÏfâBF;ÛrÀ^[È˛ˇˇâZƒâjÃ+rÏâr‹]_^[]¬ ÃÃÃÃÃÃÃÃÃUãÏSVWUãUãrÏãB‰∆âB¸r‹ãZƒãjÃ;rÏu&ÎfffÑ     Ò∂CFˇÑÇ§•ˇˇàCˇÌÇö  ;r¸É∞  ãJÏ+Ò∑<rÖˇt—fãD1f;D9tmfâ2∑<zf;D9tW∑<zf;D9tL∑<zf;D9tA∑<zf;D9t6∑<zf;D9t+∑<zf;D9t ∑<zf;D9t∑<zf;D9ÖfˇˇˇfD  ;˛ÑXˇˇˇ∂Ò:ÖNˇˇˇ˘äF:GtQπ   +˛˜ﬂΩ«ÉB§+<ÖX±	B®¡‡É√çD˝ˇÑÇ§©ˇˇàC˝=ê   ¿fâ{˛ÿB§˘çÌÇê   ãÈˇˇˇãF+Gtº»+˛¡ÈÉ¡Î°ã∆ãJÉ∆É«+ŒÛ¶Ñè   çNˇ+˛+»ãÉ˘Çzˇˇˇ˜ﬂÉÈΩ«ÉB§+<ÖX±	B®¡‡É√É¿ˇÑÇ§©ˇˇàC¸àK˝Å˘ˇ   rÉ√É¡∆C˚ˇfâK¸ÉÈÉ¡ÈTˇˇˇãJ»âZ»É√â)ˇB¨Ω   ÈXˇˇˇãJ»âZ»É√â)ˇB¨Ω   ÈN˛ˇˇFGÈjˇˇˇâZƒâjÃ+rÏâr‹]_^[]¬ ÃÃÃÃÃÃÃÃÃÃUãÏSVWUãUãrÏãB‰∆âB¸r‹ãZƒãjÃ;rÏu&ÎfffÑ     Ò∂CFˇÑÇ§•ˇˇàCˇÌÇ«  ;r¸É›  ãJÏ+Ò∑<rÖˇt—fãD1fâ2«B‘   f;D9tc∑<zf;D9tP∑<zf;D9tE∑<zf;D9t:∑<zf;D9t/∑<zf;D9t$∑<zf;D9t∑<zf;D9tÒãB∞˘HâB–ÎAê;˛ÑXˇˇˇäÒ:u‚ãB∞˘HâB–äF:GÑ#  Éz‘s«B‘   âzÿfÑ     ˇJ–åw  ãJ‘fãDˇJÏ+zÏI∑<zf;9t^∑<zf;9tT∑<zf;9tJ∑<zf;9t@∑<zf;9t6∑<zf;9t,∑<zf;9t"∑<zf;9tˇJ–}´È  @ ffÑ     ãBÏA¯+»;˜Ñ   ã+tt©ˇˇˇ Ö_ˇˇˇÉ˘ÉVˇˇˇπ   «B‘   âzÿÈBˇˇˇfê˜ﬂΩ«ÉB§+<ÖX±	B®¡‡É√çD˝ˇÑÇ§©ˇˇàC˝=ê   ¿fâ{˛ÿB§˘çÌÇÂ   ãÈ/˛ˇˇãF+Gtº»¡ÈÉ¡;J‘Ü‹˛ˇˇâJ‘âzÿÈ—˛ˇˇã∆ãJÉ∆É«+ŒÛ¶Ñ‘   çNˇ;rwãO+»+˘;J‘Ü§˛ˇˇâJ‘âzÿÈô˛ˇˇãO+»+˘âJ‘âzÿÎ
ffÑ     Éz‘Üò˝ˇˇãzÿãJ‘+˛É˘Ç%ˇˇˇ˜ﬂÉÈΩ«ÉB§+<ÖX±	B®¡‡É√É¿ˇÑÇ§©ˇˇàC¸àK˝Å˘ˇ   rÉ√É¡∆C˚ˇfâK¸ÉÈÉ¡Èˇ˛ˇˇãJ»âZ»É√â)ˇB¨Ω   ÈˇˇˇãJ»âZ»É√â)ˇB¨Ω   È!˝ˇˇFGÈ%ˇˇˇâZƒâjÃ+rÏâr‹]_^[]¬ ÃÃÃÃÃÃÃÃÃÃÃÃÃUãÏÅÏ  °∞	3≈âE¸Wã˘âï¯˛ˇˇãMâç˛ˇˇÖˇÑx  Å?ﬁ¿ÁSÖl  çAˇV;GáK  Å˘  é?  Å}  å2  Ö“Ñ*  ãuÖˆÑ  SÆËã_h\Z  j çÉ§•ˇˇPË
≤ˇˇãU ÉƒÖ“y3“Î;WOWãÖ˛ˇˇâC‰âC‡âS∞âsÏç0âKçAâCÙçA˝âC¯ãÖ¯˛ˇˇâC∏âCº«C‹    ãGø¿NâCƒâC¿Ö“@πˆ
  ã√â0É¿ÉÈÑ  ˆ¡uÌçàâ0âpâpâpâpâpâpâpÉ¿ ;¡u‚È⁄   É=º·	 uË¯ÌˇˇãC∞h   j É¯uSøPQËD±ˇˇÉƒÈ™   É¯∫∞Sπ–UçÉ§•˛ˇL Pâç¯˛ˇˇË±ˇˇãKÉƒãsÏ3ˇâçÙ˛ˇˇçA˛;sV@ Ñ     ∂F∑E¿È	∂∑E¿Â	3»∂FF∑E¿Á	3»fãÑK§•˛ˇfâ{fâºK§•˛ˇGãçÙ˛ˇˇçA˛;r∂;Òs+Œç<{3¿—ÈÛ´…fÛ´ãΩ¯˛ˇˇãCƒãœÉk‰âC»É¿SâCƒ«CÃ   ˇ0cˇ◊ãS‹;S‡}OfêãCÏãKƒäàãCƒ∂ ˇÑÉ§•ˇˇãCÃˇCƒç Ö¿yãC»âπ   ãCƒâC»É¿ˇC¨âCƒãS‹BâKÃâS‹;S‡|≥ãSƒãCÃç É…Ö¿yãC»âπ   âS»É¬ˇC¨âKÃ;SƒtÿÉ{§ Ñ∆   ˇÉ§©ˇˇçÖÙ˛ˇˇPçÖ¸˛ˇˇPQçÉ§µˇˇPçÉ§≠ˇˇPQçã§∑ˇˇçì§•ˇˇË©ÓˇˇãK®∏   çÙ˛ˇˇãSƒD»Å¬  I3¿¡ÈÅ·˛ˇˇ+K§+K¿—3ˆπ   @ +î3§•ˇˇ@ãÒÉ¡=   rÏãC¨¡‡+–;Us7ã{ºçµ¸˛ˇˇπ@   Û•ÅCº   ãÀËÅÏˇˇãCº+C∏[^_ãM¸3ÕËûˇˇãÂ]¬ ãÖ˛ˇˇ[^_ãM¸3ÕËıùˇˇãÂ]¬ ^ã¡_ãM¸3ÕË·ùˇˇãÂ]¬ ãM¸3¿3Õ_ËŒùˇˇãÂ]¬ ÃÃÃÃÃÃÃÃUãÏÖ…t Å9ﬁ¿ÁSuˇqÉÏˇuˇuˇuË¸ˇˇ]¬ 3¿]¬ ÃÃÃVhÙ® ÆËˇhbãÉƒÖˆu^¬ çVÅ‚ ˇˇˇÆËÅ¬   «Fˇˇ  É=º·	 «F    «F    çä | «ﬁ¿ÁSâvâNâVuË⁄Íˇˇã∆^¬ ÃÃÃÃÖ…tÅ9ﬁ¿ÁSuˇq«    ˇ`bY¬                                                                                                  l¶	 z¶	 ä¶	     Ñ£	 •	 §	 ‹§	 »§	 ™§	 é§	 Ä§	 X§	 D§	 4§	 §	 
§	 Ù£	 ‚£	 “£	 nù	 ~ù	 äù	 òù	 §ù	 ≤ù	 æù	  ù	 ‹ù	 Óù	 ˛ù	 û	 û	 0û	 Dû	 Tû	 nû	 Çû	 êû	 §û	 ∫û	  û	 ﬁû	 Óû	 
ü	 "ü	 6ü	 Pü	 hü	 Çü	 öü	 ≤ü	 ∆ü	 ‡ü	 ¯ü	 †	 †	 ,†	 8†	 D†	 P†	 f†	 v†	 Ü†	 ††	 ≤†	 ∆†	 ‹†	 †	 °	 °	 °	 :°	 L°	 X°	 d°	 z°	 ê°	 ¢°	 º°	  °	 ﬁ°	 Ù°	  ¢	 ¢	 &¢	 6¢	 F¢	 V¢	 l¢	 ~¢	 é¢	 û¢	 ∞¢	 ƒ¢	 ⁄¢	 Ú¢	 £	 £	 "£	 :£	 H£	 X£	 h£	 v£	 ƒ£	 ê£	 û£	 ¨£	     ï  Ä&  Ä%  Ä)  Ä  Ä  Ä  ÄM  Ä  Ä  Ä  Ä  Ä  Ä  Ä(  Äñ  Ä  Ä  Ä    0•	     xú	 Pú	 Çú	 åú	 §ú	 æú	 »ú	 ‘ú	 ﬁú	 Ëú	 ù	 ù	 "ù	 <ù	 fú	      ú	 2ú	     ûß	     åß	 ®	 îß	     fß	     ≤®	 ö®	 ¨¶	 ®	 &®	 ¿®	 ß	 ÿß	 ~®	 b®	 ∂ß	 @®	  ®	 ˙¶	 ÷®	     ‹¶	 ,ß	 nß	     Rß	 Ùß	 ˛ß	 \ß	 “¶	 ¨ß	 Íß	  ß	 Hß	     ∆ß	     t•	 Ü•	 ¶•	 º•	 –•	 d•	 Ù•	 L•	 ¶	 ¶	 *¶	 @¶	 ‚•	     `Œ        @    0          ˚                                  0  @  ‡  `  Ä  ê  †  ¿  ∞!  –!  !  P"  p"  0#  –#   $  ∞$  ¿$  –$  P&  p&  †&  ¿&  ‡&  &  ê'  ¿'  ∞(  ‡(  Ä)  p+   ,   ,  @,  ¿3  4  Ä5  Ä6  07  ‡7  p9   <   =  0>  @  ∞A  ‡B  êC  D  ∞E  ÄK  êK   N  @N   O  0Q  R  ¿R  –S  ‡f   g  g   g  Pg  ∞q  ¿q  –q  ‡q  q   r  r   w  0x  `x  †x  ‡x  ¿{  †~  ¿~  –Ä  ‡Ä  Pà  pà  Äà  †à  ¿à  ‡à  à   â   â  0â  Pâ  pâ  Äâ  ä  ¿ã   å  0å   ç  @é  pé  0í  Äí  êí   ì  î  0î  êî  Pï  ∞ï   ñ  pñ  ¿ñ  †ò  †Ø  –ª  p∆  ∆  ∞»  ∞À  ¿À  À  Ã  0Ã  @Ã  `Ã  ÄÃ  êÃ  †Ã  ¿Ã  –Ã  ‡Ã   Õ  Õ  0Õ  PÕ  pÕ  ÄÕ  †Õ  ¿Õ  –Õ   Œ  @Œ  PŒ  `Œ  –—  ∞“  ‡‘   Ÿ  PÍ  †Í   Î  –Î  Ï  PÒ  êÒ  ∞Ò  –Û  ‡˛  ∞ˇ    P – † ‡ † ∞ –     0 @ P ê     ! P5 ¿5 `6 6 Ä7  ;  ; @;  > †> ? `@ ¿@ @  A PA ÄA êA †A ∞A  B @B †B ‡B B 0C @C  D @D `E ÄE  G PG –G  H –H @J pJ N êO b Äc –c ¿d d e 0e `e †e pf  g  g ∞g Ph ph êh  j –s 0t ¿ä Pã êã å på –å `ç ¿ç –ç 0é êí ì †î ñ `ó  ò 0ô 0õ êõ êú †û ∞û ê¢  £ @§ `§ –® 0© ´ ∞  ± p≤  ¥ @¥ p¥ ê¥ ¥ ¿µ µ `∂ †∂ @∑ ∏ π –π ∫ @∫ ¿∫ Pª `ª ∞ª ‡ª ∞Ω ¿Ω ‡Ω  æ 0æ `æ Äæ ∞æ –æ  ø  œ †œ ¿œ Ä– ‡– — “ p“ ¿“  ” P” ‡” ¿¸ ¿ – ` ‡	  ? êD –D –E `F  G PU ÄU Pv  0Ä `“  ‘ †÷ ¿€ p‹ ê‹ @˛  "  " $  ( ( p) ‡) `* ∞* –* * + 0+ P+ †+ ¿+ ‡+  ,  , @, `, Ä,  - P- p- ¿-  . 0. `. Ä. †. ¿. / 0/ P/ ∞/ –/ / 0 00 `0 †0 –0 3 p4 Ä4 ê4  5 05 p5 06 @6 `6  7 07 `7 ê7 ¿7 7  8 P8 ê8 ¿8 Ä9 †9 ¿9 ‡9 †; ‡; < Ä< †< <  = †= –= > @>  ? P? ∞? –? ? Ä@ ‡@  A  A @A `A ∞A PB pB †G  ≠ p≤ ∞≥ –≥ ≥ ¥ 0π pπ @∫ †∆ Ä  –Õ @’ @◊ Pÿ ÿ Ÿ –⁄ 0‹ @‹ P‹ @Ë 0Ù ¿ı ` ê ∞ – ¿  ¿G ∞J ÄS  U –U †V –V 0X ‡X †f –g j @j  s Äx ¿x 0y 0} `} ∞ êÅ  à  à ‡à Äâ  ì ï ∞ô Äú –ú Pü Æ  ∂ 0˛ p   ∞ ‡ `   ¿ † p – ` ‡ @ † –   `" Ä" †" ‡#  $ @$ `$ †$ –$  % @' Ä' †( 0) Ä) –+ . . Ä/  0 p0 ¿0  1 @1 ê1 –1 †2 ¿2 ‡2 ¿4 Ä5 ∞5 7 Q ‡d †Ç pâ ¿â Pä ∞ä †∑ Pπ pπ P∫ ¿∫ ‡∫  ª ∞º –º  Ω  æ @  `  ê  ‡À  Ã  Ã Œ – † † 0 p P @ ‡" $ –=  ? –A `à †à ‡à `í ∞ô ‡ô ê™ ™ P  * 9 : `: Ä: –: ê; –; < P< ê< –< < = ê= = @> `> p? ∞? ‡? @ P@ C ∞D êF ¿F  î @î Pî Pù Äü ‡ü ü  † † ‡¶ ß ∞ß ¿® ê© ¿© ™ @™ p™ ∞™ ‡™ ™  ´  ≠ ∞≠ –≠ p± ‡± @≤ ∞≤  ≥ `∂ ê∂ ¿∂ ∂ ê∑ –∑ p∏ –∏ 0π †π  ∫ `∫ ¿∫ @ª pª ¿ª  º Ω 0æ ∞æ @ø Äø ¿ø ‡ø 0¡  À  À @À À Ã ÄÃ Õ `Õ ∞Õ `Œ pŒ — P— †— †“ ê’ `÷ Ä÷ ∞÷ ◊ P◊ †◊ ¿◊ ÿ `ÿ †ÿ ‡ÿ `Ÿ  ⁄ ‡‹ –· ·  ‚ @‚ p‚ †‚  Ù ˆ †˙ ¿˙  ˚ –˚ @ Ä @
 ∞ –       0 @ P ` p Ä ê † ∞ ¿ – ‡       0 @ P ` p Ä ê † ∞ ¿ – ‡       0 @ P ` p Ä ê † ∞ ¿ – ‡       0 @ P ` p Ä ê † ∞ ¿  0 P p ‡     ` ∞   ‡ 0 ` †  P – p ∞    Ä  0 Ä –  P ∞  0  ê  –  ! Ä! ¿!  " @" Ä" ¿"  # p# ∞#  $ `$ ∞$ $ @% ê% –% & P& ∞& `' †' ‡' 0( ¿( `) ¿) @* Ä* ¿* 0+ ê+ –+ @, ∞, , 0- ê- –- . ê.  / ê/ –/ p0 0 01 p1 ∞1  2 ∞2  3 Ä3 ¿3 04 ê4 –4 `5 ¿5  6 @6 †6 6 P7 ∞7 7 08 p8 –8  9 ê9 ‡9 :  : @: ¿N PQ ∞S –U                 FDmsÕ≥JîÙåÕˆaT†k-k>ü'Oí1<ƒ&£û        ¿      FI	¿˙a p i - m s - w i n - c o r e - s y n c h - l 1 - 2 - 0 . d l l     k e r n e l 3 2 . d l l     SleepConditionVariableCS    WakeAllConditionVariable    (⁄	x⁄	    òL	p& ‡& PL	p& ‡& bad allocation  L	p& ‡& `I	p‡bad function call   ¨I	p‡& ¯I	p‡& ƒY	p& ‡& ((I”8A‘O≥Ï€ô^ÆÜ    E R R O R   :   U n a b l e   t o   i n i t i a l i z e   c r i t i c a l   s e c t i o n   i n   C A t l B a s e M o d u l e 
     % s % s     % s \ % s   .   . .     *   ¥J	¿ ¿ † ê ` Ä 4K	∞! –! ! P" p" ¥K	0# –#  $ ∞$ ¿$ –$ vector too long bad array new length    Unknown exception   PM	∞( dM	ê' xM	–\ \ ? \     \ \ ? \ U N C   \ \ ? \ U N C % s   \ \ ? \ % s     . d i a g s e s s i o n     \ % s \     m e t a d a t a . x m l     | I S t r e a m |   h t t p s : / /     unordered_map/set too long  invalid hash bucket count   ¿O	g ‡f Pg r ¨O	 g ‡f  g r        ¿      F        ¿      Fî–÷7ïM¨7ŒT√9…ùw⁄pc@ÄèCÓ"ãƒ‘O	∞q  r ‡q ËO	¿q q –q R ¿R ¸O	p+  ,  , ¿3 4 Ä5 Ä6 07 ‡7 p9  <  = 0> @ ∞A ‡B êC D ∞E ÄK êK  N @N  O 0Q HP	 w †x `x     ˇˇˇˇˇˇˇˇêtt e x t / x m l     a p p l i c a t i o n / o c t e t - s t r e a m           ¯“®“X““¸——‰—º—–—»—º—b√P’∂áHôÒ◊DJÌ˝Ã$Oä¯CBÄ‹´öÜîëâ†ÿlÿ4ÿ»◊î◊P◊◊Ë÷∞÷Ä÷d÷@÷$÷∏’÷÷‡’»’        B C D E       º*	Ã*	    ‹*	¯*	+	+	tÂ8+	`+	l+	|+	†+	¥+	–+	+	    T‰‚,	,	,,	    P,	    h,	Ñ,	ú,	¥,	        œ†œ¿œÄ–—“p“¿“ ”P”‡–Ë	   	   ¯	   	   	   	    	    (	            ‡ürank    	(		    %_  	
 	
         T'	å'	†%	¿'	Ù'	        -x0 X0      I   & 
 \   4 	 Ö   \  T   N       F   x   REINDEXEDESCAPEACHECKEYBEFOREIGNOREGEXPLAINSTEADDATABASELECTABLEFTHENDEFERRABLELSEXCLUDELETEMPORARYISNULLSAVEPOINTERSECTIESNOTNULLIKEXCEPTRANSACTIONATURALTERAISEXCLUSIVEXISTSCONSTRAINTOFFSETRIGGERANGENERATEDETACHAVINGLOBEGINNEREFERENCESUNIQUERYWITHOUTERELEASEATTACHBETWEENOTHINGROUPSCASCADEFAULTCASECOLLATECREATECURRENT_DATEIMMEDIATEJOINSERTMATCHPLANALYZEPRAGMATERIALIZEDEFERREDISTINCTUPDATEVALUESVIRTUALWAYSWHENWHERECURSIVEABORTAFTERENAMEANDROPARTITIONAUTOINCREMENTCASTCOLUMNCOMMITCONFLICTCROSSCURRENT_TIMESTAMPRECEDINGFAILASTFILTEREPLACEFIRSTFOLLOWINGFROMFULLIMITIFORDERESTRICTOTHERSOVERETURNINGRIGHTROLLBACKROWSUNBOUNDEDUNIONUSINGVACUUMVIEWINDOWBYINITIALLYPRIMARY     a  R   
				
	
								               ∞ô            4¸        onoffalseyestruextrafull       a 1 F  k1 F  ≥   R lag CADDEB         hî        aaa∂Œ=ŒŒŒ∂∂∂Œ[[ÎÔŒŒŒŒŒŒŒŒŒŒµŒŒŒŒŒŒŒŒŒŒŒŒdŒkŒŒŒŒŒ∑∏ŒŒŒÍÏ«rqpoŸNibf±≤∞¥∏∑Œeî¢ìŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒú°ß†ùñïóŒòŒÊŒŒ„ŒŒŒŒŒ˛˝ŒŒÔéçôö§£Ú21»ŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒÔÎÎUŒ˘4444=4ŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒÔÌŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒ9ŒŒŒŒŒŒŒŒŒŒŒ+Œ‘'9999;(&3’Yuj:PjPVhuuhu:V B˚[[[PUU≥:3ŒYYBBXXB»I~""""B‡hIIh~hhB‡ÿSB‡æB‡B‡æŒŒæ  Œ¬¬æTOTOTOTOB^^cUπBŒca_h..***^^˘;ÔÔÔÔ;Ô;ŒŒŒŒŒŒ6ŒÙ…FŒŒŒŒŒŒŒŒŒŒŒŒŒŒˇŒŒŒŒŒŒŒŒŒŒÉŒ—ˆŒŒŒŒŒŒŒŒlmGŒŒŒŒŒŒŒ{ŒŒŒvŒŒŒŒŒŒŒŒUŒŒŒŒŒŒ◊÷ŒŒDŒŒŒŒŒŒŒŒŒŒŒŒŒ˛ŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒŒ`ŒŒŒŒŒŒŒŒŒŒŒŒŒŒVŒŒLŒŒŒŒŒŒŒŒŒŒŒŒŒŒF*ÖŒÑà‰Œ⁄ŒŒ9   9   6   9   9   Ñ‚ê‚ò‚†‚nth_value        	        ! $ ) . 0 5 6 ; > A C E N Q V Z Z ^ c e i o w { { { ~ Å Ñ â é í ì ò ú † ® Æ µ ∏ ∏ ª Ω √ ∆ Œ ” ÿ € ﬁ ‚ Ï Ô Ù Ù ¯ ¸ 	 '+28DMOUZ\cgryzÅáçíòúü®≠±∑πº≈«…“÷‹‚ÍÔÔÔˇ )-057;CILUZbbfotyÇÖàäèì          †∑pπPπ    P∫¿∫ ª‡∫∞º–º Ω                                             !5NgÄ≤‰                     				Ä	 	*(')                            3  }   _  ~   x     ˇ˝ˇ˝ ˇˇˇ˛˛˛˝˚˙ˇ ˝ˇ ˚˛ ˝˛ˇ˛ ¸˙˛  ˛˝¸¸¸˝˝˚˛¸¸ˇ˛˝¸ ˇ ˛˛˝˝˝˛˛ˇˇ˛˝˛ ˛˛ ˇ˛˘˚˚ˆ  ˝ ˛ˇˇ¸˛ ˜¸ˇ˝¸ˇ˝ˇ˛ˇ˜ˆ¸˚ˇˇ  ˚˝˚˛  ˛˛ ˘˜˘˘ ˛ˇ˝ˇ˝˚˝ˇ˛˝¸˛  ˝˛¸  ˝˚˝ˇˇ ˛˛  ˝ ˛ ˛¸¸˙ ˛ ˛˛¸˜˚˘˝˚˘¯ ˛Ù˜˚¯˛˛ˇ ˝˝ˇ˝ˇˇ˝˚ˇˇˇˇ˝˙˚¸˙˚ˇ˚˝˝˝˝˝˝˝˝˛˝˚˛˝˝¸˛˛˛ˇ˛˚ˇ˛˚˝˚˚¸˚˚¸˛ ˇ  ˝ˇ ˝Ùˇ  ˝˚˝ ˛¸˛˝˛ ˝˚˙˚˙˛˛˚ıˇ˛ ˇˇ˝ ˛˝˛˝˝˛˜¯˙˝¸˙ˇˇˇ¸˙˝ ˛ˇ˝ˇ˝˙˘˙ˇ¯ˇ¸¯ ˇ˝ˇ˛˝ˇ˛˝˙ˇ˝ˇ˝˚˚˙¸˚ˇ˛ ˝˙ˇˇ˛ˇ˛˛˛ ˛˛˛ˇ˛˛ˇˇ¸˛˚ˇ˛ˇˇ˛˝ ˇ˛ˇ ˛ˇ¸˛ˇˇˇˇˇˇˇ˛ ˛¸˛˛˝ˇ ˇˇˇˇ˛ˇ ˇˇˇˇˇˇˇˇˇ ˝ˇ ˇ  ˇˇ˝˛ ¸˛    	bs†':){C!É>?/A¢&âuûÇü[+2Rà^3Bx/áru°G	vñEDÅMY_(í/u|zQu 0ó\ë#wúpdé~.Faã-ÄäP`ùîHc,ÑW}1$<
%uddUX*T•ISVçuìêJ]§ïuLKZÖèNO£="@Üy last_value     ÿ@’@◊Pÿ‡ Ÿ                                                       î3	  ∞Í%[B     @è@   ú3	   •[”¸A     LÌ@   §3	   ∞PøûA    @wKA   ¨3	   @ãTA    pôîA  ∞3	    çA    ŸO„A  ∏3	    ÄºÃ@   ∞ƒ^B˙˙$˙    4˙    0123456789ABCDEF0123456789abcdef                       ï            D¸    ÿ4	  	 	 	 	Í   @  Î     ˜     ÄÏ    @ Ì     Ó     Ô    Ä      Ò     Ú     Û    Ù     ˆ      ı     @¯     ˘  Ä   ‡Ï	t	¯	¸				 	(	0	8	D	H	P	 	(	X	`	d	l		 	t	|	Ñ	 	à	(	ê	î	ú	ƒ˙¿˙§	¨	¥	Ï	 	º	ƒ	Ã	t‘	Ù‡‹	Ï	 	‰	Ï	Ù	¯				(	                Ä  ö;  ö;–  Ë  Ù  Ä≤Ê   
   P√  ˛  Ë                                 Ä @  Ä               





Ä   @Ä******""""""""""""""""""""     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@3.37.2   	dense_rank  %_     êíì†îñ`ó ò0ôêõ0õêú†û∞û`§ £@§ê¢–®0©îÂåÂ Ì¯ÏÑÂm q ¯NˇPˇ@ˇIˇLˇzˇ’ ‹ s0ˇ3ˇ˛;ˇcx˝àØ›˜ãÓˇæ5∆,Dˇ|Eˇ+ñ')8ı˛ı˛ı˛ı˛ı˛ı˛ı˛ı˛ı˛ı˛ı˛ı˛ı˛ı˛ı˛ı˛ı˛ı˛ı˛ı˛ı˛ı˛ı˛ı˛ı˛ı˛ı˛ı˛ı˛ı˛ı˛ı˛ı˛ı˛ı˛ı˛ı˛|+ï®Ó˘$(-3Q^centáçëñõù†¢±ﬁÎÓ!/=HLNRVs{~Éêúü™¨ı˛ı˛ı˛ı˛ı˛ı˛ı˛ı˛‡ ı˛æËˇ"=05 KˇëˇÂ^ü^ü´ ] ı˛ı˛ı˛ı˛õ õ õ µ Ú ÊÈ&ˇâ„ \[[UˇØäÀZˇ2aÃ¸ 7AFΩ˜w õ‚ ˆ[√µéì˙ƒ¸ˇ
¡»:LW]4ˇRˇiˇ¯ˇM ∆ 1GÑG»÷ŸÏˇ.>Ij¶ãØ";IozÖàâ#`xîù¶bµ∏π·1∫ªÜº1Ωæø¿ Àmpûíìòöbûû†¬€wçñ∞°¢§á¡ó•ƒ©∆ä«≈Õ’÷ÿ≤√»≥“ÃÓ®´∑…Œœ”ÔÍÒÛı‘⁄ÚŸ¯¸#%‹‡.0245=+16 /397>?@BFÈÙK&(:CDGEHj˜˘IJAO'r*SWYXäïñõúùLMQãÑâåçêÇÖéëìó        a   E  b     @∑∏π–π‡ ∫@∫@∫    ¿∫    Pª                `ª∞ªBINARY   *?[             $@      Y@     à√@    Ñ◊óA Ä‡7y√ACnµµ∏ìFı˘?ÈO8M20˘HwÇZ<øs›Ou	@   ÿ
	B   ‹	A   î$	C      êíì†îñ`ó ò‡ ‡ ‡ êú†û∞û`§ £@§ê¢–®0©    ; '       		

  !!""##$$%%&&''(())**++,,--..//00112233445566778899    ¥	º	»	 506†;<Ä<†<<∞??–?†=>@>‡±∞≤‡™∞≠Õ`Õ 707`7@6        ¿9‡9ê7¿77Ä9†9                 8ê8¿8P8†πPùÄüÀÄÃ`∂∂`à`6‡@`í ?@ø0æ∞æ†Ç (( H–A∞Õ05 ?     ≥@™ü † G g À@À@ ‡À0π@≤@Jp)P-¿- .0.`.Ä.†.0/∞/–/∞//`∫Püp5∞g3pŒ`Œ ´p∏Ä@ ∫p4`*∞*–**++†G†+¿+‡+ , ,pf–∑`  Ã‡)†à ?≥p≤ ≠∞≥–≥Ã†—ÄE`E`@@¿@PA A Àr –0†0— D >†>?†0`0†“êhÄ4P—0¡`APB  ¿€ ‘ê‹p‹†÷`Ÿ‡ÿê∂¿®‡¶ !ÄøPh@C‡‹∞A0t ⁄pªΩ¿ª¥‡ô∞ô–≠`ÿ†ÿß‡ø@A A–s◊P◊Ä÷ g º¿â‡;–=PäpâPG–GpJ∞äp-P/`"Ä, -00P?0+/êÄ"∞ß¿ø–∏pBp™ê  Ã =¿.P+ê4@,P@î îPî†e¿dphêOÄc–cb`ede0e¿∂     A`,‡à@D∞÷†◊¿◊ÿê’`÷¿ ≠∞™™¿∫|¯              Äâ            §˙    97          	 
22d                                        	
 !"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\]^_`abcdefghijklmnopqrstuvwxyz{|}~ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ                          à            |˙    first_value º º ª Ω æ æ æ æ Ω Ω Ω Ω Ω ¬ ƒ ∆ ∆ ≈ ≈ √ √     Ã Ã Õ œ œ œ – ‘ ’ ÷ ÷ ÷ ÷ ÷ ÷ ÷ ÷ ÷ ÷ ÷ ÷ ÷ ﬂ ﬂ € € › › ‡ ‡ ‡ ‡ · · · · · ﬁ ﬁ ‚ ‚ ‚ … ‰ Â Â Â Â Â Ë Ÿ Ÿ È È Í Í Ω Ï Ï Ω Ω Ω À À À Ó Ò Ò Ò Ô Ô ˚ ˚ Ú Ú Ú ˝ Û Û Û ˛ ˛ Ù Ù   ˇ ˇ ˇ ˇ « « Ì Ì ¯ ¯ Ê Ê ⁄ ⁄ ⁄ ˆ ˆ ˜ ˜ ˘ ˘ ˘ ˘ Ω ı ı 



Ω Ω Ω ÿ ÿ ÿ ÿ ÿ ◊ ◊ ◊ ÿ ÿ ÿ ÿ ÿ ÿ ÿ ◊ ÿ ÿ ÿ ÿ ÿ ÿ ÿ ÿ ÿ ÿ ÿ ÿ ÿ ÿ ÿ ÿ ÿ ÿ ÿ ÿ ÿ ÿ ÿ ÿ ÿ ¸ ¸ Ω ‹ ‹ Á Á Ω Ω Ω Ω Ω Ω Ω Ω “ ” Ω !!#$$""""ÿ ÿ Î Î Î Ω Ω Ω &&Ω Ω Ω Ω Ω Ω Ω 'Ω Ω Ω )+,,-		000/  1123333334448::;;99<<===˙ 776∏ π π ∫ ∫ ∫ ø ø ø ¡ ¡ Ω   » » ¿ ¿ ¿ œ – — — Œ Œ ÷ ÷ ÷ … „ „ ‰ Ë Í Ó Ô ˝ ˛ ÿ “   #$%%((**+...	  Ÿ’˘ °c◊ < 0	          @	         P	ï          \	   Ä      l	8        	ï          |	î          à	          ú	          ¨	         ƒ		&        ‘	
          ‰	         Ù	          	         	/        ,	ï7        @	         T	         l	          x	q+        å	a         †	   @      ∞	          ¿	         ‘	         ‡	        	           	         	          0	a        <	a&        H	a       T	q          d	ë          t	ê          à	         ú	ê          ¨	ë          º	           »		        ‘	!          ‡	ë          Ï	î          ¯	 	        	         	q          	         0	          D	         `	         p	!          Ä	  @       î	"          §	#          ¥	$ï          ¿	%a        Ã	&!        ÿ	%a       ‰	'          	(          	)          	  Ä        	         0	*           D	+2        T	        0123456789ABCDEF (
 08   4s p ‹ © « s p ‹ 4wÚ4x4ñó<« È) ) È	...≈) ) ã) ) 3 3 ∆(ı(z { q ∑∑

x x y y y y 4óÙs p ‹ s p ‹ ËN11s p ‹ ˙ Ÿ G G z { q ∑∑

x x y y y y ∏∏∏}w w w w v v u u u t ∫ü}t ∫}"v∫ üÇ
ÇóÕuc œLy y y y w w w w v v u u u t ∫z { q ∑∑

x x y y y y Èü†°Û (4ˆÛÚ7| 7ü†°⁄Òw w w w v v u u u t ∫F F óy y y y r u u u t ∫ÅΩw w w w v v u u u t ∫z { q ∑∑

x x y y y y óQ ~zP w w w w v v u u u t ∫}œLz { q ∑∑

x x y y y y ◊  ê¶w w w w v v u u u t ∫œ  ; ”%; ”3}ç @3óç üi%b%}g}w w w w v v u u u t ∫z { q ∑∑

x x y y y y È™h[˝[â 1∂∂1èü†°:bÙ;Á Û‘¸Á w w w w v v u u u t ∫"w w w w v v u u u t ∫Jg4æÛÛıæœ 42+ók˝kZ∏ v v u u u t ∫G G ∑∂fÙÿG G ÛÕ z { q ∑∑

x x y y y y € € ÿüó:ü”˜≈ï "3Èç ÛÛı"å !%æø æ∂∂z { q ∑∑

x x y y y y 3w w w w v v u u u t ∫üü†°ü†°tüÛ X1ˆÛÚóü fè Òπ Á 	  ˝ w w w w v v u u u t ∫z { q ∑∑

x x y y y y óâ æø_© üç¥ü†°£Èb S4Vü†°2+z { q ∑∑

x x y y y y ƒG G w w w w v v u u u t ∫1°2+üü†°¥}J >ók÷Øè  ^}]â}w w w w v v u u u t ∫z { q ∑∑

x x y y y y ó« ÿü˛ÿü†°Çó êâ  = 42 òòz { q ∑∑

x x y y y y õ˘S G G w w w w v v u u u t ∫ü⁄ ¨üü†°kf¸a˚¯ ó2+Ó]k#È.%w w w w v v u u u t ∫z { q ∑∑

x x y y y y óî ü†°ü†°È„ƒñ È‡4£13Áz { q ∑∑

x x y y y y 4v  w w w w v v u u u t ∫ü§°4$  
  B ó˙1AAÊ£©w$G G w w w w v v u u u t ∫z { q ∑∑

x x y y y y 4 ü†°ó√/BCD°È1? AG G ≠√¬1∏e q ∑∑

x x y y y y w w w w v v u u u t ∫QüÈ4 µ«ﬁ4ˆ ı Ù Å	#Rï ƒ Íù i Œg G G 4S  w w w w v v u u u t ∫√h ´Q@ä  4 Qü†°~ ã1"4óﬁ')˝ » R$ ÃÅ7 7 1ﬁ|ß∑óSG G z { q ∑∑

x x y y y y ¥ó(5z { q ∑∑

x x y y y y πh\í \z o q ∑∑

x x y y y y îì ®w w w w v v u u u t ∫ü4¥ >ZIi>w w w w v v u u u t ∫4&ê 8 8 ‡ 4˛w w w w v v u u u t ∫‰Å  f≤∑∂ó  Û ûªü†°ùΩZ-ù¡ ıÓº¿à∆ü4{ q ∑∑

x x y y y y Ò}4≈4æ˜ æ  Å∆4}l ,} 6àÀ ¬ Â+ + 9 9 2+/à–4, , àgü†°ﬂw w w w v v u u u t ∫ª4G  4¢#û´ 47)’ Â4úl ,â  : : ≥:; ; Ÿ %< < ]‹/I= = ˝Ã’ 4j j  k 1ª654ªÛÃ1414> > H)˜ »4b n 2+14- - ï≥. . / / —ÛÛıˆ 1 1 4˝ï’2 2 4j j 14T Ã ïk 4ª65ï4Û4? ? 4?4@ @ …›A A ì ` &   ¯ú4B B Ä Ä ûC C 4 4 ùÛÛıˆ $ìΩ– cäD D ‰ ÜÜÖÉìΩKml ,≈ ÜÜÖÉ4· K9HÎb ¸ / ◊8¸ 4– · 49Ÿ ¸ “E E 8ÜÜÖÉªMKb 45 5 Cù ù „ Ô)˘ !· 49¢  ›á 4‹„ 8û û ut¢ i-á 4·‚ L L ˝[/b 6 6 j j +4˘ ‚ k „ ª65H H ÛN¢ 4Ê á l ,ø ¸ òÅ Å 4E2+4õ4n ‚ /4òI I 4i2+ÛÛıˆ Ç Ç /¡É É   eªú ú |}õ õ R¡dò4)»…2+˜U4l ,4 l4XWë Yà à ;/;¡4˝Ü Ü Ñ Ñ j j Ö Ö 4`k 4ª65<ªÛjK K :4:4ún )'˜M M QJ J Ä8C&ÜÒË‹€* * 0 0 ÛÛıˆ ›,Í˝  5m j j ¢o“ qák sª65ﬂ nÛÙ∆xl ,÷  Eg€c¡/¿ws∆Fé/"K≈ d ,—  ∆ ÛÛıˆ Å Ó*√†/S ª≠ Œ ∂ › Àß ± ÃØ ÌÈ )O ≤ t≥ # ¥ ` zªå$ ”∆y‚Ì |èR ∫ )ªY Ëæ Ô Î˝T ëﬁ—j j P˝Ò k Æª65[ Û˝>˘◊ =j j ím∞b¯k ˜ª65<Û±+,h_ @lÛÛıˆ ˛ ˇ ¥}  
 {.≠f a A0ÛÛıˆ ny?>pr-Ä… " XW8ô
	·ü 9Ÿ‘‚† é ‡ﬂ)” >° ‘ N ºÀ 4ﬁ 9ã 7<Æ £ ≥Â ∞ çDË Gµ ôö¨ § • £∑ U V •¶ W X JFÍ Î ò  Ï O?¿¸ ª ÁÓ º % MÏdÚ _ıΩ Z  ¯\ k\ *® xô ] ˇ^ çö n' ÿ mæ¿ πn É˚   ás Å!    Ü√ b & PO ( ï¯Ym  0Ñä î™ ––ó––––––––––5–––4  naturaleftouterightfullinnercross   Ä/	ò/	¨/	¿/	‘/	/	0	(0	<0	P0	h0	Ñ0	†0	º0	‘0	Ù0	1	,1	@1	X1	p1	Ä1	ê1	®1	ƒ1	ÿ1	1	2	(2	D2	`2	t2	ê2	®2	ƒ2	‹2	Ù2	 3	3	 3	!        <3	H3	P3	43	‹4	      										&&#                    &&&&&&&&&&                                                       ntile   ˇˇˇˇˇˇˇåpå–å`ç¿ç–ç0é›	¿ ¿ ¿ ¿ ⁄ ◊ ¿ ⁄ ¿ ‘ Í Î Õ   ¿ &◊ ÿ À ¿ À — “ ”  ◊ ÿ Õ ◊ ÿ ◊ ÿ ' „ ◊ Â + , - . / 0 1 2 3 4 5 6 7 8 9 ¿  Ó Ô Ó Ô ◊ Ì  ˚ ¸ ˚ ˇ  ◊ ÿ + , - . / 0 1 2 3 4 5 6 7 8 9 — “ ” L f g h i j k l m n o p ; Y o p \ ¸ 349:p 8; V X  9P ;9:  Ä 6 7 8 9 f g h i j k l m n o p + , - . / 0 1 2 3 4 5 6 7 8 9 ¿ s t u v z ¿ y z {   E Ã s t u ¿ É f g h i j k l m n o p ◊ ÿ  6 7 8 9 : l m n o p ¿ † f g h i j k l m n o p + , - . / 0 1 2 3 4 5 6 7 8 9  . / 0 1  ¯ ¿ ˙ C f g h i j k l m n o p  Ä + , - . / 0 1 2 3 4 5 6 7 8 9  § • f g h i j k l m n o p ∏ π ∫ ª º Ω ∫ ª º Ω ¬ L ƒ Â ¬  ƒ ; ¿ À x ; W À Y 67\ f g h i j k l m n o p + , - . / 0 1 2 3 4 5 6 7 8 9 Ó Ô I Á Ó Ô   d  Q 12˚    ˚ s t u ÷ s t ê ¿ 	x r ﬁ 	f g h i j k l m n o p ¿ f g h i j k l m n o p ~ 67¿ )ò ô ö )ï ¿ â ä  ¿ d ¿   j k l m n o p ◊ ÿ j k e t ¿ ◊ ÿ x ï + , - . / 0 1 2 3 4 5 6 7 8 9 u u ¿ ;  ª ; Ω   ¸ ¬ ¿ ƒ ò ô ö ¸ H À ò  ö é é + , - . / 0 1 2 3 4 5 6 7 8 9 ¿ f g h i j k l m n o p Ó Ô Ì s t u s t u ¿ ; v  ˚ y z { / /;  H É 4 	 8 f g h i j k l m n o p + , - . / 0 1 2 3 4 5 6 7 8 9  Q )' ¿ ; À ; s t u l ¿ I  M ¿ O s t u â ä + , - . / 0 1 2 3 4 5 6 7 8 9 w ◊ ÿ Ó Ô f g h i j k l m n o p ˚ ¿ â ä ; Í Î s t u t L ~  Ä  ¿    ¿ ¸  Y ,-\ f g h i j k l m n o p + , - . / 0 1 2 3 4 5 6 7 8 9  ¿ ¿ ;  ¿ s t u »  34 Õ Q 8 ¿ Ö  á à + , - . / 0 1 2 3 4 5 6 7 8 9 ≈ _ ñ ◊ ÿ f g h i j k l m n o p ; ¿ p ; s t u ¿ v w x y z { |  â ä / Ç ¿ ¿ ¸ 2À f g h i j k l m n o p + , - . / 0 1 2 3 4 5 6 7 8 9   s t u s t u Ó Ô ﬁ ¿ ‡ Ì  ¿ ¿ ; Ë ˚ å Ã + , - . / 0 1 2 3 4 5 6 7 8 9 ¿ # ◊ ÿ ¿ f g h i j k l m n o p ; Ê ¿ ¿ Ó Ô Ì ◊ ÿ /4◊ ÿ  8 B ˚ ~  Ä t Ê /J À ◊ ÿ f g h i j k l m n o p + , - . / 0 1 2 3 4 5 6 7 8 9 ¿ ‘ s t u  Ó Ô ¿ ¸   	 ¿ ¿ Ó Ô 4˚ M 8O ◊ ÿ Å “ ” ˚ é û - . / 0 1 2 3 4 5 6 7 8 9 f g h i j k l m n o p  ; ¿ ¿ Ì ¸ Û ¿ ¿ ~  Ä ¿ 4À  ˝ 84œ – 8ù "ü ◊ ÿ ¿ * ◊ ÿ f g h i j k l m n o p û Ê Ì † Ó Ô ? ◊ ÿ ¿ ¿  s t u  I ˚ ¸ ¿  ¿ Ê Ô    “ ” c ¿ ◊ ÿ · ˚ ¿ ¿ é  * ◊ ÿ + , - . / 0 1 2 3 4 5 6 7 8 9 ;  #? Ñ + , - . / 0 1 2 3 4 5 6 7 8 9 ¸     + , - . / 0 1 2 3 4 5 6 7 8 9 j k f g h i j k l m n o p ; ¿ t ê  ; #¿ ! f g h i j k l m n o p ¿ #£  ◊ ÿ  ¿ l f g h i j k l m n o p A ¿ B ◊ ÿ e Á j k  ◊ ÿ ¿ ‘ Ü r s t u ã w U t œ – Ê ¿   ¿ ^ < ; ¿ , - . / 0 1 2 3 4 5 6 7 8 9 ¿ L ¿  ¿ ò . ö ◊ ÿ ¿ ' W ¿ Y   \  ¿    Ê ◊ ÿ ◊ ÿ â ä s $ ë Ä ¿ ◊ ÿ   s t u "f g h i j k l m n o p ; ¿ ó ◊ ÿ ¿ = À *+¿ ¿ G  ê À ¿ À Ê r   Q  ◊ ÿ ¿ ◊ ÿ ˇ  À ◊ ÿ Ç  $ ¿ ◊ ÿ d Ó Ô e  ¿ j k 0 Ó Ô Ó Ô q ˚ s t u ¿ ; x e ˚ ¿ ˚ ¿ Ó Ô ◊ ÿ ¿ G . Û ¿   â ä ˚ ¿ ◊ ÿ ˝  U ◊ ÿ ◊ ÿ Z Û ò ô ö õ ú ◊ ÿ ¿ d ˝ Û ◊ ÿ ¿ j k Û ¿ î ï ˝ q ¿ s t u ˝ ¿ x ¿ ◊ ÿ ¿  ¿  ◊ ÿ ¿ s ◊ ÿ  î  ◊ ÿ ¿ r ¿ ◊ ÿ ◊ ÿ Ü ◊ ÿ ◊ ÿ ã ò ô ö õ ú     ç    ◊ ÿ  
        }     
     ¿         $ ê  (  ¿ ç  ¿       Ä ◊ ÿ ( 
     ;    ¿ ◊ ÿ ¿ ◊ ÿ F  G  ó  ¿   N 5 ¿ Q ¿ ¿ F ( U ◊ ÿ w x Z N ; ˛ Q ¿ ¿ b ◊ ÿ d  ;  ◊ ÿ j k  ¿  b  q F s t u ◊ ÿ x ¿ N ¿ å Q      Ñ ◊ ÿ ¿ ¿ â ä ¿  ¿  b $ ¿ Ñ ◊ ÿ ¿ t â ä ò ô ö õ ú ◊ ÿ t ° ◊ ÿ ◊ ÿ x ; ◊ ÿ   ◊ ÿ ¿ ° Ç Ñ ¿ G S T â ä ; ¿ ¿   ¿  a · U ¿  ¿  Z ¿ ¿ ◊ ÿ ò $ ö ° ¿ d ◊ ÿ ¿ ◊ ÿ j k · ◊ ÿ ¿ ¿ q ¿ s t u ; x ¿ ◊ ÿ ò ¿ ö ¿  = G Î t ◊ ÿ ¿ ◊ ÿ ¿ ¿ ¿ ¿ ¿ ¿ ¿ ¿ ¿ ◊ ÿ ◊ ÿ ò ô ö õ ú ¿ ¿ d Ò ˛ ˛ Ú j k l ˛ ’ ˛ æ q s t u (
x € Ù   ‰  $
‡ $⁄ ⁄ √ ⁄ < ı $ ı Ù ¯   Ú  ¯ ò ô ö õ ú Ù å « « & « $ ñ ; (ï  ( + Ï « È  ∆ G %Ï Ï Ï î ; ı ı « ∆ È ı %È G ı ù >  « ∆ ‹ d « ∆ ‹ « !j k  r ‚ ∆ Ÿ q @ s t u Ÿ  x d ﬂ Ÿ Ÿ § ﬂ j k ‹ }  Ÿ € q Ÿ s t u Ÿ 7x ‚ p 0‹ r è ò ô ö õ ú « [ <R <ì ê  « ˘ ù í ë ò ô ö õ ú ¯ ˘ ı ˜ ˆ  …   ¡ ¡ ‘ Œ ø ø ø ‘ Œ › ‘ ‘ › ’  Œ ’ ‘   ¢     ä ñ Å   ç   è  ç ..+Å Å = ñ 5 5 % Å 5 5 s  " å   r † D K  D ) å r    Ç | C  C    `   ;  C %   î        å a   s  é  X K " , " K  " V  " " "  ]    "                    å  å >>Ü >>>>>>>>>>å >>>å >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>    b       $	,	4	

		d
  s   g  z   q 	  Q 
  w   c    o   u
   x  X   f   e  E  G  i
  n    %    p  T    S    r
    &"  èÅÆ®®b‰ÇÌîîî    ¥ ˜îîîîîîîîîîîîîaa6 Ábbbbb( n € !å∑˝$jë◊˛D„˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜rpp)îîîîîîîîîîîîîîîîîîîîîîîîîîîîîîîîîî©îîîîîîîîîîîîîí T T T T T ;ëa Õ˚ B B 3 ÑB B DDB ƒƒƒƒÖ r r   ıımmm7éééé©©‰ ˚ KB B B B B B B B B B B B B B B B B B B B --B 	   ÈÈ«@ıııııııˇ ==ìl◊†{£B B B B B B B B B B ¸B B B B B B B B B B B B B B B RB B B <B B ·B B B B B B B B ‹;3‚‚‚‚Q33€Å_æ˜XæXÙ◊◊˜ÙJ˛êêêX/Tyy;;••;8<º™¬¬¬¬;«N<<Nº™N™N;«Uµ;«ﬁ;«;«ﬁèèè∆ııﬁèôè∆èèmˇ≥≥ﬁö∂ö∂ö∂ö∂;◊◊‚‚£ß";ü£´ÆN7GGOOOııııııııııııııı¡ E™º˙@nùõrN4ã¨åëôß±–£c$Øﬂ≠◊Î‚ˆ¥—-V˛õ`eS»\]UWÂ⁄YY[ÁaËfwÏ¸Y˝B^YÍLMPQg˛áÜvÓKxNEj#~ÉÖàXâäãçZiÑAåècÇíïñóòìôõR&ùûCö°*†úü¢£bplëtk§©≠Ø∞±™¥†∂∑∏π∫ªæ∆ø¿¡¬ƒ≈√_TVdh»«Œ÷ﬁSQLite format 3 \ît‡x‡|‡Ñ‡∞A B@B†B‡BB0C            ; ; ; ;   ; ; ;   ; ; ; ;       ;     ;         ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ;       ; ;                         ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ;                                                                                                                                                                         abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789  percent_rank       ÄAÄAêA†A†Ar †A        lead          ∫ú1µ   	 
              ‡à            à˙      &"o u t   o f   m e m o r y   thstndrd     ƒ‡Ã‡‘‡ÿ‡‹‡‡‡‰‡Ë‡‡Ù‡¸‡·      row_number  bîT\ÜRi  ^ UH 5#V *a6Yá  å (Å k 	  {P N Agì às  0 Z  F<énz I[Gë=xJ 1 ) q   m
ot}2| d yê8ÇãXS%~  l3ÉÄ "  Ñ b&' -u] T5	`5	l5	x5	Ñ5	å5	î5	†5	¨5	¥5	º5	ƒ5	Ã5	‘5	‰5	Ï5	¯5	 6	6	6	6	6	(6	46	<6	D6	L6	T6	`6	l6	x6	Ñ6	å6	ò6	§6	¨6	∏6	ƒ6	Ã6	‘6	‹6	‰6	Ï6	Ù6	¯6	¸6	7	7	7	(7	07	87	@7	D7	H7	L7	P7	T7	X7	`7	l7	|7	à7	ê7	ò7	§7	∞7	∏7	»7	‘7	‹7	‰7	Ï7	Ù7	¸7	8	8	8	$8	,8	48	<8	H8	T8	\8	d8	t8	|8	à8	ê8	ò8	§8	¨8	¥8	¿8	Ã8	ÿ8	‡8	Ï8	¯8	9	9	9	$9	,9	89	D9	H9	T9	`9	h9	t9	|9	Ñ9	å9	ú9	¨9	¥9	¿9	–9	‹9	‰9	9	¸9	:	:	:	$:	,:	4:	@:	P:	\:	d:	l:	t:	|:	à:	ò:	§:	¥:	¿:	Ã:	‘:	‹:	Ë:	Ù:	¸:	;	;	$;	0;	<;	D;	P;	\;	d;	p;	x;	Ñ;	ê;	ò;	§;	∞;	º;	ƒ;	–;	‡;	Ï;	Ù;	¸;	<	<	<	 <	,<	8<	@<	L<	X<	`<	h<	cume_dist   T  ; t  R E   t         +  jr     è       ç  w4  â  > ä Ö  $  M    ; /          E     í : K         h @B?     .           Qe pC O`v  D  c, 7 L _ !9 f  W ß   d   ! \  R  E             ‡?öôôôôô©?{ÆG·zt?¸©Ò“Mb@?-CÎ‚6
?Òh„àµ¯‘>çÌµ†˜∆†>HØºöÚ◊j>:å0‚éy5>ï÷&Ë.>b a d   p a r a m e t e r   o r   o t h e r   A P I   m i s u s e   ¯“% s \       êP	0x †x `x        ¿      F\ % s   % s % s \ % s   ÑQ	†à †à Äà pà Pà Ä òQ	 â  â à ‡à ¿à Ä ¨Q	Pâ Pâ 0â  â ¿à Ä ¿Q	ä ä Äâ pâ ¿à Ä % s     string too long Ñ÷´yUOCätê¯“ˆ5˝Òe	ë~ÿ@π
Æ
¸>óS	@é  å ‡x ¿{ †~ ¿~ –Ä @S	Äí  r ‡q TS	êí q –q 0í hS	¿ã  ,  ,  ç pé ,S	0å  å –––––/ / % s / / % s     PV	À À ¿À ∞À ¿à Ä dV	`Ã `Ã @Ã 0Ã Ã Ä xV	†Ã †Ã êÃ ÄÃ Pà Ä åV	‡Ã ‡Ã –Ã ¿Ã ¿à Ä †V	0Õ 0Õ Õ  Õ Ã Ä ¥V	†Õ †Õ ÄÕ pÕ PÕ Ä »V	 Œ  Œ –Õ ¿Õ Pà Ä W	p∆ { % s }     W	êî  å Pï ∞ï  ñ pñ ¿ñ IYBy;»Oâ∆¸πyÓq‹V	`Œ PŒ @Œ V	 ì î 0î     S o f t w a r e \ M i c r o s o f t \ V i s u a l S t u d i o \ D i a g n o s t i c s H u b \ D e b u g         D i a g n o s t i c s H u b   -   D e b u g B r e a k   -   % s   -   A t t a c h   t o   % d   P a c k a g i n g   1 7 . 3 . 3 2 7 2 6 . 3     _ B u i l d V e r s i o n   n o n e     u r l   v s c o m p i d     n o r m     m s p c     m s #####################################################################
#
# editor.py
#
# A general purpose text editor, built on top of the win32ui edit
# type, which is built on an MFC CEditView
#
#
# We now support reloading of externally modified documented
# (eg, presumably by some other process, such as source control or
# another editor.
# We also suport auto-loading of externally modified files.
# - if the current document has not been modified in this
# editor, but has been modified on disk, then the file
# can be automatically reloaded.
#
# Note that it will _always_ prompt you if the file in the editor has been modified.


import win32ui
import win32api
import win32con
import regex
import re
import string
import sys, os
import traceback
from pywin.mfc import docview, dialog, afxres

from pywin.framework.editor import (
    GetEditorOption,
    SetEditorOption,
    GetEditorFontOption,
    SetEditorFontOption,
    defaultCharacterFormat,
)

patImport = regex.symcomp("import \(<name>.*\)")
patIndent = regex.compile("^\\([ \t]*[~ \t]\\)")

ID_LOCATE_FILE = 0xE200
ID_GOTO_LINE = 0xE2001
MSG_CHECK_EXTERNAL_FILE = (
    win32con.WM_USER + 1999
)  ## WARNING: Duplicated in document.py and coloreditor.py

# Key Codes that modify the bufffer when Ctrl or Alt are NOT pressed.
MODIFYING_VK_KEYS = [
    win32con.VK_BACK,
    win32con.VK_TAB,
    win32con.VK_RETURN,
    win32con.VK_SPACE,
    win32con.VK_DELETE,
]
for k in range(48, 91):
    MODIFYING_VK_KEYS.append(k)

# Key Codes that modify the bufffer when Ctrl is pressed.
MODIFYING_VK_KEYS_CTRL = [
    win32con.VK_BACK,
    win32con.VK_RETURN,
    win32con.VK_SPACE,
    win32con.VK_DELETE,
]

# Key Codes that modify the bufffer when Alt is pressed.
MODIFYING_VK_KEYS_ALT = [
    win32con.VK_BACK,
    win32con.VK_RETURN,
    win32con.VK_SPACE,
    win32con.VK_DELETE,
]


# The editor itself starts here.
# Using the MFC Document/View model, we have an EditorDocument, which is responsible for
# managing the contents of the file, and a view which is responsible for rendering it.
#
# Due to a limitation in the Windows edit controls, we are limited to one view
# per document, although nothing in this code assumes this (I hope!)

isRichText = 1  # We are using the Rich Text control.  This has not been tested with value "0" for quite some time!

# ParentEditorDocument=docview.Document
from .document import EditorDocumentBase

ParentEditorDocument = EditorDocumentBase


class EditorDocument(ParentEditorDocument):
    #
    # File loading and saving operations
    #
    def OnOpenDocument(self, filename):
        #
        # handle Unix and PC text file format.
        #

        # Get the "long name" of the file name, as it may have been translated
        # to short names by the shell.
        self.SetPathName(filename)  # Must set this early!
        # Now do the work!
        self.BeginWaitCursor()
        win32ui.SetStatusText("Loading file...", 1)
        try:
            f = open(filename, "rb")
        except IOError:
            win32ui.MessageBox(
                filename
                + "\nCan not find this file\nPlease verify that the correct path and file name are given"
            )
            self.EndWaitCursor()
            return 0
        raw = f.read()
        f.close()
        contents = self.TranslateLoadedData(raw)
        rc = 0
        if win32ui.IsWin32s() and len(contents) > 62000:  # give or take a few bytes
            win32ui.MessageBox(
                "This file is too big for Python on Windows 3.1\r\nPlease use another editor to view this file."
            )
        else:
            try:
                self.GetFirstView().SetWindowText(contents)
                rc = 1
            except TypeError:  # Null byte in file.
                win32ui.MessageBox(
                    "This file contains NULL bytes, and can not be edited"
                )
                rc = 0

            self.EndWaitCursor()
            self.SetModifiedFlag(0)  # No longer dirty
            self._DocumentStateChanged()
        return rc

    def TranslateLoadedData(self, data):
        """Given raw data read from a file, massage it suitable for the edit window"""
        # if a CR in the first 250 chars, then perform the expensive translate
        if data[:250].find("\r") == -1:
            win32ui.SetStatusText(
                "Translating from Unix file format - please wait...", 1
            )
            return re.sub("\r*\n", "\r\n", data)
        else:
            return data

    def SaveFile(self, fileName, encoding=None):
        if isRichText:
            view = self.GetFirstView()
            view.SaveTextFile(fileName, encoding=encoding)
        else:  # Old style edit view window.
            self.GetFirstView().SaveFile(fileName)
        try:
            # Make sure line cache has updated info about me!
            import linecache

            linecache.checkcache()
        except:
            pass

    #
    # Color state stuff
    #
    def SetAllLineColors(self, color=None):
        for view in self.GetAllViews():
            view.SetAllLineColors(color)

    def SetLineColor(self, lineNo, color):
        "Color a line of all views"
        for view in self.GetAllViews():
            view.SetLineColor(lineNo, color)


# 	def StreamTextOut(self, data): ### This seems unreliable???
# 		self.saveFileHandle.write(data)
# 		return 1 # keep em coming!

# ParentEditorView=docview.EditView
ParentEditorView = docview.RichEditView


class EditorView(ParentEditorView):
    def __init__(self, doc):
        ParentEditorView.__init__(self, doc)
        if isRichText:
            self.SetWordWrap(win32ui.CRichEditView_WrapNone)

        self.addToMRU = 1
        self.HookHandlers()
        self.bCheckingFile = 0

        self.defCharFormat = GetEditorFontOption("Default Font", defaultCharacterFormat)

        # Smart tabs override everything else if context can be worked out.
        self.bSmartTabs = GetEditorOption("Smart Tabs", 1)

        self.tabSize = GetEditorOption("Tab Size", 8)
        self.indentSize = GetEditorOption("Indent Size", 8)
        # If next indent is at a tab position, and useTabs is set, a tab will be inserted.
        self.bUseTabs = GetEditorOption("Use Tabs", 1)

    def OnInitialUpdate(self):
        rc = self._obj_.OnInitialUpdate()
        self.SetDefaultCharFormat(self.defCharFormat)
        return rc

    def CutCurLine(self):
        curLine = self._obj_.LineFromChar()
        nextLine = curLine + 1
        start = self._obj_.LineIndex(curLine)
        end = self._obj_.LineIndex(nextLine)
        if end == 0:  # must be last line.
            end = start + self.end.GetLineLength(curLine)
        self._obj_.SetSel(start, end)
        self._obj_.Cut()

    def _PrepareUserStateChange(self):
        "Return selection, lineindex, etc info, so it can be restored"
        self.SetRedraw(0)
        return self.GetModify(), self.GetSel(), self.GetFirstVisibleLine()

    def _EndUserStateChange(self, info):
        scrollOff = info[2] - self.GetFirstVisibleLine()
        if scrollOff:
            self.LineScroll(scrollOff)
        self.SetSel(info[1])
        self.SetModify(info[0])
        self.SetRedraw(1)
        self.InvalidateRect()
        self.UpdateWindow()

    def _UpdateUIForState(self):
        self.SetReadOnly(self.GetDocument()._IsReadOnly())

    def SetAllLineColors(self, color=None):
        if isRichText:
            info = self._PrepareUserStateChange()
            try:
                if color is None:
                    color = self.defCharFormat[4]
                self.SetSel(0, -1)
                self.SetSelectionCharFormat((win32con.CFM_COLOR, 0, 0, 0, color))
            finally:
                self._EndUserStateChange(info)

    def SetLineColor(self, lineNo, color):
        "lineNo is the 1 based line number to set.  If color is None, default color is used."
        if isRichText:
            info = self._PrepareUserStateChange()
            try:
                if color is None:
                    color = self.defCharFormat[4]
                lineNo = lineNo - 1
                startIndex = self.LineIndex(lineNo)
                if startIndex != -1:
                    self.SetSel(startIndex, self.LineIndex(lineNo + 1))
                    self.SetSelectionCharFormat((win32con.CFM_COLOR, 0, 0, 0, color))
            finally:
                self._EndUserStateChange(info)

    def Indent(self):
        """Insert an indent to move the cursor to the next tab position.

        Honors the tab size and 'use tabs' settings.  Assumes the cursor is already at the
        position to be indented, and the selection is a single character (ie, not a block)
        """
        start, end = self._obj_.GetSel()
        startLine = self._obj_.LineFromChar(start)
        line = self._obj_.GetLine(startLine)
        realCol = start - self._obj_.LineIndex(startLine)
        # Calulate the next tab stop.
        # Expand existing tabs.
        curCol = 0
        for ch in line[:realCol]:
            if ch == "\t":
                curCol = ((curCol / self.tabSize) + 1) * self.tabSize
            else:
                curCol = curCol + 1
        nextColumn = ((curCol / self.indentSize) + 1) * self.indentSize
        # 		print "curCol is", curCol, "nextColumn is", nextColumn
        ins = None
        if self.bSmartTabs:
            # Look for some context.
            if realCol == 0:  # Start of the line - see if the line above can tell us
                lookLine = startLine - 1
                while lookLine >= 0:
                    check = self._obj_.GetLine(lookLine)[0:1]
                    if check in ["\t", " "]:
                        ins = check
                        break
                    lookLine = lookLine - 1
            else:  # See if the previous char can tell us
                check = line[realCol - 1]
                if check in ["\t", " "]:
                    ins = check

        # Either smart tabs off, or not smart enough!
        # Use the "old style" settings.
        if ins is None:
            if self.bUseTabs and nextColumn % self.tabSize == 0:
                ins = "\t"
            else:
                ins = " "

        if ins == " ":
            # Calc the number of spaces to take us to the next stop
            ins = ins * (nextColumn - curCol)

        self._obj_.ReplaceSel(ins)

    def BlockDent(self, isIndent, startLine, endLine):
        "Indent/Undent all lines specified"
        if not self.GetDocument().CheckMakeDocumentWritable():
            return 0
        tabSize = self.tabSize  # hard-code for now!
        info = self._PrepareUserStateChange()
        try:
            for lineNo in range(startLine, endLine):
                pos = self._obj_.LineIndex(lineNo)
                self._obj_.SetSel(pos, pos)
                if isIndent:
                    self.Indent()
                else:
                    line = self._obj_.GetLine(lineNo)
                    try:
                        noToDel = 0
                        if line[0] == "\t":
                            noToDel = 1
                        elif line[0] == " ":
                            for noToDel in range(0, tabSize):
                                if line[noToDel] != " ":
                                    break
                            else:
                                noToDel = tabSize
                        if noToDel:
                            self._obj_.SetSel(pos, pos + noToDel)
                            self._obj_.Clear()
                    except IndexError:
                        pass
        finally:
            self._EndUserStateChange(info)
        self.GetDocument().SetModifiedFlag(1)  # Now dirty
        self._obj_.SetSel(self.LineIndex(startLine), self.LineIndex(endLine))

    def GotoLine(self, lineNo=None):
        try:
            if lineNo is None:
                lineNo = int(input("Enter Line Number"))
        except (ValueError, KeyboardInterrupt):
            return 0
        self.GetLineCount()  # Seems to be needed when file first opened???
        charNo = self.LineIndex(lineNo - 1)
        self.SetSel(charNo)

    def HookHandlers(self):  # children can override, but should still call me!
        # 		self.HookAllKeyStrokes(self.OnKey)
        self.HookMessage(self.OnCheckExternalDocumentUpdated, MSG_CHECK_EXTERNAL_FILE)
        self.HookMessage(self.OnRClick, win32con.WM_RBUTTONDOWN)
        self.HookMessage(self.OnSetFocus, win32con.WM_SETFOCUS)
        self.HookMessage(self.OnKeyDown, win32con.WM_KEYDOWN)
        self.HookKeyStroke(self.OnKeyCtrlY, 25)  # ^Y
        self.HookKeyStroke(self.OnKeyCtrlG, 7)  # ^G
        self.HookKeyStroke(self.OnKeyTab, 9)  # TAB
        self.HookKeyStroke(self.OnKeyEnter, 13)  # Enter
        self.HookCommand(self.OnCmdLocateFile, ID_LOCATE_FILE)
        self.HookCommand(self.OnCmdGotoLine, ID_GOTO_LINE)
        self.HookCommand(self.OnEditPaste, afxres.ID_EDIT_PASTE)
        self.HookCommand(self.OnEditCut, afxres.ID_EDIT_CUT)

    # Hook Handlers
    def OnSetFocus(self, msg):
        # Even though we use file change notifications, we should be very sure about it here.
        self.OnCheckExternalDocumentUpdated(msg)

    def OnRClick(self, params):
        menu = win32ui.CreatePopupMenu()

        # look for a module name
        line = self._obj_.GetLine().strip()
        flags = win32con.MF_STRING | win32con.MF_ENABLED
        if patImport.match(line) == len(line):
            menu.AppendMenu(
                flags, ID_LOCATE_FILE, "&Locate %s.py" % patImport.group("name")
            )
            menu.AppendMenu(win32con.MF_SEPARATOR)
        menu.AppendMenu(flags, win32ui.ID_EDIT_UNDO, "&Undo")
        menu.AppendMenu(win32con.MF_SEPARATOR)
        menu.AppendMenu(flags, win32ui.ID_EDIT_CUT, "Cu&t")
        menu.AppendMenu(flags, win32ui.ID_EDIT_COPY, "&Copy")
        menu.AppendMenu(flags, win32ui.ID_EDIT_PASTE, "&Paste")
        menu.AppendMenu(flags, win32con.MF_SEPARATOR)
        menu.AppendMenu(flags, win32ui.ID_EDIT_SELECT_ALL, "&Select all")
        menu.AppendMenu(flags, win32con.MF_SEPARATOR)
        menu.AppendMenu(flags, ID_GOTO_LINE, "&Goto line...")
        menu.TrackPopupMenu(params[5])
        return 0

    def OnCmdGotoLine(self, cmd, code):
        self.GotoLine()
        return 0

    def OnCmdLocateFile(self, cmd, code):
        modName = patImport.group("name")
        if not modName:
            return 0
        import pywin.framework.scriptutils

        fileName = pywin.framework.scriptutils.LocatePythonFile(modName)
        if fileName is None:
            win32ui.SetStatusText("Can't locate module %s" % modName)
        else:
            win32ui.GetApp().OpenDocumentFile(fileName)
        return 0

    # Key handlers
    def OnKeyEnter(self, key):
        if not self.GetDocument().CheckMakeDocumentWritable():
            return 0
        curLine = self._obj_.GetLine()
        self._obj_.ReplaceSel("\r\n")  # insert the newline
        # If the current line indicates the next should be indented,
        # then copy the current indentation to this line.
        res = patIndent.match(curLine, 0)
        if res > 0 and curLine.strip():
            curIndent = patIndent.group(1)
            self._obj_.ReplaceSel(curIndent)
        return 0  # dont pass on

    def OnKeyCtrlY(self, key):
        if not self.GetDocument().CheckMakeDocumentWritable():
            return 0
        self.CutCurLine()
        return 0  # dont let him have it!

    def OnKeyCtrlG(self, key):
        self.GotoLine()
        return 0  # dont let him have it!

    def OnKeyTab(self, key):
        if not self.GetDocument().CheckMakeDocumentWritable():
            return 0
        start, end = self._obj_.GetSel()
        if start == end:  # normal TAB key
            self.Indent()
            return 0  # we handled this.

        # Otherwise it is a block indent/dedent.
        if start > end:
            start, end = end, start  # swap them.
        startLine = self._obj_.LineFromChar(start)
        endLine = self._obj_.LineFromChar(end)

        self.BlockDent(win32api.GetKeyState(win32con.VK_SHIFT) >= 0, startLine, endLine)
        return 0

    def OnEditPaste(self, id, code):
        # Return 1 if we can make the file editable.(or it already is!)
        return self.GetDocument().CheckMakeDocumentWritable()

    def OnEditCut(self, id, code):
        # Return 1 if we can make the file editable.(or it already is!)
        return self.GetDocument().CheckMakeDocumentWritable()

    def OnKeyDown(self, msg):
        key = msg[2]
        if win32api.GetKeyState(win32con.VK_CONTROL) & 0x8000:
            modList = MODIFYING_VK_KEYS_CTRL
        elif win32api.GetKeyState(win32con.VK_MENU) & 0x8000:
            modList = MODIFYING_VK_KEYS_ALT
        else:
            modList = MODIFYING_VK_KEYS

        if key in modList:
            # Return 1 if we can make the file editable.(or it already is!)
            return self.GetDocument().CheckMakeDocumentWritable()
        return 1  # Pass it on OK

    # 	def OnKey(self, key):
    # 		return self.GetDocument().CheckMakeDocumentWritable()

    def OnCheckExternalDocumentUpdated(self, msg):
        if self._obj_ is None or self.bCheckingFile:
            return
        self.bCheckingFile = 1
        self.GetDocument().CheckExternalDocumentUpdated()
        self.bCheckingFile = 0


from .template import EditorTemplateBase


class EditorTemplate(EditorTemplateBase):
    def __init__(
        self, res=win32ui.IDR_TEXTTYPE, makeDoc=None, makeFrame=None, makeView=None
    ):
        if makeDoc is None:
            makeDoc = EditorDocument
        if makeView is None:
            makeView = EditorView
        EditorTemplateBase.__init__(self, res, makeDoc, makeFrame, makeView)

    def _CreateDocTemplate(self, resourceId):
        return win32ui.CreateRichEditDocTemplate(resourceId)

    def CreateWin32uiDocument(self):
        return self.DoCreateRichEditDoc()


def Create(fileName=None, title=None, template=None):
    return editorTemplate.OpenDocumentFile(fileName)


from pywin.framework.editor import GetDefaultEditorModuleName

prefModule = GetDefaultEditorModuleName()
# Initialize only if this is the "default" editor.
if __name__ == prefModule:
    # For debugging purposes, when this module may be reloaded many times.
    try:
        win32ui.GetApp().RemoveDocTemplate(editorTemplate)
    except (NameError, win32ui.error):
        pass

    editorTemplate = EditorTemplate()
    win32ui.GetApp().AddDocTemplate(editorTemplate)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     MZê       ˇˇ  ∏       @                                   Ä   ∫ ¥	Õ!∏LÕ!This program cannot be run in DOS mode.
$       PE  L rœµ        ‡ " 0           V8       @                           Ä     !.  `Ö                           8  O    @  ‰           $  à#   `     ¸6  T                                                             H           .text   \                           `.rsrc   ‰   @                    @  @.reloc      `      "              @  B                68      H     |!  ‡  	       \4     |6  Ä                                   :(  
}  *{  *"(  *"(  *"(  *(  
*(  
*(  
*(  
*:(  
}  *{  *:(  
}  *{  *:(  
}  *{  *(  
*:(  
}  *{  *^(  
ç  %¢}  *:(  
}  *{  *z(  
}  ç  %¢}  *V(  
}  }  *{  *{  *  BSJB         v4.0.30319     l   ‘  #~  @  ¯  #Strings    8     #US <     #GUID   L  î  #Blob         WU†â   ˙3                        4                                   Õ› d› Ã     ¿ !K Øa ™˝ Ca Ka a {a a 9a Ìa ‡a Rk _k xÿ xK ]› õK íK 7K ⁄K           Ä  æ¿Q     “¿     ñ¿     ≥¿     m9Q     Ä9Q     )9Q     \9Q  	   Í9Q  
   9Q     <9Q     ò9Q     ˜9Q     V9Q     9Q   !  w! P z! P z! 1 w! m z! ç }! P z! ç }P     Çƒ  _     Ü· Å g     Üƒ  p     Üƒ  y     Üƒ  Ç     Üƒ  ä     Üƒ  í     Üƒ  ö     Üƒ  ¢     Üƒ  ±     ÜÇÖ π     Üƒ  »     ÜÇÖ –     Üƒ  ﬂ     Üˇ Å Á     Üƒ  Ô     Üƒ  ˛     ÜûÖ	 !    Üƒ 	 !    Üƒâ
 -!    Üáè 5!    Üƒî T!    Üƒö j!    ÜÇÖ r!    Üáè    Ú    Ú    Ú    Ú    í   í      ±   ™   ì   í   ™   í   ì	 ƒ  ƒ  ƒ
 ) ƒ 1 ƒ 9 ƒ A ƒ I ƒ Q ƒ Y ƒ a ƒ i ƒ q ƒ y ƒ Å ƒ ë ƒ  ô ƒ © ƒ π ƒ& ¡ ƒ ° ƒ ! ì ò' ã ò.  Æ.  ∑.  ÷. # ﬂ. + -. " 3. 3 @. ; g. C r. C é. C §. K ∫. S ’. [ @. c 	. k . s O. { @. C e@ ì òA ì òa ì òc õ ùÅ ì òÉ õ ƒ° ì ò£ õ ƒ¡ ì ò√ õ Î· ì ò„ õ Îì òõ #õ Cõ D£ ò`ì òcõ Éõ -†ì ò£õ T√õ ƒ£ ò‡ì ò„õ jõ j@ì ò†ì ò ì ò ì ò  ◊   
              Â °  Ü•  Ü•  °  ¢•  ã©  Ü•  ã©           	             Ä            5 ¨             , 
             ∏          è·         ¶ ·         s·         Œ·         ±·         Y·         ·         0·         Œ ·         Ë·         ˚·        2       <Module> mscorlib <PlatformName>k__BackingField <ParameterName>k__BackingField <ReturnValue>k__BackingField <ParameterValue>k__BackingField <Members>k__BackingField IdentityReference SafeAccessTokenHandle WindowsBuiltInRole get_PlatformName platformName get_ParameterName parameterName WellKnownSidType WindowsAccountType AssemblyMetadataAttribute CompilerGeneratedAttribute UnverifiableCodeAttribute AttributeUsageAttribute NeutralResourcesLanguageAttribute DebuggableAttribute AssemblyTitleAttribute DoesNotReturnIfAttribute TargetFrameworkAttribute MaybeNullAttribute NotNullIfNotNullAttribute MemberNotNullAttribute AllowNullAttribute DisallowNullAttribute SupportedOSPlatformAttribute UnsupportedOSPlatformAttribute TargetPlatformAttribute MaybeNullWhenAttribute MemberNotNullWhenAttribute AssemblyFileVersionAttribute AssemblyInformationalVersionAttribute SecurityPermissionAttribute AssemblyDescriptionAttribute DoesNotReturnAttribute AssemblyDefaultAliasAttribute CompilationRelaxationsAttribute AssemblyProductAttribute AssemblyCopyrightAttribute CLSCompliantAttribute ParamArrayAttribute AssemblyCompanyAttribute RuntimeCompatibilityAttribute get_ReturnValue returnValue get_ParameterValue parameterValue System.Runtime.Versioning String System.Security.Principal WindowsPrincipal System.Security.Principal.Windows.dll ILLink.Substitutions.xml System SecurityAction System.Reflection IdentityReferenceCollection IdentityNotMappedException member SecurityIdentifier .ctor System.Diagnostics System.Runtime.CompilerServices System.Resources DebuggingModes Microsoft.Win32.SafeHandles System.Diagnostics.CodeAnalysis TokenAccessLevels System.Security.Permissions get_Members members AttributeTargets System.Security.Principal.Windows NTAccount System.Security WindowsIdentity     
;≠V~óHøÔ5ì¡úÏÏ         E Y∑z\V4‡âÄ† $  Ä  î      $  RSA1     —˙WƒÆŸ£.Ñ™Æ˝ÈË˝jÏèá˚vlÉLôí≤;ÁöŸ’‹¡›ö“6!êr<˘Äïƒ·wè∆wO)Ë2íÍÏ‰Ë!¿•ÔËÒd\Lì¡´ô(]b,™e,˙÷=t]o-ÂÒ~^Øƒñ=&äCe m¿ì4MZ“ìÄû.ÄÑSystem.Security.Permissions.SecurityPermissionAttribute, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089TSkipVerification         ( ( (         TWrapNonExceptionThrows      M .NETFramework,Version=v4.6.1 TFrameworkDisplayName.NET Framework 4.6.1    windows  & !System.Security.Principal.Windows  
 en-US   .NETFrameworkAssembly    ServiceableTrue   PreferInboxTrue   Microsoft Corporation  3 .¬© Microsoft Corporation. All rights reserved.   5.0.20.51904  3 .5.0.0+cf258a14b70ad9069470a108f13765e0e5988f51   Microsoft¬Æ .NET  2 RepositoryUrlgit://github.com/dotnet/runtime     &     TAllowMultiple T	Inherited & ˇ   TAllowMultipleT	Inherited  Ä	   T	Inherited  Ä)   T	Inherited      T	Inherited & Ä(   TAllowMultipleT	Inherited  @    T	Inherited & ¿    T	Inherited TAllowMultiple     Ôªø<linker>
  <assembly fullname="System.Security.Principal.Windows" feature="System.Resources.UseSystemResourceKeys" featurevalue="true">
    <!-- System.Resources.UseSystemResourceKeys removes resource strings and instead uses the resource key as the exception message -->
    <resource name="FxResources.System.Security.Principal.Windows.SR.resources" action="remove" />
    <type fullname="System.SR">
      <method signature="System.Boolean UsingResourceKeys()" body="stub" value="true" />
    </type>
  </assembly>
</linker>  JH¥WÊÖÂ“Z0‡¶%°ÁI8k˝◊G}Xh8fº∏$LÃ÷»≤d(ÈñÀ~‚’_{ÀÊH=∫Cø‡≠¶›fÊ7‰Ê<∂≠â≠ô·Ä5ó@?Éz¨ù
«˝»1¨hÂÌI·Ó‘ËÊ07ã}^¯≈` ˇW˛Kƒw'˙Xq√1–6œ‰67    ' §ù MP   ã   P7  P                '   €7  €                             RSDSzqXL¨√IΩ≠Î∂Å‡ò›   /_/artifacts/obj/System.Security.Principal.Windows/net461-Windows_NT-Release/System.Security.Principal.Windows.pdb SHA256 zqXL¨√Y=≠Î∂Å‡ò›' §:°-a@#m[+ *8          D8                          68            _CorDllMain mscoree.dll       ˇ%                                                                                                                                                                                                                                                                                                                                                                                                                                                           Ä                  0  Ä                   H   X@  à          à4   V S _ V E R S I O N _ I N F O     ΩÔ˛      ¿         ?                         D    V a r F i l e I n f o     $    T r a n s l a t i o n       ∞Ë   S t r i n g F i l e I n f o   ƒ   0 0 0 0 0 4 b 0   \ "  C o m m e n t s   S y s t e m . S e c u r i t y . P r i n c i p a l . W i n d o w s   L   C o m p a n y N a m e     M i c r o s o f t   C o r p o r a t i o n   l "  F i l e D e s c r i p t i o n     S y s t e m . S e c u r i t y . P r i n c i p a l . W i n d o w s   :   F i l e V e r s i o n     5 . 0 . 2 0 . 5 1 9 0 4     l &  I n t e r n a l N a m e   S y s t e m . S e c u r i t y . P r i n c i p a l . W i n d o w s . d l l   Ä .  L e g a l C o p y r i g h t   ©   M i c r o s o f t   C o r p o r a t i o n .   A l l   r i g h t s   r e s e r v e d .   t &  O r i g i n a l F i l e n a m e   S y s t e m . S e c u r i t y . P r i n c i p a l . W i n d o w s . d l l   @   P r o d u c t N a m e     M i c r o s o f t Æ   . N E T   Ç /  P r o d u c t V e r s i o n   5 . 0 . 0 + c f 2 5 8 a 1 4 b 7 0 a d 9 0 6 9 4 7 0 a 1 0 8 f 1 3 7 6 5 e 0 e 5 9 8 8 f 5 1     8   A s s e m b l y   V e r s i o n   5 . 0 . 0 . 0                                                                                                                                                                                                                                                                                                    0     X8                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      à#    0Ç#u	*ÜHÜ˜†Ç#f0Ç#b10	`ÜHe 0\
+Ç7†N0L0
+Ç70	 †¢Ä 010	`ÜHe  ﬁ∂ÛVÒÄ≠¿ˇO®UA≠˙Q≥,ûW0]˙Ølh†ÇÅ0Çˇ0ÇÁ†3  árrY@«	    á0	*ÜHÜ˜ 0~10	UUS10U
Washington10URedmond10U
Microsoft Corporation1(0&UMicrosoft Code Signing PCA 20110200304183947Z210303183947Z0t10	UUS10U
Washington10URedmond10U
Microsoft Corporation10UMicrosoft Corporation0Ç"0	*ÜHÜ˜ Ç 0Ç
Ç Œ∑…s≥˜O≥
".`w∞0Yß´¿2ª±NÖêêiµpùïKÖ≤d·4O∆ÅŒpC„£]=?œójX∫\wüK»øY{E“Ù¨?√Dø©Å‡6ßW€ GG∞ù∆}û\“√…éIlâäè√üq'û$3›H:éÿÂ3å–%å¯õå%üµ3CTœŒ¡Ë•≥¡Ñ"∂¡Eæ»[élΩvçd¯bı5/'—gÎÂ!‹v∫M›.?8øu6·Pä“âƒÖt}[5⁄mN.™C∫Î—,Õ/™<«3á/ìóàa∞Éß§âp5ˇe◊cºïÕ˝∂Wù÷cJ3[{sœó £Ç~0Çz0U%0
+Ç7L+0UÜã¯g#ΩÈ¨d%”#ß;∂ÕUŒ%À0PUI0G§E0C1)0'U Microsoft Operations Puerto Rico10U230012+4583850U#0ÄHndÂP”Ç™77"µm® uï0TUM0K0I†G†EÜChttp://www.microsoft.com/pkiops/crl/MicCodSigPCA2011_2011-07-08.crl0a+U0S0Q+0ÜEhttp://www.microsoft.com/pkiops/certs/MicCodSigPCA2011_2011-07-08.crt0Uˇ0 0	*ÜHÜ˜ Ç ã≤K°:æö÷“Ö4Ä}úÚ2‚#dÆPùD+ıeÉ°[›ë◊é502àqv≈∏P∫Zæ
6µ8èÏZ¶iæ@¯ﬁ›∫T¶;q§L™R´Os}0Î;€Ê*jä†≥”ﬂª/scUaçóÔ9®ÓW¸;…–Íì_Jq]éﬁû*ÑÁLÒ¡UG@ÅŸ§ÃZq±NBk®daósÓ)]<U¯d[ﬂ´B‡å76^Ô€⁄âìÙ	Vy"vÄW1“Ω˙Î1ÕY=◊zäuÌNÂùøÍÁv© "oRTgØãH(;pÜ‘¿ ü◊^∞Pûƒ∏ê‡“Òﬁ ¬xy¡o!˜Eô-®~g‡úR%ê›0ïdeNám	ßù:®íìÛyû≥s_‡»ÇÕ %`‰Oí9‘B»]’˝O2	˜∂{6>€&%Tj°ﬁjDX2‰õãiÓî¡·ü„®›ÿg§+6,ﬁÃhKI´¬ÔWÌﬁÍYÃôu?◊Û⁄ü=Ìó~ëOØfÚà›Ã~ÂPÄ≠ëgl˛)Õ ›‘Oœj◊…¬π\+ëfk∆iø÷n∂bº	A™`áe¥¬9«E¨=!·{˛≥¯•P]‚≠zÙÂexÈ∏ÿaé‰~ÿ3-˝’Æ~5Èâounç⁄°å‡^j1Ç[BßRªÜ¥∫Çk/èﬁ-˘—8Sƒ0Çz0Çb†
aê“     0	*ÜHÜ˜ 0Åà10	UUS10U
Washington10URedmond10U
Microsoft Corporation1200U)Microsoft Root Certificate Authority 20110110708205909Z260708210909Z0~10	UUS10U
Washington10URedmond10U
Microsoft Corporation1(0&UMicrosoft Code Signing PCA 20110Ç"0	*ÜHÜ˜ Ç 0Ç
Ç ´˙r.≠ÿn™ÇM4∫Ú∂X!üB*kÈZP™∏8I∫√›7k∆ÿ8¬ô∞»9’1B”âydá~î`$lØûIúÈh^“ﬂõS≤
,√ØŸ©+Æz	Ø◊ñY `ÈfvË2R&/Á´Pœ≥D∑]ÿƒ.u´hÛÀmÛ:\°ÙF∫‡8d¨nd5x¶†c-”@ì¯„ﬁ’\y•I)Áæ†wæî=Ô˚„+ZMV(¢zr‡:∑I^ÿÌÌCëÉŸ{≤{ÜŸ>±å]ËâOÑÚ°/Y‰ê;-Æ3X≈∑>˛2”≥=±≤Øí8~“ùÄ,ıNVë!5%√9ndS∫ú≠#ÑÀÙ∫Üç˜_–Røåîáº¿!t%_(∂Ã'(8%ò9J6œ|±íÆ#ß©fÏaj·(Iù_à‚%]”!K>RƒµW?$—z[/’#„p]QFw≥¯ ·º¨Ç_€¿≥Ω‘UKÁ9°È#Iº∏D|E‰¡√rz‡rÁ$ﬂøFô≈Ô¬W€ÉçÏMI0ß´éﬂÏ[üØ¸›∞f‚¡óÅ{Ì÷ÌKÁI)ß(¶ß}gÄÊäbx_≤/Ñ◊Wú\øw((ÒÌm√(è,è@7O¡·ÖDâƒ	L≈‘•C/tï˜n¯x X,]`ïö>O3Ñ⁄∞àﬁûNÙñ∞ºF†lò“‡÷àå £ÇÌ0ÇÈ0	+Ç7 0UHndÂP”Ç™77"µm® uï0	+Ç7
 S u b C A0UÜ0Uˇ0ˇ0U#0Är-:1êCπN·Íß«1—#â40ZUS0Q0O†M†KÜIhttp://crl.microsoft.com/pki/crl/products/MicRooCerAut2011_2011_03_22.crl0^+R0P0N+0ÜBhttp://www.microsoft.com/pki/certs/MicRooCerAut2011_2011_03_22.crt0ÅüU Åó0Åî0Åë	+Ç7.0ÅÉ0?+3http://www.microsoft.com/pkiops/docs/primarycps.htm0@+042  L e g a l _ p o l i c y _ s t a t e m e n t . 0	*ÜHÜ˜ Ç gÚÜ•ò‡Ty.”ÿtg"õñ·cíôBñ}“yê¡e_.,>¯√r—mÉ˛æ?Ë
 ;øG©£Ûi€cø"5•ó]eÑê}ãFPUÿí|“KÛ<BãR–∞˝k„>.)õÊ=•‘µwî9‚Èd…D=xz#Û}¶êtÉçÙÀ&F*¬äª§©õÌh˙h.ï†*?*kXIc	inZòñ‰ÉÙ¿èÛF+ﬁ¸;–Ω5Ôn%ÆÂØ'Ì–›ÛØô(óòM=Úâ÷√2‚≈-Œ[û¥I9
∆
¬∆≠ÆÂ≤Ÿ€àQEX82q'±Ù'¯ﬁ,: iò≤Yâhnoß∑t√@¶*(>Ç?Mf¿≥Mı·èo}EßvÂ@*e£√]RbÜ√c6óÜﬂ⁄Û¯Ú°ö'·Õ•ó–Ó]cA„[úá>w—±uæaaµ‹∆æﬂA«(Óﬁe/Ïóˆ°\ñÿ ÷°FΩYÛó•	KHôÄ– )≈±õ•?Ew5∆“¢¢üzz"˙Hï´˚G#Äıû¯øk∑Kó‚ÎuxÏÍ7ôyKˇ÷≥#huÊØ˙¸ãÎÄÍi;Ø¸0ÌLéﬂﬂumcë=—ùVNOøÄW"°x2!zÔA
±?˚®Ã§]¡°àõWqVNHE¿B…õv[
ÄHk˝yü¡Ωmmj…RszPÕ1Çg0Çc0Åï0~10	UUS10U
Washington10URedmond10U
Microsoft Corporation1(0&UMicrosoft Code Signing PCA 20113  árrY@«	    á0	`ÜHe †ÅÆ0	*ÜHÜ˜	1
+Ç70
+Ç710
+Ç70/	*ÜHÜ˜	1" „˛)ÃQP•åµΩ û_ç}TéäF∆	&Ôh›[0B
+Ç71402†Ä M i c r o s o f t°Ähttp://www.microsoft.com0	*ÜHÜ˜ Ç K‚ÕG¶”5À“∞áè7À]HÈp±Rø◊K¡ê4Ù∆ÅbH∑Cã®˚Û5….§‡LŸFå#%\‰≈‡ÔJY{˘àñ–~Ó%0_¡öE®∂µ^È—ˆD oRóä¬˙Ÿ<••ªØÃ9ŒnÒ@—Ûçå<Ô`œüIJ—D∆ÂøËíŸZ.^rË§∑b>°jˆÈ›Ód£p<8 w«ó]ˇp?8_˚·w^¬28Œ:7*îÕµi”M¥™Æ.∞°i„Ùkpc4Ñä˝ˇâVã°ÅÅ¨∂ÎÊVm—«7ƒ6ƒ∏'B“?¨y†ﬁ8Ÿπ÷H^K•ÁÔ|√⁄˘Â;N«rCŸ"°ÇÒ0ÇÌ
+Ç71Ç›0ÇŸ	*ÜHÜ˜†Ç 0Ç∆10	`ÜHe 0ÇU*ÜHÜ˜	†ÇDÇ@0Ç<
+ÑY
010	`ÜHe  ^=ïº*ü˚S•Æi›+$Ù˝r5‰8vıÊ˜$˜?∫⁄≥2_à@]Ï20201020124750.593Z0ÄÙ†Å‘§Å—0ÅŒ10	UUS10U
Washington10URedmond10U
Microsoft Corporation1)0'U Microsoft Operations Puerto Rico1&0$UThales TSS ESN:60BC-E383-26351%0#UMicrosoft Time-Stamp Service†ÇD0Çı0Ç›†3  &ﬂ∫K"πÇÇ    &0	*ÜHÜ˜ 0|10	UUS10U
Washington10URedmond10U
Microsoft Corporation1&0$UMicrosoft Time-Stamp PCA 20100191219011459Z210317011459Z0ÅŒ10	UUS10U
Washington10URedmond10U
Microsoft Corporation1)0'U Microsoft Operations Puerto Rico1&0$UThales TSS ESN:60BC-E383-26351%0#UMicrosoft Time-Stamp Service0Ç"0	*ÜHÜ˜ Ç 0Ç
Ç û0æÜúNÛïtµÒNóuÙ}»‘4À„.Ê;üñÇEnûˆ‰˝˛™ÒJXB5K= n.≠P»çx¡áìU4ïL@í6∂[oÏŒ?‡Ü·dñ˜«4Ï∫%ÜXQñß5. \Ω¢¿†‚éc°XìÿkfÀæ˛dm%⁄ä^iÍmwÒ;q‡¿<Óç
¬ø(|Ç˚œ¨¬y`‚Œ{.≥B®sÄ€Ëz„,É¥;=ã0¡-≤Y=Ád ˆ–¯Bˆõ6|¬å{‡«§o¥s≠C˜Ü!È≈v\xõ· Büdôe	‚£¿5&(Ãè·9¨$˜IZòºz.˜±Ï^Ûˆ#s £Ç0Ç0UI´¨∞~òBç—X¶_∆£4aA0U#0Ä’c:\ä1êÛC{|F≈3hZÖmU0VUO0M0K†I†GÜEhttp://crl.microsoft.com/pki/crl/products/MicTimStaPCA_2010-07-01.crl0Z+N0L0J+0Ü>http://www.microsoft.com/pki/certs/MicTimStaPCA_2010-07-01.crt0Uˇ0 0U%0
+0	*ÜHÜ˜ Ç @ñ˚ùhÈoÙ'Ûøûõù~5s1z¥ªG,:ó•‘r™4ﬁ9fcìË∑rc¡*Á‚åúC⁄ì=S6’C–∏óò¨˝:†Wj.íÒwr	ΩÚ¸⁄2 ≥⁄p∞:^ı}å‹õ=+QÄ_Ï8?ÏüôË˝NEqjy6™›eì[jÕÓﬂ÷ä‹L]Û“]b%õ0@V◊ÁÛ≥xg˝g¸@⁄o—◊8≥)V?˘©j`ßUˆY.Fü≥T5YúΩœΩÄŒÔq‚lﬂ∑w…÷õìåËÊ—ﬂãh∫iõ#Â∞çP´íÓÈ≤BZÖÛbÂ©íÇ∫†G©÷È$B‹rïKu,qòm0Çq0ÇY†
a	Å*     0	*ÜHÜ˜ 0Åà10	UUS10U
Washington10URedmond10U
Microsoft Corporation1200U)Microsoft Root Certificate Authority 20100100701213655Z250701214655Z0|10	UUS10U
Washington10URedmond10U
Microsoft Corporation1&0$UMicrosoft Time-Stamp PCA 20100Ç"0	*ÜHÜ˜ Ç 0Ç
Ç ©ºwä: Ï¸óı˙iîktT’•
 ÇÖ˚Ì|hK,_≈√Âa¬v∑>f+[S'1AïŒ	é|a0Y±0DÒ`àÑTC◊M∏8≥B›ì¨÷s0W&Ç£E–ÍıGÅÕø$`2X`FÚXGÜ2Ñtagë_ÅT±œìLí¡ƒ¶]—an(∆˘ÜÄªﬂa¸F¡'$gr!äØKdâPb±]˝w=Wu¨ΩäBM@Q—ú>gıf¿ñD~Ô–K˝nÂö ±®Úz*
1⁄Në∂à5Ëx∞ÈôÕ<Á/D∫ßÙ‹dΩ§¡ 	ìxÕ¸º¿…D]^úO"M £ÇÊ0Ç‚0	+Ç7 0U’c:\ä1êÛC{|F≈3hZÖmU0	+Ç7
 S u b C A0UÜ0Uˇ0ˇ0U#0Ä’ˆVÀèË¢\bh—=îê[◊Œöƒ0VUO0M0K†I†GÜEhttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z+N0L0J+0Ü>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0Å†U ˇÅï0Åí0Åè	+Ç7.0ÅÅ0=+1http://www.microsoft.com/PKI/docs/CPS/default.htm0@+042  L e g a l _ P o l i c y _ S t a t e m e n t . 0	*ÜHÜ˜ Ç ÊàQ‚∆‡ò?Åq=ù£°!o≥Î¶Ãı1æœ‚©˛˙Wm0≥¬≈f…jﬂıÁxΩ«®û%„˘ºÌkTW+QÇD˚πSåÃÙ`ävÃ@@Aõ‹\ˇ\˘^5ò$VKtÔB»Øø∆Ú7}Z?ÚôyJëR Ø8ı/yÅeŸ©µk‰«Œˆ z oK0D$"<œÌ•ñèY)º∂˝·pü2J'˝UØ/˛∂Âé3ªb_ö€W@ÈÒŒôfêåˇjb›≈Jë&‚9ÏJqcù{!m√ú£¢<˙}ñjêx¶m“·ú˘¸8ÿîÙ∆•
ñÜ§ΩûÆBÉ∏µÄõ"8 µ%ÂdÏ˜Ùø~cY%z.9Wv¢q™äâ∫aßÀöÿGöÄ≈–Õß–Ô}É·;q	ﬂ]tò"a⁄∞PoΩÒ· ﬂÁ1§ì:˜eGxË¯®H´˜ﬁr~akow©ÅÀß	¨9ªÏ∆ÀÿÇ¥rÕÙ∏ÖÄ˚â*T9≤[⁄»Uôzás;Êò-Íç‡3.)ı¿/T'!˜»¨N⁄(∏±©€ñ≤ßB¢…œAM‡Ü˘*ö£f0”ªt2Kﬂc{ıôä/«!ØYµÆ‹D<óPq◊°“≈U„iﬁW¡—ﬁ0¿˝ÃÊM˚ø]OÈù8/ºœX.Ô†P5⁄Ô	'’≥~5∫⁄6€”_èﬁtàI°Ç“0Ç;0Å¸°Å‘§Å—0ÅŒ10	UUS10U
Washington10URedmond10U
Microsoft Corporation1)0'U Microsoft Operations Puerto Rico1&0$UThales TSS ESN:60BC-E383-26351%0#UMicrosoft Time-Stamp Service¢#
0+ 
g29iôƒJÈ´NÅÒ‹∫†∆zˇ¸†ÅÉ0ÅÄ§~0|10	UUS10U
Washington10URedmond10U
Microsoft Corporation1&0$UMicrosoft Time-Stamp PCA 20100	*ÜHÜ˜  „9U“0"20201020162554Z20201021162554Z0w0=
+ÑY
1/0-0
 „9U“ 0
 ƒˇ0 Í0
 „:ßR 06
+ÑY
1(0&0
+ÑY
†
0 ° °
0 Ü†0	*ÜHÜ˜ ÅÅ Wé[)ÖF¥£MF¨∏`ÈÎìê'ü˙wÉÛG¶Peèv∞;SRé=‰∞‡IüdêhV	?	T§Ì¿Dµ[hl·ÈS∞8p®±	ÜéËØF»î¸õéZôÓ{µg9Æhø#Œç˛<&wç^ô€êaf¶øTZÔ6bÛÄg}tÏM£x4Œ1Ç0Ç	0Åì0|10	UUS10U
Washington10URedmond10U
Microsoft Corporation1&0$UMicrosoft Time-Stamp PCA 20103  &ﬂ∫K"πÇÇ    &0	`ÜHe †ÇJ0	*ÜHÜ˜	1*ÜHÜ˜	0/	*ÜHÜ˜	1" Ñ´Ωa	KFTÔKv2é¯F™'~l +?™kó“3‹¿0Å˙*ÜHÜ˜	/1ÅÍ0ÅÁ0Å‰0ÅΩ 6˝œÔûΩ^pÔjìñglF|	3ÆGÈ Ô1m;		u0Åò0ÅÄ§~0|10	UUS10U
Washington10URedmond10U
Microsoft Corporation1&0$UMicrosoft Time-Stamp PCA 20103  &ﬂ∫K"πÇÇ    &0" `A !àv˘	{#˚ÕS/òÙ[oÀÓ…ó≠ŸV¥`9◊Õ0	*ÜHÜ˜ Ç ú—·Û6ÒøV¥˘:£CÌpu]…≈`h\3vÁ“ S}ÎwÀäßi~ÚWeŒåL]¯»ûŸE∆8#¨x’ôœvU!ë™ÜXm±õRø∞=l;_=}CÙ¡&√∏LûÓ›íçüÄd"Vπ‚^ÁQpd]åOø8ÚÀπ÷;≤˘≠£¥‰"\5B…©VÀ‹∑π:UÜÌh’¸Fé8ÕåﬂπΩMl∑¥í≠Í}Y	![aÏ~}ÿº–c¬Ëˇv7∂NcÚc≤Áı9,ËÇèÇ¿#õFß~¸„¥N∫°≠:¸qπ∂Ö.ÏeßπîÛ+´])nà≤»ìµSSw√tú…N∫2°≤o                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               a
    ⁄ºébún  „                   @   sú   d Z ddlZddlmZ eZG ddÑ dÉZdddÑZd	d
Ñ ZddÑ ZdddÑZ	dddÑZ
edkròe
ddÉZeD ](Zded v rneed †° É g Z qòqndS )z'
Filename: mycfg.py
Intent:
Arguments:
È    N)⁄maxsizec                   @   s*  e Zd ZdZdCddÑZeddÑ ÉZddÑ Zd	d
Ñ Ze	d dúddÑZ
ddÑ ZddÑ ZddÑ ZddÑ ZddÑ ZddÑ ZddÑ ZddÑ ZddÑ Zd d!Ñ Zed"d#Ñ ÉZed$d%Ñ ÉZed&d'Ñ ÉZd(d)Ñ Zed*d+Ñ ÉZdDd-d.ÑZd/d0Ñ ZdEd1d2ÑZd3d4Ñ Zd5d6Ñ Zd7d8Ñ Zd9d:Ñ Z d;d<Ñ Z!d=d>Ñ Z"d?d@Ñ Z#dAdBÑ Z$dS )F⁄Nodezrepresents a node in an ASTNc                 C   sj  t |É| _d|v r|d nd| _d|v r0|d nd| _d|v rF|d nd| _d|v r\|d nd| _d|v rr|d nd| _d|v rà|d nd| _d|v rû|d nd| _d	|v r¥|d	 nd| _	d
|v r |d
 nd| _
d|v rd|d v r|d d nd| _t†|°| _d|v êr|d nd| _d|v êr0t|d Énd| _g | _| | _d| _|| _d|v êr`|d nd| _d S )N⁄kind⁄ ⁄oper⁄symbol⁄type⁄value⁄callee⁄roleZargPosZtypeArg⁄location⁄fileZisCompilerGeneratedF⁄	argumentsr   ⁄field)⁄str⁄id_keyr   r   r   r   r	   r
   r   ⁄arg_pos⁄type_argr   r   ⁄_Node__init_node_locationr   ⁄is_generated⁄len⁄num_args⁄children⁄parent⁄parent_indexZroot_paramsr   )⁄selfr   ⁄node⁄
parameters© r   ˙.\oldlib\mycfg.py⁄__init__   s&    
&zNode.__init__c                 C   s:   i }d| v r| d }n d| v r6d| d v r6| d d }|S )Nr   ⁄exprr   )r   Zretvalr   r   r   Z__init_node_location$   s    
zNode.__init_node_locationc                 C   sH   d† | j| j| j| j| j| j| j| j| j	| j
| j| j| j| jt| jÉ°S )z/Returns a printable string for str() or print()a  {{"id_key" : "{}", "kind" : "{}", "oper" : "{}", "symbol" : "{}", "type" : "{}", "value" : "{}", "callee" : "{}", "role" : "{}", "arg_pos" : "{}", "type_arg" : "{}", "file", "{}", "location" : "{}", "is_generated" : "{}", "num_args" : "{}", "num_children" : "{}"}})⁄formatr   r   r   r   r   r	   r
   r   r   r   r   r   r   r   r   r   ©r   r   r   r   ⁄__str__0   s    (¸zNode.__str__c                 C   s   | † ° S ©N)r$   r#   r   r   r   ⁄__repr__9   s    zNode.__repr__)⁄i⁄returnc                 C   s
   | j | S )zReturns the ith child)r   )r   r'   r   r   r   ⁄__getitem__<   s    zNode.__getitem__c                 C   s,   | j | kr(| j jD ]}|| kr|  S qdS )zReturns the first siblingN)r   r   ©r   ⁄childr   r   r   ⁄get_first_sibling@   s
    

zNode.get_first_siblingc                 C   s2   | g}|r.|† ° }|j|kr |S |†|j° qdS )zhReturns the Node where the id key matches an id key in the tree rooted at self using BFS; otherwise NoneN)⁄popr   ⁄extendr   )r   r   ⁄queue⁄current_noder   r   r   ⁄	find_nodeH   s    
zNode.find_nodec                 C   sX   | j g}|rT|†° }|j|kr"|S |j|kr0|S |js@|jr@dS |j r|†|j ° qdS )aø  Finds the ancestor of self that has the given find_oper.

        Keyword Arguments:
        self - Node to start searching parent from
        find_oper - the Operator:: to search for in ancestors
        stop_kind - the kind that determines the top of the search tree

        Returns
        If successful, the ancestor Node that has the required oper value
        If unsuccessful, the ancestor Node that has the given stop_kind value
        r   N)r   r-   r   r   ⁄append)r   Z	find_operZ	stop_kindr/   r0   r   r   r   ⁄find_parent_node_by_operQ   s    

zNode.find_parent_node_by_operc                 C   s    t ||É}| j†|° | |_|S )z&Appends a Node to the list of children)r   r   r2   r   )r   r   r   r+   r   r   r   ⁄	add_childm   s    
zNode.add_childc              
   C   sB   t | jd| jd| jd†ddÑ | jD É°É | jD ]}|†°  q0dS )z=Prints some limited information about the tree rooted at self˙-˙,c                 S   s   g | ]
}|j ëqS r   )r   ©⁄.0⁄cr   r   r   ⁄
<listcomp>v   Û    z$Node.print_child.<locals>.<listcomp>N)⁄printr   r   r   ⁄joinr   ⁄print_childr*   r   r   r   r>   t   s    *
zNode.print_childc                 C   sÆ   ddÑ | j D É}|r™|†d°}|jdks2|jdkríd|jv rL|jd †|°sVd|jvrí|jdkrl|†|° n&|j D ]}|j†d°rr|†|°  qíqr|†ddÑ |j D É° qd	S )
a(  Finds all child nodes with Operator::Assign or function Return nodes.

            Keyword arguments:
            assignments -- output list of nodes with Operator::Assign
            file_name   -- filter nodes to locations with this filename or nodes without a filename in the location
        c                 S   s   g | ]}|j d kr|ëqS ©r   ©r   r7   r   r   r   r:   Å   r;   z-Node.find_all_assignments.<locals>.<listcomp>r   ⁄
ExpressionZReturnr   ˙Operator::Assignc                 S   s   g | ]}|j d kr|ëqS r?   r@   r7   r   r   r   r:   é   r;   N)	r   r-   r   r   ⁄endswithr2   r   ⁄
startswithr.   )r   Zassignments⁄	file_namer/   r   r+   r   r   r   ⁄find_all_assignmentsz   s"    
ˇˇˇ


zNode.find_all_assignmentsc                 C   sx   ddÑ | j D É}|rt|†d°}|jdkr\d|jv r\|jd †|°r\|†|jd |jd i° |†ddÑ |j D É° qd	S )
z˘Finds all child nodes that declaration a variable.

            Keyword arguments:
            declarations -- output set of nodes of kind declaration in the given file
            file_name   -- filter nodes to locations with this filename
        c                 S   s   g | ]}|j d kr|ëqS r?   r@   r7   r   r   r   r:   ó   r;   z.Node.find_all_declarations.<locals>.<listcomp>r   ZDeclarationr   ⁄name⁄linec                 S   s   g | ]}|j d kr|ëqS r?   r@   r7   r   r   r   r:   ù   r;   N)r   r-   r   r   rC   ⁄updater   r.   )r   ZdeclarationsrE   r/   r   r   r   r   ⁄find_all_declarationsê   s    
$zNode.find_all_declarationsc                    s  á fddÑ}ddÑ | j D É}|êr|†d°}|jdkr‘d|jv rP|jd †|°sZd|jvr‘|j D ]r}|j†d°r`|†g °}|j†d	d
°}|||Éà |< |j \}	}
|
jdkrŒ|	j	|
j	krŒ|
†g °}|||Éà |<  q‘q`|jdkêrˆd|jv r¸|jd †|°êsd|jvêrˆ|j
†d°êrD|j d †g °}|j†d	d
°}|||Éà |< n≤d|j
v êr~|j d †g °}|j†d	d
°}|||Éà |< nx|j d j	êrˆ|j d j	d †d°êrˆ|j ddÖ D ]B}|jdkêr≤|†° êr≤|†g °}|j†d	d
°}|||Éà |< êq≤|†ddÑ |j D É° qdS )aP  Finds all child nodes with Operator::Assign and Call on constructor (i.e. function name starts with ??0).

            Keyword arguments:
            initializations -- output list of nodes with Operator::Assign
            file_name   -- filter nodes to locations with this filename or nodes without a filename in the location
        c                    s   t |à †| t°ÉS r%   )⁄min⁄get⁄MAX_INT)⁄symbol_nameZline_num©⁄initializationsr   r   ⁄<lambda>¶   r;   z/Node.find_all_initializations.<locals>.<lambda>c                 S   s   g | ]}|j d kr|ëqS r?   r@   r7   r   r   r   r:   ß   r;   z1Node.find_all_initializations.<locals>.<listcomp>r   rA   r   rB   rH   Èˇˇˇˇ˙Operator::Address⁄Callz??0È   ⁄memsetrG   z	function(N⁄Argumentc                 S   s   g | ]}|j d kr|ëqS r?   r@   r7   r   r   r   r:   “   r;   )r   r-   r   r   rC   r   rD   ⁄
dfs_symbolrL   r   r
   r   ⁄is_out_parameterr.   )r   rP   rE   Zadd_to_initsr/   r   r+   rN   Zcurrent_locationZexpr_lZexpr_rZexpr_r_symbol_namer   rO   r   ⁄find_all_initializationsü   sV    

ˇˇˇ



ˇˇˇ&
zNode.find_all_initializationsc                 C   s>   | j  r| j†d°p<| jg ko<| jd j  o<| jd j†d°S )z∑Determines whether the current node is an out parameter in function call.
        An out parameter is a reference parameter or argument that is assigned in the function call.
        rS   r   )r   r   rD   r   r#   r   r   r   rY   ‘   s    (ˇzNode.is_out_parameterc                 C   sf   ddÑ | j D É}|rb|†d°}|jdkrJ|j D ]}|†° r.|†|°  qJq.|†ddÑ |j D É° qdS )zòFinds all child nodes with function calls with address arguments.

            Keyword arguments:
            call_to_s -- output list of nodes
        c                 S   s   g | ]}|j d kr|ëqS r?   r@   r7   r   r   r   r:   ·   r;   z5Node.find_calls_with_address_args.<locals>.<listcomp>r   rT   c                 S   s   g | ]}|j d kr|ëqS r?   r@   r7   r   r   r   r:   È   r;   N)r   r-   r   rY   r2   r.   )r   Z	call_to_sr/   r   r+   r   r   r   ⁄find_calls_with_address_args€   s    



z!Node.find_calls_with_address_argsc                    s   t á fddÑdD ÉÉS )z8True if the callee is a memory function (sizeofptr rule)c                 3   s   | ]}|à v V  qd S r%   r   ©r8   ⁄function©r
   r   r   ⁄	<genexpr>Ó   r;   z!Node.is_memory.<locals>.<genexpr>)ZmallocrV   ZmemcpyZmemcmpZmemmoveZCoTaskMemAlloc©⁄anyr^   r   r^   r   ⁄	is_memoryÎ   s    zNode.is_memoryc                    s   t á fddÑdD ÉÉS )zCTrue if the callee is a memory allocation function (sizeofptr rule)c                 3   s   | ]}|à v V  qd S r%   r   r\   r^   r   r   r_   Û   r;   z'Node.is_memory_alloc.<locals>.<genexpr>)Zallocr`   r^   r   r^   r   ⁄is_memory_alloc   s    zNode.is_memory_allocc                 C   s8   d| v r4d| v r4| † d°}| † d°}| |d |Ö } | S )zú
        removes decorative characters from the function name
        that CFG provides. for visual aesthetics.
        Should go to cfg_utils file
        ˙?˙@z@@rU   )⁄find)r
   Z_pos_qmZ_pos_atr   r   r   ⁄resolve_callee_nameı   s
    

zNode.resolve_callee_namec                 C   sP   d\}}i }| † ° D ]6}t|j†|°| É}||vr<g ||< || †|° q|S )zç
        Arguments of a callee, rooted at self, returned as a dictionary for every argument position
        Potential use in future
        )r5   È   )⁄get_function_arguments⁄intr   ⁄splitr2   )r   Zsep_charZ
args_indexr   ⁄argumentr   r   r   r   ⁄get_args_as_dict  s    zNode.get_args_as_dictc                 C   s   d| j †° v S )z; functions that manipulate strings and aren't sizeptr type ⁄string)r
   ⁄lower)Z	call_noder   r   r   ⁄is_func_string_type  s    zNode.is_func_string_typeFc           	      C   sö   t †| j°}|r|S |rdS t †| °}|r.dS d\}}| †° }|D ]J}|| d }d|j†° v rn||krn|}qBd|jd v rB||krB|}qBqBqBd||fvS )aì  
        semmle_functions_only   -- check only for the original list of functions

        True if node (self) is a sizeptr function
            - if it contains a sizeof() Operator::SizeOfType &&
            - it contains a ptr argument Operator::Address
        Returns True prematurely if self.callee is a memory function
        Returns False prematurely is self.callee is a string function
        TF)rR   rR   rR   ZsizeofZptrrG   )r   rb   r
   rp   rm   r   ro   r   )	r   ⁄semmle_functions_onlyZis_node_memory_callZis_node_string_funcZsizeof_pos_argZptr_pos_argr   r   rl   r   r   r   ⁄is_sizeptr_memory_function  s$    
zNode.is_sizeptr_memory_functionc                 C   sL   g }ddÑ | j D É}|rH|†° }|†|° |j r|jdkr|†|j ° q|S )z‹
        BFS traversal of a given subtree to fetch arguments of a callee/function
        self: subtree root
        visited: List of nodes already visited
        NOTE: different from cfg_parser.get_arguments()
        c                 S   s   g | ]}|j d kr|ëqS )rW   )r   )r8   r+   r   r   r   r:   C  r;   z/Node.get_function_arguments.<locals>.<listcomp>rW   )r   r-   r2   r   r.   )r   ⁄visitedr/   r+   r   r   r   ri   ;  s    
zNode.get_function_argumentsc                 C   s\   g }ddÑ | j D É}|rX|†d°}|jdkr@|†|°r@|†|° |†ddÑ |j D É° q|S )a@  
        Finds all child nodes with memory function calls
        Keyword arguments
        Returns list of output nodes which are all possible memory functions
        output_nodes = [] - defaulted only to be backward compatible.
        semmle_functions_only   -- check only for the original list of functions
        c                 S   s   g | ]}|j d kr|ëqS r?   r@   r7   r   r   r   r:   X  r;   z5Node.find_call_to_memory_fn_paths.<locals>.<listcomp>r   rT   c                 S   s   g | ]}|j d kr|ëqS r?   r@   r7   r   r   r   r:   ]  r;   )r   r-   r   rr   r2   r.   )r   Zoutput_nodesrq   r/   r   r   r   r   ⁄find_call_to_memory_fn_pathsO  s    

z!Node.find_call_to_memory_fn_pathsc                 C   sT   d| j v rPd|j v rPd|j v rP| j d }t|j d | Ét|j d | Ék rPdS dS )zATrue if lhs_node has the nearest line to the baseline node (self)rH   TF©r   ⁄abs)r   ⁄lhs_node⁄rhs_node⁄baseline_liner   r   r   ⁄is_lhs_nearest_line`  s
    
$zNode.is_lhs_nearest_linec                 C   s†   d| j v rúd|j v rúd|j v rúd| j v rúd|j v rúd|j v rú| j d }| j d }t|j d | Ét|j d | Ékrút|j d | Ét|j d | Ék rúdS dS )zcTrue if lhs_node has nearest column to the baseline node (self) when lhs and rhs have the same linerH   ⁄colTFru   )r   rw   rx   ry   ⁄baseline_colr   r   r   ⁄is_lhs_nearest_columnh  s    

$$zNode.is_lhs_nearest_columnc                 C   s‰   d| j v r‡d|j v r‡d|j v r‡d| j v r‡d|j v r‡d|j v r‡| j d }| j d }t| j†d°d É}t|j d | Ét|j d | Ékoﬁt|j d | Ét|j d | Ékoﬁt|j†d°d É| tt|j†d°d É| ÉkS dS )zjTrue if lhs_node has nearest id to the baseline node (self) when lhs and rhs have the same line and columnrH   r{   r5   r   F)r   rj   r   rk   rv   )r   rw   rx   ry   r|   Zbaseline_idr   r   r   ⁄is_lhs_nearest_ids  s    

$"ˇ2˛zNode.is_lhs_nearest_idc                 C   sL   d| j v r2d|v r2| j d }|d }||krHdS nd|vsDd| j vrHdS dS )z*True if location comes after self.locationrH   TF)r   )r   r   Z	self_lineZloc_liner   r   r   ⁄is_next_location  s    
zNode.is_next_locationc                 C   s¿   d| j v r0| j d |kr0| †|°r0| jdkr0| S g }|†| j° d}|rº|†d°}d|j v rÆ|j d |krÆ|†|°rÆ|jdkrÆ|du s™| †||°s™| †||°s™| †||°rÆ|}|†|j° qD|S )a  Find the node in the tree rooted at self containing the symbol that
            matches the symbol name and is closest (exact or after) to the line/column in the given location

            Keyword arguments:
            symbol_name -- name of the symbol to search for
            location    -- baseline location (find the matching symbol closest to this location)

            Returns -- the node containing the symbol that matches the symbol name and is closest to the line/column in the given location
        rG   ZEndScopeNr   )	r   r   r   r.   r   r-   rz   r}   r~   )r   rN   r   r/   Zpotential_noder   r   r   r   ⁄find_node_by_symbol_nameä  s$    
,
,
ˇ
˛
˝zNode.find_node_by_symbol_namec                 C   s(   | j †|° ||_||_|j †|° dS )z>Make the potential_to child of self a child of potential_from.N)r   ⁄remover   r   r2   )r   Zpotential_toZpotential_from⁄indexr   r   r   ⁄
move_child•  s    zNode.move_childc                 C   sÑ   |† | j° g }| jD ](}|j|vr|jdkr|†|†|°° q| jdkrZ|† | jd ° | jdkrt|† | jd ° |† | j° |S )zIDFS tree traversal to find child symbol/field names without an empty kindr   rG   )	r2   r   r   r   r.   ⁄dfsr   r   r   )r   rs   ⁄sourcer+   r   r   r   rÑ   ¨  s    


zNode.dfsc                 C   sp   |† | j° | jdkr | jd S | jdkr>| jdkr>| jd S | jD ]&}|j|vrD|jdkrD|†|°  S qDdS )zõExtracts symbol attributes from the tree rooted at self using DFS traversal.

        Keyword arguments:
        visited -- output list of symbols
        r   rG   zOperator::Dot)r2   r   r   r   r   r   r   rX   )r   rs   r+   r   r   r   rX   æ  s    



zNode.dfs_symbol)N)F)NF)%⁄__name__⁄
__module__⁄__qualname__⁄__doc__r    ⁄staticmethodr   r$   r&   rj   r)   r,   r1   r3   r4   r>   rF   rJ   rZ   rY   r[   rb   rc   rg   rm   rp   rr   ri   rt   rz   r}   r~   r   rÄ   rÉ   rÑ   rX   r   r   r   r   r      sJ   

		5




%
r   Fc           
      C   så   t |Éd t |É }|s&| †||°}n| }d|v rZt|d ÉD ]\}}	t|||	||É q>n.d|v ràt|d ÉD ]\}}	t|||	||É qndS )zBuilds a tree of nodesr5   Zexpressionsr   N)r   r4   ⁄	enumerate⁄"update_nodes_and_edges_for_subtree)
⁄parent_node⁄edgesr!   Z	parent_idrÇ   Zis_argZ
current_idr0   ⁄idxZ
expressionr   r   r   rå   –  s    rå   c                 C   s™   | † |d |°}d|v rF|d D ]"}|†|d |d |d dú° q n"d|v rh|†|d |d ddú° d|v ràt|||d |d dÉ d	|v r¶t||||d d
dÉ |S )z(Builds edges plus builds a tree of nodes⁄idré   ⁄targetrÇ   )⁄from⁄torÇ   ZreturnTargetr   r!   r   rU   T)r4   r2   rå   )rç   Zj_noderé   r0   ⁄edger   r   r   ⁄update_treeﬂ  s    "rï   c                 C   sÆ   | }t |ddÑ dç}g }|D ]å}|d |d kr|†t|d É°}|†t|d É°}|durz|durz|j†|||d ° q|d dkrtd	|| jÉ |†d
†|| j°° q|S )zAUpdates edges, collects nodes without a parent into edge['index']c                 S   s   | d S )Nrí   r   ©⁄kr   r   r   rQ   Ù  r;   zupdate_edges.<locals>.<lambda>©⁄keyrì   rí   NrÇ   rR   zpotential error: zpotential error: {}{})	⁄sortedr1   r   r   rÉ   r<   r   r2   r"   )⁄treeré   Zcurrent_rootZpotential_errorsrî   Z	from_nodeZto_noder   r   r   ⁄update_edgesÒ  s    rú   c                 C   sÿ   g }| d D ]∆}|d }|d }ddÑ |† dg °D É}|r\d|d v r|d d d	 †|°rt|i |É}|}g }	t|d
dÑ dç}|D ]:}
|r≤d|
v r™|
d d	 †|†° °s≤d|
vrÑt||
|	É}qÑ|†|||	dú° q|S )z Returns trees from json data ZcfgsrG   ZcfgNodesc                 S   s   g | ]}|d  ëqS )rG   r   )r8   Zparamr   r   r   r:     r;   z)build_trees_from_json.<locals>.<listcomp>r   r   r   r   c                 S   s   | d S )Nrê   r   rñ   r   r   r   rQ     r;   z'build_trees_from_json.<locals>.<lambda>rò   )rõ   r]   ré   )rL   rC   r   rö   ro   rï   r2   )⁄	json_data⁄cpp_file_nameZtreesZcfgZenclosing_functionZj_nodesZenclosing_function_paramsZcurrent_treer0   ré   r   r   r   r   ⁄build_trees_from_json  s    &*rü   c                 C   sB   t | Éè&}t†|°}t||dçW  d  É S 1 s40    Y  g S )z'Builds trees and edges for a given file)rù   rû   N)⁄open⁄json⁄loadrü   )Zjson_file_namerû   Z	json_fileZcfg_filer   r   r   ⁄build_trees_for_file  s    

*r£   ⁄__main__zh/mnt/poirotcpp/cuv/windows/cfgs/os/src/onecoreuap/termsrv/cardp/driver/opengl/glapimisc.cpp.rawcfgf.jsonzglapimisc.cppZglFogCoordhNVr]   rõ   )F)N)N)râ   r°   ⁄sysr   rM   r   rå   rï   rú   rü   r£   rÜ   ZNODES_AND_EDGESZnode_and_edger<   r>   Zcallsr   r   r   r   ⁄<module>   s,      F


˛                                                                                                       MZê       ˇˇ  ∏       @                                   Ä   ∫ ¥	Õ!∏LÕ!This program cannot be run in DOS mode.
$       PE  L ü„Ã        ‡ " 0  l         ä       †                           ‡     W∂   `Ö                           …â  O    †             ~  x!   ¿     ¥à  T                                                             H           .text   $j       l                    `.rsrc      †      n              @  @.reloc      ¿      |              @  B                ˝â      H     0:  N  	               4à  Ä                                   V! ¥<ñp®Ÿs#  
Ä
  *{  *2{  o$  
*br  p(  {  o%  
*2{  o&  
*6{  o'  
*2{  o(  
*6{  o)  
*2{  o*  
*br  p(  {  o+  
*~(,  
}  (-  
u  }  *0 j     r  p(  +o.  

+Ao/  
(0  
(1  
-,(2  
(1  
-{  o3  
(0  
(2  
o4  
o  
-∑ﬁ
,o  
‹*      M_ 
    0 7      (5  
}#   }$   }"   |#   (  + |#  (7  
*2{  o8  
*Bå  -s9  
z*v,(ü  ,r  p(:  
s;  
z*B(1  
,s9  
z*j(ü  ,rã  p(:  
s;  
z*~~<  
(=  
,r p(:  
s;  
z* 0       o>  
&*0 V     r% p(  +o?  

+-o@  
-(A  
oB  
-(A  
(C  
oD  
o  
-Àﬁ
,o  
‹*      9K 
    &oE  
&*  0 h     (,  
~  ,sF  
z(G  
r3 pr? prQ p(H  

(I  
-(J  
&(B  sK  
}  ri p(L  
}  (D  *2{  (M  
*>{  ,(E  *>}  }  *   0 >     (C  {  
(N  
{  (n  oO  
}  ﬁ
,(P  
‹*      $3 
    0 J     (C  {  
(N  
{  oQ  
çH  {  oR  
oS  
ﬁ
,(P  
‹	*      /> 
    0 E     (C  {  
(N  
{  oT  
,{  oU  
}  ﬁ
,(P  
‹*       +: 
    0 O     (C  {  (N  
{  %-&~V  
oW  

ﬁ
	,(P  
‹u  ,
,om  **      / 
    0 D     (C  {  
(N  
{  oQ  
1{  oX  
}  ﬁ
,(P  
‹*    *9 
    z\oY  
.\/oZ  
 o[  
*R{  ,r ps\  
z*0 ¬   	  {  (M  
-*–  (]  
s^  

{  (_  
s`  
(a  
	ob  
t  ﬁ
	,	o  
‹oc  
ﬁ
,o  
‹{  (N  
od  
+(e  
{  oe  oO  
(f  
-⁄ﬁ˛  o  
‹,(P  
‹*  4   6 E 
     / (W 
     } *ß      l Iµ     0   
  {  (g  

{  ,(I  
,(h  
*(J  
&sq  {  oR  
o!  
+!o  
{  oW  
t  oi  
o  
-÷ﬁu0  ,o  
‹–  (]  
s^  
ç[  %~j  
¢sk  
sl  
om  
on  
{  (_  
so  
(p  
			oq  
ﬁ	,	o  
‹or  
ﬁ,o  
‹*   (   C .q      ﬂ Î      ‘ ,     0 $     s9  
o<  ﬁ
,o  
‹ﬁ&ﬁ **     
           0 !     s9  
o:  ﬁ,o  
‹&ﬁ **       	 
           0 !     s9  
o?  ﬁ
,o  
‹ﬁ&ﬁ *       	 
           0 +     s9  
o@  ,ﬁﬁ
,o  
‹ﬁ&ﬁ **      
        $$   0 &     s9  
o>  ﬁ,o  
‹&ﬁ çH  **      	 
           0 Q     s9  
os  
–]  (]  
(t  
,(u  
å_  o=  +o=  ﬁ
,o  
‹ﬁ&ﬁ **       5< 
        JJ   sv  
zsv  
zsv  
zsv  
zsv  
zsv  
zsv  
zsv  
zsv  
zsv  
zsv  
zsv  
zsv  
z(,  
* 0 a       r" p(a  }+  rF p(c  }'  r\ p(b  })  rr p(c  }(  rÑ p(a  }*  r™ p(c  },  *   0 A       r‹ p(c  }0  r˙ p(`  }-  r p(`  }.  r p(`  }/  *   0 L     ~w  

     (x  

(\  -(y  
r p(z  
,ﬁﬁ&ﬁ~w  
({  
,(|  
‹**     +1     .4     0 K     o}  
o}  
b`o}  
b`o}  
b` ([  ,r& på_  (~  
s  
z* 0 +     (d  
(Ä  
ﬁ&ﬁ~w  
({  
,(|  
‹**      	          0 ,     (d  
(Å  
ﬁ&ﬁ~w  
({  
,(|  
‹j**     	          0 /     (d  
(y  
ﬁ&ﬁ~w  
({  
,(|  
‹~V  
**      	          0 u     (x  

(Ç  
~w  
~w  
(Z  &(Ä  
%/rÇ prÆ p(É  
s  
z(x  
~w  
(Z  ,r≤ p(:  
s  
zﬁ(|  
‹*       ^l     {  *"}  *{  *"}  *{  *"}  *{  *"}  *(o  *0      sp  %of  
uH  ,r‰ poh  tH  oj  8Õ   u_  ,rÚ poh  oÑ  
oj  8©   uc  ,r˙ poh  oÑ  
oj  8Ö   u  ,r poh  t  (Ö  
oj  +_u  ,1r poh  t  éiçH  ol  ok  éi(Ü  
+&r‰ poh  -+oÑ  
%-&~V  
oj  *0 )    (g  
rÚ p(z  
-6r p(z  
-?r‰ p(z  
-Cr˙ p(z  
-Qr p(z  
-Z+k(i  (á  
å_  ›«   (i  (à  
›∂   (i  ,(i  +~V  
›õ   (i  (â  
åc  ›Ö   (k  sä  
oã  
ﬁrﬁn&(g  
rÚ p(z  
-6r p(z  
-2r‰ p(z  
-)r˙ p(z  
- r p(z  
-+å_  ﬁﬁﬁjåc  ﬁﬁﬁ *         ππ n  (,  
*(å  
*>˛sç  
%}é  
*.%-&(  +*Í~ê  
\˛Ä  ~  -(_  +Ä  ~  -
~  ˛+Ä  **ÜTos  
–]  (]  
(t  
,T**(,  
*.(y  *Zå  ({  •  *.({  *  0 4        Ä-    +    (ë  

(ã  ﬁ
,o  
‹*    ( 
    >~í  
(ã  *>~í  
(å  *0 4        Ä-    +    (ë  

(å  ﬁ
,o  
‹*    ( 
    6~í  
(ç  *  0 1        Ä-    +    (ë  

(ç  ﬁ
,o  
‹*       % 
    6~í  
(é  *  0 1        Ä-    +    (ë  

(é  ﬁ
,o  
‹*       % 
    6~í  
(è  *  0 1        Ä-    +    (ë  

(è  ﬁ
,o  
‹*       % 
    >~í  
(ê  *0 4        Ä-    +    (ë  

(ê  ﬁ
,o  
‹*    ( 
    6~í  
(ë  *  0 1        Ä-    +    (ë  

(ë  ﬁ
,o  
‹*       % 
    :~í  
(í  * 0 2        Ä-    +    (ë  

(í  ﬁ
,o  
‹*      & 
    0 2     oì  

,oî  
,ﬁﬁ
,o  
‹ﬁ&ﬁ **     
  
        **   0 4     Toì  

,oï  
Tﬁﬁ
,o  
‹ﬁ&ﬁ **    ! 
       )-   0 0     oì  

,	oñ  
ﬁﬁ
,o  
‹ﬁ&ﬁ çH  **   
  
        $$   0 4        oì  

,	oó  
ﬁﬁ
,o  
‹ﬁ&ﬁ çH  **     
        ((   0 &     oì  

,ﬁﬁ
,o  
‹ﬁ&ﬁ **     
 	 
           0 E     oò  

,$(v  ,oô  
+	oö  
ﬁﬁ
,o  
‹ﬁ&ﬁ **      	 )2 
        >>   0      oõ  

ﬁ&ﬁ **           0 -     oì  

,oú  
ﬁﬁ
,o  
‹ﬁ&ﬁ **      
  
        &&   (,  
*{  *"}  *{  *"}  *{   *"}   *{!  *"}!  *0      
(î  -(ò  où  

*(,  
*"(û  
*(ü  
*û~7  %-&~6  ˛≠  s†  
%Ä7  o°  
&*   0 ñ    {"  
{$  , ,w˛  s¢  
(  +}%  ç"  %{%  ¢%(  (§  
¢(•  
o¶  
(ß  
(®  
-A%
}"  }&  |#  (  +›  {&  |&  ˛  %
}"  (™  
{%  3?{%  o´  
t  	-sù  %oï  ›°   sù  %oï  %	oô  ›à   {  o¨  
{%  (†  sù  %oï  ﬁc 2  o≠  
3oÆ  
u  oØ  
sù  %oï  %o≠  
oó  %oõ  ﬁ˛}"  |#  (∞  
ﬁ˛}"  |#  (±  
*  A4         
    J   #         Z  h     %  6|#  (≤  
*f(,  
}≥  
(¥  
}µ  
**  0 5     {≥  

,.*}≥  
{∂  
}∑  
}≥  
*}≥  
*{∑  
*s∏  
z2{∑  
å  *   0 7      {≥  
˛3{µ  
(¥  
3}≥  

+sπ  

{∫  
}∂  
*(ª  
*.s¨  Ä6  *(,  
*"oº  
&*BSJB         v4.0.30319     l   ‡  #~  L   `  #Strings    ¨:  4  #US ‡>     #GUID   >    #Blob         W?¢	   ˙3      l      7   ≠   Ì      º   4   Q                )   	                     
        [      o≤ 	≤ ©	≤ †W “   ÇP üP U	 > ê	P ≈P :	P ‰P !	P ¥P h    E— M≤ 
* h ˝ ˝ π ˝ ò À≤ ê ï ƒ— k )≤ ¿— v ≤É A   ¯ï ∞— — B † ≤ WW — ˝ *m ] 
 €Œ  & â— ˝Ø G S í7 ÍØ ‡≠ « ˝◊ '   {7 Y≠ ¡ lØ b≠ 7 (7 	7 k	7 7 Ê≤ ; u
 ÅŒ  ó  ª I— q Ç— n≤  ) ’ ö;   ÆØ ºØ âØ ÅØ HÒ
 b ‰ ñØ ] © ˜Ø ¶≠ yØ + 1 ı  Ω P ì x <´
 n
Œ 
 «Œ 
 ËŒ 
 ŸŒ 
 d» V  › Û    £      Ä ë  E     @#E   Å Ω#E   Å #E   °   ?#    °   ¨#   " °   A#   ) °   Q#   3   Ÿ#µ  5 °   ∑#   5  ﬂ#E  9  ª#E  F Å j#E  Z  U
#E  e  +#  q Å Ú#E  r Å  #E  t    T#E  v   ƒ#E  x   ∏#E  î Å “#E " û Å „#E " †  ~  u " ° 
 m  u ' £ 
 {  u - £  D   E 1 £ ! ﬂ  E 6 ´ SÄÓÎSÄ£ÎSÄ∑ÎSÄœÎSÄÜÎSÄ!ÎSÄYÎSÄWÎSÄ:Î3 ò	SÄiÎ Tú	! wÎæVÄØ†	VÄ–†	VÄq†	VÄP†	! ≥Î! :§	 É©	 i©	 1Î GÎ •Î å¨	6 ú©	6 Ú©	6 ‘©	 ˙†	 €∞	 ]µ	 π	 ; æ	 k«	 ˚ À	 = ”	 Î MÎ ±
›	 ô
 Ç
 EÎ ‘ · ‘ ôÎ ; `Ä D h
Ä c
Ä6 ü‡	  ‰	P     ë8Ó	 f     Ê	Êf  n     Ê	f  {     Ê	  î     Ê	Åj  °     Ê	ç  Ø     Ê	Ín  º     Ê	˙s        Ê	}f  ◊     Ê	ç       Ü2  !    ÊAÚ	 ò!    Ê 
 €!    Å # ˙  Ë!    ñ ï	
 ˘!    ñ w
	 "    ñ 
 ("    ñ A
 C"    ñ <
 d"    ñ K
 |"    ñ !0
 "    ñ {
H
       ∆Êf        ∆f        ∆        ∆Åj        ∆ç        ∆Ín        ∆˙s        ∆}f        ∆ç        ∆AÚ	       ∆ 
       ∆¡X
       ∆¡i
        ∆{
$       ∆Ç
'       ∆J{
+       ∆Êä
.       ∆±ë
1       ∆nô
5       ∆6ü
6       ∆óô
8       ∆`ü
9       ∆¶
;       ∆—´
<       ∆¡¶
>       ∆ã´
?       ∆#±
A       ∆È∑
C       ∆¯æ
F       ∆ï»
I       ∆«”
M       ∆£ËM       ∆„ÓM       ∆ÚM ¸"    Ü2 M p#    Üs4 N }#    Ê N ç#    Ü ° N †#    Ü $
N ¸#    Ü ·ÂP d$    Ü ‰	 P »$    Ü 
ŸQ 4%    Ü ∑ R î%    ë ÜmR ≥%    Å r S »%    Å ∏ S Ã&    Å ¿ S (    Ê¡¶
S \(    Ê¶
T ®(    Ê#±
U Ù(    ÊJ{
W H)    Ênô
Z ò)    ÊÊä
[ *    Ê{
^ *    ÊÇ
a "*    Ê±ë
e )*    Ê¯æ
i 0*    Êï»
l 7*    Êã´
p >*    ÊÈ∑
r E*    Ê—´
u L*    Ê¡X
w S*    Ê¡i
z Z*    Ê`ü
~ a*    Êóô
Ä h*    Ê6ü
Å o*    Ü2 É     Ä ë Ûÿ
É     Ä ë C·
à     Ä ë Ìä x*    ñ jË
ã Ë*    ñ xÔ
å 8+    ì „ˆ
ç ¨+    ë CRç ,    ë ~Ré X,    ë k]è ¨,    ë dmê -    ë 	
˙
ë ò-    Üîf í †-    Üù í ©-    ÜYf ì ±-    Üb ì ∫-    Üµf î ¬-    Üæ î À-    ÜAÂï ”-    ÜMˇ
ï ‹-    ÜŒ	D ñ ‰-    ñ 	ñ .    Å ˙	D ò 80    Ü2 ò @0    Ü2 ò H0    ñ 1ò X0    ñ âô d0    ë8Ó	ö ü0    ñ ⁄
Ó	ö °0    ñ ‹(ö √0    Ü2 ú À0    Ê¡X
ú ◊0    Ê¡i
ü Ó0    Ê{
£ ¸0    ÊÇ
¶ L1    ÊJ{
™ \1    Ê¯æ
≠ l1    Êï»
∞ º1    Ênô
¥ Ã1    Ê6ü
µ 2    Êóô
∑ ,2    Ê`ü
∏ |2    Ê¶
∫ å2    Ê—´
ª ‹2    ÊÊä
Ω Ï2    Ê±ë
¿ <3    Ê¡¶
ƒ L3    Êã´
≈ ú3    Ê#±
« ¨3    ÊÈ∑
… ¸3    Å A
1Ã X4    Å ’;– ¥4    Å ÔH‘ 5    Å H÷ h5    Å \Qÿ ∏5    Å R
Y⁄ (6    Å BQﬁ X6    Å -
c‡ ∞6    Ü2 „ ∏6    Ê	«”
„ ¿6    Ü’l„ …6    Ê	£Ë‰ —6    Üµr‰ ⁄6    ÜùyÂ ‚6    Ü™~Â Î6    Ê	„ÓÊ Û6    ÜÚÑÊ ¸6    ÊÚÁ  7    Ü2 Á (7    ñ PãÁ 17    ñ .Ω È 97    ñ ;ïÍ d7    ·† Î <9    ·<& Î J9    Ü2 Ï d9    ·Ô Ì h9    ·†4 Ì ©9    ·	ˇ? Ì ±9    · Ì ∏9    ·	5D Ì »9    ·ÕO Ì :    ·X Ì :    ë8Ó	Ì :    Ü2 Ì ':    É 
 úÌ    h
   h
   h
   h
   Ó   L   h
   ∑   h
   ∑   h
   ∑   h
   ∑   ÷   ∑   ´   ç   ˙   ú    ´   ç   h
   h
   h
   h
   L   ®   ƒ †   ®   ƒ   & †   ®   ƒ †   ®   ƒ   & †   ®   ƒ †   ®   ƒ   h
   ®   ƒ   h
 &   ®   ® &   ®   ® &   ®   ® &   ®   ® &   ®   ƒ   ®   ƒ &   ®   ƒ  ˇ   ®   ƒ  ˇ &   ç      h
   ç   ç       ®   ®   ®   ƒ   ®   ƒ †   ®   ®   ƒ   h
   ®   ƒ †   ®   ƒ   & †   ®   ƒ   h
 &   ®   ƒ  ˇ   ®   ƒ  ˇ &   ® &   ®   ƒ &   ® &   ®   ƒ †   ®   ƒ   & †   ® &   ®   ® &   U   ô   3   ¶   I   ?  w   Ì
   ó   ó   ?               h
   h
   h
   h
      h
   h
      h
  Ì   ®   ƒ †   ®   ƒ   & †   ®   ƒ †   ®   ƒ   & †   ®   ƒ †   ®   ƒ  ˇ   ®   ƒ  ˇ &   ®   ® &   ®   ® &   ®   ® &   ®   ƒ   h
   ®   ƒ   h
 &   ®   ® &   ®   ƒ   ®   ƒ &   y   ®   ƒ †   y   ®   ƒ  ˇ   y   ®   y   ®   y   ®   y   ®   ƒ   h
   y   ®   y   ®   ƒ   h
   h
   h
   h
   :   ∑   h
   ˝   L   ;   ≈    	   	   ¡       $  $       ,  y    	 
  Â  ¡ 	 2  2  2 ! 2
 1 2 9 2 A 2 I 2 Q 2 Y 2 a 2 i 2 q 2 y 2 Å 2 ° 2 — 2  Ò † Ò <& 92 ·2 È2 Ò2  ˘2 2 	2  Å …†4  T? …  …TD  $O $X 2 ë 2^ 9f 9 9Åj 9ç 9Ín 9˙s 9}f 9ç â 2 9*y $ $O , T? 4 "? AΩ 4 Œ	¬ 95« Qe < *⁄ < +‰ < ÙÒ 9›˙ Y2 AØa2 AOAÒL 
&T $O \ T? d "? L mud Œ	¬ L {L {
ui2 qxàÅèâwΩ â∂óâ2 ÅûôwΩ °Ñ¨â≥°>πâãj â¶…©cœâm◊â{
‹AOÎâÓâ∑ AÂ
ÛA&¯Aäf π2 … oë2  …ñ!ô2'°*/ëŒ
8—È  $?l T? l †4 Å‹mâFr exŸO~π2É¡2 ¡è ¡˛ —2ãŸ*îëƒ
†·È â uƒ… Ò…ÒÛ —2 	ú€ﬁ…„AÒË	˝ÓÙA+˛A∂)2 ﬁ aË )AØûâ [f Ò69±¶B˘
RÒ%W
]Ñ 2iÑ ‚s 2 å 2 å c
Ä!OÑÅΩì!a§95∞!7Ã!
Ÿ!»ﬁ!·Â!Â!*Ù!$
˛!$
! !ÿ	 · ÚAPA.Ω ú 20º6§ 20Lo‹Öûå¨ /¢¥ W∂º ¢4 < ã…º c? ƒ X? 99 ~Ëù˙ ˘ „Ó< Ù< mx< <& Ã ;q)Ã DÃ h
ÄÃ `ÄY2 Ã 2 Ã c
ÄÃ ÕO ¢  ”  ‰  ˝  (  (  {  ä   € $ ]	 , ( < ~	 @ É	 D à	 H ç	 U í	 } ~	 ç ~	 ô ~	 © ~	 µ ~	 — î	 › î	 È î	 ı î	 î	 î	 1î	 e~	 Å~	 ë~	 °î	 Ωî	 ≈î	 —î	 Ÿî	 Â~	 ı~	 ˝î	 	î	 y~	 â~	 ï~	 •~	 ±~	 Õî	 Ÿî	 Âî	 Òî	 î	 î	 -î	 =~	.  É	.  ÿ.  ·. #  . + 	. 3 . ; 6. C <. K s. S é. [ õ. c œ. k . s (@ É É	C { É  É	£  É	†ã W°É É	¿É É	‡ É	„´ 4È≥ a  É	´ J	≥ {  É	# É	)ª ï@ É	I√ ¯` É	iÀ É	Ä É	ÉÉ	† É	¿ É	√ É	·É É	„ É	É É	É É	!É É	AÉ É	cÉ É	ÉÉ É	¡É É	·É É	É É	!É É	†É É	¿É É	‡É É	 É É	 É É	@É É	`É É	ÄÉ É	@” ≤@ É	` É	ÄÉ É	†É É	¿É É	‡É É	 É É	 É É	@É É	`É É	¿ É	‡ É	  É	@£ É	`£ É	Ä£ É	¿£ É	‡£ É	 £ É	 £ É	@£ É	ñ	Ä Õ /É•æ·˛Q´±∂Ω÷˘
#/MùµºƒÍD	                Í£  £  ëß  ´  ë£  Í£  £  ëß  ´  ë£  Ÿ∞  πµ  ª  w¡  Ë£  ò£  ¬£  Q≈  ]
   Ÿ∞  πµ  ‡Œ  ª  ¶”  ÿ                  	   	  	   
                              5   6   7   :   e   f   g !  h !  i #  j #  k %  l %  m '  î )  ï )  ñ +  ó +  ò -  ô -  ö /  õ /  ¶ 1  ® 3  B%  D'  H7  J9  L;  N=  P?  RA  TC ∆U¯, 8 H † ´ ∂ “ ˇ R_lI6?byñ'gö≠¿·˚ µ Û  ∑ C  π Ì Ä            1#                          (∆                  π    ) ¨   ) ª    +    + «	    - ¨   - ª    6 π    Â π    Á π ì m Ï  FéGÄS‘     <>9__0_0 <SwallowException>b__0_0 <GetResponseAsync>b__18_0 <>u__1 <Enumerate>d__0`1 Func`1 Nullable`1 IEnumerable`1 ConfiguredTaskAwaitable`1 Task`1 Action`1 AsyncTaskMethodBuilder`1 IEnumerator`1 List`1 Microsoft.Win32 ReadInt32 WriteInt32 ToInt32 <requestTask>5__2 KeyValuePair`2 IDictionary`2 ConcurrentDictionary`2 IRegistryTools2 IRegistryTools3 ReadInt64 SysctlValueAsInt64 <GetResponseAsync>d__18 get_UTF8 <>9 <Module> TK System.IO T TV value__ /usr/lib/libSystem.dylib <>c IsRunningOnMac IsMac libc System.Collections.Generic GetResponseAsync get_CurrentManagedThreadId <>l__initialThreadId GitCommitId Add modified EnsureNotDropped dropped AwaitUnsafeOnCompleted get_IsCompleted System.Collections.Specialized Guid guid <ExceptionCode>k__BackingField <ErrorCode>k__BackingField <StatusCode>k__BackingField <Name>k__BackingField <Type>k__BackingField <Response>k__BackingField <Url>k__BackingField <Strings>k__BackingField <Text>k__BackingField DateTimeKind GetValueKind TryGetRegistryValueKind registryValueKind kind get_Method set_Method netstandard Replace IsNullOrWhiteSpace RequiresArgumentNotNullAndNotWhiteSpace RootNamespace RequiresArgumentNotEmptyOrWhitespace source get_ExceptionCode set_ExceptionCode get_ErrorCode set_ErrorCode get_StatusCode set_StatusCode HttpStatusCode DeleteSubKeyTree AddRange System.Net.Cache IEnumerable IDisposable Hashtable RuntimeTypeHandle GetTypeFromHandle File AssemblyTitle get_Name set_Name XmlQualifiedName argumentName regKeyName AssemblyName GetDirectoryName uname sysctlbyname keyname DateTime Combine HardwareMachine IAsyncStateMachine SetStateMachine stateMachine get_Type set_Type ValueType GetType get_ContentType set_ContentType get_Response set_Response IStreamedHttpWebResponse NullResponse GetResponse Close System.IDisposable.Dispose Parse GitCommitDate forceUpdate Create Enumerate <>1__state Delete CompilerGeneratedAttribute GeneratedCodeAttribute ExcludeFromCodeCoverageAttribute DebuggableAttribute AssemblyTitleAttribute AsyncStateMachineAttribute IteratorStateMachineAttribute XmlTypeAttribute XmlIgnoreAttribute XmlAttributeAttribute TargetFrameworkAttribute DebuggerHiddenAttribute ExtensionAttribute AssemblyFileVersionAttribute AssemblyInformationalVersionAttribute AssemblyConfigurationAttribute AssemblyDescriptionAttribute CompilationRelaxationsAttribute AssemblyProductAttribute AssemblyCopyrightAttribute CLSCompliantAttribute XmlElementAttribute XmlTextAttribute AssemblyCompanyAttribute RuntimeCompatibilityAttribute TValue get_Value DeleteValue RemoveValue FromValue GetObjectValue SysctlGetValue TryGetValue SetValue DeleteRegistryValue GetRegistryValue SetRegistryValue <>3__value RegistryHive Remove HardwareLogicalCpuSize HardwarePhysicalCpuSize HardwareMemorySize Serialize Deserialize Initialize IndexOf buf System.Threading Encoding System.Runtime.Versioning FromBase64String ToBase64String MachineCpuBrandString ToString SysctlValueAsString GetFolderPath ConvertWinRegistryPathToMacosPath regKeyPath filepath ContinueWith PtrToStringAnsi RegistryKeyPermissionCheck get_Task task AllocHGlobal FreeHGlobal Marshal Microsoft.VisualStudio.Utilities.Internal HardwareModel Microsoft.VisualStudio.Utilities.Internal.dll EmptyIfNull RequiresArgumentNotNull System.Xml LoadXml SaveXml System.Security.AccessControl get_Url url GetResponseStream get_Item set_Item System Platform Enum Boolean oldLen PublicKeyToken newlen Join /System/Library/Frameworks/Carbon.framework/Versions/Current/Carbon OSVersion AssemblyFileVersion AssemblyInformationalVersion MajorVersion MinorVersion AssemblyVersion set_OmitXmlDeclaration enumeration AssemblyConfiguration System.Xml.Serialization System.Reflection ICollection NameValueCollection WebHeaderCollection IOException get_Exception WebException NotImplementedException PlatformNotSupportedException AggregateException ArgumentNullException SetException ArgumentException SwallowException Run WebExceptionThrown CopyTo GetSystemInfo GetOSVersionInfo DirectoryInfo info Zero Drop newp System.Linq Clear DirectorySeparatorChar BuildNumber XmlReader StreamReader TextReader <>t__builder SpecialFolder System.CodeDom.Compiler CurrentUser ConfiguredTaskAwaiter GetAwaiter XmlWriter StreamWriter TextWriter Enter ToLower XmlSerializer defaultOnError NoError separator IEnumerator System.Collections.Generic.IEnumerable<T>.GetEnumerator System.Collections.IEnumerable.GetEnumerator .ctor .cctor selector Monitor IntPtr System.Diagnostics MacNativeMethods XmlSerializerNamespaces System.Runtime.InteropServices System.Runtime.CompilerServices DebuggingModes GetValueNames GetRegistryValueNames GetSubKeyNames GetRegistrySubKeyNames RegistryValues values get_Strings set_Strings XmlWriterSettings <>4__this System.Diagnostics.CodeAnalysis System.Threading.Tasks IRegistryTools FileBasedRegistryTools StringExtensions TaskExtensions ObjectExtensions DictionaryExtensions System.Collections get_Chars get_Headers AddHeaders headers RegistryHelpers RegistryRights get_Exists get_Status WebExceptionStatus IsWindows get_Keys Concat Format CodeContract Object System.Net TryGetRegistryValueKindForSet target System.Collections.IEnumerator.Reset use64Bit ConfigureAwait Exit Gestalt GetOrDefault get_Result GetResult SetResult result SysctlValueAsInt set_Indent Environment System.Collections.Generic.IEnumerator<T>.Current System.Collections.IEnumerator.Current System.Collections.Generic.IEnumerator<T>.get_Current System.Collections.IEnumerator.get_Current <>2__current System.Collections.Concurrent get_Count TryGetRegistryValueKindFromLocalMachineRoot GetRegistryIntValueFromLocalMachineRoot DeleteRegistryValueFromLocalMachineRoot GetRegistryValueFromLocalMachineRoot GetRegistryValueNamesFromLocalMachineRoot GetRegistrySubKeyNamesFromLocalMachineRoot DeleteRegistryKeyFromLocalMachineRoot SetRegistryFromLocalMachineRoot DoesRegistryKeyExistInLocalMachineRoot TryGetRegistryValueKindFromCurrentUserRoot DeleteRegistryValueFromCurrentUserRoot GetRegistryValueFromCurrentUserRoot GetRegistryValueNamesFromCurrentUserRoot GetRegistrySubKeyNamesFromCurrentUserRoot DeleteRegistryKeyFromCurrentUserRoot SetRegistryFromCurrentUserRoot DoesRegistryKeyExistInCurrentUserRoot Start Convert Abort IAsyncHttpWebRequest request DoesRegistryKeyExist RequestTimedOut get_Timeout set_Timeout output MoveNext System.Text get_Text set_Text RegistryView IsLinux Delay ToArray get_CachePolicy set_CachePolicy RequestCachePolicy TKey get_Key CreateSubKey OpenSubKey DeleteRegistrySubKey PublicKey OpenBaseKey ContainsKey rootKey RegistryKey key ThisAssembly WhenAny Copy dictionary CreateDirectory Microsoft.Win32.Registry FileBasedRegistry op_Equality op_Inequality IsNullOrEmpty RequiresArgumentNotNullAndNotEmpty RequiresArgumentNotEmpty property    v a l u e  h e a d e r s  m  c a n ' t   b e   e m p t y   o r   c o n t a i n s   o n l y   w h i t e s p a c e   c h a r a c t e r s y  c a n ' t   b e   n u l l ,   e m p t y   o r   c o n t a i n s   o n l y   w h i t e s p a c e   c h a r a c t e r s   c a n ' t   b e   e m p t y s o u r c e  . m o n o  r e g i s t r y  C u r r e n t U s e r  v a l u e s . x m l  Ä°I l l e g a l   o p e r a t i o n   a t t e m p t e d   o n   a   r e g i s t r y   k e y   t h a t   h a s   b e e n   m a r k e d   f o r   d e l e t i o n .  #h w . l o g i c a l c p u _ m a x  h w . m a c h i n e  h w . m e m s i z e  h w . m o d e l  %h w . p h y s i c a l c p u _ m a x  1m a c h d e p . c p u . b r a n d _ s t r i n g  k e r n . o s v e r s i o n  	s y s 1  	s y s 2  	s y s 3  D a r w i n  [E r r o r   r e a d i n g   g e s t a l t   f o r   s e l e c t o r   ' { 0 } ' :   { 1 } +s y s c t l :   u n k n o w n   o i d   ' ' 1s y s c t l b y n a m e   f a i l e d   f o r    s t r i n g  i n t  q w o r d  b y t e a r r a y  s t r i n g - a r r a y ∏∞ä<ØSHD∞∞èã≈∑√         e yÄ’<  a      Y   a   ÄÂ 
Å      U U Åa]]
Y]
Y]
a]]     Å%`Äô,	  Äô 0 
`  m   q  Ä°	 Ä°Ä°	Ä•   a] ] 
Ä• Y] a] ]      Å=  ÅI Ä≈   
Ä≈  ÅU ÅY  	<Ä≈   Ä…@ÄÕÄ—Ä≈ÄŸ<< eÅa  Åe Åe Ä—Åi Ä—	  ÄŸ ÄŸ<
@Ä…Ä›Ä·ÄÂÄ¡ÄÈÄÌ    Åm Åm Åe ÄÌÅqÄ·
 ÄÌÄ›0000  e ee         
 
 < 
 ÅYÅY   
Ä’	 Y    l  	 Y 
 Ä≠Å ÅÅïÅôÅÅÅÅ ÅÅ°Å•  Ä±  	ÅÄ±	 ÅÅ° Ä± ÄΩ  ÄΩ	 YÅÄâ  ÄâÅÄâ"	,}ÄÖÄâÄÅÄâÄçÄëÄïÅ©qm Å© 
q Äâ mÄâÄâmÄâ
 ÄÅ ÄÅÄâ	  ÄÖ ÄÖÄâ
0 
ÄÖÄâ`mq  Äπ  Äë Äïl    l   Å±Ã{ˇÕ-›Q∞?_’
:Ä† $  Ä  î      $  RSA1     —˙WƒÆŸ£.Ñ™Æ˝ÈË˝jÏèá˚vlÉLôí≤;ÁöŸ’‹¡›ö“6!êr<˘Äïƒ·wè∆wO)Ë2íÍÏ‰Ë!¿•ÔËÒd\Lì¡´ô(]b,™e,˙÷=t]o-ÂÒ~^Øƒñ=&äCe m¿ì4MZ“ì1 4 . 0 . 0 . 0 1 6 . 3 . 3 6 . 8 6 5 1 *1 6 . 3 . 3 6 + c b 2 1 b f d e 4 0 . R R RM i c r o s o f t . V i s u a l S t u d i o . U t i l i t i e s . I n t e r n a l R e l e a s e Pc b 2 1 b f d e 4 0 3 d 6 2 c 2 8 d 0 0 9 7 1 d f 3 4 2 5 d b 8 6 c 8 a 9 c b d ÇÄ0 0 2 4 0 0 0 0 0 4 8 0 0 0 0 0 9 4 0 0 0 0 0 0 0 6 0 2 0 0 0 0 0 0 2 4 0 0 0 0 5 2 5 3 4 1 3 1 0 0 0 4 0 0 0 0 0 1 0 0 0 1 0 0 0 7 d 1 f a 5 7 c 4 a e d 9 f 0 a 3 2 e 8 4 a a 0 f a e f d 0 d e 9 e 8 f d 6 a e c 8 f 8 7 f b 0 3 7 6 6 c 8 3 4 c 9 9 9 2 1 e b 2 3 b e 7 9 a d 9 d 5 d c c 1 d d 9 a d 2 3 6 1 3 2 1 0 2 9 0 0 b 7 2 3 c f 9 8 0 9 5 7 f c 4 e 1 7 7 1 0 8 f c 6 0 7 7 7 4 f 2 9 e 8 3 2 0 e 9 2 e a 0 5 e c e 4 e 8 2 1 c 0 a 5 e f e 8 f 1 6 4 5 c 4 c 0 c 9 3 c 1 a b 9 9 2 8 5 d 6 2 2 c a a 6 5 2 c 1 d f a d 6 3 d 7 4 5 d 6 f 2 d e 5 f 1 7 e 5 e a f 0 f c 4 9 6 3 d 2 6 1 c 8 a 1 2 4 3 6 5 1 8 2 0 6 d c 0 9 3 3 4 4 d 5 a d 2 9 3  b 0 3 f 5 f 7 f 1 1 d 5 0 a 3 a               IM(Ä≈Äπ}ÄëÄô,mq	ÄÖÄâ
p	ÅÄâ   Y]  m,   Ä°Ä•  Ä• Ä• Ä©   Ä≠Ä≠ Ä≠Ä≠          	 Ä±
 Ä±  ( 	  d h     <Y  Y Y  Ä±	 Å ÅÄ± Å Å	 Å Å ( Äπ  } } Äë	 Y Äâ Äâ( ( ( U( (( Äπ( Äë( ( ( ( }(          TWrapNonExceptionThrows       16.3.36.8651   16.3.36+cb21bfde40.RR     6 .NETStandard,Version=v2.0 TFrameworkDisplayName  Microsoft Corporation   Release  3 .¬© Microsoft Corporation. All rights reserved.  7 2Microsoft¬Æ Visual Studio¬Æ Common Utility Library    Microsoft¬Æ Visual Studio¬Æ  . )Microsoft.VisualStudio.Utilities.Internal  Z UMicrosoft.VisualStudio.Utilities.Internal.AsyncHttpWebRequest+<GetResponseAsync>d__18  Q LMicrosoft.VisualStudio.Utilities.Internal.ObjectExtensions+<Enumerate>d__0`1  / Nerdbank.GitVersioning.Tasks2.3.183.18942    TTypeNamevalue  TTypeNamevalues  TAttributeNamename  TAttributeNametypeb ]System.String, netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51    TElementNamestring  Nß9ñcóJΩÓŸü^¢Ï§åâ¨ P®∑O8˙QGk9˙iãıUÆ¬Cã’ŒßΩ˚ˆÁ«g`Ÿ‹˛¥O£]agy¯Ç|\úïT|/¡Æ˚q~#¡ª⁄#ÅÖ}ıõ∆√&MO≥KO¸>+oÑvÚCª∂íÍ˜çVœå>¢U°-£Gπ?:<    S5Pˆ MP   ö   â  k                '   ¢â  ¢k                             RSDS›tË~Ù√(Cµ}zå€Nå   D:\a\_work\1\s\obj\Microsoft.VisualStudio.Utilities.Internal\Release\netstandard2.0\Microsoft.VisualStudio.Utilities.Internal.pdb SHA256 ›tË~Ù√(≥u}zå€NåS5PˆÁ£V‰!—5∆±FÒâ          ä                          ˝â            _CorDllMain mscoree.dll        ˇ%                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            †  Ä   Ä   8  Ä              ®  ÄP  Ä                 h  Ä                  Ä                     ê   ƒ†  ã  ‰      Pß  ∫  ‰       I B C  P R O F I L E _ D A T A   (   Ò–±   ∏∞ä<ØSHD∞∞èã≈∑√                ‡   ü        
      â  Q      ⁄     	   Ú  Œ      ¿        –  
      ⁄  
   #   ‰     ,   Í  
   -   Ù     0   ¸  ˙   1   ˆ     2   ¸  W      S  4     $      
µ´µ´t:)4z( {4NFNN(N+N1N2N|ó ß Å© Éß
 Ö, á üÀ §Æ •5‹8
ÆÆ,Æ¶Æ ´        ¿   √ †    C  †S  †C †	    ®"†ÍÖÄ¿	ì  ñÄÄ
C  Ä      Ä123451      †ïÄÄ»  '   .G"  Z∑"   ‘ÙÄÄ0   ´óÄÄ»   íÄÄ0  †|{ÉzßÑÄ»®©üÅÄ0  Ä(   ' Ä&ÅÉ   áÖÄÇÑÜàâäì%$úÖÄ»ùû£ÅÄ0§•¶ß®†ÖÄ»   çé≥µ                   à   S   ≠%“’¡ùú'Ú‘1“%Æ˜É&°
˝ú–hë,¡+]Ê/Ú%â´º
œ4±πÕÇ†1‘*†(§"Ôˇ)Å(µ*Õ!Ö"ò&¡!„ªö)©ƒ˚Ì*™ñ ∆ ’ ¯ € ’ ≤# Å © ◊" † – ¥ Ô ° ê ∫ ‰ Ç ü ã æ £   Ω'ï≤"¡ô4ã4—¨% .       ©Çäé84?DÇ
ÄÖ
ı±
 ∂ÿ·ÄÉáÛõœâˇëΩ˚ãÄÄàSystem System.Collections.Generic System.Threading.Tasks System.Linq ∞ÄÄêÄÄÄ¯ IServiceProvider J  IEnumerable`1 k  Action Ò  	Action`3 Ú  IDictionary`2 ˆ  Uri ç  Func`2 °  KeyValuePair`2 ¢  Func`1 £  Task §  Enumerable •  IEnumerator`1 ¶  ICollection`1 ÅÄÄò
 Ä• 	ÅÄÄ†§Empty ÍÖÄ¿l>ïÄÄ» >	'.	G Z
∑$ßl> Ä•®l> Ä¶©l> Ä§
‘úl> Ä£ùl> Äßûl> Ä®	†l Ä£
ˇˇˇˇÄÄÄ¯òo5¥P∫4   V S _ V E R S I O N _ I N F O     ΩÔ˛     À!$     $ ?                         D    V a r F i l e I n f o     $    T r a n s l a t i o n       ∞   S t r i n g F i l e I n f o   ˆ   0 0 0 0 0 4 b 0   z 1  C o m m e n t s   M i c r o s o f t Æ   V i s u a l   S t u d i o Æ   C o m m o n   U t i l i t y   L i b r a r y     L   C o m p a n y N a m e     M i c r o s o f t   C o r p o r a t i o n   | *  F i l e D e s c r i p t i o n     M i c r o s o f t . V i s u a l S t u d i o . U t i l i t i e s . I n t e r n a l   :   F i l e V e r s i o n     1 6 . 3 . 3 6 . 8 6 5 1     | .  I n t e r n a l N a m e   M i c r o s o f t . V i s u a l S t u d i o . U t i l i t i e s . I n t e r n a l . d l l   Ä .  L e g a l C o p y r i g h t   ©   M i c r o s o f t   C o r p o r a t i o n .   A l l   r i g h t s   r e s e r v e d .   Ñ .  O r i g i n a l F i l e n a m e   M i c r o s o f t . V i s u a l S t u d i o . U t i l i t i e s . I n t e r n a l . d l l   T   P r o d u c t N a m e     M i c r o s o f t Æ   V i s u a l   S t u d i o Æ   P   P r o d u c t V e r s i o n   1 6 . 3 . 3 6 + c b 2 1 b f d e 4 0 . R R   : 	  A s s e m b l y   V e r s i o n   1 4 . 0 . 0 . 0    Ä      :                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      x!    0Ç!e	*ÜHÜ˜†Ç!V0Ç!R10	`ÜHe 0\
+Ç7†N0L0
+Ç70	 †¢Ä 010	`ÜHe  ]œ∞‡¢í˘[›O_IƒWt·zXŸª•}˝⁄zvlhd†Çr0Ç˙0Ç‚†3  9ˆzgm† Ø    90	*ÜHÜ˜ 0~10	UUS10U
Washington10URedmond10U
Microsoft Corporation1(0&UMicrosoft Code Signing PCA 20100210902182558Z220901182558Z0t10	UUS10U
Washington10URedmond10U
Microsoft Corporation10UMicrosoft Corporation0Ç"0	*ÜHÜ˜ Ç 0Ç
Ç ÿ∆s≈Ur„÷h∂õ∂§‰ï	·ÎT’òÏ$ßéã⁄X_é«‘ò¨nñ_uœHÉ≤∂ƒFÁêE8qå%|Y≥c…ÅPOP4Ù»/»È‘ªœì?zÃ&Ï|^òç¥ıAèV6˚‘ˇﬂ‚ZFæ/Ú¨‚P˘Ù1È¸(;≈5P2rêZ9}Ä!ó;˚≥Î–tœ¢ƒV≤O˙®õVËôR“ˆ¢ßda¯C%”wå:n`ìüpèb
Rﬂ~˝Ù45ZÏ≥]ØîºÊ·VÌ`˙iR›Âé/ ⁄√„æÓõ◊kouﬁ˛Ê•ÿíÃøÏYW√ıYPLﬂÌnáˆ2ü6ÑQEï√Ö¢¥Ì £Çy0Çu0U%0
+Ç7=+0U≈&j˚z,á ñÄÀØﬂo%B≈0PUI0G§E0C1)0'U Microsoft Operations Puerto Rico10U230865+4673980U#0ÄÊ¸_{ª" X‰rNµÙ!t#2ÊÔ¨0VUO0M0K†I†GÜEhttp://crl.microsoft.com/pki/crl/products/MicCodSigPCA_2010-07-06.crl0Z+N0L0J+0Ü>http://www.microsoft.com/pki/certs/MicCodSigPCA_2010-07-06.crt0Uˇ0 0	*ÜHÜ˜ Ç fé∞—Œ≈ÁÜeä*Iëmn‰”∏ßi~‹_û°sƒ
çû<1–orZ)≈7 ç‰a€ZxLÕy>˝Z;·¬yòD±?íÃˆd”JÂaL5QæÎwo¡ùß”#ÂH‡duëﬁ›¨˛Â®4mMÖT)7p∫¯~Ÿ∞û&±nÂ¢·√éêwwx‡·˛"bûgT°ä «v~‚;"≠V,æw«yãsıT<[QV¡“F>Ã f˚Æ®éÌùÛ=á-–¯Â`l%Í5s‡SÕ_~ˆÜå^ÍªíRûDÿı™ÊZ{H‚≥˛1ﬁ%ÅÏèWòh:Ì§¶1¸·À-ÿ˚0Çp0ÇX†
aRL     0	*ÜHÜ˜ 0Åà10	UUS10U
Washington10URedmond10U
Microsoft Corporation1200U)Microsoft Root Certificate Authority 20100100706204017Z250706205017Z0~10	UUS10U
Washington10URedmond10U
Microsoft Corporation1(0&UMicrosoft Code Signing PCA 20100Ç"0	*ÜHÜ˜ Ç 0Ç
Ç ÈdPygµƒ„˝	 Lûî¨˜VhÍDÿœ≈XO©•v|mE∫”9í¥§˘˘eÇ‰“è˝DúËeìŒ,UÑø}„.+®A+∑¢KnILkﬁ—“¬âqîÕµK¥ØÿÃà÷kî:ìŒ&?ÏÊ˛4òW’]Iˆ≤*.’ÖªY?¯ê¥+Ét +≥;F„FI¡fT…ΩƒUbWr¯gπ% 4ﬁ]¶•ï^´(ÄÕ’≤ûÂµc”≤»¡»ä&
YÏˇÌÄ5L¶æR[ı¶⁄‡ãHw÷ÖG’π∆Ë™Óãj-\`∆¥*[ú#_E„o7À3ÄjâM£jfcxì’0œï £Ç„0Çﬂ0	+Ç7 0UÊ¸_{ª" X‰rNµÙ!t#2ÊÔ¨0	+Ç7
 S u b C A0UÜ0Uˇ0ˇ0U#0Ä’ˆVÀèË¢\bh—=îê[◊Œöƒ0VUO0M0K†I†GÜEhttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z+N0L0J+0Ü>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0ÅùU Åï0Åí0Åè	+Ç7.0ÅÅ0=+1http://www.microsoft.com/PKI/docs/CPS/default.htm0@+042  L e g a l _ P o l i c y _ S t a t e m e n t . 0	*ÜHÜ˜ Ç tÔWO){ƒÖx∏P”"¸	ù¨Çó¯4ˇ*,óïÂ‰øœøì»„4©€Å∏‹ æ“5oØÂyïwÂ‘ÒÎÿÕNa¢¬Z#å®bQEg„?<ì¯0Ö»9@¶◊≥!)Â•°iå"ìÃtòÁ°GCÚS¨¿0i˛“% moa”ﬂ’Ÿr ,iÜv=Q€¶9H…7am›SÀß÷a¬ø‚É´‡kõï÷}(Q∞âJQ§öl»∑Ji©◊‹¡~—Ip™∂≠ªrGc˙¶÷¢¶ÜÏ®Dõc∂≤iâ«FÜz?Ë≈!’{˘#-≈AÀøL»Ô±ú¸"KIän„¶v[—SyëÖù’“€=s5Û<ÆT≤RGj¿™ï“é⁄ôg^2å˚7Ö—‹uÖúá∆ZWÖ¬ø›èåõ-Î¥Óœ'”µ^i˙§ß$gsœMO∂ﬁVóz˜ÈRMÙwOÖ∆ÿÒéÌB	—v„#Vx"&6æ ±ån™‰Ö⁄G3bè§…ë3_q@Øòe…"ËB!%ä-`Ÿ7âAâ*◊a<îh`RÔ÷Gô†Ä@ÓÅw>ú‡SP8ïõf3'9xá6ŒN√_≤ı=GS∂‡Â€a=*◊í,Œ7Z>@B1§¬Vúø$]Qùjy“”⁄¡îé{%qD´jÊ‘∆ﬂ#öñu≈1Çf0Çb0Åï0~10	UUS10U
Washington10URedmond10U
Microsoft Corporation1(0&UMicrosoft Code Signing PCA 20103  9ˆzgm† Ø    90	`ÜHe †ÅÆ0	*ÜHÜ˜	1
+Ç70
+Ç710
+Ç70/	*ÜHÜ˜	1" ±wπjâmçáΩ˚Ì€\ã‡b_ *a$¶\„Ø"£ä…0B
+Ç71402†Ä M i c r o s o f t°Ähttp://www.microsoft.com0	*ÜHÜ˜ Ç 8"A@º,Ød≥˚«köÕ]é~T»Ø¸ú•¿C`¥aú—˘Ó*}≥˝®dÕ"ı·#2‹1øBm1≤◊~@]∆Ù∑\ÏèÎÈ„‘J”Ää.rltMä≤¡ÏÒ˙˘p•3ùYc&uöÎÏ‡Gï+V;Ã	j\ ’ì3K9$û50/ÄŒ‹Ä‰◊sÑ‹\u'˚fèªY¡®:5ı0œt{ÍpËÆJ"éhrEÄ
‰Ò*î’»íâ3@¬ =çhpòÿ¿´‘Ωu˜w¿mö9{#?˜^;1ênd=≥îÃ™G¨˚˘OÈi¬o:O[*2àâNŸ¶+N&ùÍR{¢;)‰°Ç0ÇÏ
+Ç71Ç‹0Çÿ	*ÜHÜ˜†Ç…0Ç≈10	`ÜHe 0ÇT*ÜHÜ˜	†ÇCÇ?0Ç;
+ÑY
010	`ÜHe  ß;1◊µlC>8ç˝†»ıÛv#lõæ_ÂF–ÛCú˛ÜÛaÇlã±20211116144821.19Z0ÄÙ†Å‘§Å—0ÅŒ10	UUS10U
Washington10URedmond10U
Microsoft Corporation1)0'U Microsoft Operations Puerto Rico1&0$UThales TSS ESN:32BD-E3D5-3B1D1%0#UMicrosoft Time-Stamp Service†ÇD0Çı0Ç›†3  b–˛ÛÂÕI    b0	*ÜHÜ˜ 0|10	UUS10U
Washington10URedmond10U
Microsoft Corporation1&0$UMicrosoft Time-Stamp PCA 20100210114190222Z220411190222Z0ÅŒ10	UUS10U
Washington10URedmond10U
Microsoft Corporation1)0'U Microsoft Operations Puerto Rico1&0$UThales TSS ESN:32BD-E3D5-3B1D1%0#UMicrosoft Time-Stamp Service0Ç"0	*ÜHÜ˜ Ç 0Ç
Ç ÔÜ°‘ˆπ¬˜2ΩÉBÀˆ≥[JÚ≤ñP´ThôòUr◊ F˛õúÇJ‹Ê/mª¿òÏjVWê6a∆⁄e^Hs	Ωºs ø≤O›±B∑¶`ÔíU#N^®∂ÊB ∫P“)rÕ›—ÌCóbä˜blÈ4ˇJ—≈Oe˚ˆ1yæeU4DDºs#‰]È{˘AÈ*v M÷¸»›Ú»Ó˚›>WâÛ`/ôYn“ùÖô@JïZòÔ˘·®ÖyPi oòŒ”∑.–3≈b?\-·R*_IéÍã2˚¡H>z¶/L£=ƒDöM-ámX~i—gn¬Œ7®“(–‰4ô-Æıü) £Ç0Ç0UÀƒJ`JC∑:|‡Vïìvê˛*k0U#0Ä’c:\ä1êÛC{|F≈3hZÖmU0VUO0M0K†I†GÜEhttp://crl.microsoft.com/pki/crl/products/MicTimStaPCA_2010-07-01.crl0Z+N0L0J+0Ü>http://www.microsoft.com/pki/certs/MicTimStaPCA_2010-07-01.crt0Uˇ0 0U%0
+0	*ÜHÜ˜ Ç -A≠√°v[˜ &‹U!F{àeÏáOr`¿U?5“Nqπ5oNûØñdÔn¨"9'Dt^-M:è√m.ÍÔ”Ï)‹ˇ= O©üı »—T}‰u
ÿﬁÕÇô÷YÌ˚çAhÏ…˚M2˘ß™º≠—ZÃ∂•ÖË¢ú|Ÿ˛‚X=˝.Ò4Ø’ó µ–pya∑AMßÚ=I≤(z`∆˜¥T,«æ≠Æ~)‹„"aã’j§ Dß©l3bâxvj4˛ù.CØ≥U°Çà0â⁄AVcK Ãf´ ˜‚Õ}Ø<ãÇCÑ≥ëÚÒAêﬂ≥^N≈’ﬁCV¶‰A0Çq0ÇY†
a	Å*     0	*ÜHÜ˜ 0Åà10	UUS10U
Washington10URedmond10U
Microsoft Corporation1200U)Microsoft Root Certificate Authority 20100100701213655Z250701214655Z0|10	UUS10U
Washington10URedmond10U
Microsoft Corporation1&0$UMicrosoft Time-Stamp PCA 20100Ç"0	*ÜHÜ˜ Ç 0Ç
Ç ©ºwä: Ï¸óı˙iîktT’•
 ÇÖ˚Ì|hK,_≈√Âa¬v∑>f+[S'1AïŒ	é|a0Y±0DÒ`àÑTC◊M∏8≥B›ì¨÷s0W&Ç£E–ÍıGÅÕø$`2X`FÚXGÜ2Ñtagë_ÅT±œìLí¡ƒ¶]—an(∆˘ÜÄªﬂa¸F¡'$gr!äØKdâPb±]˝w=Wu¨ΩäBM@Q—ú>gıf¿ñD~Ô–K˝nÂö ±®Úz*
1⁄Në∂à5Ëx∞ÈôÕ<Á/D∫ßÙ‹dΩ§¡ 	ìxÕ¸º¿…D]^úO"M £ÇÊ0Ç‚0	+Ç7 0U’c:\ä1êÛC{|F≈3hZÖmU0	+Ç7
 S u b C A0UÜ0Uˇ0ˇ0U#0Ä’ˆVÀèË¢\bh—=îê[◊Œöƒ0VUO0M0K†I†GÜEhttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z+N0L0J+0Ü>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0Å†U ˇÅï0Åí0Åè	+Ç7.0ÅÅ0=+1http://www.microsoft.com/PKI/docs/CPS/default.htm0@+042  L e g a l _ P o l i c y _ S t a t e m e n t . 0	*ÜHÜ˜ Ç ÊàQ‚∆‡ò?Åq=ù£°!o≥Î¶Ãı1æœ‚©˛˙Wm0≥¬≈f…jﬂıÁxΩ«®û%„˘ºÌkTW+QÇD˚πSåÃÙ`ävÃ@@Aõ‹\ˇ\˘^5ò$VKtÔB»Øø∆Ú7}Z?ÚôyJëR Ø8ı/yÅeŸ©µk‰«Œˆ z oK0D$"<œÌ•ñèY)º∂˝·pü2J'˝UØ/˛∂Âé3ªb_ö€W@ÈÒŒôfêåˇjb›≈Jë&‚9ÏJqcù{!m√ú£¢<˙}ñjêx¶m“·ú˘¸8ÿîÙ∆•
ñÜ§ΩûÆBÉ∏µÄõ"8 µ%ÂdÏ˜Ùø~cY%z.9Wv¢q™äâ∫aßÀöÿGöÄ≈–Õß–Ô}É·;q	ﬂ]tò"a⁄∞PoΩÒ· ﬂÁ1§ì:˜eGxË¯®H´˜ﬁr~akow©ÅÀß	¨9ªÏ∆ÀÿÇ¥rÕÙ∏ÖÄ˚â*T9≤[⁄»Uôzás;Êò-Íç‡3.)ı¿/T'!˜»¨N⁄(∏±©€ñ≤ßB¢…œAM‡Ü˘*ö£f0”ªt2Kﬂc{ıôä/«!ØYµÆ‹D<óPq◊°“≈U„iﬁW¡—ﬁ0¿˝ÃÊM˚ø]OÈù8/ºœX.Ô†P5⁄Ô	'’≥~5∫⁄6€”_èﬁtàI°Ç“0Ç;0Å¸°Å‘§Å—0ÅŒ10	UUS10U
Washington10URedmond10U
Microsoft Corporation1)0'U Microsoft Operations Puerto Rico1&0$UThales TSS ESN:32BD-E3D5-3B1D1%0#UMicrosoft Time-Stamp Service¢#
0+ ö≥˙
€œF±ÓŒ{üìËßuBÚ†ÅÉ0ÅÄ§~0|10	UUS10U
Washington10URedmond10U
Microsoft Corporation1&0$UMicrosoft Time-Stamp PCA 20100	*ÜHÜ˜  Â=ß
0"20211116074202Z20211117074202Z0w0=
+ÑY
1/0-0
 Â=ß
 0
 (˚ˇ0 T0
 Â>¯ä 06
+ÑY
1(0&0
+ÑY
†
0 ° °
0 Ü†0	*ÜHÜ˜ ÅÅ |c>˙ö|÷≠Ó7%≥-{·yπr\&˙da≥ÉõrŸ	¿…L9&“a$a%“ÔÂÀmÈ≈e.V∞QQﬂfû™ÁÔ'K∆_>2W˙¡`∑Ùd7¡¨Ë,ò¨˝OnäCæ‡	ÿ6E|ØÊl;kDWc‹l]ªLˆyc@∂EÒ1Ç0Ç	0Åì0|10	UUS10U
Washington10URedmond10U
Microsoft Corporation1&0$UMicrosoft Time-Stamp PCA 20103  b–˛ÛÂÕI    b0	`ÜHe †ÇJ0	*ÜHÜ˜	1*ÜHÜ˜	0/	*ÜHÜ˜	1" I ´7‚∞ójXlç'	3JﬁT¶PΩ"ﬁ1UΩ·I0Å˙*ÜHÜ˜	/1ÅÍ0ÅÁ0Å‰0ÅΩ ä™ï˚<∫TÏ4AÏ»πÔ∫X∞h‡f™∂©S
20Åò0ÅÄ§~0|10	UUS10U
Washington10URedmond10U
Microsoft Corporation1&0$UMicrosoft Time-Stamp PCA 20103  b–˛ÛÂÕI    b0" ˛ïC„OÓ·5·5R[”∏j|Áﬂ•ı≥‰¯◊g^%	ü0	*ÜHÜ˜ Ç yÕZ¬∫ÊICˇ3¿ﬂ3¿mtÃŸ≥&}4∂R¥d„«˛6î	<0 L†˛4∑[:9˘@£cﬂ¿ÈÁ8Béöå ùà%†NUÔ>Ñ¡¸π¥!û©…®>ilÃ7C™W*ùŸlΩ‘¯w,˙ƒ¥÷‰€QS@ª	+≥Ù´j®‘€L €¸ﬁ≤;¶Ì@‹ÿn%–4∏vîdˆÕ„î8èL˚kà‰]àQgë¶ú¢à6öá≥R!@w\S¡Påú•’ªjª¬ﬁ$„.Ö‡t˚ªé$ã√Ω∏≈p¯«ëˆΩ£E™ßÁ6o^‡¿KdËÜxÈUi6¸‚’mß<aßˇR∆VÏ                                                                                                                                               a
    +zËaTk  „                   @  s∫  d Z ddlmZ ddlmZ ddlmZmZmZmZm	Z	 ddl
ZddlmZmZmZmZ ddlmZmZmZmZ ddlmZmZ dd	lmZ dd
lmZmZmZ ddl m!Z!m"Z"m#Z#m$Z$m%Z% ddl&m'Z' ddl(m)Z)m*Z*m+Z+ ddl,m-Z- ddl.m/  m0Z1 ddl2m/  m3  m4Z5 ddl2m6Z6m7Z7 ddl8m9Z9m:Z:m;Z; ddl<m=Z= ddl>m?Z? eêr`ddl@mAZA eBe5jCÉZCedddçZDe:g d¢e-ddçe:g d¢e-ÉG ddÑ de9ÉÉÉZEG ddÑ deEÉZFdS )z;
Base and utility classes for tseries type pandas objects.
È    )⁄annotations)⁄datetime)⁄TYPE_CHECKING⁄Any⁄Sequence⁄TypeVar⁄castN)⁄NaT⁄	Timedelta⁄iNaT⁄lib)⁄
BaseOffset⁄NaTType⁄
Resolution⁄Tick)⁄Callable⁄final)⁄function)⁄Appender⁄cache_readonly⁄doc)⁄is_categorical_dtype⁄is_dtype_equal⁄
is_integer⁄is_list_like⁄is_period_dtype)⁄concat_compat)⁄DatetimeArray⁄PeriodArray⁄TimedeltaArray)⁄DatetimeLikeArrayMixin)⁄Index⁄_index_shared_docs)⁄NDArrayBackedExtensionIndex⁄inherit_names⁄make_wrapped_arith_op)⁄
Int64Index)⁄to_timedelta)⁄CategoricalIndex⁄_T⁄DatetimeIndexOpsMixin)⁄bound)Zinferred_freq⁄_resolution_obj⁄
resolutionT)⁄cache)⁄mean⁄asi8⁄freq⁄freqstrc                      s‰  e Zd ZU dZdZdZded< ded< ded< d	ed
< g Zded< g Zded< e	e
jjÉZeZeddúddÑÉZeddúddÑÉZdwá fddÑ	ZdddúddÑZeejjÉdddúddÑÉZeed e Édxd"d#ÑÉZd!ZeZd$ed%< á fd&d'ÑZd(dúd)d*ÑZdyd+d,ÑZdzd-d.ÑZd{d/d0ÑZ d|d1d2ÑZ!d}dd4d5ddd6úd7d8ÑZ"d~dd5ddd9úd:d;ÑZ#ed<d=Ñ ÉZ$á fd>d?ÑZ%dd5dúd@dAÑZ&d	dBúdCdDÑZ'd	dEdFúdGdHÑZ(e)d	dEdFúdIdJÑÉZ*e+dKÉZ,e+dLÉZ-e+dMÉZ.e+dNÉZ/e+dOÉZ0e+dPÉZ1e+dQÉZ2e+dRÉZ3e+dSÉZ4e+dTÉZ5e+dUÉZ6e+dVÉZ7e+dWÉZ8e+dXÉZ9e+dYÉZ:e+dZÉZ;dÄd\d]d\d^úd_d`ÑZ<dadbúdcddÑZ=d]dbúdedfÑZ>e?e@jAÉd\d\dgúá fdhdiÑÉZAe?e@jBÉd]dbúá fdjdkÑÉZBdldmÑ ZCá fdndoÑZDddúdpdqÑZEddrúdsdtÑZFe?ejGÉdudvÑ ÉZGá  ZHS )År*   zM
    Common ops mixin to support a unified interface datetimelike Index.
    Fz,DatetimeArray | TimedeltaArray | PeriodArray⁄_datazBaseOffset | Noner1   z
str | Noner2   r   r,   z	list[str]⁄	_bool_ops⁄
_field_ops⁄bool©⁄returnc                 C  s   dS ©NT© ©⁄selfr:   r:   ˙rC:\__w\1\s\PoirotService\client\build\VsPoirotZipTemp\python\Lib\site-packages\pandas/core/indexes/datetimelike.py⁄_is_all_datesg   s    z#DatetimeIndexOpsMixin._is_all_datesz
np.ndarrayc                 C  s   | j jS ©N)r3   ⁄_ndarrayr;   r:   r:   r=   ⁄valuesn   s    zDatetimeIndexOpsMixin.valuesNc                   s2   t É j||dç}t|tÉr.| jdur.|†d°}|S )z@
        Gets called after a ufunc and other functions.
        )⁄contextN⁄infer)⁄super⁄__array_wrap__⁄
isinstance⁄DatetimeTimedeltaMixinr1   ⁄
_with_freq)r<   ⁄resultrB   ⁄out©⁄	__class__r:   r=   rE   s   s    
z$DatetimeIndexOpsMixin.__array_wrap__r   ©⁄otherr8   c              
   C  sŒ   | † |°rdS t|tÉsdS |jjdv r,dS t|t| ÉÉs¨d}| jj}|jtkr\|j	|v }n t
|jÉr|td|É}|jj	|v }|r¨zt| É|É}W n tttfy™   Y dS 0 t| j|jÉsædS t†| j|j°S )zL
        Determines if two Index objects contain the same elements.
        TF)⁄f⁄i⁄u⁄cr(   )⁄is_rF   r!   ⁄dtype⁄kind⁄typer3   ⁄_infer_matches⁄objectZinferred_typer   r   ⁄
categories⁄
ValueError⁄	TypeError⁄OverflowErrorr   ⁄npZarray_equalr0   )r<   rN   Z
should_tryZ	inferabler:   r:   r=   ⁄equals~   s,    




zDatetimeIndexOpsMixin.equals)⁄keyr8   c              
   C  s6   t |É z| †|° W n tttfy0   Y dS 0 dS )NFT)⁄hashZget_loc⁄KeyErrorr[   rZ   )r<   r_   r:   r:   r=   ⁄__contains__¢   s    z"DatetimeIndexOpsMixin.__contains__⁄taker   Tc           	      K  sh   t †d|° tj|tjdç}t†|t| É°}tj	| ||||fi |§é}t
|tÉrd| j†|°}||j_|S )Nr:   ©rT   )⁄nvZvalidate_taker]   ⁄asarray⁄intpr   ⁄maybe_indices_to_slice⁄lenr#   rc   rF   ⁄slicer3   Z_get_getitem_freq⁄_freq)	r<   ⁄indices⁄axisZ
allow_fillZ
fill_value⁄kwargsZmaybe_slicerI   r1   r:   r:   r=   rc   ´   s    
ˇˇ
zDatetimeIndexOpsMixin.taker   ⁄	_na_valuec                   s    t †t|É†° °}tÉ †||°S r?   )r]   rf   r'   Zto_numpyrD   ⁄_convert_tolerance)r<   Z	tolerance⁄targetrK   r:   r=   rp   ø   s    z(DatetimeIndexOpsMixin._convert_tolerance⁄listc                 C  s   t | †t°ÉS )z7
        Return a list of the underlying data.
        )rr   ZastyperX   r;   r:   r:   r=   ⁄tolist√   s    zDatetimeIndexOpsMixin.tolistc                 O  sí   t †||° t †|° t| És$| jS | j}t|ÉrT| jrT|d tkrT| j†	|d °S | j
rp|sd| jS || j  }t|És~| jS |†° }| j†	|°S )z—
        Return the minimum value of the Index or minimum along
        an axis.

        See Also
        --------
        numpy.ndarray.min
        Series.min : Return the minimum value in a Series.
        r   )re   Zvalidate_min⁄validate_minmax_axisri   ro   r0   ⁄is_monotonic_increasingr   r3   ⁄	_box_func⁄hasnans⁄_isnan⁄min)r<   rm   ⁄skipna⁄argsrn   ⁄i8Z	min_stampr:   r:   r=   ry   …   s     

zDatetimeIndexOpsMixin.minc                 O  sX   t †||° t †|° | j}| jrP| j}|†° s4|s8dS |†° }t†	d°j
||< |†° S )z‰
        Returns the indices of the minimum values along an axis.

        See `numpy.ndarray.argmin` for more information on the
        `axis` parameter.

        See Also
        --------
        numpy.ndarray.argmin
        ÈˇˇˇˇZint64)re   Zvalidate_argminrt   r0   rw   rx   ⁄all⁄copyr]   Ziinfo⁄max⁄argmin©r<   rm   rz   r{   rn   r|   ⁄maskr:   r:   r=   rÅ   Î   s    
zDatetimeIndexOpsMixin.argminc                 O  sí   t †||° t †|° t| És$| jS | j}t|ÉrT| jrT|d tkrT| j†	|d °S | j
rp|sd| jS || j  }t|És~| jS |†° }| j†	|°S )z—
        Return the maximum value of the Index or maximum along
        an axis.

        See Also
        --------
        numpy.ndarray.max
        Series.max : Return the maximum value in a Series.
        r}   )re   Zvalidate_maxrt   ri   ro   r0   Zis_monotonicr   r3   rv   rw   rx   rÄ   )r<   rm   rz   r{   rn   r|   Z	max_stampr:   r:   r=   rÄ     s     

zDatetimeIndexOpsMixin.maxc                 O  sP   t †||° t †|° | j}| jrH| j}|†° s4|s8dS |†° }d||< |†° S )z‰
        Returns the indices of the maximum values along an axis.

        See `numpy.ndarray.argmax` for more information on the
        `axis` parameter.

        See Also
        --------
        numpy.ndarray.argmax
        r}   r   )	re   Zvalidate_argmaxrt   r0   rw   rx   r~   r   ⁄argmaxrÇ   r:   r:   r=   rÑ   $  s    
zDatetimeIndexOpsMixin.argmaxr	   zCallable | None⁄str)⁄name⁄	formatter⁄na_rep⁄date_formatr8   c                 C  sV   g }|r,|† | jdur&tj| jddçnd° |durF|t| †|°É S | j|||dçS )z>
        Render a string representation of the Index.
        N)˙	˙⁄
)Zescape_chars⁄ ©rà   râ   )⁄appendrÜ   ⁄ibaseZpprint_thingrr   ⁄map⁄_format_with_header)r<   rÜ   rá   rà   râ   ⁄headerr:   r:   r=   ⁄format>  s    
ˇ˝zDatetimeIndexOpsMixin.format)rì   rà   râ   r8   c                 C  s   |t | j||dçÉ S )Nré   )rr   Z_format_native_types)r<   rì   rà   râ   r:   r:   r=   rí   U  s    ˇz)DatetimeIndexOpsMixin._format_with_headerc                 C  s
   | j †° S r?   )r3   Z
_formatterr;   r:   r:   r=   ⁄_formatter_func\  s    z%DatetimeIndexOpsMixin._formatter_funcc                   sF   t É †° }| jD ]0}|dkr| j}|dur2t|É}|†d|f° q|S )zH
        Return a list of tuples of the (attr,formatted_value).
        r1   N)rD   ⁄_format_attrs⁄_attributesr2   ⁄reprrè   )r<   ⁄attrs⁄attribr1   rK   r:   r=   rñ   `  s    

z#DatetimeIndexOpsMixin._format_attrsc                 C  sà   | j }t| Édkr4d|| d Éõ d|| d Éõ ù}nd}|du rJt| Éj}|õ dt| Éõ d|õ ù}| jrx|d	| jõ ù7 }|†d
d°}|S )a  
        Return a summarized representation.

        Parameters
        ----------
        name : str
            Name to use in the summary representation.

        Returns
        -------
        str
            Summarized representation of the index.
        r   z, z to r}   rç   Nz: z entriesz
Freq: ˙')rï   ri   rV   ⁄__name__r1   r2   ⁄replace)r<   rÜ   rá   Zindex_summaryrI   r:   r:   r=   ⁄_summaryo  s    "
zDatetimeIndexOpsMixin._summary)⁄resoc                 C  s   t Çd S r?   ©⁄NotImplementedError)r<   rü   r:   r:   r=   ⁄_validate_partial_date_sliceê  s    z2DatetimeIndexOpsMixin._validate_partial_date_slicer   )rü   ⁄parsedc                 C  s   t Çd S r?   r†   )r<   rü   r£   r:   r:   r=   ⁄_parsed_string_to_boundsì  s    z.DatetimeIndexOpsMixin._parsed_string_to_boundsc                 C  s∆   | † |° | †||°\}}| jj}| jj}| jröt| Érl|| d k rP|| d k sh|| d krl|| d krltÇ|j||Éddç}|j||Éddç}t	||ÉS |||Ék}	|||Ék}
|	|
@ †
° d S dS )z£
        Parameters
        ----------
        reso : Resolution
        parsed : datetime

        Returns
        -------
        slice or ndarray[intp]
        r   r}   ⁄left©Zside⁄rightN)r¢   r§   r3   r@   Z_unboxru   ri   ra   ⁄searchsortedrj   Znonzero)r<   rü   r£   ⁄t1⁄t2⁄valsZunboxr•   rß   Zlhs_maskZrhs_maskr:   r:   r=   ⁄_partial_date_sliceñ  s*    

ˇ
ˇ
ˇ
ˇ
z)DatetimeIndexOpsMixin._partial_date_slice⁄__add__⁄__sub__⁄__radd__⁄__rsub__⁄__pow__⁄__rpow__⁄__mul__⁄__rmul__⁄__floordiv__⁄__rfloordiv__⁄__mod__⁄__rmod__⁄
__divmod__⁄__rdivmod__⁄__truediv__⁄__rtruediv__È   r)   ⁄int)r<   ⁄periodsr8   c                 C  s2   | j †° }| j|_|j||dç}t| É|| jdçS )ae  
        Shift index by desired number of time frequency increments.

        This method is for shifting the values of datetime-like indexes
        by a specified time increment a given number of times.

        Parameters
        ----------
        periods : int, default 1
            Number of periods (or increments) to shift by,
            can be positive or negative.
        freq : pandas.DateOffset, pandas.Timedelta or string, optional
            Frequency increment to shift by.
            If None, the index is shifted by its own `freq` attribute.
            Offset aliases are valid strings, e.g., 'D', 'W', 'M' etc.

        Returns
        -------
        pandas.DatetimeIndex
            Shifted index.

        See Also
        --------
        Index.shift : Shift values of Index.
        PeriodIndex.shift : Shift values of PeriodIndex.
        ©r1   ©rÜ   )r3   ⁄viewr1   rk   Z_time_shiftrV   rÜ   )r<   rø   r1   ⁄arrrI   r:   r:   r=   ⁄shift÷  s    
zDatetimeIndexOpsMixin.shiftzint | slice | Sequence[int])⁄locc                 C  s¨   d}t | jÉr| j}ní| jdur®t|ÉrN|dt| É dt| Éd fv r®| j}nZt|Érrt†tj	|tj
dçt| É°}t|tÉr®|jdv r®|jdv s¢|jt| Édfv r®| j}|S )z7
        Find the `freq` for self.delete(loc).
        Nr   r}   rΩ   rd   )rΩ   N)r   N)r   rT   r1   r   ri   r   r   rh   r]   rf   rg   rF   rj   ⁄step⁄start⁄stop)r<   r≈   r1   r:   r:   r=   ⁄_get_delete_freq˘  s    

ˇz&DatetimeIndexOpsMixin._get_delete_freqc                 C  s¥   | j †|°}| j †|°}d}t| jÉr.| j}nÇ| jdur∞| jrû|tu rHq∞|dks^|t| É krx|| j | d krx| j}q∞|t| Ékr∞|| j | d kr∞| j}n| j†	|°r∞| j}|S )z=
        Find the `freq` for self.insert(loc, item).
        Nr   r}   )
r3   Z_validate_scalarrv   r   rT   r1   ⁄sizer	   ri   Zis_on_offset)r<   r≈   ⁄item⁄valuer1   r:   r:   r=   ⁄_get_insert_freq  s     

(z&DatetimeIndexOpsMixin._get_insert_freq)r<   r8   c                   s   t É †|°}| †|°|j_|S r?   )rD   ⁄deleter…   r3   rk   )r<   r≈   rI   rK   r:   r=   rŒ   *  s    zDatetimeIndexOpsMixin.deletec                   s0   t É †||°}t|t| ÉÉr,| †||°|j_|S r?   )rD   ⁄insertrF   rV   rÕ   r3   rk   )r<   r≈   rÀ   rI   rK   r:   r=   rœ   0  s    zDatetimeIndexOpsMixin.insertc                 C  s4   t | jÉr| j}ntt| É} | †|°r,| jnd}|S )zK
        Get the freq to attach to the result of a join operation.
        N)r   rT   r1   r   rG   ⁄_can_fast_union)r<   rN   r1   r:   r:   r=   ⁄_get_join_freq;  s
    

z$DatetimeIndexOpsMixin._get_join_freqc                   s<   |j | j ksJ |j | j fÉÇtÉ †||°}| †|°|j_|S r?   )rT   rD   ⁄_wrap_joined_indexr—   r3   rk   )r<   ZjoinedrN   rI   rK   r:   r=   r“   F  s    z(DatetimeIndexOpsMixin._wrap_joined_indexc                 C  s   | j j†d°S )Nr|   )r3   r@   r¬   r;   r:   r:   r=   ⁄_get_join_targetL  s    z&DatetimeIndexOpsMixin._get_join_target)rI   c                 C  s   |† | jjj°}| j†|°S r?   )r¬   r3   r@   rT   Z_from_backing_data)r<   rI   r:   r:   r=   ⁄_from_join_targetO  s    z'DatetimeIndexOpsMixin._from_join_targetc              	   C  sD   z| j j|ddç}W n  ttfy4   t†|°}Y n0 t||jdçS )NT)Zallow_objectrd   )r3   Z_validate_listlikerZ   r[   ⁄comZasarray_tuplesafer!   rT   )r<   Zkeyarr⁄resr:   r:   r=   ⁄_maybe_cast_listlike_indexerV  s
    z2DatetimeIndexOpsMixin._maybe_cast_listlike_indexer)N)r   TN)NT)NT)NT)NT)FNr	   N)r	   N)N)rΩ   N)Irú   ⁄
__module__⁄__qualname__⁄__doc__Z_is_numeric_dtypeZ_can_hold_strings⁄__annotations__r4   r5   r   r    Z_hasnans⁄fgetrw   ⁄propertyr>   rA   rE   r^   r   r!   rb   r"   ⁄_index_doc_kwargsrc   Z_can_hold_nar	   ro   rp   rs   ry   rÅ   rÄ   rÑ   rî   rí   rï   rñ   rû   r¢   r§   r   r¨   r%   r≠   rÆ   rØ   r∞   r±   r≤   r≥   r¥   rµ   r∂   r∑   r∏   rπ   r∫   rª   rº   rƒ   r…   rÕ   r   r#   rŒ   rœ   r—   r“   r”   r‘   r◊   ⁄__classcell__r:   r:   rK   r=   r*   M   sñ   
ˇ$

"

"
    ˚ ˇ
!.#
c                   @  s‚   e Zd ZU dZded< ddgZddgZejZ	ej
ZejZddÑ Zedd	úd
dÑÉZdddúddÑZd(dddúddÑZddddúddÑZddddúddÑZd)ddddúddÑZddÑ Zd Zd*dddd"úd#d$ÑZddd%dúd&d'ÑZdS )+rG   ze
    Mixin class for methods shared by DatetimeIndex and TimedeltaIndex,
    but not PeriodIndex
    zDatetimeArray | TimedeltaArrayr3   rÜ   r1   c                 C  s    | j †|°}t| Éj|| jdçS )Nr¡   )r3   rH   rV   ⁄_simple_new⁄_name)r<   r1   r√   r:   r:   r=   rH   n  s    z!DatetimeTimedeltaMixin._with_freqr6   r7   c                 C  s   dS r9   r:   r;   r:   r:   r=   ⁄_has_complex_internalsr  s    z-DatetimeTimedeltaMixin._has_complex_internalsrÖ   )rU   r8   c                 C  s   || j jv S r?   )r3   rW   )r<   rU   r:   r:   r=   ⁄is_type_compatiblew  s    z)DatetimeTimedeltaMixin.is_type_compatibleFr!   rM   c           	      C  sË   t d|É}t| Édkr$| †° †|°S t|Édkr>|†° †| °S | †|°sttj| ||dç}| †||°}|†d°†d°S | d |d krê| | }}n
||  }}t	|d |d É}|d }||k r | ddÖ }nt
|†||°é }|j| }|S )zL
        intersection specialized to the case with matching dtypes.
        rG   r   ©⁄sortNrC   r}   )r   ri   r   Z_get_reconciled_name_object⁄_can_fast_intersectr!   ⁄_intersectionZ_wrap_setop_resultrH   ry   rj   Z
slice_locs⁄_values)	r<   rN   rÂ   rI   r•   rß   ⁄endr«   ⁄lslicer:   r:   r=   rÁ   }  s&    



z$DatetimeTimedeltaMixin._intersectionr)   )r<   rN   r8   c                 C  s~   | j d u rdS |j | j krdS | js(dS | j †° r>| j jdkS t| j tÉrr| d |d  }|| j j }|tdÉkS | j jdkS )NFrΩ   r   )r1   ru   Zis_anchored⁄nrF   r   ⁄deltar
   )r<   rN   ⁄diff⁄	remainderr:   r:   r=   rÊ   §  s    

z*DatetimeTimedeltaMixin._can_fast_intersectc                 C  så   | j }|d u s||j krdS | js&dS t| Édks>t|ÉdkrBdS | d |d kr^| | }}n
||  }}|d }|d }||| kpä||v S )NFr   Tr}   )r1   ru   ri   )r<   rN   r1   r•   rß   Zright_start⁄left_endr:   r:   r=   r–   ¿  s    
z&DatetimeTimedeltaMixin._can_fast_unionNc                 C  s2  t |Édkr| †t| É°S t | Édkr4|†t| É°S | d |d krP| | }}np|du r∂| | }}|d }|j|ddç}|jd |Ö }t|j|fÉ}t| Éj|| jdç}	|	†d°}	|	S ||  }}|d }
|d }|
|k êr*|j|
ddç}|j|d Ö }t|j|gÉ}t| j	É|| j
d	ç}t| É†|°}	|	S |S d S )
Nr   Fr•   r¶   r¡   rC   r}   rß   r¿   )ri   r¬   rV   r®   rË   r   r‡   rÜ   rH   r3   r1   )r<   rN   rÂ   r•   rß   Z
left_startr≈   Zright_chunk⁄datesrI   rÔ   Z	right_endr:   r:   r=   ⁄_fast_union›  s4    



z"DatetimeTimedeltaMixin._fast_unionc                 C  sÄ   t |t| ÉÉsJ Ç| j|jks"J Ç| †|°r>| j||dç}|S t†| j°}t†|j°}|j||dç}t| É|| jddç}|S d S )Nr‰   rC   )rT   r1   )	rF   rV   rT   r–   rÒ   r&   r‡   r0   ⁄_union)r<   rN   rÂ   rI   Zi8selfZi8otherZi8resultr:   r:   r=   rÚ   	  s    
zDatetimeTimedeltaMixin._unionÈ
   r•   )⁄how⁄return_indexersrÂ   c                 C  sR   | † |°\}}|| us||ur2|j|||||dçS | †|° tj| |||||dçS )z 
        See Index.join
        )rÙ   ⁄levelrı   rÂ   )Z_maybe_promote⁄join⁄_maybe_utc_convertr!   )r<   rN   rÙ   rˆ   rı   rÂ   ZpselfZpotherr:   r:   r=   r˜     s    
ˇ
˙zDatetimeTimedeltaMixin.joinztuple[_T, Index]c                 C  s   | |fS r?   r:   )r<   rN   r:   r:   r=   r¯   9  s    z)DatetimeTimedeltaMixin._maybe_utc_convert)F)N)r•   NFF)rú   rÿ   rŸ   r⁄   r€   Z_comparablesró   r!   ru   Z_is_monotonic_increasingZis_monotonic_decreasingZ_is_monotonic_decreasingZ	is_uniqueZ
_is_uniquerH   r›   r‚   r„   rÁ   rÊ   r–   rÒ   rÚ   Z_join_precedencer˜   r¯   r:   r:   r:   r=   rG   _  s.   
',    ˙rG   )Gr⁄   ⁄
__future__r   r   ⁄typingr   r   r   r   r   Znumpyr]   Zpandas._libsr	   r
   r   r   Zpandas._libs.tslibsr   r   r   r   Zpandas._typingr   r   Zpandas.compat.numpyr   re   Zpandas.util._decoratorsr   r   r   Zpandas.core.dtypes.commonr   r   r   r   r   Zpandas.core.dtypes.concatr   Zpandas.core.arraysr   r   r   Zpandas.core.arrays.datetimeliker    Zpandas.core.common⁄core⁄commonr’   Zpandas.core.indexes.baseZindexes⁄baserê   r!   r"   Zpandas.core.indexes.extensionr#   r$   r%   Zpandas.core.indexes.numericr&   Zpandas.core.tools.timedeltasr'   Zpandasr(   ⁄dictrﬁ   r)   r*   rG   r:   r:   r:   r=   ⁄<module>   sF   
˝                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   a
    zËa(d  „                   @   s@  d dl Z d dlZd dlZd dlZd dlZd dlmZ d dlm	Z	m
Z
mZmZmZ ejd Zd ZdZdZd dlmZ d dlmZ d d	lmZ d d
lmZ d dlZG ddÑ deÉZejjjZG ddÑ deÉZ d dl!m"Z" G ddÑ de"ÉZ#d dl$m%Z% G ddÑ de%ÉZ&ze †'° †(e)° W n e*êy&   Y n0 e&É Z)e †'° †+e)° dS )È    N)⁄bindings)⁄GetEditorOption⁄SetEditorOption⁄GetEditorFontOption⁄SetEditorFontOption⁄defaultCharacterFormatiœ  È   È   )⁄dbgcon)⁄CScintillaDocument)⁄EditorDocumentBase)⁄scintillaconc                   @   s(   e Zd ZdZddÑ ZddÑ ZddÑ ZdS )	⁄SyntEditDocumentzA SyntEdit document.c                 C   s   | † d|° d S )N⁄OnDebuggerStateChange)Z_ApplyOptionalToViews©⁄self⁄state© r   ˙ÑC:\__w\1\s\PoirotService\client\build\VsPoirotZipTemp\python\Lib\site-packages\pythonwin/pywin/framework/editor/color/coloreditor.pyr   (   s    z&SyntEditDocument.OnDebuggerStateChangec                 C   s   t †| |° |†d° d S ©Nr   )r   ⁄HookViewNotificationsZSCISetUndoCollection©r   ⁄viewr   r   r   r   +   s    z&SyntEditDocument.HookViewNotificationsc                 C   s,   t †| |° || †° kr(| †° †|j° d S ©N)r   ⁄FinalizeViewCreationZGetFirstViewZGetDocTemplate⁄CheckIDLEMenus⁄idler   r   r   r   r   /   s    z%SyntEditDocument.FinalizeViewCreationN)⁄__name__⁄
__module__⁄__qualname__⁄__doc__r   r   r   r   r   r   r   r   %   s   r   c                   @   sˆ   e Zd ZdZddÑ ZddÑ ZddÑ Zdd	Ñ Zd
dÑ ZddÑ Z	ddÑ Z
ddÑ ZddÑ ZddÑ ZddÑ ZddÑ ZddÑ ZddÑ ZddÑ Zd d!Ñ Zd<d#d$ÑZd=d%d&ÑZd'd(Ñ Zd)d*Ñ Zd+d,Ñ Zd>d.d/ÑZd0d1Ñ Zd2d3Ñ Zd4d5Ñ Zd6d7Ñ Zd8d9Ñ Zd:d;Ñ Zd-S )?⁄SyntEditViewz2A view of a SyntEdit.  Obtains data from document.c                 C   s   t †| |° d| _d S ©Nr   )⁄SyntEditViewParent⁄__init__⁄bCheckingFile)r   ⁄docr   r   r   r$   ;   s    zSyntEditView.__init__c              
   C   s<  t †| ° | †| jtj° tjtjtj	tj
fD ] }| †| j|° | †| j|° q.| †| jtj° | †ttjt†ddd°t†ddd°° | †ttj° | †tt†ddd°° | †tjtjt†ddd°t†ddd°° | †tjtjt†ddd°t†ddd°° | †tjtj t†ddd°t†ddd°° | †tj!tj t†ddd°t†ddd°° | †tj"tj t†ddd°t†ddd°° | †tj#tj t†ddd°t†ddd°° | †tj$tj t†ddd°t†ddd°° | †t%tj&° | †'t%t†ddd°° z,dd l(}|j)j*d u êrt+j,}n
|j)j*j-}W n t.êy,   t+j,}Y n0 | †/|° d S )Nr   Èˇ   )0r#   ⁄OnInitialUpdate⁄HookMessage⁄OnRClick⁄win32conZWM_RBUTTONDOWN⁄win32ui⁄ID_VIEW_FOLD_COLLAPSE⁄ID_VIEW_FOLD_COLLAPSE_ALL⁄ID_VIEW_FOLD_EXPAND⁄ID_VIEW_FOLD_EXPAND_ALL⁄HookCommand⁄OnCmdViewFoldZHookCommandUpdate⁄OnUpdateViewFold⁄OnCmdViewFoldTopLevelZID_VIEW_FOLD_TOPLEVELZSCIMarkerDefineAll⁄MARKER_BOOKMARKr   ZSC_MARK_ROUNDRECT⁄win32api⁄RGBZSCIMarkerDefine⁄MARKER_CURRENTZSC_MARK_ARROW⁄SCIMarkerSetBackZSC_MARKNUM_FOLDEROPENZSC_MARK_MINUSZSC_MARKNUM_FOLDERZSC_MARK_PLUSZSC_MARKNUM_FOLDERSUBZSC_MARK_EMPTYZSC_MARKNUM_FOLDERTAILZSC_MARKNUM_FOLDERENDZSC_MARKNUM_FOLDEROPENMIDZSC_MARKNUM_FOLDERMIDTAIL⁄MARKER_BREAKPOINTZSC_MARK_CIRCLEZSCIMarkerSetFore⁄pywin.debuggerZdebuggerZcurrentDebuggerr
   ⁄DBGSTATE_NOT_DEBUGGINGZdebuggerState⁄ImportErrorr   )r   ⁄id⁄pywinr   r   r   r   r(   ?   så    
¸¸¸¸¸¸¸¸¸2zSyntEditView.OnInitialUpdatec                 C   s   dgS )N⁄editorr   ©r   r   r   r   ⁄_GetSubConfigNames¬   s    zSyntEditView._GetSubConfigNamesc              	   C   s"  t †| ° tdddÉ}tdddÉ}tddÉ}tddÉ}| j†d	°}| †td
dÉ° | †tddÉ° | †tddÉ° tddÉrÑtj	}ntj
}| †|° | †tddÉ° | †tdt†ddd°É° tddÉ}| †d|° tddÉ}| †d|° tddÉ}| †d|° tddÉ| _d}| †tjtj° | jêr8tddÉêr8d}| †d| j° | †|° tdt†ddd°É}	| †tjd|	° tddÉ}
|
êrê| †dd° |êr˙|jdddd ç |†d° |jdkêr∆d}|}n"| †° dkêrﬁ|}|}n
|j}d}|j|||d!ç n|j|||d ç | †|° | †|° d S )"NzTab SizeÈ   r	   zIndent SizezUse Tabsr   z
Smart Tabsr   Z
AutoIndentzView WhitespacezView EOLzView Indentation GuideszRight Edge EnabledzRight Edge ColumnÈK   zRight Edge ColorÈÔ   zMarker Margin WidthÈ   zFold Margin WidthÈ   zLine Number Margin WidthzEnable Foldingz
Fold Lines⁄foldzTab Timmy Colorr'   zUse Tab Timmyztab.timmy.whinge.level⁄1È   )⁄usetabs⁄tabwidth⁄indentwidth)rK   rM   rL   )r#   ⁄DoConfigChanger   r   ZIDLEExtensionZSCISetViewWSZSCISetViewEOLZSCISetIndentationGuidesr   ZEDGE_BACKGROUNDZ	EDGE_NONEZSCISetEdgeModeZSCISetEdgeColumnZSCISetEdgeColorr6   r7   ZSCISetMarginWidthN⁄bFoldingZSendScintillaZSCI_SETMODEVENTMASKZSC_MOD_CHANGEFOLDZSCISetPropertyZSCISetFoldFlagsZSCI_INDICSETFORE⁄configZset_indentation_paramsrM   ⁄GetTextLengthZSCISetIndentZSCISetTabWidth)r   ZtabSizeZ
indentSizeZbUseTabsZ
bSmartTabs⁄ext⁄mode⁄widthZ
fold_flagsZtt_colorZtt_userK   rM   r   r   r   rN   ≈   sj    




ˇ


ˇ



zSyntEditView.DoConfigChangec                 C   s<   |t jkr"| †tt†ddd°° n| †tt†ddd°° d S )NrE   r'   ÈÄ   )r
   r<   r9   r:   r6   r7   r   r   r   r   r     s    
z"SyntEditView.OnDebuggerStateChangec                 C   s   t †| ° | †| jt° d S r   )r#   ⁄HookDocumentHandlersr)   ⁄OnCheckExternalDocumentUpdated⁄MSG_CHECK_EXTERNAL_FILErA   r   r   r   rV   "  s    
z!SyntEditView.HookDocumentHandlersc                 C   s   t †| ° | †| jtj° d S r   )r#   ⁄HookHandlersr)   ⁄
OnSetFocusr+   ZWM_SETFOCUSrA   r   r   r   rY   &  s    
zSyntEditView.HookHandlersc                 C   s   | † ° | †° fS r   )⁄GetSel⁄GetFirstVisibleLinerA   r   r   r   ⁄_PrepareUserStateChange*  s    z$SyntEditView._PrepareUserStateChangec                 C   sX   |d | † °  }|r| †|° | †° }t|d d |Ét|d d |Éf}| †|° d S ©Nr   r   )r\   Z
LineScrollrQ   ⁄minZSetSel)r   ⁄infoZ	scrollOff⁄maxZnewPosr   r   r   ⁄_EndUserStateChange-  s    
$z SyntEditView._EndUserStateChangec                 C   s>   | † |°}|jdkr:| †|j°}| †|°tj@ r:| †|° dS )Nr	   r   )ZSCIUnpackNotifyMessage⁄margin⁄LineFromChar⁄position⁄SCIGetFoldLevelr   ⁄SC_FOLDLEVELHEADERFLAG⁄SCIToggleFold)r   Zstd⁄extra⁄notifyZ
line_clickr   r   r   ⁄OnMarginClick9  s    


zSyntEditView.OnMarginClickc                 C   s   | † |° dS r   )rW   ©r   ⁄msgr   r   r   rZ   C  s    
zSyntEditView.OnSetFocusc                 C   s&   | j r
d S d| _ | †° †°  d| _ d S r^   )r%   ⁄GetDocumentZCheckExternalDocumentUpdatedrl   r   r   r   rW   H  s
    z+SyntEditView.OnCheckExternalDocumentUpdatedc                 C   sb  t †° }| †|dd° | j|tjdç | †|dd° | †|dd° | j|tjdç | †|dd	° | †|d
d° | †|dd° | j|tjdç | †|dd° | j|dd| †° dç | j|dd| †° jdç | j|tjdç | †|dd° t †° }| j†	d°}|D ]\}}| †|||° q˛tj
tjB tjB }|†||†° d° tjtjB tjB }|†|d || ° dS )Nz&Locate moduleZLocateModule)⁄flagsz&UndoZEditUndoz&RedoZEditRedozCu&tZEditCutz&CopyZEditCopyz&PasteZ	EditPastez&Select allZEditSelectAllzView &WhitespaceZViewWhitespace)⁄checkedz&Fixed FontZViewFixedFontz&Goto line...ZGotoLine⁄editz&Source coderJ   r   )r,   ⁄CreatePopupMenu⁄
AppendMenur+   ⁄MF_SEPARATORZSCIGetViewWSZ_GetColorizerZ	bUseFixedr   ⁄GetMenuItems⁄	MF_STRING⁄
MF_ENABLED⁄MF_POPUP⁄	GetHandleZTPM_LEFTALIGNZTPM_LEFTBUTTONZTPM_RIGHTBUTTONZTrackPopupMenu)r   ⁄params⁄menu⁄submenu⁄newitems⁄text⁄eventro   r   r   r   r*   O  s:    ˇˇˇzSyntEditView.OnRClickc                 C   sd   |t jkr| †d ° nJ|t jkr,| †d ° n4|t jkrB| †d ° n|t jkrX| †d ° nt	dÉ d S )NzUnknown collapse/expand ID)
r,   r0   ⁄FoldExpandAllEventr/   ⁄FoldExpandEventr.   ⁄FoldCollapseAllEventr-   ⁄FoldCollapseEvent⁄print©r   Zcid⁄coder   r   r   r2   r  s    



zSyntEditView.OnCmdViewFoldc                 C   s†   | j s|†d° d S |j}|tjtjfv r4|†°  nhd}| †| †° d °}| †|°t	j
@ }| †|°}|tjkr||rí|síd}n|tjkrí|rí|ríd}|†|° d S )Nr   r   )rO   ZEnableZm_nIDr,   r0   r.   rd   r[   rf   r   rg   ⁄SCIGetFoldExpandedr/   r-   )r   Zcmduir>   ⁄enable⁄linenoZfoldableZis_expandedr   r   r   r3   ~  s$    

ˇ


zSyntEditView.OnUpdateViewFoldc                 C   s   | † d ° d S r   )⁄FoldTopLevelEventrÖ   r   r   r   r4   î  s    z"SyntEditView.OnCmdViewFoldTopLevelÈˇˇˇˇc                 C   s6   |dkr| † ° \}}| †|°}| †° †|d t° dS )z6Toggle a bookmark at the specified or current positionrã   r   r   )r[   rd   rn   ZMarkerToggler5   )r   r   ⁄pos⁄end⁄	startLiner   r   r   ⁄ToggleBookmarkEventö  s
    
z SyntEditView.ToggleBookmarkEventc                 C   så   |dkr| † ° \}}| †|°d }| †° †|d t°d }|dk rV| †° †dt°d }|dk sj||d krtt†°  n| †|° | †|° dS )zMove to the next bookmarkrã   r   r   )	r[   rd   rn   ZMarkerGetNextr5   r6   ZMessageBeepZSCIEnsureVisibleZSCIGotoLine)r   r   ZfromPosrç   ré   ZnextLiner   r   r   ⁄GotoNextBookmarkEvent¢  s    


z"SyntEditView.GotoNextBookmarkEventc                 C   s"   | † ° r| †°  dS | j†d|°S )zMInsert an indent.  If no selection, a single indent, otherwise a block indentr   z<<smart-indent>>)⁄SCIAutoCActive⁄SCIAutoCCompleter   ⁄fire©r   r   r   r   r   ⁄TabKeyEvent±  s    zSyntEditView.TabKeyEventc                 C   s&   | † ° r| †°  | †°  | j†d|°S )z<Handle the enter key with special handling for auto-completez<<newline-and-indent>>)rë   rí   ZSCIAutoCCancelr   rì   rî   r   r   r   ⁄EnterKeyEvent∫  s    zSyntEditView.EnterKeyEventc                 C   s   dd l }|jj†°  d S r"   )Zpywin.framework.interactZ	frameworkZinteractZShowInteractiveWindow)r   r   r?   r   r   r   ⁄ShowInteractiveWindowEvent√  s    z'SyntEditView.ShowInteractiveWindowEventNc              	   C   sË   | j s
dS t†d° z¬| †°  | †° }t|ÉD ]$}| †|°tj@ r.| †	|° } qdq.W t†d° d S t||ÉD ]Z}| †|°}|tj
tj @ }|tj@ }|dkrn|rn|r∞| †	|°ræ|sn| †	|°rn| †|° qnW t†d° nt†d° 0 d S )Nr   rã   r   )rO   r,   ⁄DoWaitCursor⁄Colorize⁄GetLineCount⁄rangerf   r   rg   rá   ⁄SC_FOLDLEVELNUMBERMASK⁄SC_FOLDLEVELBASErh   )r   r   ZmaxLineZlineSeekZ	expanding⁄levelZlevel_noZ	is_headerr   r   r   rä   »  s<    


ˇˇˇ
ˇˇzSyntEditView.FoldTopLevelEventc              	   C   sŒ   | j s
dS t†d° | †°  tjg}t| †° ÉD ]é}| †|°}|tj	@ sJq0|tj
@ }||d krj|†|° z|†|°}W n tyê   Y  q¿Y n0 |d |d Ö }|dkr0| †|°s0| †|° q0t†d° d S ©Nr   rã   ©rO   r,   rò   rô   r   rù   rõ   rö   rf   rg   rú   ⁄append⁄index⁄
ValueErrorrá   rh   ©r   r   Zlevelsrâ   rû   Z
curr_levelZ	level_indr   r   r   ⁄FoldExpandSecondLevelEventÈ  s(    




z'SyntEditView.FoldExpandSecondLevelEventc              	   C   sŒ   | j s
dS t†d° | †°  tjg}t| †° ÉD ]é}| †|°}|tj	@ sJq0|tj
@ }||d krj|†|° z|†|°}W n tyê   Y  q¿Y n0 |d |d Ö }|dkr0| †|°r0| †|° q0t†d° d S rü   r†   r§   r   r   r   ⁄FoldCollapseSecondLevelEvent  s(    




z)SyntEditView.FoldCollapseSecondLevelEventc                 C   sX   | j s
dS t†d° | †| †° d °}| †|°tj@ rJ| †|°sJ| †	|° t†d° d S ©Nr   r   rã   ©
rO   r,   rò   rd   r[   rf   r   rg   rá   rh   ©r   r   râ   r   r   r   rÅ     s    
ˇ˛˛
zSyntEditView.FoldExpandEventc                 C   sZ   | j s
dS t†d° td| †° ÉD ](}| †|°tj@ r"| †|°s"| †	|° q"t†d° d S rß   )
rO   r,   rò   rõ   rö   rf   r   rg   rá   rh   r©   r   r   r   rÄ   (  s    
ˇ˛ˇ˛zSyntEditView.FoldExpandAllEventc                 C   sX   | j s
dS t†d° | †| †° d °}| †|°tj@ rJ| †|°rJ| †	|° t†d° d S rß   r®   r©   r   r   r   rÉ   5  s    
ˇ˛˛
zSyntEditView.FoldCollapseEventc                 C   sb   | j s
dS t†d° | †°  td| †° ÉD ](}| †|°tj@ r*| †	|°r*| †
|° q*t†d° d S rß   )rO   r,   rò   rô   rõ   rö   rf   r   rg   rá   rh   r©   r   r   r   rÇ   @  s    
ˇ˛˛z!SyntEditView.FoldCollapseAllEvent)rã   )rã   )N) r   r   r   r    r$   r(   rB   rN   r   rV   rY   r]   rb   rk   rZ   rW   r*   r2   r3   r4   rè   rê   rï   rñ   ró   rä   r•   r¶   rÅ   rÄ   rÉ   rÇ   r   r   r   r   r!   8   s<    T	
#

		
!r!   )⁄EditorFramec                   @   s   e Zd ZddÑ ZddÑ ZdS )⁄SplitterFramec                 C   s   | † | jtj° dS r   )r1   ⁄OnWindowSplitr,   ZID_WINDOW_SPLIT)r   ⁄csr   r   r   ⁄OnCreateQ  s    zSplitterFrame.OnCreatec                 C   s   | † tj°†°  dS r   )Z
GetDlgItemr,   ZAFX_IDW_PANE_FIRSTZDoKeyboardSplit)r   r>   rÜ   r   r   r   r¨   U  s    zSplitterFrame.OnWindowSplitN)r   r   r   rÆ   r¨   r   r   r   r   r´   P  s   r´   )⁄EditorTemplateBasec                   @   s@   e Zd ZejdddfddÑZddÑ ZddÑ Zdd	Ñ Zd
dÑ Z	dS )⁄SyntEditTemplateNc                 C   s@   |d u rt }|d u rt}|d u r$t}d| _t†| ||||° d S r"   )r   r!   r´   ⁄	bSetMenusrØ   r$   )r   ⁄resZmakeDocZ	makeFrameZmakeViewr   r   r   r$   ^  s    zSyntEditTemplate.__init__c                 C   sÃ   | j r
d S d| _ t†° }|†d°}tjtjB }|D ]R\}}tj†	|°}|d ur2t
jjj†|dg°}|d urv|d | }|†|||° q2| †° }	|	†d°}
|
†tjdd° |
†tjtjB tjB |†° d° d S )Nr   rq   r@   ˙	r   ⁄ z&Source Code)r±   r,   rr   ru   r+   rv   rw   r   Zevent_to_commands⁄getr?   ⁄	scintillar   ZconfigManagerZget_key_bindingrs   ZGetSharedMenuZ
GetSubMenurt   rx   ry   )r   r   r|   r}   ro   r~   r   r>   ZkeynameZmainMenuZeditMenur   r   r   r   j  s.    

ˇ
˝zSyntEditTemplate.CheckIDLEMenusc                 C   s
   t †|°S r   )r,   ZCreateDocTemplate)r   Z
resourceIdr   r   r   ⁄_CreateDocTemplateÖ  s    z#SyntEditTemplate._CreateDocTemplatec                 C   s   | † ° S r   )ZDoCreateDocrA   r   r   r   ⁄CreateWin32uiDocumentà  s    z&SyntEditTemplate.CreateWin32uiDocumentc                 C   s    ddl m} t†| °|†° g S )z Returns a list of property pagesr   )⁄configui)⁄pywin.scintillarπ   rØ   ⁄GetPythonPropertyPagesZScintillaFormatPropertyPage)r   rπ   r   r   r   rª   ã  s    ˇz'SyntEditTemplate.GetPythonPropertyPages)
r   r   r   r,   ZIDR_TEXTTYPEr$   r   r∑   r∏   rª   r   r   r   r   r∞   ]  s   
ˇ
r∞   ),r,   r+   r6   ⁄sysZpywin.scintilla.keycodesr?   r∫   r   Zpywin.framework.editorr   r   r   r   r   ZWM_USERrX   r5   r:   r8   r;   r
   Zpywin.scintilla.documentr   Zpywin.framework.editor.documentr   r   Zpywin.scintilla.viewr   r∂   r   ZCScintillaViewr#   r!   Zpywin.framework.editor.framer™   r´   Zpywin.framework.editor.templaterØ   r∞   ZGetAppZRemoveDocTemplateZeditorTemplate⁄	NameErrorZAddDocTemplater   r   r   r   ⁄<module>   sB   ˇ
    
8                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            (()=>{const e=window.chrome.webview.hostObjects.sync.external.GetPluginUrl(),s=`${e.slice(0,e.lastIndexOf("/"))}/../CommonExtensions/Platform/DiagnosticsHub/EdgeWebViews/scripts/diagnosticsHub-loader.js`,t=document.currentScript.cloneNode(!1);t.src=s,document.write(t.outerHTML)})();
// SIG // Begin signature block
// SIG // MIInqwYJKoZIhvcNAQcCoIInnDCCJ5gCAQExDzANBglg
// SIG // hkgBZQMEAgEFADB3BgorBgEEAYI3AgEEoGkwZzAyBgor
// SIG // BgEEAYI3AgEeMCQCAQEEEBDgyQbOONQRoqMAEEvTUJAC
// SIG // AQACAQACAQACAQACAQAwMTANBglghkgBZQMEAgEFAAQg
// SIG // 6JudkeWao9POVlnUJJ3ZeJI4YLvI/T8Pgnwe/+8TrNCg
// SIG // gg2BMIIF/zCCA+egAwIBAgITMwAAAlKLM6r4lfM52wAA
// SIG // AAACUjANBgkqhkiG9w0BAQsFADB+MQswCQYDVQQGEwJV
// SIG // UzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMH
// SIG // UmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBv
// SIG // cmF0aW9uMSgwJgYDVQQDEx9NaWNyb3NvZnQgQ29kZSBT
// SIG // aWduaW5nIFBDQSAyMDExMB4XDTIxMDkwMjE4MzI1OVoX
// SIG // DTIyMDkwMTE4MzI1OVowdDELMAkGA1UEBhMCVVMxEzAR
// SIG // BgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1v
// SIG // bmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlv
// SIG // bjEeMBwGA1UEAxMVTWljcm9zb2Z0IENvcnBvcmF0aW9u
// SIG // MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA
// SIG // 0OTPj7P1+wTbr+Qf9COrqA8I9DSTqNSq1UKju4IEV3HJ
// SIG // Jck61i+MTEoYyKLtiLG2Jxeu8F81QKuTpuKHvi380gzs
// SIG // 43G+prNNIAaNDkGqsENQYo8iezbw3/NCNX1vTi++irdF
// SIG // qXNs6xoc3B3W+7qT678b0jTVL8St7IMO2E7d9eNdL6RK
// SIG // fMnwRJf4XfGcwL+OwwoCeY9c5tvebNUVWRzaejKIkBVT
// SIG // hApuAMCtpdvIvmBEdSTuCKZUx+OLr81/aEZyR2jL1s2R
// SIG // KaMz8uIzTtgw6m3DbOM4ewFjIRNT1hVQPghyPxJ+ZwEr
// SIG // wry5rkf7fKuG3PF0fECGSUEqftlOptpXTQIDAQABo4IB
// SIG // fjCCAXowHwYDVR0lBBgwFgYKKwYBBAGCN0wIAQYIKwYB
// SIG // BQUHAwMwHQYDVR0OBBYEFDWSWhFBi9hrsLe2TgLuHnxG
// SIG // F3nRMFAGA1UdEQRJMEekRTBDMSkwJwYDVQQLEyBNaWNy
// SIG // b3NvZnQgT3BlcmF0aW9ucyBQdWVydG8gUmljbzEWMBQG
// SIG // A1UEBRMNMjMwMDEyKzQ2NzU5NzAfBgNVHSMEGDAWgBRI
// SIG // bmTlUAXTgqoXNzcitW2oynUClTBUBgNVHR8ETTBLMEmg
// SIG // R6BFhkNodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vcGtp
// SIG // b3BzL2NybC9NaWNDb2RTaWdQQ0EyMDExXzIwMTEtMDct
// SIG // MDguY3JsMGEGCCsGAQUFBwEBBFUwUzBRBggrBgEFBQcw
// SIG // AoZFaHR0cDovL3d3dy5taWNyb3NvZnQuY29tL3BraW9w
// SIG // cy9jZXJ0cy9NaWNDb2RTaWdQQ0EyMDExXzIwMTEtMDct
// SIG // MDguY3J0MAwGA1UdEwEB/wQCMAAwDQYJKoZIhvcNAQEL
// SIG // BQADggIBABZJN7ksZExAYdTbQJewYryBLAFnYF9amfhH
// SIG // WTGG0CmrGOiIUi10TMRdQdzinUfSv5HHKZLzXBpfA+2M
// SIG // mEuJoQlDAUflS64N3/D1I9/APVeWomNvyaJO1mRTgJoz
// SIG // 0TTRp8noO5dJU4k4RahPtmjrOvoXnoKgHXpRoDSSkRy1
// SIG // kboRiriyMOZZIMfSsvkL2a5/w3YvLkyIFiqfjBhvMWOj
// SIG // wb744LfY0EoZZz62d1GPAb8Muq8p4VwWldFdE0y9IBMe
// SIG // 3ofytaPDImq7urP+xcqji3lEuL0x4fU4AS+Q7cQmLq12
// SIG // 0gVbS9RY+OPjnf+nJgvZpr67Yshu9PWN0Xd2HSY9n9xi
// SIG // au2OynVqtEGIWrSoQXoOH8Y4YNMrrdoOmjNZsYzT6xOP
// SIG // M+h1gjRrvYDCuWbnZXUcOGuOWdOgKJLaH9AqjskxK76t
// SIG // GI6BOF6WtPvO0/z1VFzan+2PqklO/vS7S0LjGEeMN3Ej
// SIG // 47jbrLy3/YAZ3IeUajO5Gg7WFg4C8geNhH7MXjKsClsA
// SIG // Pk1YtB61kan0sdqJWxOeoSXBJDIzkis97EbrqRQl91K6
// SIG // MmH+di/tolU63WvF1nrDxutjJ590/ALi383iRbgG3zkh
// SIG // EceyBWTvdlD6FxNbhIy+bJJdck2QdzLm4DgOBfCqETYb
// SIG // 4hQBEk/pxvHPLiLG2Xm9PEnmEDKo1RJpMIIHejCCBWKg
// SIG // AwIBAgIKYQ6Q0gAAAAAAAzANBgkqhkiG9w0BAQsFADCB
// SIG // iDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0
// SIG // b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1p
// SIG // Y3Jvc29mdCBDb3Jwb3JhdGlvbjEyMDAGA1UEAxMpTWlj
// SIG // cm9zb2Z0IFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5
// SIG // IDIwMTEwHhcNMTEwNzA4MjA1OTA5WhcNMjYwNzA4MjEw
// SIG // OTA5WjB+MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2Fz
// SIG // aGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UE
// SIG // ChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSgwJgYDVQQD
// SIG // Ex9NaWNyb3NvZnQgQ29kZSBTaWduaW5nIFBDQSAyMDEx
// SIG // MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA
// SIG // q/D6chAcLq3YbqqCEE00uvK2WCGfQhsqa+laUKq4Bjga
// SIG // BEm6f8MMHt03a8YS2AvwOMKZBrDIOdUBFDFC04kNeWSH
// SIG // fpRgJGyvnkmc6Whe0t+bU7IKLMOv2akrrnoJr9eWWcpg
// SIG // GgXpZnboMlImEi/nqwhQz7NEt13YxC4Ddato88tt8zpc
// SIG // oRb0RrrgOGSsbmQ1eKagYw8t00CT+OPeBw3VXHmlSSnn
// SIG // Db6gE3e+lD3v++MrWhAfTVYoonpy4BI6t0le2O3tQ5GD
// SIG // 2Xuye4Yb2T6xjF3oiU+EGvKhL1nkkDstrjNYxbc+/jLT
// SIG // swM9sbKvkjh+0p2ALPVOVpEhNSXDOW5kf1O6nA+tGSOE
// SIG // y/S6A4aN91/w0FK/jJSHvMAhdCVfGCi2zCcoOCWYOUo2
// SIG // z3yxkq4cI6epZuxhH2rhKEmdX4jiJV3TIUs+UsS1Vz8k
// SIG // A/DRelsv1SPjcF0PUUZ3s/gA4bysAoJf28AVs70b1FVL
// SIG // 5zmhD+kjSbwYuER8ReTBw3J64HLnJN+/RpnF78IcV9uD
// SIG // jexNSTCnq47f7Fufr/zdsGbiwZeBe+3W7UvnSSmnEyim
// SIG // p31ngOaKYnhfsi+E11ecXL93KCjx7W3DKI8sj0A3T8Hh
// SIG // hUSJxAlMxdSlQy90lfdu+HggWCwTXWCVmj5PM4TasIgX
// SIG // 3p5O9JawvEagbJjS4NaIjAsCAwEAAaOCAe0wggHpMBAG
// SIG // CSsGAQQBgjcVAQQDAgEAMB0GA1UdDgQWBBRIbmTlUAXT
// SIG // gqoXNzcitW2oynUClTAZBgkrBgEEAYI3FAIEDB4KAFMA
// SIG // dQBiAEMAQTALBgNVHQ8EBAMCAYYwDwYDVR0TAQH/BAUw
// SIG // AwEB/zAfBgNVHSMEGDAWgBRyLToCMZBDuRQFTuHqp8cx
// SIG // 0SOJNDBaBgNVHR8EUzBRME+gTaBLhklodHRwOi8vY3Js
// SIG // Lm1pY3Jvc29mdC5jb20vcGtpL2NybC9wcm9kdWN0cy9N
// SIG // aWNSb29DZXJBdXQyMDExXzIwMTFfMDNfMjIuY3JsMF4G
// SIG // CCsGAQUFBwEBBFIwUDBOBggrBgEFBQcwAoZCaHR0cDov
// SIG // L3d3dy5taWNyb3NvZnQuY29tL3BraS9jZXJ0cy9NaWNS
// SIG // b29DZXJBdXQyMDExXzIwMTFfMDNfMjIuY3J0MIGfBgNV
// SIG // HSAEgZcwgZQwgZEGCSsGAQQBgjcuAzCBgzA/BggrBgEF
// SIG // BQcCARYzaHR0cDovL3d3dy5taWNyb3NvZnQuY29tL3Br
// SIG // aW9wcy9kb2NzL3ByaW1hcnljcHMuaHRtMEAGCCsGAQUF
// SIG // BwICMDQeMiAdAEwAZQBnAGEAbABfAHAAbwBsAGkAYwB5
// SIG // AF8AcwB0AGEAdABlAG0AZQBuAHQALiAdMA0GCSqGSIb3
// SIG // DQEBCwUAA4ICAQBn8oalmOBUeRou09h0ZyKbC5YR4WOS
// SIG // mUKWfdJ5DJDBZV8uLD74w3LRbYP+vj/oCso7v0epo/Np
// SIG // 22O/IjWll11lhJB9i0ZQVdgMknzSGksc8zxCi1LQsP1r
// SIG // 4z4HLimb5j0bpdS1HXeUOeLpZMlEPXh6I/MTfaaQdION
// SIG // 9MsmAkYqwooQu6SpBQyb7Wj6aC6VoCo/KmtYSWMfCWlu
// SIG // WpiW5IP0wI/zRive/DvQvTXvbiWu5a8n7dDd8w6vmSiX
// SIG // mE0OPQvyCInWH8MyGOLwxS3OW560STkKxgrCxq2u5bLZ
// SIG // 2xWIUUVYODJxJxp/sfQn+N4sOiBpmLJZiWhub6e3dMNA
// SIG // BQamASooPoI/E01mC8CzTfXhj38cbxV9Rad25UAqZaPD
// SIG // XVJihsMdYzaXht/a8/jyFqGaJ+HNpZfQ7l1jQeNbB5yH
// SIG // PgZ3BtEGsXUfFL5hYbXw3MYbBL7fQccOKO7eZS/sl/ah
// SIG // XJbYANahRr1Z85elCUtIEJmAH9AAKcWxm6U/RXceNcbS
// SIG // oqKfenoi+kiVH6v7RyOA9Z74v2u3S5fi63V4GuzqN5l5
// SIG // GEv/1rMjaHXmr/r8i+sLgOppO6/8MO0ETI7f33VtY5E9
// SIG // 0Z1WTk+/gFcioXgRMiF670EKsT/7qMykXcGhiJtXcVZO
// SIG // SEXAQsmbdlsKgEhr/Xmfwb1tbWrJUnMTDXpQzTGCGYIw
// SIG // ghl+AgEBMIGVMH4xCzAJBgNVBAYTAlVTMRMwEQYDVQQI
// SIG // EwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4w
// SIG // HAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRpb24xKDAm
// SIG // BgNVBAMTH01pY3Jvc29mdCBDb2RlIFNpZ25pbmcgUENB
// SIG // IDIwMTECEzMAAAJSizOq+JXzOdsAAAAAAlIwDQYJYIZI
// SIG // AWUDBAIBBQCgga4wGQYJKoZIhvcNAQkDMQwGCisGAQQB
// SIG // gjcCAQQwHAYKKwYBBAGCNwIBCzEOMAwGCisGAQQBgjcC
// SIG // ARUwLwYJKoZIhvcNAQkEMSIEIMyzhPbDp41yLMUp32Po
// SIG // pZpiXc5ww1qI3rTDvrXwhrI0MEIGCisGAQQBgjcCAQwx
// SIG // NDAyoBSAEgBNAGkAYwByAG8AcwBvAGYAdKEagBhodHRw
// SIG // Oi8vd3d3Lm1pY3Jvc29mdC5jb20wDQYJKoZIhvcNAQEB
// SIG // BQAEggEAq2KXvAic0LQJnNs3y1jwIZDZdRHg++1YbBo5
// SIG // yZRweZGavzg9uiSoP7UYk7SsLQ/ojH6klzH3mJeb+nJM
// SIG // LUBh1pNWjJ8tqbDQoNP73No2igtthKHj3dmfBQomA//J
// SIG // 1CQkXI+6O9V6Dh0aYe7CpbazVGAUHHVKDMV0yYuUoAob
// SIG // zlOLiVyR8PyO2OHyDuluIqPWdORNrfGD/+OUTI50czFM
// SIG // dJ/sp8Eyd08uQJPI+aJbqeNZZ9URA028Hy9gTCD4K5gM
// SIG // 46ouPUMPZWxdj/fi+dmpKMK1cIlfABRAdJvum6z7Hugw
// SIG // EGC9a485AqlYp3mDCxydWsJ5da/oTw1TIgOII5Gn/qGC
// SIG // FwwwghcIBgorBgEEAYI3AwMBMYIW+DCCFvQGCSqGSIb3
// SIG // DQEHAqCCFuUwghbhAgEDMQ8wDQYJYIZIAWUDBAIBBQAw
// SIG // ggFVBgsqhkiG9w0BCRABBKCCAUQEggFAMIIBPAIBAQYK
// SIG // KwYBBAGEWQoDATAxMA0GCWCGSAFlAwQCAQUABCBU3uLF
// SIG // zVOe/3OSnUY8nZve31TWFrlbv4bO1iJRdXNXNwIGYrGu
// SIG // k9XPGBMyMDIyMDYyOTAxMTgxMS42MjRaMASAAgH0oIHU
// SIG // pIHRMIHOMQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2Fz
// SIG // aGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UE
// SIG // ChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSkwJwYDVQQL
// SIG // EyBNaWNyb3NvZnQgT3BlcmF0aW9ucyBQdWVydG8gUmlj
// SIG // bzEmMCQGA1UECxMdVGhhbGVzIFRTUyBFU046QzRCRC1F
// SIG // MzdGLTVGRkMxJTAjBgNVBAMTHE1pY3Jvc29mdCBUaW1l
// SIG // LVN0YW1wIFNlcnZpY2WgghFfMIIHEDCCBPigAwIBAgIT
// SIG // MwAAAaP7mrOOe4ZDTwABAAABozANBgkqhkiG9w0BAQsF
// SIG // ADB8MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGlu
// SIG // Z3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMV
// SIG // TWljcm9zb2Z0IENvcnBvcmF0aW9uMSYwJAYDVQQDEx1N
// SIG // aWNyb3NvZnQgVGltZS1TdGFtcCBQQ0EgMjAxMDAeFw0y
// SIG // MjAzMDIxODUxMTZaFw0yMzA1MTExODUxMTZaMIHOMQsw
// SIG // CQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQ
// SIG // MA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9z
// SIG // b2Z0IENvcnBvcmF0aW9uMSkwJwYDVQQLEyBNaWNyb3Nv
// SIG // ZnQgT3BlcmF0aW9ucyBQdWVydG8gUmljbzEmMCQGA1UE
// SIG // CxMdVGhhbGVzIFRTUyBFU046QzRCRC1FMzdGLTVGRkMx
// SIG // JTAjBgNVBAMTHE1pY3Jvc29mdCBUaW1lLVN0YW1wIFNl
// SIG // cnZpY2UwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIK
// SIG // AoICAQDvvU3Ky3sqCnAqi2zbc+zbdiWz9UxM8zIYvOIE
// SIG // umCyOwhenVUgOSNWxQh3MOmRdnhfEImn9KNl0l3/46eb
// SIG // IJlGLTGxouJ3gLVkjSucobeIskIQcZ9EyEKhfjYrIgcV
// SIG // vnoTGFhGxSPu3EnV/3VsPv2PPzLvbqt1wiuT9hvmYm1c
// SIG // DlR/efiIkxp5qHMVoHbNKpQaWta2IN25fF1XuS9qk1Ji
// SIG // Qb50Kcdm1K7u9Jbdvx6FOWwWyygIQj6ccuJ5rK3Tkdxr
// SIG // +FG3wJraUJ7T++fDUT4YNWwAh9OhZb2yMj/P7kbN8dt9
// SIG // t3WmhqSUGEKGaQAYOtqxQ0yePntOrbfsW376fDPZaPGt
// SIG // WoH8WUNaSE9VZyXWjvfIFjIjFuuXXhVIlEflp4EFX79o
// SIG // C7L+qO/jnKc8ukR2SJulhBmfSwbee9TXwrMec9CJb6+k
// SIG // szdEG2liUyyFm18G1FSmHm61xFRTMoblRkB3rGQflcFd
// SIG // /OoWKJzMbNI7zPBqTnMdMS8spuNlwPfVUqbLor0yYOKP
// SIG // GtQAiW0wVRaBAN1axUmMznUOr818a8cOov09d/Jvlxfs
// SIG // irQBJ4aflHgDIZcO4z/fRAJYBlJdCpHAY02E8/oxMj4C
// SIG // mna1NaH+aBYv6vWA5a1b/R+CbFXvBhzDpD0zaAeNNvI/
// SIG // PDhHuNugbH3Fy5ItKYT6e4q1tAG0XQIDAQABo4IBNjCC
// SIG // ATIwHQYDVR0OBBYEFFBR+7M8Jgixz00vQaNoqy5yY4uq
// SIG // MB8GA1UdIwQYMBaAFJ+nFV0AXmJdg/Tl0mWnG1M1Gely
// SIG // MF8GA1UdHwRYMFYwVKBSoFCGTmh0dHA6Ly93d3cubWlj
// SIG // cm9zb2Z0LmNvbS9wa2lvcHMvY3JsL01pY3Jvc29mdCUy
// SIG // MFRpbWUtU3RhbXAlMjBQQ0ElMjAyMDEwKDEpLmNybDBs
// SIG // BggrBgEFBQcBAQRgMF4wXAYIKwYBBQUHMAKGUGh0dHA6
// SIG // Ly93d3cubWljcm9zb2Z0LmNvbS9wa2lvcHMvY2VydHMv
// SIG // TWljcm9zb2Z0JTIwVGltZS1TdGFtcCUyMFBDQSUyMDIw
// SIG // MTAoMSkuY3J0MAwGA1UdEwEB/wQCMAAwEwYDVR0lBAww
// SIG // CgYIKwYBBQUHAwgwDQYJKoZIhvcNAQELBQADggIBAFry
// SIG // 3qdpl8OorgcRrtD7LLZlyOYC5oD5EykJ44GZbKHoqbLW
// SIG // vaJLtDE1cZR1XXHQWxXFRzC0UZFBSJHyp2nJcpeXso9N
// SIG // 8Hg+m/6VHxcg2QfAGaRlF4U2CzUfD3qTOsg+oPtBNZx9
// SIG // DIThqBOlxbn5G5+niHTUxrlsAXhK9gzYhoQxpcGlB+RC
// SIG // 894bbsjMligIGBdvAuIssoWHb5RvVTeiZwuJnPxCLedA
// SIG // Qh6fGUAJOxwt0TpbYNYLuTYxmklXYrGouTiVn+nubGEH
// SIG // QwTWClyXYh3otTeyvi+bNb1fgund07BffgDaYqAQwDhp
// SIG // xUmLeD/rrVtdYt+4iyy2/duqQi+C8vvhlNMJc2H5+59t
// SIG // kckJrw9daMomR4ZkbLAwarAPp7wlbX5x9fNw3+aAQVbJ
// SIG // M2XCU1IwsWmoAyuwKgekANx+5f9khXnqn1/w7XZXuAfr
// SIG // z1eJatQgrNANSwfZZs0tL8aEQ7rGPNA0ItdCt0n2StYc
// SIG // smo/WvKW2RtAbAadjcHOMbTgxHgU1qAMxfZKOFendPbh
// SIG // RaSay6FfnvHCVP4U9/kpVu3Z6+XbWL84h06Wbrkb+ClO
// SIG // hdzkMzaR3+3AS6VikV0YxmHVZwBm/Dc1usFk42YzAjXQ
// SIG // hRu6ZCizDhnajwxXX5PhGBOUUhvcsUu+nD316kSlbSWU
// SIG // nCBeuHo512xSLOW4fCsBMIIHcTCCBVmgAwIBAgITMwAA
// SIG // ABXF52ueAptJmQAAAAAAFTANBgkqhkiG9w0BAQsFADCB
// SIG // iDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0
// SIG // b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1p
// SIG // Y3Jvc29mdCBDb3Jwb3JhdGlvbjEyMDAGA1UEAxMpTWlj
// SIG // cm9zb2Z0IFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5
// SIG // IDIwMTAwHhcNMjEwOTMwMTgyMjI1WhcNMzAwOTMwMTgz
// SIG // MjI1WjB8MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2Fz
// SIG // aGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UE
// SIG // ChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSYwJAYDVQQD
// SIG // Ex1NaWNyb3NvZnQgVGltZS1TdGFtcCBQQ0EgMjAxMDCC
// SIG // AiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAOTh
// SIG // pkzntHIhC3miy9ckeb0O1YLT/e6cBwfSqWxOdcjKNVf2
// SIG // AX9sSuDivbk+F2Az/1xPx2b3lVNxWuJ+Slr+uDZnhUYj
// SIG // DLWNE893MsAQGOhgfWpSg0S3po5GawcU88V29YZQ3MFE
// SIG // yHFcUTE3oAo4bo3t1w/YJlN8OWECesSq/XJprx2rrPY2
// SIG // vjUmZNqYO7oaezOtgFt+jBAcnVL+tuhiJdxqD89d9P6O
// SIG // U8/W7IVWTe/dvI2k45GPsjksUZzpcGkNyjYtcI4xyDUo
// SIG // veO0hyTD4MmPfrVUj9z6BVWYbWg7mka97aSueik3rMvr
// SIG // g0XnRm7KMtXAhjBcTyziYrLNueKNiOSWrAFKu75xqRdb
// SIG // Z2De+JKRHh09/SDPc31BmkZ1zcRfNN0Sidb9pSB9fvzZ
// SIG // nkXftnIv231fgLrbqn427DZM9ituqBJR6L8FA6PRc6ZN
// SIG // N3SUHDSCD/AQ8rdHGO2n6Jl8P0zbr17C89XYcz1DTsEz
// SIG // OUyOArxCaC4Q6oRRRuLRvWoYWmEBc8pnol7XKHYC4jMY
// SIG // ctenIPDC+hIK12NvDMk2ZItboKaDIV1fMHSRlJTYuVD5
// SIG // C4lh8zYGNRiER9vcG9H9stQcxWv2XFJRXRLbJbqvUAV6
// SIG // bMURHXLvjflSxIUXk8A8FdsaN8cIFRg/eKtFtvUeh17a
// SIG // j54WcmnGrnu3tz5q4i6tAgMBAAGjggHdMIIB2TASBgkr
// SIG // BgEEAYI3FQEEBQIDAQABMCMGCSsGAQQBgjcVAgQWBBQq
// SIG // p1L+ZMSavoKRPEY1Kc8Q/y8E7jAdBgNVHQ4EFgQUn6cV
// SIG // XQBeYl2D9OXSZacbUzUZ6XIwXAYDVR0gBFUwUzBRBgwr
// SIG // BgEEAYI3TIN9AQEwQTA/BggrBgEFBQcCARYzaHR0cDov
// SIG // L3d3dy5taWNyb3NvZnQuY29tL3BraW9wcy9Eb2NzL1Jl
// SIG // cG9zaXRvcnkuaHRtMBMGA1UdJQQMMAoGCCsGAQUFBwMI
// SIG // MBkGCSsGAQQBgjcUAgQMHgoAUwB1AGIAQwBBMAsGA1Ud
// SIG // DwQEAwIBhjAPBgNVHRMBAf8EBTADAQH/MB8GA1UdIwQY
// SIG // MBaAFNX2VsuP6KJcYmjRPZSQW9fOmhjEMFYGA1UdHwRP
// SIG // ME0wS6BJoEeGRWh0dHA6Ly9jcmwubWljcm9zb2Z0LmNv
// SIG // bS9wa2kvY3JsL3Byb2R1Y3RzL01pY1Jvb0NlckF1dF8y
// SIG // MDEwLTA2LTIzLmNybDBaBggrBgEFBQcBAQROMEwwSgYI
// SIG // KwYBBQUHMAKGPmh0dHA6Ly93d3cubWljcm9zb2Z0LmNv
// SIG // bS9wa2kvY2VydHMvTWljUm9vQ2VyQXV0XzIwMTAtMDYt
// SIG // MjMuY3J0MA0GCSqGSIb3DQEBCwUAA4ICAQCdVX38Kq3h
// SIG // LB9nATEkW+Geckv8qW/qXBS2Pk5HZHixBpOXPTEztTnX
// SIG // wnE2P9pkbHzQdTltuw8x5MKP+2zRoZQYIu7pZmc6U03d
// SIG // mLq2HnjYNi6cqYJWAAOwBb6J6Gngugnue99qb74py27Y
// SIG // P0h1AdkY3m2CDPVtI1TkeFN1JFe53Z/zjj3G82jfZfak
// SIG // Vqr3lbYoVSfQJL1AoL8ZthISEV09J+BAljis9/kpicO8
// SIG // F7BUhUKz/AyeixmJ5/ALaoHCgRlCGVJ1ijbCHcNhcy4s
// SIG // a3tuPywJeBTpkbKpW99Jo3QMvOyRgNI95ko+ZjtPu4b6
// SIG // MhrZlvSP9pEB9s7GdP32THJvEKt1MMU0sHrYUP4KWN1A
// SIG // PMdUbZ1jdEgssU5HLcEUBHG/ZPkkvnNtyo4JvbMBV0lU
// SIG // ZNlz138eW0QBjloZkWsNn6Qo3GcZKCS6OEuabvshVGtq
// SIG // RRFHqfG3rsjoiV5PndLQTHa1V1QJsWkBRH58oWFsc/4K
// SIG // u+xBZj1p/cvBQUl+fpO+y/g75LcVv7TOPqUxUYS8vwLB
// SIG // gqJ7Fx0ViY1w/ue10CgaiQuPNtq6TPmb/wrpNPgkNWcr
// SIG // 4A245oyZ1uEi6vAnQj0llOZ0dFtq0Z4+7X6gMTN9vMvp
// SIG // e784cETRkPHIqzqKOghif9lwY1NNje6CbaUFEMFxBmoQ
// SIG // tB1VM1izoXBm8qGCAtIwggI7AgEBMIH8oYHUpIHRMIHO
// SIG // MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3Rv
// SIG // bjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWlj
// SIG // cm9zb2Z0IENvcnBvcmF0aW9uMSkwJwYDVQQLEyBNaWNy
// SIG // b3NvZnQgT3BlcmF0aW9ucyBQdWVydG8gUmljbzEmMCQG
// SIG // A1UECxMdVGhhbGVzIFRTUyBFU046QzRCRC1FMzdGLTVG
// SIG // RkMxJTAjBgNVBAMTHE1pY3Jvc29mdCBUaW1lLVN0YW1w
// SIG // IFNlcnZpY2WiIwoBATAHBgUrDgMCGgMVAB5f6V5CzAGz
// SIG // 2qQsGvhl3N0pQw0ToIGDMIGApH4wfDELMAkGA1UEBhMC
// SIG // VVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcT
// SIG // B1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jw
// SIG // b3JhdGlvbjEmMCQGA1UEAxMdTWljcm9zb2Z0IFRpbWUt
// SIG // U3RhbXAgUENBIDIwMTAwDQYJKoZIhvcNAQEFBQACBQDm
// SIG // ZhAvMCIYDzIwMjIwNjI5MDM0MTM1WhgPMjAyMjA2MzAw
// SIG // MzQxMzVaMHcwPQYKKwYBBAGEWQoEATEvMC0wCgIFAOZm
// SIG // EC8CAQAwCgIBAAICBaICAf8wBwIBAAICETgwCgIFAOZn
// SIG // Ya8CAQAwNgYKKwYBBAGEWQoEAjEoMCYwDAYKKwYBBAGE
// SIG // WQoDAqAKMAgCAQACAwehIKEKMAgCAQACAwGGoDANBgkq
// SIG // hkiG9w0BAQUFAAOBgQB88eWwi38Hsf9dajhGQtvzy6eB
// SIG // pNVHPKkoqSENvCXn5sGRJD1bXafUGEO5ZksYfuQ3KAHY
// SIG // YiA0S+KRZgqHoUmmVCtDMowmEFmhVNUiqUtUCshg41l9
// SIG // 1Z5xDofMLgQ+TBdUv9YQxNcujBHSWrcSeNGioL47+A4V
// SIG // 571LqB+FZ78oijGCBA0wggQJAgEBMIGTMHwxCzAJBgNV
// SIG // BAYTAlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYD
// SIG // VQQHEwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQg
// SIG // Q29ycG9yYXRpb24xJjAkBgNVBAMTHU1pY3Jvc29mdCBU
// SIG // aW1lLVN0YW1wIFBDQSAyMDEwAhMzAAABo/uas457hkNP
// SIG // AAEAAAGjMA0GCWCGSAFlAwQCAQUAoIIBSjAaBgkqhkiG
// SIG // 9w0BCQMxDQYLKoZIhvcNAQkQAQQwLwYJKoZIhvcNAQkE
// SIG // MSIEIL74ud+zcZJhpjAyXr2taX0xeWCTRLoJltZTB61M
// SIG // 2X2EMIH6BgsqhkiG9w0BCRACLzGB6jCB5zCB5DCBvQQg
// SIG // jPi4sAZxzDKDnf7IG2mMacLxCZURGZf6Uz5Jc+nrjf4w
// SIG // gZgwgYCkfjB8MQswCQYDVQQGEwJVUzETMBEGA1UECBMK
// SIG // V2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwG
// SIG // A1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSYwJAYD
// SIG // VQQDEx1NaWNyb3NvZnQgVGltZS1TdGFtcCBQQ0EgMjAx
// SIG // MAITMwAAAaP7mrOOe4ZDTwABAAABozAiBCAA5emfCv/g
// SIG // e6nQ8s6U5ZtlC2JjxDJd2f5iaUTTkEG2djANBgkqhkiG
// SIG // 9w0BAQsFAASCAgCvoiUuqpaH7F5NW+Mc0yzOt2qtSY2r
// SIG // NsjfYT+wWzPwRlUv0s8WyH5axSHAtSIElQuREsxYXzjP
// SIG // nCxGEeUNbJrNZp9y8nwIIbA4kD50O7d9V+bB56/I00nu
// SIG // JdA1114uINXdJW4ecYj8+y/N6sztG6fksHlO035AwqAc
// SIG // ZU9l8vpcKsADll2vdjp+8W5rvcCrQ/JrtLOcFdz/vbQs
// SIG // u7a+jbQYeFBJdTFYjGvinbVv7HHKte8W++UwyX6YMrnN
// SIG // PxWeqfAy4+iY4An0D3HDZAgqJru+hYZMDz+SHdCKGOjM
// SIG // 4+Vt5Xfk+VtPA5STTKKiFmXaSkaHJVbTvrx5Ts+jrWOV
// SIG // pFexvu0A6DZdu+6iPUvHskjkCJntG3OnYgr+pKK7rfp7
// SIG // psTfzcC73wJSc7h73eHzCCcVN8MWJFk29JNTiXQxsMwJ
// SIG // fYJgUv5Eu8v55CDXeQBHe/vc5b0QfcKztGzs8scvpSve
// SIG // oW3p4FN+i1AKDKpRl3TWWmJCvkvpu7G5qVi/aaJeppAE
// SIG // EICgQge/8Ca0XELmyZAkqboxvDvidlDqEyMpgPrtAc9D
// SIG // HifcDLWukxAbN/b4tsiJHI6LyjTIHOcxosZ2Z8ChtEJR
// SIG // IKcJOMKHrWeUw60RRiDtCESG1ZdXKzOMbwiexk1WIxnV
// SIG // 5HYDvhtjaDt/VEvvBJeQQipgyG2D1uqG9jmusg==
// SIG // End signature block
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       MZê       ˇˇ  ∏       @                                      ∫ ¥	Õ!∏LÕ!This program cannot be run in DOS mode.
$       ·v[•a•a•ave`	ßa¨oÚßa•`∫a%l`	¶a%le	Øa%lb	§a%ld	©a%la	§a%lû§a%lc	§aRich•a        PE  L ò$ì        ‡ "!!          @      0              
           p     Ê„   @A                   ê"  /  p@  P    P             &  ê'   `  H    T                           H  @            @  h                           .text   ø                          `.data   †   0                    @  ¿.idata  x   @                    @  @.rsrc      P                    @  @.reloc  H   `      $              @  B                                                                                                                                                                                                                                                                                                                                                                                   @                  Ä0 –0     ¿                                                           0 Ä    h@           u                                                                     Ñ                     l@         ò$ì       `           ò$ì       P  P  P      ò$ì       $   †  †                                           ÄÄú  ,   »  (   [  ó    Ñ  á  ä  ç  “  ⁄   !  0!         8  –   ƒ  ‹    P  Ç!    RSDSÉ«u%«W'»HçØ!à0   D:\a\_work\1\s\\binaries\x86ret\bin\i386\\msvcp140_codecvt_ids.i386.pdb           .CRT$XCA         .CRT$XCZ         .CRT$XIA         .CRT$XIZ         .CRT$XPA         .CRT$XPZ         .CRT$XTA         .CRT$XTZ          .gfids  8  H  .rdata  Ä     .rdata$sxdata   Ñ  l   .rdata$voltmd     ‘  .rdata$zzzdbg   ƒ     .rtc$IAA    »     .rtc$IZZ    Ã     .rtc$TAA    –     .rtc$TZZ    ‡     .text$mn     "  ê   .xdata$x    ê"  /  .edata   0      .data    0  Ä  .bss     @  h   .idata$5    h@     .00cfg  p@  <   .idata$2    ¨@     .idata$3    ¿@  h   .idata$4    (A  P  .idata$6     P  `   .rsrc$01    `P  ®  .rsrc$02        É«u%«W'»HçØ!à0∞’⁄Wæ÷d∞Qréò$ì                            UãÏ3¿@9Euˇuˇ @ ˜ÿ¿˜ÿ]¬ ÃÃUãÏãEÉË t3ÉËt ÉËtÉËt3¿@Î0ËÊ  ÎË¿  ∂¿ÎˇuˇuË   YÎÉ} ï¿∂¿PË  Y]¬ jh " ËA  j Ë  YÑ¿Ñ—   Ë  àE„≥à]ÁÉe¸ É=P0  Ö≈   «P0    ËA  Ñ¿tMËò  ËQ  Ëp  h h Ëö  YYÖ¿u)ËÈ  Ñ¿t h h  Ëv  YY«P0    2€à]Á«E¸˛ˇˇˇË=   Ñ€uCË  ãÉ> tVË,  YÑ¿tˇujˇuã6ãŒˇh@ ˇ÷ˇ00 3¿@Îä]Áˇu„Ëë  Y√3¿ãMdâ    Y_^[…√jË¡  Ãjh " Ë:  °00 Ö¿3¿ÎiH£00 3ˇGâ}‰Ée¸ Ë¯  àE‡â}¸É=P0 ukËØ  Ëf  Ë√  É%P0  Ée¸ Ë9   j ˇuË,  YY∂˜ﬁˆ#˜âu‰«E¸˛ˇˇˇË"   ã∆ãMdâ    Y_^[…√ã}‰ˇu‡Ëÿ  Y√ãu‰Ëm  √jË  ÃjhH" Ëä  ã}Öˇu9=00 3¿ÈŸ   Ée¸ Éˇt
Éˇtã]Î1ã]SWˇuË…   ãâu‰ÖˆÑ£   SWˇuËù˝ˇˇãâu‰ÖˆÑå   SWˇuËf˝ˇˇãâu‰Éˇu'Öˆu#SPˇuËN˝ˇˇÖ€ï¿∂¿PË∫˛ˇˇYSVˇuËj   ÖˇtÉˇuHSWˇuËB˝ˇˇãâu‰Öˆt5SWˇuËD   ãÎ$ãMÏãQˇ0h  ˇuˇuˇuË'  Éƒ√ãeË3ˆâu‰«E¸˛ˇˇˇã∆ãMdâ    Y_^[…√UãÏVã58 Öˆu3¿@ÎˇuãŒˇuˇuˇh@ ˇ÷^]¬ UãÏÉ}uËb   ˇuˇuˇuËÆ˛ˇˇÉƒ]¬ UãÏÉÏÉeÙ çEÙÉe¯ Pˇ@ ãE¯3EÙâE¸ˇ@ 1E¸ˇ@ 1E¸çEÏPˇ@ ãEçM¸3EÏ3E¸3¡…√ã0 VWøNÊ@ªæ  ˇˇ;œtÖŒu&Ëîˇˇˇã»;œuπOÊ@ªÎÖŒu
G  ¡‡»â0 ˜—_â0 ^√h80 ˇ,@ √h80 Ë/  Y√∏@0 √∏H0 √ËÔˇˇˇãHÉ$âHËÁˇˇˇãHÉâH√UãÏãEVãH<»∑AçQ–∑Ak(Ú;÷tãM;Jr
ãBB;»rÉ¬(;÷uÍ3¿^]√ã¬Î˘VËv  Ö¿t d°   æT0 ãPÎ;–t3¿ã ±Ö¿u2¿^√∞^√ËE  Ö¿tËc  ÎË0  PËó  YÖ¿t2¿√Ëê  ∞√j Ë–   Ñ¿Yï¿√Ëí  Ñ¿u2¿√ËÜ  Ñ¿uË}  ÎÌ∞√Ës  Ën  ∞√UãÏË›  Ö¿uÉ}uˇuãMPˇuˇh@ ˇUˇuˇuË  YY]√Ë¨  Ö¿th\0 Ë  Y√Ë   Ö¿Ñ  √j Ë  YÈ  UãÏÉ} u∆X0 Ëì  ËÌ  Ñ¿u2¿]√Ë‡  Ñ¿u
j Ë’  YÎÈ∞]√UãÏÄ=Y0  t∞]√VãuÖˆtÉ˛ubË&  Ö¿t&Öˆu"h\0 Ëà  YÖ¿uhh0 Ëy  YÖ¿t+2¿Î0É…ˇâ\0 â`0 âd0 âh0 âl0 âp0 ∆Y0 ∞^]√jË‡   Ãjhh" ËY  Ée¸ ∏MZ  f9   u]°<  Å∏   PE  uLπ  f9à  u>ãEπ   +¡PQË≥˝ˇˇYYÖ¿t'Éx$ |!«E¸˛ˇˇˇ∞ÎãEÏã 3…Å8  ¿î¡ã¡√ãeË«E¸˛ˇˇˇ2¿ãMdâ    Y_^[…√UãÏË%  Ö¿tÄ} u	3¿πT0 á]√UãÏÄ=X0  tÄ} uˇuË|  ˇuËt  YY∞]√∏ú3 √UãÏÅÏ$  Sjˇ@ Ö¿tãMÕ)jË˘   «$Ã  çÖ‹¸ˇˇj PËı  ÉƒâÖå˝ˇˇâçà˝ˇˇâïÑ˝ˇˇâùÄ˝ˇˇâµ|˝ˇˇâΩx˝ˇˇfåï§˝ˇˇfåçò˝ˇˇfåùt˝ˇˇfåÖp˝ˇˇfå•l˝ˇˇfå≠h˝ˇˇúèÖú˝ˇˇãEâÖî˝ˇˇçEâÖ†˝ˇˇ«Ö‹¸ˇˇ  ã@¸jPâÖê˝ˇˇçE®j PËk  ãEÉƒ«E®  @«E¨   âE¥ˇ(@ j çXˇ˜€çE®âE¯çÖ‹¸ˇˇ€âE¸˛√ˇ @ çE¯Pˇ$@ Ö¿uÑ€ujË   Y[…√É%t0  √SVæ» ª» ;ÛsWã>Öˇt
ãœˇh@ ˇ◊É∆;ÛrÈ_^[√SVæ– ª– ;ÛsWã>Öˇt
ãœˇh@ ˇ◊É∆;ÛrÈ_^[√ÃÃÃÃÃÃÃÃÃÃÃh dˇ5    ãD$âl$çl$+‡SVW°0 1E¸3≈PâeËˇu¯ãE¸«E¸˛ˇˇˇâE¯çEd£    √ÃÃÃÃÃÃÃÃÃÃÃUãÏVãuˇ6Ëä  ˇuâˇuˇuVh  h0 Ë3  Éƒ^]√Ã¬  UãÏÉ%x0  ÉÏ$É0 j
ˇ@ Ö¿Ñ¨  Ée 3¿SVW3…ç}‹S¢ãÛ[êââwâO3…âWãE‹ã}‡âEÙÅ˜GenuãEË5ineIâE¸ãE‰5ntelâE¯3¿@S¢ãÛ[êç]‹âãE¸E¯«âsâKâSuCãE‹%?ˇ=¿ t#=` t=p t=P t=` t=p uã=|0 Éœâ=|0 Îã=|0 ãM‰jXâM¸9EÙ|03…S¢ãÛ[êç]‹ââsâKãM¸âSã]‡˜√   tÉœâ=|0 Îã]°0 É»«x0    £0 ˜¡   Ñì   É»«x0    £0 ˜¡   ty˜¡   tq3…–âEÏâUãEÏãMj^#∆;∆uW°0 É»«x0    £0 ˆ√ t;É» «x0    £0 ∏  –#ÿ;ÿuãEÏ∫‡   ãM#¬;¬uÉ0 @â5x0 _^[3¿…√3¿@√Ã3¿90 ï¿√ÃÃÃÃÃÃÃÃ;0 u√È(   UãÏj ˇ @ ˇuˇ$@ h	 ¿ˇ@ Pˇ@ ]√UãÏÅÏ$  jˇ@ Ö¿tjYÕ)£Ä1 â|1 âx1 ât1 â5p1 â=l1 fåò1 fåå1 fåh1 fåd1 få%`1 få-\1 úèê1 ãE £Ñ1 ãE£à1 çE£î1 ãÖ‹¸ˇˇ«–0   °à1 £å0 «Ä0 	 ¿«Ñ0    «ê0    jXk¿ «Äî0    jXk¿ ã0 âL¯jX¡‡ ã0 âL¯h< Ë‡˛ˇˇ…√ˇ%4@ ˇ%8@ ˇ%<@ ˇ%\@ ˇ%X@ ˇ%T@ ˇ%P@ ˇ%`@ ˇ%L@ ˇ%H@ ˇ%D@ ∞√3¿√UãÏQÉ=x0 |fÅ}¥ ¿t	Å}µ ¿uTÆ]¸ãE¸É?®Åt?©  u∏é  ¿…√©  t*©  u∏ë  ¿…√©  u∏ì  ¿…√©   u∏è  ¿…√∏ê  ¿…√ãE…√˛ˇˇˇ    –ˇˇˇ    ˛ˇˇˇ    3     ˛ˇˇˇ    –ˇˇˇ    ˛ˇˇˇ    ˘         Ï ˛ˇˇˇ    ‘ˇˇˇ    ˛ˇˇˇ’ Ù     ˛ˇˇˇ    ÿˇˇˇ    ˛ˇˇˇ† ≥                 ò$ì    ‡"           ∏"  »"  ÿ"   0  ,0  $0  (0  ˘"  *#  \#  ç#       MSVCP140_CODECVT_IDS.dll ?id@?$codecvt@_SDU_Mbstatet@@@std@@2V0locale@2@A ?id@?$codecvt@_S_QU_Mbstatet@@@std@@2V0locale@2@A ?id@?$codecvt@_UDU_Mbstatet@@@std@@2V0locale@2@A ?id@?$codecvt@_U_QU_Mbstatet@@@std@@2V0locale@2@A                                                                  ˇˇˇˇ            NÊ@ª±øD                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      C  bB  |B  íB  ®B  VC  BC  &C  FB  ÏB  ÿB  ¬B      (A  HA  RA      B  B  ÊA  ™A  òA  äA  ~A  ƒA            Ù@          lA  4@  A          $B  D@  ¿@          jC   @                      C  bB  |B  íB  ®B  VC  BC  &C  FB  ÏB  ÿB  ¬B      (A  HA  RA      B  B  ÊA  ™A  òA  äA  ~A  ƒA      % __std_type_info_destroy_list  H memset  5 _except_handler4_common VCRUNTIME140.dll  8 _initterm 9 _initterm_e A _seh_filter_dll  _configure_narrow_argv  5 _initialize_narrow_environment  6 _initialize_onexit_table  $ _execute_onexit_table  _cexit  api-ms-win-crt-runtime-l1-1-0.dll (DisableThreadLibraryCalls aQueryPerformanceCounter %GetCurrentProcessId )GetCurrentThreadId  ˙GetSystemTimeAsFileTime xInitializeSListHead îIsDebuggerPresent «UnhandledExceptionFilter  áSetUnhandledExceptionFilter õIsProcessorFeaturePresent $GetCurrentProcess ¶TerminateProcess  KERNEL32.dll                                                                                                                                                              Ä                  0  Ä               	  H   `P  §                  §4   V S _ V E R S I O N _ I N F O     ΩÔ˛   !    é{!    é{?                            S t r i n g F i l e I n f o   ‡   0 4 0 9 0 4 B 0   L   C o m p a n y N a m e     M i c r o s o f t   C o r p o r a t i o n   | *  F i l e D e s c r i p t i o n     M i c r o s o f t Æ   C   R u n t i m e   L i b r a r y   _ c o d e c v t _ i d s   <   F i l e V e r s i o n     1 4 . 3 3 . 3 1 6 3 0 . 0   R   I n t e r n a l N a m e   m s v c p 1 4 0 _ c o d e c v t _ i d s . d l l     Ä .  L e g a l C o p y r i g h t   ©   M i c r o s o f t   C o r p o r a t i o n .   A l l   r i g h t s   r e s e r v e d .   Z   O r i g i n a l F i l e n a m e   m s v c p 1 4 0 _ c o d e c v t _ i d s . d l l     T   P r o d u c t N a m e     M i c r o s o f t Æ   V i s u a l   S t u d i o Æ   @   P r o d u c t V e r s i o n   1 4 . 3 3 . 3 1 6 3 0 . 0   D    V a r F i l e I n f o     $    T r a n s l a t i o n     	∞                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Ã   <0@0Ñ0à0ê0ò0Ë0 14V5Ç5è5∞5µ5Œ5”5‡5"6*6]6g6u6ê6®677ﬁ7858w8Ü8è8ú8≤8Ï8ı8¸89999ë95:U:Ü:π:ﬂ:Ó:;;;;;#;);>;S;Z;`;r;|;‰;Ò;<(<Ù<==7=@=E=X=l=q=Ñ=°=æ=>>(>2>;>‰>Ì>ı>1?;?D?M?b?k?ö?£?¨?∫?√?Â?Ï?    p    00%0.090@0S0a0g0m0s0y00Ü0ç0î0õ0¢0©0∞0∏0¿0»0‘0›0‚0Ë0Ú0¸011,151B1H1N1T1Z1`1f1l1r1x1~1é1282D2\2`2|2Ä2 @     h0                                                                                                                                                                                          ê'    0Ç'Ñ	*ÜHÜ˜†Ç'u0Ç'q10	`ÜHe 0\
+Ç7†N0L0
+Ç70	 †¢Ä 010	`ÜHe  CΩÕUŒ ﬁïkhB'ó9-W#›rÌS≈v¡ysAË€∑†ÇÅ0Çˇ0ÇÁ†3  œ†%ê„Ô    œ0	*ÜHÜ˜ 0~10	UUS10U
Washington10URedmond10U
Microsoft Corporation1(0&UMicrosoft Code Signing PCA 20110220512204604Z230511204604Z0t10	UUS10U
Washington10URedmond10U
Microsoft Corporation10UMicrosoft Corporation0Ç"0	*ÜHÜ˜ Ç 0Ç
Ç ≥—›∏=´æcæHi,Å—˙´“+~˝JﬂùFAÃAâÌ€3ç8µYõx∏4µ¸Ãh„;ÌMñ£Õà4JÑ(eVá®A“§π´—B∆#:æ’ãÍBÁÃÄE~≠,s]vı™ODc¬C–NÓé˚Õ&ÙÁ≈/nsÃudL—8N±Öc(	¢QyªPLôÖ‰qF&∑î5›0é§J 8?ÄmeøÌ3Ÿ:_âr##„FªA!Õ©”©V˜πÖËÓ·àï ¨√Œ8c6LƒÎ˛äâSÓê-¨€/üÚ€∂CP&âo}9ÁNß›Ù
4⁄ØpoY £Ç~0Çz0U%0
+Ç7
+0U{8ˇ?lUÎ$î‰Ê!92M"0PUI0G§E0C1)0'U Microsoft Operations Puerto Rico10U230217+4705320U#0ÄHndÂP”Ç™77"µm® uï0TUM0K0I†G†EÜChttp://www.microsoft.com/pkiops/crl/MicCodSigPCA2011_2011-07-08.crl0a+U0S0Q+0ÜEhttp://www.microsoft.com/pkiops/certs/MicCodSigPCA2011_2011-07-08.crt0Uˇ0 0	*ÜHÜ˜ Ç Äba „‰¯|ªJe|4x$Ω™˝•ìâYcÑûõ-É‚« ’** èÂ3%¿*›üÆß=C∆Ë∆IΩˇsœ$
Z—®∂>,ΩóN6Ê’/ÀP”◊ÌLpâÈ∆SÂËÚ{sÈû‚A]±
®”1Ü+* t~’è\÷ΩìQΩ®Bi=¿ãz#:PB]∆tC®JË·ˆ/pEÂ8íWüıYØá≈%ü±,d˛Q/Õ¿l7hQâl⁄Óh€ntûmGêê≥Ø’ËZmø^#l˜fîTË=3$ã=£6p¿C|±F/EdÍ\n≤L˚diÈ´üõ,TÄÉz2Ò∂ }É˚ÂÍ›ÆÀ·¶qÔmÑA}˝b!™Ë'F$vŒU∑›äıw/∫Å⁄Pb§ää⁄∏|ï}Ê&r°q∞êúÅx±˘ˇ és¶ï(Ú±,3`¥Të•6Ö9≈BK¡ˇ‚rß∑kçjm¶H" ,Òq- Ì/]ä
1Ó´í(œÒ]Ω[:w„©péÎ ˘¬Úï√®çüê–Bä∫G!C|ÌáìÚ©àXø∆ì3¡S6ì›Tî
Ôc)T(±É/i≥(±JŸt‘/%¢xˆ¢QÊﬂàGî◊Z(J°ÿD?W0ÆÏù∏Ì‘≠öœ-B}ljv ‹Ú<ßÖSûf◊ñBï0Çz0Çb†
aê“     0	*ÜHÜ˜ 0Åà10	UUS10U
Washington10URedmond10U
Microsoft Corporation1200U)Microsoft Root Certificate Authority 20110110708205909Z260708210909Z0~10	UUS10U
Washington10URedmond10U
Microsoft Corporation1(0&UMicrosoft Code Signing PCA 20110Ç"0	*ÜHÜ˜ Ç 0Ç
Ç ´˙r.≠ÿn™ÇM4∫Ú∂X!üB*kÈZP™∏8I∫√›7k∆ÿ8¬ô∞»9’1B”âydá~î`$lØûIúÈh^“ﬂõS≤
,√ØŸ©+Æz	Ø◊ñY `ÈfvË2R&/Á´Pœ≥D∑]ÿƒ.u´hÛÀmÛ:\°ÙF∫‡8d¨nd5x¶†c-”@ì¯„ﬁ’\y•I)Áæ†wæî=Ô˚„+ZMV(¢zr‡:∑I^ÿÌÌCëÉŸ{≤{ÜŸ>±å]ËâOÑÚ°/Y‰ê;-Æ3X≈∑>˛2”≥=±≤Øí8~“ùÄ,ıNVë!5%√9ndS∫ú≠#ÑÀÙ∫Üç˜_–Røåîáº¿!t%_(∂Ã'(8%ò9J6œ|±íÆ#ß©fÏaj·(Iù_à‚%]”!K>RƒµW?$—z[/’#„p]QFw≥¯ ·º¨Ç_€¿≥Ω‘UKÁ9°È#Iº∏D|E‰¡√rz‡rÁ$ﬂøFô≈Ô¬W€ÉçÏMI0ß´éﬂÏ[üØ¸›∞f‚¡óÅ{Ì÷ÌKÁI)ß(¶ß}gÄÊäbx_≤/Ñ◊Wú\øw((ÒÌm√(è,è@7O¡·ÖDâƒ	L≈‘•C/tï˜n¯x X,]`ïö>O3Ñ⁄∞àﬁûNÙñ∞ºF†lò“‡÷àå £ÇÌ0ÇÈ0	+Ç7 0UHndÂP”Ç™77"µm® uï0	+Ç7
 S u b C A0UÜ0Uˇ0ˇ0U#0Är-:1êCπN·Íß«1—#â40ZUS0Q0O†M†KÜIhttp://crl.microsoft.com/pki/crl/products/MicRooCerAut2011_2011_03_22.crl0^+R0P0N+0ÜBhttp://www.microsoft.com/pki/certs/MicRooCerAut2011_2011_03_22.crt0ÅüU Åó0Åî0Åë	+Ç7.0ÅÉ0?+3http://www.microsoft.com/pkiops/docs/primarycps.htm0@+042  L e g a l _ p o l i c y _ s t a t e m e n t . 0	*ÜHÜ˜ Ç gÚÜ•ò‡Ty.”ÿtg"õñ·cíôBñ}“yê¡e_.,>¯√r—mÉ˛æ?Ë
 ;øG©£Ûi€cø"5•ó]eÑê}ãFPUÿí|“KÛ<BãR–∞˝k„>.)õÊ=•‘µwî9‚Èd…D=xz#Û}¶êtÉçÙÀ&F*¬äª§©õÌh˙h.ï†*?*kXIc	inZòñ‰ÉÙ¿èÛF+ﬁ¸;–Ω5Ôn%ÆÂØ'Ì–›ÛØô(óòM=Úâ÷√2‚≈-Œ[û¥I9
∆
¬∆≠ÆÂ≤Ÿ€àQEX82q'±Ù'¯ﬁ,: iò≤Yâhnoß∑t√@¶*(>Ç?Mf¿≥Mı·èo}EßvÂ@*e£√]RbÜ√c6óÜﬂ⁄Û¯Ú°ö'·Õ•ó–Ó]cA„[úá>w—±uæaaµ‹∆æﬂA«(Óﬁe/Ïóˆ°\ñÿ ÷°FΩYÛó•	KHôÄ– )≈±õ•?Ew5∆“¢¢üzz"˙Hï´˚G#Äıû¯øk∑Kó‚ÎuxÏÍ7ôyKˇ÷≥#huÊØ˙¸ãÎÄÍi;Ø¸0ÌLéﬂﬂumcë=—ùVNOøÄW"°x2!zÔA
±?˚®Ã§]¡°àõWqVNHE¿B…õv[
ÄHk˝yü¡Ωmmj…RszPÕ1Çv0Çr0Åï0~10	UUS10U
Washington10URedmond10U
Microsoft Corporation1(0&UMicrosoft Code Signing PCA 20113  œ†%ê„Ô    œ0	`ÜHe †ÅÆ0	*ÜHÜ˜	1
+Ç70
+Ç710
+Ç70/	*ÜHÜ˜	1" (ˇ◊;îg$aˆŒØsñ_®DÒ©9;{®¶Æ~ f0B
+Ç71402†Ä M i c r o s o f t°Ähttp://www.microsoft.com0	*ÜHÜ˜ Ç SLÓó7ÇŸ⁄gä•Rﬂ·,ÙA\|ïΩ_?EÖí!Ï√O·π±ˇ•∏©;:¿7Mô¿g.yX%˘»Ÿ4ÏAà9I¡˝ël⁄¥≤&vœ∆¡™'gz\∞wXîWY∆a\∞)Óı≈}â¶x7≈ƒÆ˚ÕªÖ)óPp Õbè6v0ZlFyÅüô≥SmÔı?êç∞D¶?¢·$2w:”›<HzY∂}`ÆÅ˙ynèÊ»e∑+n"√s«ÛÜzAØ◊’Ü˚≤⁄€ÃF3á˛] _⁄2€—ßß}\≠òÓ˝œHç±iï%cWÉ¸#x17ÑKa¸Q}[l9ÃàWgw∆UÏNåHHπÑ‡“¬D°Ç 0Ç¸
+Ç71ÇÏ0ÇË	*ÜHÜ˜†ÇŸ0Ç’10	`ÜHe 0ÇQ*ÜHÜ˜	†Ç@Ç<0Ç8
+ÑY
010	`ÜHe  ÷mK2◊oE∞¨A÷’ ö»peFÓ¨gL7éb˝N`Æ20220825215043.522Z0ÄÙ†Å–§ÅÕ0Å 10	UUS10U
Washington10URedmond10U
Microsoft Corporation1%0#UMicrosoft America Operations1&0$UThales TSS ESN:12BC-E3AE-74EB1%0#UMicrosoft Time-Stamp Service†ÇW0Ç0ÇÙ†3  °ÖUôπT]ä   °0	*ÜHÜ˜ 0|10	UUS10U
Washington10URedmond10U
Microsoft Corporation1&0$UMicrosoft Time-Stamp PCA 20100211202190524Z230228190524Z0Å 10	UUS10U
Washington10URedmond10U
Microsoft Corporation1%0#UMicrosoft America Operations1&0$UThales TSS ESN:12BC-E3AE-74EB1%0#UMicrosoft Time-Stamp Service0Ç"0	*ÜHÜ˜ Ç 0Ç
Ç ⁄…<^Âk§í∂1≈[á-ÖΩEÇŸ$éy«∞‚∞◊H=∂e-è•ÊãÀ◊˛C(P#p◊˜Yu» Ó?’˚¥„¬„∆Qp?mˇjóAJÁç¸Äâ{q^vÒwÑ8\¸îlÖ[oz:h<g≠±i˜é±∏S˙kà
≈˝ÍıPG6‚S*£ó("H¸
ÿŸ≈òµ$?îy˛\„π!Óïµ*>—ù»iÊ=1ÈAöÌ¡QÖ8≤†¢%WC&óü.Û”ÙGmÜT1Ôô]«‡0e˝öı>ÓAÅáÀiƒ˜H9
âc0å§Îç=r?é'j>Á<>ı˛≤¨j…ë⁄Aéi:‚y∫@
◊¬πú√,ÔR1<iÌe‰¬ñJ2÷˚O∑˛z°ÍJ€Æ˘p§}◊ï˝˙_Æ¿t¸‰ _‹BÀØyÛïÑ%œ6∂◊0®≥Jµë[ˇ‹sˇf¬i¡¨˘3-ëo'7[Oæûô2}>E7€ˇ)üQ2ŒáÊ7ãŒ÷ãÎ«@˜@}^
6VeÈ÷c≤∆ì‘⁄`Ã®ñÚl{RsD ËÌÇ(ìÚw	∆Ê∆¡no9äàñ—Gy¡≈\+∞1ÅsX»\m™–4†cg∂ó◊¿ë}Ãåé‘íY(œæ??¢à©ÓcqﬂE<&€I∂Ù‚ÏµÁò9 £Ç60Ç20Uø 2€cé˘Uäâî∞„πt˝Ã©0U#0Äüß] ^b]ÉÙÂ“eßS5Èr0_UX0V0T†R†PÜNhttp://www.microsoft.com/pkiops/crl/Microsoft%20Time-Stamp%20PCA%202010(1).crl0l+`0^0\+0ÜPhttp://www.microsoft.com/pkiops/certs/Microsoft%20Time-Stamp%20PCA%202010(1).crt0Uˇ0 0U%0
+0	*ÜHÜ˜ Ç  √#%}yFÂÇú*≤œI/ü‹ïô¶º
 æ+⁄0Qï{@≥‰‰i◊,Ëæ˜oò^m	L”á4ú";múg∞øíÈ{":ÕŸ’^_‚0°u	„2Ô≥O¶Oã„;X|§?n…â)™ˆsﬂf˝ÒÔ’i∂	72i„ÔãŒâáu2.7Q µõ∑;8†âÖ3
o1›>äq¨`ã‡µaõ!¢≈ãñÚª‘óÍçÉYπÿ¬f]e†é√Ùrhi›˙∑˝€∆<Æıö°¸nt£‡ÙPùEk˜	%°ﬂ{+WËjÌ]Å£òÕ˛É‡!i[∫íó6”Öªõg,´¿ìàå@ÿWV
öUÓË[a´, ≈2c``'ìwk¿‹fó^™Q≥3h‘^ÜªíB•Wl‚LıGπ>RJ∂b&Ç≥©ú|øØò IÉ©‚Y÷Ö=B3utO÷ùyÓéQpd÷±8uó?R√ÂèJ®äXÀ˙Suò$öl˚ìõH9µF∑Iw?	–\DNjbÌ@vˆÆU∂p	◊+˚/åD–’2'osú1‚^^o.ÑSé1i≤ãoàcÈç©≤Êèn#Â‰˛n0ÂqÊ6“œ§∑äô‘∫S¶&j#fiÕ£Ep¿i·˛Í2›ù∑…?≥>0;˜œ3MLÉ^∏—-X&˜<ÄÖ^pŸπ[b0Çq0ÇY†3   ≈ÁkûõIô     0	*ÜHÜ˜ 0Åà10	UUS10U
Washington10URedmond10U
Microsoft Corporation1200U)Microsoft Root Certificate Authority 20100210930182225Z300930183225Z0|10	UUS10U
Washington10URedmond10U
Microsoft Corporation1&0$UMicrosoft Time-Stamp PCA 20100Ç"0	*ÜHÜ˜ Ç 0Ç
Ç ‰·¶LÁ¥r!y¢À◊$yΩ’Ç”˝Óú“©lNu» 5WˆlJ‡‚Ωπ>`3ˇ\O«f˜ïSqZ‚~JZ˛∏6gÖF#µçœw2¿Ë`}jRÉD∑¶éFkÛ≈vıÜP‹¡D»q\Q17†
8nçÌ◊ÿ&S|9azƒ™˝riØ´¨ˆ6æ5&d⁄ò;∫{3≠Ä[~åùR˛∂Ëb%‹jœ]Ù˛éSœ÷ÏÖVMÔ›ºç§„ëè≤9,QúÈpi 6-pé1»5(Ω„¥á$√‡…è~µTè‹˙Uòmh;öFΩÌ§Æz)7¨ÀÎÉEÁFn 2’¿Ü0\O,‚b≤Õπ‚çà‰ñ¨Jªæq©[g`ﬁ¯íë=˝ œs}AöFuÕƒ_4›â÷˝• }~¸ŸûEﬂ∂r/€}_Ä∫€™~6Ï6Lˆ+n®QËø£—s¶M7tî4ÇÚ∑GÌßËô|?L€Ø^¬Û’ÿs=CN¡39LéºBh.ÍÑQF‚—ΩjZas g¢^◊(v‚3r◊ß ¬˙
◊co…6dã[†¶É!]_0tëîîÿπP˘âaÛ65ÑG€‹—˝≤‘≈kˆ\RQ]€%∫ØPzl≈rÔç˘RƒÖì¿<€7«?x´E∂ıá^⁄èûri∆Æ{∑∑>j‚.≠ £Ç›0ÇŸ0	+Ç7 0#	+Ç7*ßR˛dƒöæÇë<F5)œˇ/Ó0Uüß] ^b]ÉÙÂ“eßS5Èr0\U U0S0Q+Ç7LÉ}0A0?+3http://www.microsoft.com/pkiops/Docs/Repository.htm0U%0
+0	+Ç7
 S u b C A0UÜ0Uˇ0ˇ0U#0Ä’ˆVÀèË¢\bh—=îê[◊Œöƒ0VUO0M0K†I†GÜEhttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z+N0L0J+0Ü>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0	*ÜHÜ˜ Ç ùU}¸*≠·,g1$[·ûrK¸©oÍ\∂>NGdx±ìó=13µ9◊¬q6?⁄dl|–u9mª1‰¬è˚l—°î"ÓÈfg:SM›ò∫∂xÿ6.ú©ÇV ∞æâËi‡∫	Ó{ﬂjoæ)Ànÿ?HuŸﬁmÇım#T‰xSu$Wπ›üÛé=∆Ûhﬂeˆ§V™˜ï∂(U'–$Ω@†ø∂]='‡@ñ8¨˜˘)â√º∞TÖB≥¸ûãâÁjÅ¬ÅBRuä6¬√as.,k{n?,	xÈë≤©[ﬂI£tºÏëÄ“=ÊJ>f;OªÜ˙2ŸñÙèˆëˆŒ∆t˝ˆLro´u0≈4∞zÿP˛
X›@<«TmùctH,±NG-¡qød˘$æsm é	Ω≥WITdŸs◊[DéZëkü§(‹g($∫8Kön˚!TkjEG©Ò∑Æ»Ëâ^Où“–LvµWT	±iD~|°als˛
ªÏAf=i˝À¡AI~~ìæÀ¯;‰∑ø¥Œ>•1QÑºø¡Ç¢{âçp˛Áµ–(âè6⁄∫L˘õˇ
È4¯$5g+‡∏Êåô÷·"Í'B=%îÊtt[j—û>Ì~†13}ºÀÈ{ø8pD—êÒ»´:ä:bŸpcSMçÓÇm•¡qj¥U3X≥°pfÚ°ÇŒ0Ç70Å¯°Å–§ÅÕ0Å 10	UUS10U
Washington10URedmond10U
Microsoft Corporation1%0#UMicrosoft America Operations1&0$UThales TSS ESN:12BC-E3AE-74EB1%0#UMicrosoft Time-Stamp Service¢#
0+ qvåÓ≈K¬Ü]÷7ÅAÄ‡†ÅÉ0ÅÄ§~0|10	UUS10U
Washington10URedmond10U
Microsoft Corporation1&0$UMicrosoft Time-Stamp PCA 20100	*ÜHÜ˜  Ê≤Xá0"20220826042231Z20220827042231Z0w0=
+ÑY
1/0-0
 Ê≤Xá 0
 !nˇ0 Ï0
 Ê≥™ 06
+ÑY
1(0&0
+ÑY
†
0 ° °
0 Ü†0	*ÜHÜ˜ ÅÅ ï~g$S@Åôó™•ö9©v‰s5‰çî≥ô‚3À<FÅŒÎ á]&v˚332EÿÁ:`ÖÄÏ·`Vx°NyñÒe%âã†è7¨l¿EÊ3å[¡çÂ‘oƒeh@î˚ùê›Ì]≤tÏTúÏèK·eH#RıUﬂ1Fó,ƒ≠'1Ç0Ç	0Åì0|10	UUS10U
Washington10URedmond10U
Microsoft Corporation1&0$UMicrosoft Time-Stamp PCA 20103  °ÖUôπT]ä   °0	`ÜHe †ÇJ0	*ÜHÜ˜	1*ÜHÜ˜	0/	*ÜHÜ˜	1" 8TûV P…"ùô©˚a*Ù"ÌÅ1AAs5%WA[⁄3ùŸ0Å˙*ÜHÜ˜	/1ÅÍ0ÅÁ0Å‰0ÅΩ ÎTÒ:ÅÇh ÇéÑrÌII
Ã%‡ÇO!+Œ(âﬂé–Ñ0Åò0ÅÄ§~0|10	UUS10U
Washington10URedmond10U
Microsoft Corporation1&0$UMicrosoft Time-Stamp PCA 20103  °ÖUôπT]ä   °0" íﬁG	!‰Dj.X ÂëòS÷	D„w_FÓ]ZÆ4ıE0	*ÜHÜ˜ Ç ,∫ÿ˙â∆Ûü¬4ùLXìŒ8ru…ÕZDÛ9–Ó„_Y◊5êGd›•–—ΩF°Ä%~´ÈÁìuw¢—*c{â˙v∫7¯¥ﬂﬁ÷f+yÖñ˝/√≥	@ §π	≠d‡π¶óJD~ﬁåÔÓ\∂∫‘1∫e£·’5Ü‘YÒm#R#œêJ‘çp»7Ô⁄Ä¡`√>À Î†˛€èìâ=Î¨°T‹ãËù)ÙH.≤Ë¡Ûë82p¥|S^á\ƒ+=˜·’Amö‹ùòg"+’Óùå∂±Wç∑F1´ãÜ‰sÌs‡£<ù4£µs#æOÃ¢£rÊ!≥˛n¡Ú·A’_;˝ÔM„⁄ﬁÂ%aù|3óé–Ñ:Äù
æ”äì|&Ëÿ∆©∆o,ñü1‘®˝a†~Ÿs)r°à¸µ)§Éã>SÒkû’Z„EöΩ¢[á ÂXË¯πﬁß∂áPhWZ”<ˆ€jV≈πuŒ„Ú°–´˘ÿé„•±É|ìôBóñø8o≥g'˛∆‹?iÌ· (∏àˆtÓäŒÄ¥ÁªÚ¢∂CjÙ⁄c¥Q{
LrèÓ§À∞ãº‘É=¬©¯Ÿ†ôrÊ”1wB6î˚÷ãÖÖ ¬$©†ÕÔA∂•…}Kû˙;¥2ËœCÑ4ö=€)1L√lcW‘˘ß´j9A`ßR                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                a
    &zËa“~  „                   @   sj  d Z ddlZddlmZmZmZmZmZmZm	Z	m
Z
mZmZmZmZmZmZmZmZmZmZ ddlmZmZ ddlmZ ddlmZ ddlmZ g d¢Zejejd	d
çZeeÉZ eeÉZ!eeÉZ"ddÑ Z#ddÑ Z$ee$ÉddÑ ÉZ%ee$ÉddÑ ÉZ&d?ddúddÑZ'eed	Édde(dfddúddÑÉÉZ)ee'Ée)ÉZ*d@ddÑZ+ee+ÉdAddÑÉZ,ee+ÉdBddÑÉZ-dCddúdd ÑZ.eed	Édde(fddúd!d"ÑÉÉZ/ee.Ée/ÉZ0dDd#d$ÑZ1ee1ÉdEd%d&ÑÉZ2ee1ÉdFd'd(ÑÉZ3dGd)d*ÑZ4ee4ÉdHd,d-ÑÉZ5dId.d/ÑZ6ee6ÉdJd1d2ÑÉZ7ed	ÉdKd3d4ÑÉZ8ed	ÉdLd5d6ÑÉZ9dMd7d8ÑZ:ee:ÉdNd9d:ÑÉZ;ed	ÉdOd;d<ÑÉZ<ee:ÉdPd=d>ÑÉZ=dS )Qz- Basic functions for manipulating 2d arrays

È    N)⁄
asanyarray⁄arange⁄zeros⁄greater_equal⁄multiply⁄ones⁄asarray⁄where⁄int8⁄int16⁄int32⁄int64⁄intp⁄empty⁄promote_types⁄diagonal⁄nonzero⁄indices)⁄set_array_function_like_doc⁄
set_module)⁄	overrides)⁄iinfo)⁄broadcast_to)⁄diag⁄diagflat⁄eye⁄fliplr⁄flipud⁄tri⁄triu⁄tril⁄vander⁄histogram2d⁄mask_indices⁄tril_indices⁄tril_indices_from⁄triu_indices⁄triu_indices_from⁄numpy)⁄modulec                 C   sL   |t jkr| t jkrtS |tjkr0| tjkr0tS |tjkrH| tjkrHtS tS )z# get small int that fits the range )	⁄i1⁄max⁄minr
   ⁄i2r   ⁄i4r   r   )⁄low⁄high© r1   ˙gC:\__w\1\s\PoirotService\client\build\VsPoirotZipTemp\python\Lib\site-packages\numpy/lib/twodim_base.py⁄_min_int    s    r3   c                 C   s   | fS ©Nr1   ©⁄mr1   r1   r2   ⁄_flip_dispatcher+   s    r7   c                 C   s0   t | É} | jdk rtdÉÇ| ddÖdddÖf S )ae  
    Reverse the order of elements along axis 1 (left/right).

    For a 2-D array, this flips the entries in each row in the left/right
    direction. Columns are preserved, but appear in a different order than
    before.

    Parameters
    ----------
    m : array_like
        Input array, must be at least 2-D.

    Returns
    -------
    f : ndarray
        A view of `m` with the columns reversed.  Since a view
        is returned, this operation is :math:`\mathcal O(1)`.

    See Also
    --------
    flipud : Flip array in the up/down direction.
    flip : Flip array in one or more dimensions.
    rot90 : Rotate array counterclockwise.

    Notes
    -----
    Equivalent to ``m[:,::-1]`` or ``np.flip(m, axis=1)``.
    Requires the array to be at least 2-D.

    Examples
    --------
    >>> A = np.diag([1.,2.,3.])
    >>> A
    array([[1.,  0.,  0.],
           [0.,  2.,  0.],
           [0.,  0.,  3.]])
    >>> np.fliplr(A)
    array([[0.,  0.,  1.],
           [0.,  2.,  0.],
           [3.,  0.,  0.]])

    >>> A = np.random.randn(2,3,5)
    >>> np.all(np.fliplr(A) == A[:,::-1,...])
    True

    È   zInput must be >= 2-d.NÈˇˇˇˇ©r   ⁄ndim⁄
ValueErrorr5   r1   r1   r2   r   /   s    0
r   c                 C   s,   t | É} | jdk rtdÉÇ| dddÖdf S )ax  
    Reverse the order of elements along axis 0 (up/down).

    For a 2-D array, this flips the entries in each column in the up/down
    direction. Rows are preserved, but appear in a different order than before.

    Parameters
    ----------
    m : array_like
        Input array.

    Returns
    -------
    out : array_like
        A view of `m` with the rows reversed.  Since a view is
        returned, this operation is :math:`\mathcal O(1)`.

    See Also
    --------
    fliplr : Flip array in the left/right direction.
    flip : Flip array in one or more dimensions.
    rot90 : Rotate array counterclockwise.

    Notes
    -----
    Equivalent to ``m[::-1, ...]`` or ``np.flip(m, axis=0)``.
    Requires the array to be at least 1-D.

    Examples
    --------
    >>> A = np.diag([1.0, 2, 3])
    >>> A
    array([[1.,  0.,  0.],
           [0.,  2.,  0.],
           [0.,  0.,  3.]])
    >>> np.flipud(A)
    array([[0.,  0.,  3.],
           [0.,  2.,  0.],
           [1.,  0.,  0.]])

    >>> A = np.random.randn(2,3,5)
    >>> np.all(np.flipud(A) == A[::-1,...])
    True

    >>> np.flipud([1,2])
    array([2, 1])

    È   zInput must be >= 1-d.Nr9   .r:   r5   r1   r1   r2   r   e   s    2
r   )⁄likec                C   s   |fS r4   r1   )⁄N⁄M⁄k⁄dtype⁄orderr>   r1   r1   r2   ⁄_eye_dispatcherù   s    rD   ⁄Cc                C   sÇ   |durt | |||||dçS |du r(| }t| |f||dç}||krF|S |dkrT|}n
| | }d|d|| Ö j|d|d Ö< |S )a   
    Return a 2-D array with ones on the diagonal and zeros elsewhere.

    Parameters
    ----------
    N : int
      Number of rows in the output.
    M : int, optional
      Number of columns in the output. If None, defaults to `N`.
    k : int, optional
      Index of the diagonal: 0 (the default) refers to the main diagonal,
      a positive value refers to an upper diagonal, and a negative value
      to a lower diagonal.
    dtype : data-type, optional
      Data-type of the returned array.
    order : {'C', 'F'}, optional
        Whether the output should be stored in row-major (C-style) or
        column-major (Fortran-style) order in memory.

        .. versionadded:: 1.14.0
    ${ARRAY_FUNCTION_LIKE}

        .. versionadded:: 1.20.0

    Returns
    -------
    I : ndarray of shape (N,M)
      An array where all elements are equal to zero, except for the `k`-th
      diagonal, whose values are equal to one.

    See Also
    --------
    identity : (almost) equivalent function
    diag : diagonal 2-D array from a 1-D array specified by the user.

    Examples
    --------
    >>> np.eye(2, dtype=int)
    array([[1, 0],
           [0, 1]])
    >>> np.eye(3, k=1)
    array([[0.,  1.,  0.],
           [0.,  0.,  1.],
           [0.,  0.,  0.]])

    N)r@   rA   rB   rC   r>   )rB   rC   r   r=   )⁄_eye_with_liker   ⁄flat)r?   r@   rA   rB   rC   r>   r6   ⁄ir1   r1   r2   r   °   s    1
 r   c                 C   s   | fS r4   r1   )⁄vrA   r1   r1   r2   ⁄_diag_dispatcherÊ   s    rJ   c                 C   sò   t | É} | j}t|Édkrv|d t|É }t||f| jÉ}|dkrH|}n
| | }| |d|| Ö j|d|d Ö< |S t|Édkråt| |ÉS tdÉÇdS )aï  
    Extract a diagonal or construct a diagonal array.

    See the more detailed documentation for ``numpy.diagonal`` if you use this
    function to extract a diagonal and wish to write to the resulting array;
    whether it returns a copy or a view depends on what version of numpy you
    are using.

    Parameters
    ----------
    v : array_like
        If `v` is a 2-D array, return a copy of its `k`-th diagonal.
        If `v` is a 1-D array, return a 2-D array with `v` on the `k`-th
        diagonal.
    k : int, optional
        Diagonal in question. The default is 0. Use `k>0` for diagonals
        above the main diagonal, and `k<0` for diagonals below the main
        diagonal.

    Returns
    -------
    out : ndarray
        The extracted diagonal or constructed diagonal array.

    See Also
    --------
    diagonal : Return specified diagonals.
    diagflat : Create a 2-D array with the flattened input as a diagonal.
    trace : Sum along diagonals.
    triu : Upper triangle of an array.
    tril : Lower triangle of an array.

    Examples
    --------
    >>> x = np.arange(9).reshape((3,3))
    >>> x
    array([[0, 1, 2],
           [3, 4, 5],
           [6, 7, 8]])

    >>> np.diag(x)
    array([0, 4, 8])
    >>> np.diag(x, k=1)
    array([1, 5])
    >>> np.diag(x, k=-1)
    array([3, 7])

    >>> np.diag(np.diag(x))
    array([[0, 0, 0],
           [0, 4, 0],
           [0, 0, 8]])

    r=   r   Nr8   zInput must be 1- or 2-d.)	r   ⁄shape⁄len⁄absr   rB   rG   r   r<   )rI   rA   ⁄s⁄n⁄resrH   r1   r1   r2   r   Í   s    7
 
r   c                 C   s∫   z
| j }W n ty    d}Y n0 t| É†° } t| É}|t|É }t||f| jÉ}|dkr~td|| t	dç}|| ||  }n"td|| t	dç}||| |  }| |j
|< |s≤|S ||ÉS )aí  
    Create a two-dimensional array with the flattened input as a diagonal.

    Parameters
    ----------
    v : array_like
        Input data, which is flattened and set as the `k`-th
        diagonal of the output.
    k : int, optional
        Diagonal to set; 0, the default, corresponds to the "main" diagonal,
        a positive (negative) `k` giving the number of the diagonal above
        (below) the main.

    Returns
    -------
    out : ndarray
        The 2-D output array.

    See Also
    --------
    diag : MATLAB work-alike for 1-D and 2-D arrays.
    diagonal : Return specified diagonals.
    trace : Sum along diagonals.

    Examples
    --------
    >>> np.diagflat([[1,2], [3,4]])
    array([[1, 0, 0, 0],
           [0, 2, 0, 0],
           [0, 0, 3, 0],
           [0, 0, 0, 4]])

    >>> np.diagflat([1,2], 1)
    array([[0, 1, 0],
           [0, 0, 2],
           [0, 0, 0]])

    Nr   ©rB   )Z__array_wrap__⁄AttributeErrorr   ZravelrL   rM   r   rB   r   r   rG   )rI   rA   ⁄wraprN   rO   rP   rH   ⁄fir1   r1   r2   r   2  s"    (


r   c                C   s   |fS r4   r1   )r?   r@   rA   rB   r>   r1   r1   r2   ⁄_tri_dispatchern  s    rU   c             
   C   sn   |durt | ||||dçS |du r&| }t†t| td| Édçt| || t| || Édç°}|j|ddç}|S )a\  
    An array with ones at and below the given diagonal and zeros elsewhere.

    Parameters
    ----------
    N : int
        Number of rows in the array.
    M : int, optional
        Number of columns in the array.
        By default, `M` is taken equal to `N`.
    k : int, optional
        The sub-diagonal at and below which the array is filled.
        `k` = 0 is the main diagonal, while `k` < 0 is below it,
        and `k` > 0 is above.  The default is 0.
    dtype : dtype, optional
        Data type of the returned array.  The default is float.
    ${ARRAY_FUNCTION_LIKE}

        .. versionadded:: 1.20.0

    Returns
    -------
    tri : ndarray of shape (N, M)
        Array with its lower triangle filled with ones and zero elsewhere;
        in other words ``T[i,j] == 1`` for ``j <= i + k``, 0 otherwise.

    Examples
    --------
    >>> np.tri(3, 5, 2, dtype=int)
    array([[1, 1, 1, 0, 0],
           [1, 1, 1, 1, 0],
           [1, 1, 1, 1, 1]])

    >>> np.tri(3, 5, -1)
    array([[0.,  0.,  0.,  0.,  0.],
           [1.,  0.,  0.,  0.,  0.],
           [1.,  1.,  0.,  0.,  0.]])

    N)r@   rA   rB   r>   r   rQ   F)⁄copy)⁄_tri_with_liker   ⁄outerr   r3   Zastype)r?   r@   rA   rB   r>   r6   r1   r1   r2   r   r  s    *ˇr   c                 C   s   | fS r4   r1   )r6   rA   r1   r1   r2   ⁄_trilu_dispatcher∞  s    rY   c                 C   s6   t | É} t| jddÖ |tdúé}t|| td| jÉÉS )a$  
    Lower triangle of an array.

    Return a copy of an array with elements above the `k`-th diagonal zeroed.
    For arrays with ``ndim`` exceeding 2, `tril` will apply to the final two
    axes.

    Parameters
    ----------
    m : array_like, shape (..., M, N)
        Input array.
    k : int, optional
        Diagonal above which to zero elements.  `k = 0` (the default) is the
        main diagonal, `k < 0` is below it and `k > 0` is above.

    Returns
    -------
    tril : ndarray, shape (..., M, N)
        Lower triangle of `m`, of same shape and data-type as `m`.

    See Also
    --------
    triu : same thing, only for the upper triangle

    Examples
    --------
    >>> np.tril([[1,2,3],[4,5,6],[7,8,9],[10,11,12]], -1)
    array([[ 0,  0,  0],
           [ 4,  0,  0],
           [ 7,  8,  0],
           [10, 11, 12]])

    >>> np.tril(np.arange(3*4*5).reshape(3, 4, 5))
    array([[[ 0,  0,  0,  0,  0],
            [ 5,  6,  0,  0,  0],
            [10, 11, 12,  0,  0],
            [15, 16, 17, 18,  0]],
           [[20,  0,  0,  0,  0],
            [25, 26,  0,  0,  0],
            [30, 31, 32,  0,  0],
            [35, 36, 37, 38,  0]],
           [[40,  0,  0,  0,  0],
            [45, 46,  0,  0,  0],
            [50, 51, 52,  0,  0],
            [55, 56, 57, 58,  0]]])

    È˛ˇˇˇN©rA   rB   r=   ©r   r   rK   ⁄boolr	   r   rB   ©r6   rA   ⁄maskr1   r1   r2   r    ¥  s    1r    c                 C   s:   t | É} t| jddÖ |d tdúé}t|td| jÉ| ÉS )a‚  
    Upper triangle of an array.

    Return a copy of an array with the elements below the `k`-th diagonal
    zeroed. For arrays with ``ndim`` exceeding 2, `triu` will apply to the final
    two axes.

    Please refer to the documentation for `tril` for further details.

    See Also
    --------
    tril : lower triangle of an array

    Examples
    --------
    >>> np.triu([[1,2,3],[4,5,6],[7,8,9],[10,11,12]], -1)
    array([[ 1,  2,  3],
           [ 4,  5,  6],
           [ 0,  8,  9],
           [ 0,  0, 12]])

    >>> np.triu(np.arange(3*4*5).reshape(3, 4, 5))
    array([[[ 0,  1,  2,  3,  4],
            [ 0,  6,  7,  8,  9],
            [ 0,  0, 12, 13, 14],
            [ 0,  0,  0, 18, 19]],
           [[20, 21, 22, 23, 24],
            [ 0, 26, 27, 28, 29],
            [ 0,  0, 32, 33, 34],
            [ 0,  0,  0, 38, 39]],
           [[40, 41, 42, 43, 44],
            [ 0, 46, 47, 48, 49],
            [ 0,  0, 52, 53, 54],
            [ 0,  0,  0, 58, 59]]])

    rZ   Nr=   r[   r\   r^   r1   r1   r2   r   Î  s    &r   c                 C   s   | fS r4   r1   )⁄xr?   ⁄
increasingr1   r1   r2   ⁄_vander_dispatcher  s    rb   Fc                 C   sÿ   t | É} | jdkrtdÉÇ|du r*t| É}tt| É|ft| jtÉdç}|s`|ddÖdddÖf n|}|dkr|d|ddÖdf< |dkr‘| ddÖdf |ddÖddÖf< tj	|ddÖddÖf |ddÖddÖf ddç |S )ar  
    Generate a Vandermonde matrix.

    The columns of the output matrix are powers of the input vector. The
    order of the powers is determined by the `increasing` boolean argument.
    Specifically, when `increasing` is False, the `i`-th output column is
    the input vector raised element-wise to the power of ``N - i - 1``. Such
    a matrix with a geometric progression in each row is named for Alexandre-
    Theophile Vandermonde.

    Parameters
    ----------
    x : array_like
        1-D input array.
    N : int, optional
        Number of columns in the output.  If `N` is not specified, a square
        array is returned (``N = len(x)``).
    increasing : bool, optional
        Order of the powers of the columns.  If True, the powers increase
        from left to right, if False (the default) they are reversed.

        .. versionadded:: 1.9.0

    Returns
    -------
    out : ndarray
        Vandermonde matrix.  If `increasing` is False, the first column is
        ``x^(N-1)``, the second ``x^(N-2)`` and so forth. If `increasing` is
        True, the columns are ``x^0, x^1, ..., x^(N-1)``.

    See Also
    --------
    polynomial.polynomial.polyvander

    Examples
    --------
    >>> x = np.array([1, 2, 3, 5])
    >>> N = 3
    >>> np.vander(x, N)
    array([[ 1,  1,  1],
           [ 4,  2,  1],
           [ 9,  3,  1],
           [25,  5,  1]])

    >>> np.column_stack([x**(N-1-i) for i in range(N)])
    array([[ 1,  1,  1],
           [ 4,  2,  1],
           [ 9,  3,  1],
           [25,  5,  1]])

    >>> x = np.array([1, 2, 3, 5])
    >>> np.vander(x)
    array([[  1,   1,   1,   1],
           [  8,   4,   2,   1],
           [ 27,   9,   3,   1],
           [125,  25,   5,   1]])
    >>> np.vander(x, increasing=True)
    array([[  1,   1,   1,   1],
           [  1,   2,   4,   8],
           [  1,   3,   9,  27],
           [  1,   5,  25, 125]])

    The determinant of a square Vandermonde matrix is the product
    of the differences between the values of the input vector:

    >>> np.linalg.det(np.vander(x))
    48.000000000000043 # may vary
    >>> (5-3)*(5-2)*(5-1)*(3-2)*(3-1)*(2-1)
    48

    r=   z.x must be a one-dimensional array or sequence.NrQ   r9   r   )⁄outZaxis)
r   r;   r<   rL   r   r   rB   ⁄intr   ⁄
accumulate)r`   r?   ra   rI   ⁄tmpr1   r1   r2   r!     s    I
 0r!   c                 c   sT   | V  |V  zt |É}W n ty.   d}Y n0 |dkrD|E d H  n|V  |V  d S )Nr=   r8   )rL   ⁄	TypeError)r`   ⁄y⁄bins⁄range⁄normed⁄weights⁄densityr?   r1   r1   r2   ⁄_histogram2d_dispatcherw  s    
rn   È
   c                 C   sò   ddl m} t| Ét|Ékr$tdÉÇzt|É}W n tyF   d}Y n0 |dkrl|dkrlt|É }	}
|	|
g}|| |g|||||É\}}||d |d fS )aˆ  
    Compute the bi-dimensional histogram of two data samples.

    Parameters
    ----------
    x : array_like, shape (N,)
        An array containing the x coordinates of the points to be
        histogrammed.
    y : array_like, shape (N,)
        An array containing the y coordinates of the points to be
        histogrammed.
    bins : int or array_like or [int, int] or [array, array], optional
        The bin specification:

          * If int, the number of bins for the two dimensions (nx=ny=bins).
          * If array_like, the bin edges for the two dimensions
            (x_edges=y_edges=bins).
          * If [int, int], the number of bins in each dimension
            (nx, ny = bins).
          * If [array, array], the bin edges in each dimension
            (x_edges, y_edges = bins).
          * A combination [int, array] or [array, int], where int
            is the number of bins and array is the bin edges.

    range : array_like, shape(2,2), optional
        The leftmost and rightmost edges of the bins along each dimension
        (if not specified explicitly in the `bins` parameters):
        ``[[xmin, xmax], [ymin, ymax]]``. All values outside of this range
        will be considered outliers and not tallied in the histogram.
    density : bool, optional
        If False, the default, returns the number of samples in each bin.
        If True, returns the probability *density* function at the bin,
        ``bin_count / sample_count / bin_area``.
    normed : bool, optional
        An alias for the density argument that behaves identically. To avoid
        confusion with the broken normed argument to `histogram`, `density`
        should be preferred.
    weights : array_like, shape(N,), optional
        An array of values ``w_i`` weighing each sample ``(x_i, y_i)``.
        Weights are normalized to 1 if `normed` is True. If `normed` is
        False, the values of the returned histogram are equal to the sum of
        the weights belonging to the samples falling into each bin.

    Returns
    -------
    H : ndarray, shape(nx, ny)
        The bi-dimensional histogram of samples `x` and `y`. Values in `x`
        are histogrammed along the first dimension and values in `y` are
        histogrammed along the second dimension.
    xedges : ndarray, shape(nx+1,)
        The bin edges along the first dimension.
    yedges : ndarray, shape(ny+1,)
        The bin edges along the second dimension.

    See Also
    --------
    histogram : 1D histogram
    histogramdd : Multidimensional histogram

    Notes
    -----
    When `normed` is True, then the returned histogram is the sample
    density, defined such that the sum over bins of the product
    ``bin_value * bin_area`` is 1.

    Please note that the histogram does not follow the Cartesian convention
    where `x` values are on the abscissa and `y` values on the ordinate
    axis.  Rather, `x` is histogrammed along the first dimension of the
    array (vertical), and `y` along the second dimension of the array
    (horizontal).  This ensures compatibility with `histogramdd`.

    Examples
    --------
    >>> from matplotlib.image import NonUniformImage
    >>> import matplotlib.pyplot as plt

    Construct a 2-D histogram with variable bin width. First define the bin
    edges:

    >>> xedges = [0, 1, 3, 5]
    >>> yedges = [0, 2, 3, 4, 6]

    Next we create a histogram H with random bin content:

    >>> x = np.random.normal(2, 1, 100)
    >>> y = np.random.normal(1, 1, 100)
    >>> H, xedges, yedges = np.histogram2d(x, y, bins=(xedges, yedges))
    >>> # Histogram does not follow Cartesian convention (see Notes),
    >>> # therefore transpose H for visualization purposes.
    >>> H = H.T

    :func:`imshow <matplotlib.pyplot.imshow>` can only display square bins:

    >>> fig = plt.figure(figsize=(7, 3))
    >>> ax = fig.add_subplot(131, title='imshow: square bins')
    >>> plt.imshow(H, interpolation='nearest', origin='lower',
    ...         extent=[xedges[0], xedges[-1], yedges[0], yedges[-1]])
    <matplotlib.image.AxesImage object at 0x...>

    :func:`pcolormesh <matplotlib.pyplot.pcolormesh>` can display actual edges:

    >>> ax = fig.add_subplot(132, title='pcolormesh: actual edges',
    ...         aspect='equal')
    >>> X, Y = np.meshgrid(xedges, yedges)
    >>> ax.pcolormesh(X, Y, H)
    <matplotlib.collections.QuadMesh object at 0x...>

    :class:`NonUniformImage <matplotlib.image.NonUniformImage>` can be used to
    display actual bin edges with interpolation:

    >>> ax = fig.add_subplot(133, title='NonUniformImage: interpolated',
    ...         aspect='equal', xlim=xedges[[0, -1]], ylim=yedges[[0, -1]])
    >>> im = NonUniformImage(ax, interpolation='bilinear')
    >>> xcenters = (xedges[:-1] + xedges[1:]) / 2
    >>> ycenters = (yedges[:-1] + yedges[1:]) / 2
    >>> im.set_data(xcenters, ycenters, H)
    >>> ax.images.append(im)
    >>> plt.show()

    It is also possible to construct a 2-D histogram without specifying bin
    edges:

    >>> # Generate non-symmetric test data
    >>> n = 10000
    >>> x = np.linspace(1, 100, n)
    >>> y = 2*np.log(x) + np.random.rand(n) - 0.5
    >>> # Compute 2d histogram. Note the order of x/y and xedges/yedges
    >>> H, yedges, xedges = np.histogram2d(y, x, bins=20)

    Now we can plot the histogram using
    :func:`pcolormesh <matplotlib.pyplot.pcolormesh>`, and a
    :func:`hexbin <matplotlib.pyplot.hexbin>` for comparison.

    >>> # Plot histogram using pcolormesh
    >>> fig, (ax1, ax2) = plt.subplots(ncols=2, sharey=True)
    >>> ax1.pcolormesh(xedges, yedges, H, cmap='rainbow')
    >>> ax1.plot(x, 2*np.log(x), 'k-')
    >>> ax1.set_xlim(x.min(), x.max())
    >>> ax1.set_ylim(y.min(), y.max())
    >>> ax1.set_xlabel('x')
    >>> ax1.set_ylabel('y')
    >>> ax1.set_title('histogram2d')
    >>> ax1.grid()

    >>> # Create hexbin plot for comparison
    >>> ax2.hexbin(x, y, gridsize=20, cmap='rainbow')
    >>> ax2.plot(x, 2*np.log(x), 'k-')
    >>> ax2.set_title('hexbin')
    >>> ax2.set_xlim(x.min(), x.max())
    >>> ax2.set_xlabel('x')
    >>> ax2.grid()

    >>> plt.show()
    r   )⁄histogramddz"x and y must have the same length.r=   r8   )r(   rp   rL   r<   rg   r   )r`   rh   ri   rj   rk   rl   rm   rp   r?   ZxedgesZyedges⁄hist⁄edgesr1   r1   r2   r"   â  s     
r"   c                 C   s$   t | | ftÉ}|||É}t|dkÉS )aç  
    Return the indices to access (n, n) arrays, given a masking function.

    Assume `mask_func` is a function that, for a square array a of size
    ``(n, n)`` with a possible offset argument `k`, when called as
    ``mask_func(a, k)`` returns a new array with zeros in certain locations
    (functions like `triu` or `tril` do precisely this). Then this function
    returns the indices where the non-zero values would be located.

    Parameters
    ----------
    n : int
        The returned indices will be valid to access arrays of shape (n, n).
    mask_func : callable
        A function whose call signature is similar to that of `triu`, `tril`.
        That is, ``mask_func(x, k)`` returns a boolean array, shaped like `x`.
        `k` is an optional argument to the function.
    k : scalar
        An optional argument which is passed through to `mask_func`. Functions
        like `triu`, `tril` take a second argument that is interpreted as an
        offset.

    Returns
    -------
    indices : tuple of arrays.
        The `n` arrays of indices corresponding to the locations where
        ``mask_func(np.ones((n, n)), k)`` is True.

    See Also
    --------
    triu, tril, triu_indices, tril_indices

    Notes
    -----
    .. versionadded:: 1.4.0

    Examples
    --------
    These are the indices that would allow you to access the upper triangular
    part of any 3x3 array:

    >>> iu = np.mask_indices(3, np.triu)

    For example, if `a` is a 3x3 array:

    >>> a = np.arange(9).reshape(3, 3)
    >>> a
    array([[0, 1, 2],
           [3, 4, 5],
           [6, 7, 8]])
    >>> a[iu]
    array([0, 1, 2, 4, 5, 8])

    An offset can be passed also to the masking function.  This gets us the
    indices starting on the first diagonal right of the main one:

    >>> iu1 = np.mask_indices(3, np.triu, 1)

    with which we now extract only three elements:

    >>> a[iu1]
    array([1, 2, 5])

    r   )r   rd   r   )rO   Z	mask_funcrA   r6   ⁄ar1   r1   r2   r#   7  s    B
r#   c                    s0   t | ||tdçâ tá fddÑtà jddçD ÉÉS )ap  
    Return the indices for the lower-triangle of an (n, m) array.

    Parameters
    ----------
    n : int
        The row dimension of the arrays for which the returned
        indices will be valid.
    k : int, optional
        Diagonal offset (see `tril` for details).
    m : int, optional
        .. versionadded:: 1.9.0

        The column dimension of the arrays for which the returned
        arrays will be valid.
        By default `m` is taken equal to `n`.


    Returns
    -------
    inds : tuple of arrays
        The indices for the triangle. The returned tuple contains two arrays,
        each with the indices along one dimension of the array.

    See also
    --------
    triu_indices : similar function, for upper-triangular.
    mask_indices : generic function accepting an arbitrary mask function.
    tril, triu

    Notes
    -----
    .. versionadded:: 1.4.0

    Examples
    --------
    Compute two different sets of indices to access 4x4 arrays, one for the
    lower triangular part starting at the main diagonal, and one starting two
    diagonals further right:

    >>> il1 = np.tril_indices(4)
    >>> il2 = np.tril_indices(4, 2)

    Here is how they can be used with a sample array:

    >>> a = np.arange(16).reshape(4, 4)
    >>> a
    array([[ 0,  1,  2,  3],
           [ 4,  5,  6,  7],
           [ 8,  9, 10, 11],
           [12, 13, 14, 15]])

    Both for indexing:

    >>> a[il1]
    array([ 0,  4,  5, ..., 13, 14, 15])

    And for assigning values:

    >>> a[il1] = -1
    >>> a
    array([[-1,  1,  2,  3],
           [-1, -1,  6,  7],
           [-1, -1, -1, 11],
           [-1, -1, -1, -1]])

    These cover almost the whole array (two diagonals right of the main one):

    >>> a[il2] = -10
    >>> a
    array([[-10, -10, -10,   3],
           [-10, -10, -10, -10],
           [-10, -10, -10, -10],
           [-10, -10, -10, -10]])

    r[   c                 3   s   | ]}t |à jÉà  V  qd S r4   ©r   rK   ©⁄.0Zinds©Ztri_r1   r2   ⁄	<genexpr>Œ  s   ˇztril_indices.<locals>.<genexpr>T©⁄sparse©r   r]   ⁄tupler   rK   ©rO   rA   r6   r1   rw   r2   r$   ~  s    Nˇr$   c                 C   s   | fS r4   r1   ©ZarrrA   r1   r1   r2   ⁄_trilu_indices_form_dispatcher“  s    r   c                 C   s,   | j dkrtdÉÇt| jd || jd dçS )aß  
    Return the indices for the lower-triangle of arr.

    See `tril_indices` for full details.

    Parameters
    ----------
    arr : array_like
        The indices will be valid for square arrays whose dimensions are
        the same as arr.
    k : int, optional
        Diagonal offset (see `tril` for details).

    See Also
    --------
    tril_indices, tril

    Notes
    -----
    .. versionadded:: 1.4.0

    r8   ˙input array must be 2-drZ   r9   ©rA   r6   )r;   r<   r$   rK   r~   r1   r1   r2   r%   ÷  s    
r%   c                    s6   t | ||d tdç â tá fddÑtà jddçD ÉÉS )aÕ  
    Return the indices for the upper-triangle of an (n, m) array.

    Parameters
    ----------
    n : int
        The size of the arrays for which the returned indices will
        be valid.
    k : int, optional
        Diagonal offset (see `triu` for details).
    m : int, optional
        .. versionadded:: 1.9.0

        The column dimension of the arrays for which the returned
        arrays will be valid.
        By default `m` is taken equal to `n`.


    Returns
    -------
    inds : tuple, shape(2) of ndarrays, shape(`n`)
        The indices for the triangle. The returned tuple contains two arrays,
        each with the indices along one dimension of the array.  Can be used
        to slice a ndarray of shape(`n`, `n`).

    See also
    --------
    tril_indices : similar function, for lower-triangular.
    mask_indices : generic function accepting an arbitrary mask function.
    triu, tril

    Notes
    -----
    .. versionadded:: 1.4.0

    Examples
    --------
    Compute two different sets of indices to access 4x4 arrays, one for the
    upper triangular part starting at the main diagonal, and one starting two
    diagonals further right:

    >>> iu1 = np.triu_indices(4)
    >>> iu2 = np.triu_indices(4, 2)

    Here is how they can be used with a sample array:

    >>> a = np.arange(16).reshape(4, 4)
    >>> a
    array([[ 0,  1,  2,  3],
           [ 4,  5,  6,  7],
           [ 8,  9, 10, 11],
           [12, 13, 14, 15]])

    Both for indexing:

    >>> a[iu1]
    array([ 0,  1,  2, ..., 10, 11, 15])

    And for assigning values:

    >>> a[iu1] = -1
    >>> a
    array([[-1, -1, -1, -1],
           [ 4, -1, -1, -1],
           [ 8,  9, -1, -1],
           [12, 13, 14, -1]])

    These cover only a small part of the whole array (two diagonals right
    of the main one):

    >>> a[iu2] = -10
    >>> a
    array([[ -1,  -1, -10, -10],
           [  4,  -1,  -1, -10],
           [  8,   9,  -1,  -1],
           [ 12,  13,  14,  -1]])

    r=   r[   c                 3   s   | ]}t |à jÉà  V  qd S r4   rt   ru   rw   r1   r2   rx   E  s   ˇztriu_indices.<locals>.<genexpr>Try   r{   r}   r1   rw   r2   r&   Û  s    Pˇr&   c                 C   s,   | j dkrtdÉÇt| jd || jd dçS )a  
    Return the indices for the upper-triangle of arr.

    See `triu_indices` for full details.

    Parameters
    ----------
    arr : ndarray, shape(N, N)
        The indices will be valid for square arrays.
    k : int, optional
        Diagonal offset (see `triu` for details).

    Returns
    -------
    triu_indices_from : tuple, shape(2) of ndarray, shape(N)
        Indices for the upper-triangle of `arr`.

    See Also
    --------
    triu_indices, triu

    Notes
    -----
    .. versionadded:: 1.4.0

    r8   rÄ   rZ   r9   rÅ   )r;   r<   r&   rK   r~   r1   r1   r2   r'   I  s    
r'   )NNNN)N)r   )r   )NNN)N)r   )r   )NN)NF)NNNNN)ro   NNNN)r   )r   N)N)r   )r   N)r   )>⁄__doc__⁄	functoolsZnumpy.core.numericr   r   r   r   r   r   r   r	   r
   r   r   r   r   r   r   r   r   r   Znumpy.core.overridesr   r   Z
numpy.corer   r   Znumpy.lib.stride_tricksr   ⁄__all__⁄partialZarray_function_dis