@model ChatView;
@{
	var userName = User.Identity.Name;
	var RoomId = ViewData["currentRoom"];

   

	var messageList = Model.GroupMessages;
	
	
}

<div id="main">
    <div class="customScroll " id="sidebar">
        <hr />

        
        <img class="icon_big icon_pointer" src="~/lib/icons/add.png" alt="" onclick="location.href='@Url.Action("CreateRoom", "Chat")'" />


        <ul class="list-unstyled components" id="groupList">
            @foreach (var r in Model.Connecting)
            {
                string klasa = "nav-link";
                @if (r.Roomsender.Id.Equals(RoomId)) { klasa = "sidebar_selected joinGroup"; }


                <li class="@klasa">
                    <img class="avatar_room" src="~/lib/room_avatar/@r.Roomsender.ImgUrl" alt="room avatar" />
                    @Html.ActionLink(r.Roomsender.Name, "SelectGroup", new { roomId = r.Roomsender.Id})
                </li>

            }
        </ul>


        <hr />

    </div>

    <div id="messagesBox">
        <h1>Pokój rozmów </h1>

        <div id="options">
            
                <select name="userList" id="userList">
                    @foreach (var u in Model.Users)
                    {
                        <option value="@u.Id">@u.UserName</option>
                    }
                </select>

                <input type="button" onclick="Invite()" value="Zaproś" />
                <img class="icon icon_medium"src="~/lib/icons/add_user.png" alt="" />

            
        </div>

        <hr class="" />


        <div class="row customScroll" id="box">
            <div class="col-md-12" id="chat">
                @if (Model != null)
                {

                    if (messageList != null)
                    {
                        @foreach (GroupMessage message in messageList)
                        {


                            string containerClass, timePosition, textAlign, contcolor, offset;

                            if (userName == message.UserName)
                            {
                                containerClass = "container darker";
                                timePosition = "time-right text-light time";
                                textAlign = "text-right text-white";
                                contcolor = "bg-primary";
                                offset = "col-md-6 offset-md-6";

                            }
                            else
                            {
                                containerClass = "container ";
                                timePosition = "time-left time";
                                textAlign = "text-left";
                                contcolor = "bg-light";
                                offset = "";

                            }

                            <div class="row">
                                <div class="@offset">
                                    <div class="@containerClass @contcolor">

                                        <p class="sender @textAlign">
                                            <img class="avatar_user" src="~/lib/user_avatar/@message.UserSender.ImgUrl" alt="avatar" />
                                            @message.UserName
                                        </p>
                                        <p class="@textAlign">@message.Text</p>
                                        <span class="@timePosition">@message.When.ToString("dd/MM/yyyy HH/mm")</span>

                                    </div>

                                </div>

                            </div>

                        }
                    }

                    <hr />
                    <center>Nowe Wiadomości</center>

                }
            </div>

        </div>
        <div class="col-md-12">

            <form asp-action="Create"
                  data-ajax-begin="clearInputField" data-ajax-complete=""
                  data-ajax-failure="alert('Pole nie może być puste')" data-ajax-success="sendMessage"
                  data-ajax="true" data-ajax-method="POST">

                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <input name="Text" class="form-control" id="messageText" />
                </div>
                <div class="form-group">
                    <input type="submit" value="Wyślij" id="submitButton" class="btn-primary" />
                </div>
                <input type="hidden" value="@userName" name="username" />
            </form>
        </div>

    </div>
    <div id="chatbar">

        <input type="button" onclick="leaveFromGroup('@userName')" value="Opuść"/>

        <ul id="usersInGroupList" class="list-unstyled components">

            @foreach (var r in Model.UsersInGroup)
            {
                string klasa = "userListBlock ";

                
                    @if (r.UserSender.UserName == User.Identity.Name)
                    {
                    klasa += "userOnUserList";
                    }

                <li class="@klasa">

                    <img class="avatar_user" src="~/lib/user_avatar/@r.UserSender.ImgUrl" alt="avatar" />

                    <span>@r.UserSender.UserName</span>

                </li>
                
                
            }

        </ul>
    </div>




</div>
	

@if(User.Identity.IsAuthenticated)
{
	<script>
		const userName = "@ViewBag.CurrentUserName";
	</script>
}

	@section scripts{


    <script src="~/lib/microsoft-signalr/signalr.js"></script>

    <script src="~/lib/jquery/dist/jquery.unobtrusive-ajax.min.js"></script>

    <script src="~/js/czat.js"></script>

    <script src="~/js/site.js"></script>

    <script src="~/js/connect.js"></script>

		

		
	}

